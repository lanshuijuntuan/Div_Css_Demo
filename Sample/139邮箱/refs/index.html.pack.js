function TabLabel(e, t) {
    this.main = document.createElement("ul"),
    $(this.main).html('<li id="tabsMenuIco" class="noAll" tabindex="0" style="display:none"><a href="javascript:;" hidefocus="true" class="closeAll" title="点击查看更多"></a></li>'),
    $(e).html(this.main),
    this.init(t)
}
function specialTreatments(e, t, i) {
    if ("calendar" == e.name) {
        var a = "calendar_version", s = $Cookie.get(a) || "", o = top.SiteConfig[a] || "";
        o && s != o && $(t).append('<i class="i_newsL" key="' + a + '" value="' + o + '"></i>')
    }
}
function createMailboxRenderFunctions(e, t) {
    if (e && t) {
        var i = t.model.get("fid"), a = e.get("isSearchMode") && e.get("fid") > -1 && !e.isBillMode() && !e.isOnemailMode(), s = $App.isSessionMode(), o = e.isSubscribeMode(), n = 7 == e.get("fid") ? !0 : e.get("showSummary"), r = M2012.Contacts.getModel(), l = $.browser.msie && 6 == $.browser.version, c = {}, d = {}, p = e.getVipEmails(), m = {}, u = e.get("fromType"), h = $User.getAccountListArray(), f = s && $App.isSessionFid(i) && !e.get("isSearchMode");
        if (p) for (var g = 0, v = p.length; v > g; g++) m[p[g]] = 1
    }
    var b = {
        0: { color: "#000000", title: "黑色" },
        1: { color: "#FF9800", title: "橙色" },
        2: { color: "#339A67", title: "绿色" },
        3: { color: "#2D5AE2", title: "蓝色" },
        4: { color: "#7F0081", title: "紫色" },
        5: { color: "red", title: "红色" }
    }, y = new Date;
    M139._ClientDiffTime_ && (y = new Date(new Date - M139._ClientDiffTime_));
    var w = {
        times: y.getTime(),
        years: y.getFullYear(),
        month: y.getMonth(),
        date: y.getDate(),
        hour: y.getHours(),
        minutes: y.getMinutes()
    },
        M = {
            receiver: "receiver",
            sender: "sender",
            none: "none"
        }, C = ["", '<a href="javascript:;" class="{2}" name="mailtask" style="{4}" title={5}>', '<span mid="{0}" status="{1}" taskDate="{3}"></span>', "</a>", ""].join(""), x = '<div class="maillist-starwarp"><i taskFlag="<%= taskFlag %>" starFlag="<%= starFlag %>" class="<%= cls %>" taskDate="<%= taskDate %>" name="list_starmail"></i></div>', k = '<i taskFlag="<%= taskFlag %>" starFlag="<%= starFlag %>" class="<%= cls %>" taskDate="<%= taskDate %>" name="list_starmail"></i>', T = /&amp;&lt;{([^\)]+?)}&gt;&amp;/g;
    return {
        getStatus: function (e) {
            var t = this.DataRow;
            e && (this.DataRow = e);
            var i = top.$App.getView("mailbox").model.modelTitle, a = this.DataRow.fid, s = this.DataRow.flags, o = this.DataRow.billFlag, n = this.DataRow.subscriptionFlag, r = this.DataRow.sendId, l = this.DataRow.denyForward, c = this.DataRow.priority, d = 1e3 * Number(this.DataRow.taskDate), p = 1 == s.read, m = this.DataRow.read_track_enabled, u = {
                begin: "2017/11/30 00:00:00",
                end: "2018/03/01 00:00:00"
            }, h = this.DataRow.logoType;
            if (e && (this.DataRow = t), 1 == m && (3 == a || 2 == a)) return '<i class="' + (p ? "icons i-track" : "icons i-tracked") + "\" title='邮件跟踪'></i>";
            if (1 == s.encrypted && 1 != c) return '<i class="' + (p ? "i_m_secret" : "i_m_secreted") + "\" title='加密邮件'></i>";
            if (s.top && 0 == r) return "<i class='i_m_d' title='置顶'></i>";
            if (1 == c) return s.replied ? "<i class='i_exc' style='margin-left:-11px;'></i><i class='i_m_yhf' title='已回复' style='margin-left:-4px;'></i>" : "<i class='i_exc' title='紧急'></i>";
            if (1 == l) return "<i class='i-transmited' title='禁止转发'></i>";
            if (i[r] && i[r].iconCls && i[r].iconClsed) {
                var g = i[r].name, v = i[r].iconCls, b = i[r].iconClsed;
                return '<i class="icons ' + (p ? v : b) + '" title="' + g + '"></i>'
            }
            if (o) return 2 == h || 0 == h ? '<i class="' + (p ? "i_service_pink" : "i_service_pinked") + "\" title='生活服务'></i>" : 1 == h || h >= 110 && 113 >= h ? '<i class="' + (p ? "i_money_blue" : "i_money_blueed") + "\"  title='移动账单'></i>" : "4" == h ? "<i class=\"i_m_yo\" title='和留言'></i>" : 68 == h ? '<i class="' + (p ? "i_sound_yellow" : "i_sound_yellowed") + "\" title='推广邮件'></i>" : '<i class="' + (p ? "i_service_pink" : "i_service_pinked") + "\" title='生活服务'></i>";
            if (3 == h) return '<i class="' + (p ? "i-blueinvoicing" : "i-grayinvoicing") + "\"  title='电子发票'></i>";
            if (66 == h) return '<i class="' + (p ? "i_clock_pink" : "i_clock_pinked") + "\" title='通知动态'></i>";
            if (67 == h) return '<i class="' + (p ? "i_key_green" : "i_key_greened") + "\" title='注册激活'></i>";
            if (68 == h) return '<i class="' + (p ? "i_sound_yellow" : "i_sound_yellowed") + "\" title='推广邮件'></i>";
            if (69 == h) return '<i class="i-editwrite"></i>';
            if (n) return '<i class="' + (p ? "i_m_rss" : "i_m_rssg") + "\" title='订阅邮件'></i>";
            if (r > 1e6) {
                if ("1000008" == r && 1 == s.read) return "<i class='i_m_n' title='未读邮件'></i>";
                if (1000005 >= r) return '<i class="' + (p ? "i_clock_pink" : "i_clock_pinked") + "\" title='通知动态'></i>";
                if (r > 11e5 && 2e9 >= r && ((1 == top.$App.getCurrentFid() || top.$App.getCurrentFid() > 11) && !top.$App.getMailboxView().model.get("isSearchMode"), 1 == s.read)) return "<i class='i_m_n' title='未读邮件'></i>"
            } else {
                if ($Date.isGuideTime && $Date.isGuideTime(u) && 90 == h && (1 == a || 3 == a)) return "<i class=\"icons i-red-bag\" title='红包邮件'></i>";
                if (1 == parseInt(s.taskFlag, 10)) {
                    var w = this.model ? this.model.get("isTaskMode") : !1, _ = new Date(d), M = new Date(_.getFullYear(), _.getMonth(), _.getDate() + 1);
                    if (!w && y > _ && M > y) return "<span name='todayTodo'></i>"
                } else {
                    if (1 == h) return "<i class='m139' title='系统邮件'></i>";
                    if (1 == s.fixedtime && 1 == a && f) return "<i class='i_m_o' title='普通'></i>";
                    if (1 == s.fixedtime) return "<i class='i_m_sd' title='定时邮件'></i>";
                    if (1 == s.read) return "<i class='i_m_n' title='未读邮件'></i>";
                    if (s.replied && s.forwarded) return "<i class='i_m_o2h' title='已回复已转发'></i>";
                    if (s.replied) return "<i class='i_m_yhf' title='已回复'></i>";
                    if (s.forwarded) return "<i class='i_m_o2h' title='已转发'></i>";
                    if (1 == s.recallok) return "<i class='i_m_chui' title='已撤回'></i>"
                }
            }
            return "<i class='i_m_o' title='普通'></i>"
        }, getFolder: function () {
            if (a) {
                var t = this.DataRow.fid, i = $App.getFolderById(t);
                if (i && !e.isSubscribeMode()) {
                    var s = i.name.trim();
                    return "[" + s + "]"
                }
                return ""
            }
            return ""
        }, getSubjectColor: function (e) {
            if (0 == e) return "";
            var t = "";
            return b[e] && (t = "color:" + b[e].color + ";"), t
        }, getSubjectPadding: function () {
            if (s) {
                var t = this.DataRow.mailNum;
                if (0 == t) return "padding-right:0px"
            } else if ("left" != e.get("layout")) return "padding-right:0px"
        }, getRowStyle: function (e) {
            return this.DataRow.flags && 1 == this.DataRow.flags.read ? (this.newMailCount++, "fw_b") : "fw_n"
        }, getNameStyle: function () {
            if (1 == this.DataRow.fid) {
                var e = this.DataRow.from, t = $Email.getEmail(e);
                if ($Email.isPrettyNumberEmail(t)) return "color:#ff6f06"
            }
            return ""
        }, getMailType: function () {
            var e = 1 == this.DataRow.logoType || 110 == this.DataRow.logoType;
            return 1 == this.DataRow.billFlag && e && 1000006 == this.DataRow.sendId ? "telBill" : 1000006 == this.DataRow.sendId ? "bill" : ""
        }, getSourceStyle: function () {
            var e = this.DataRow.from;
            void 0 == d[e] && (e = $Email.getEmailQuick(e), d[e] = Boolean(m[e]));
            var t = this.model.get("tmpNameType") == M.sender, i = !!d[e], a = !!this.model.getKeyWord(["to", "from"]), s = this.model.get("isSearchMode");
            return s && t && i && a ? "search_vip_sourse" : s && a ? "search_mailSourse" : ""
        }, getAttach: function () {
            var e = this.DataRow;
            return "1" == e.hitAttachment ? "i-letter-attach" : this.DataRow.flags.attached ? "i_atta" : "1" == e.largeAttach ? "i-yellow-annex" : "1" == e.cloudAttach ? "i-purple-cloud" : ""
        }, getAttachTitle: function () {
            var e = this.DataRow;
            return e.flags.attached ? "附件" : "1" == e.largeAttach ? "超大附件" : "1" == e.cloudAttach ? "彩云网盘附件" : ""
        }, getNewAttach: function () {
            var e = this.DataRow;
            return "1" == e.hitAttachment ? "i-letter-attach mr_6" : this.DataRow.flags.attached ? "i_atta mr_6" : "1" == e.largeAttach ? "i-yellow-annex mr_6" : "1" == e.cloudAttach ? "i-purple-cloud mr_6" : ""
        }, getPriority: function (e) {
            return ""
        }, getFrom: function (e) {
            return 2 != this.DataRow.fid && 3 != this.DataRow.fid || (e = this.DataRow.to, e.indexOf(",") > 0 && (e = e.split(",")[0]), "" == this.DataRow.to.trim() && (this.DataRow.to = "(无)")), $T.Html.encode(e)
        }, getName: function (t, i) {
            function a(e, t) {
                function i(t) {
                    return M2012.Contacts.ContactsInfo.prototype.quickMatch.call(t, e)
                }

                var a = null;
                return _.isArray(t) || (t = [t]), $.each(t, function (e, t) {
                    var s = $Email.getEmail(t), o = Contacts.getContactsByEmail(s);
                    if (o && o.length > 0) {
                        var n = i(o[0]);
                        n && (a = o[0].AddrFirstName)
                    }
                }), a
            }

            function s(t) {
                if (!c[t]) {
                    if ("addr" == u) var i = $T.Html.encode(r.getAddrNameByEmail(t) || "(无)"); else i = $T.Html.encode($Email.getName(t) || t);
                    if ("from" != n.view.model.get("order") && "to" != n.view.model.get("order") || (i = $T.Html.encode(t)), f) {
                        var a = $Email.getEmail(t);
                        $.inArray(a, h) > -1 && (i = "我")
                    }
                    var s = n.DataRow.mid, o = n.DataRow.sendId, d = top.$App.getView("mailbox").model.modelTitle, p = d[o], m = o >= 1010001 && 1010200 >= o || o >= 1000100 && 1000103 >= o || 1000011 == o;
                    if (m) return p && p.name ? i = p.name : M139.Text.Email.getName(n.DataRow.from);
                    if (e.isClusterMail(s) && !e.isClusterColumn()) {
                        if (n.DataRow.subscriptionFlag) return i = "订阅邮件";
                        var g = [1000001, 1000006, 1000007, 1000008, 1000009, 1000010, 1000013, 1000014];
                        if ($.inArray(o, g) > -1 && p) return i = p.name
                    }
                    c[t] = i
                }
                return l && (c[t] = $T.Utils.getTextOverFlow2(c[t], 14, "...")), c[t]
            }

            function o(e) {
                return n.model.set("cacheName", e), e
            }

            var n = this, d = n.Functions;
            if (n.model.isApproachMode() && !n.model.get("isContactsMail")) {
                var p = 2 == n.DataRow.fid && !n.model.getKeyWord(["from", "to"]) && n.model.getKeyWord("from");
                if (n.model.getKeyWord("from") || p) {
                    var m = n.model.getKeyWord("from"), g = a(m, t);
                    if (g) return n.model.set("tmpNameType", M.sender), o(d.addHighLight(s(t), "#F7D600"))
                }
                if (n.model.getKeyWord("to") && i) {
                    var v = i.split(",");
                    v = 1 == v.length ? v : _.compact(v);
                    var m = n.model.getKeyWord("to"), g = a(m, v);
                    if (n.model.set("tmpNameType", M.receiver), g) return o(d.addHighLight(g, "#F7D600").toString());
                    if (3 == n.DataRow.fid || 2 == n.DataRow.fid) {
                        var b = _.map(v, function (e) {
                            var t = $.trim(e);
                            return $Email.getEmailQuick(t) ? s(t) : s(t) + "..."
                        });
                        return o(b.toString())
                    }
                }
                return 2 == n.DataRow.fid ? (n.model.set("tmpNameType", M.receiver), o(s(i))) : (n.model.set("tmpNameType", M.sender), o(s(t)))
            }
            if (n.model.set("tmpNameType", M.none), !(n.model.get("isContactsMail") || 2 != n.DataRow.fid && 3 != n.DataRow.fid || f)) {
                var v = i.split(",");
                v = 1 == v.length ? v : _.compact(v);
                var b = _.map(v, function (e) {
                    var t, i = $.trim(e);
                    return t = i && !$Email.getEmailQuick(i) ? s(i) + "..." : s(i)
                });
                return o(b.toString())
            }
            return o(s(t))
        }, getNameFromCache: function (e, t) {
            return this.model.get("cacheName")
        }, addHighLight: function (e, t, i) {
            if (_.isArray(e)) {
                var a = _.map(e, function (e) {
                    return i && e != i ? e : "<b name='highLight' style='padding:2px;background-color:" + t + "'>" + e + "</b>"
                });
                return a
            }
            return "<b name='highLight' style='padding:2px;background-color:" + t + "'>" + e + "</b>"
        }, getNameType: function () {
            if (!this.model.isApproachMode() || this.model.get("isContactsMail")) return "";
            if (!this.model.getKeyWord(["from", "to"])) return "";
            var e = this.model.get("tmpNameType");
            switch (e) {
                case M.sender:
                    return "<i class='mailsender'>发件人</i>";
                case M.receiver:
                    return "<i class='mailaddressee'>收件人</i>";
                default:
                    return ""
            }
        }, getMailNum: function (e) {
            var t = this.model.getMailNum(this.DataRow), i = this.DataRow.sendId;
            if (this.DataRow.clusterCount > 0) return '<span name="cluster_num">&nbsp;(' + this.DataRow.clusterCount + ")</span>";
            if (t > 1) {
                if (i > 0 && this.model.underClusterFolder()) {
                    if (i > 11e5 && (1 == top.$App.getCurrentFid() || top.$App.getCurrentFid() > 11)) {
                        if (!s) return "";
                        t = this.DataRow.mailNum
                    }
                    return '<i class="bgc-light-blue br2">' + t + "</i>"
                }
                return 0 == i && s && $App.isSessionFid($App.getCurrentFid()) ? '<i class="bgc-light-blue br2">' + t + "</i>" : ""
            }
            return ""
        }, getNewMailNum: function () {
            var e = this.model.getMailNum(this.DataRow), t = this.DataRow.sendId;
            return this.DataRow.clusterCount > 0 ? '<i class="bgc-light-blue ml_10 br2">' + this.DataRow.clusterCount + "</i>" : e > 1 ? t > 0 && this.model.underClusterFolder() ? '<i class="bgc-light-blue ml_10 br2">' + e + "</i>" : 0 == t && s && $App.isSessionFid($App.getCurrentFid()) ? '<i class="bgc-light-blue ml_10 br2">' + e + "</i>" : "" : ""
        }, getDenyForwardIcon: function () {
            var e = 1 == this.DataRow.denyForward ? 1 : 0;
            return e ? '<i class="i-transmited"></i>' : ""
        }, getSessionId: function () {
            if (s) {
                var e = this.DataRow.mailSession;
                return " sessionId = '" + e + "'"
            }
            return ""
        }, getStarAttribute: function () {
            if (this.DataRow.flags) {
                var e = 1 == this.DataRow.flags.starFlag ? 1 : 0, t = 'name="list_starmail" class = "i_starM {0}" val = "{1}" title="{2}" ', i = e, a = e ? "i_star_y" : "", s = e ? "取消星标" : "标记星标";
                return $T.Utils.format(t, [a, i, s])
            }
        }, getRemindIco: function () {
            if ("left" == $App.getLayout()) return "";
            var e = this.DataRow.mid, t = this.DataRow.flags.taskFlag || 0, i = this.DataRow.taskDate || 0, a = ["add", "update", "finish"][t], s = {
                add: "i_tagfor_tt mlr_3 i-remand",
                update: "i_tx_nbb mlr_3",
                finish: "i_tx_nn mlr_3"
            }, o = { add: "display:none", update: "", finish: "" }, n = {
                add: "标记为待办任务",
                update: "已设为待办任务",
                finish: "已完成待办任务"
            };
            return $T.Utils.format(C, [e, a, s[a], i, o[a], n[a]])
        }, getMailTopIco: function () {
            var e = this.DataRow.flags;
            this.DataRow.sendId;
            return e.top ? '<a class="i-email-t mlr_3" title="取消置顶" name="mailStick" stick="on" style="display:none;" href="javascript:;"><i class="i_tagfor_up i_tagfor_down"></i></a>' : '<a class="i-email-t mlr_3" title="标为置顶" name="mailStick" stick="off" style="display:none;" href="javascript:;"><i class="i_tagfor_up"></i></a>'
        }, addColspan: function () {
            return ($App.getMailboxView().model.get("showSize") || $App.getMailboxView().model.get("isSearchMode")) && ($App.getMailboxView().model.get("showSize") || !$App.getMailboxView().model.isBillMode() && !$App.getMailboxView().model.isOnemailMode()) ? $App.getMailboxView().model.isTaskMode() ? 2 : 0 : 2
        }, getNew3RemindIco: function () {
            if (s && "list" != $App.getLayout()) return "";
            var e = this.DataRow.mid, t = this.DataRow.flags.taskFlag || 0, i = this.DataRow.taskDate || 0, a = ["add", "update", "finish"][t], o = {
                add: "",
                update: "i_tx_nb ml_10",
                finish: "i_tx_ng ml_10"
            };
            return $T.Utils.format(C, [e, a, o[a], i])
        }, getStarIcon: function () {
            if (o) return "";
            if (this.DataRow.flags) {
                var e = 1 == this.DataRow.flags.starFlag ? 1 : 0;
                return e ? x.replace("i_starM", "i_star_y") : x
            }
        }, getAtRemind: function () {
            var e = this.DataRow.atRemind, t = this.DataRow.sendId;
            return e && 1 == e ? '<span name="atRemind" class="remindName">有人@我</span>' : t > 11e5 && 2e9 >= t && (1 == top.$App.getCurrentFid() || top.$App.getCurrentFid() > 11) && !top.$App.getMailboxView().model.get("isSearchMode") ? this.DataRow.sendNewNum ? '<span class="remindName tlz-num"><b>讨论组</b><em>' + this.DataRow.sendNewNum + "</em></span>" : '<span class="remindName tlz-num"><b>讨论组</b></span>' : ""
        }, getNewStarIcon: function () {
            if (o) return "";
            if (this.DataRow.flags) {
                var e = 1 == this.DataRow.flags.starFlag ? 1 : 0;
                return e ? "i_star_y ml_10" : "i_starM ml_10"
            }
        }, getStarOrRemarkIcon: function () {
            if (o) return "";
            var e = this.DataRow.flags;
            if (!e) return "";
            var t, i = (["add", "update", "finish"][i], e.taskFlag || 0), a = (this.DataRow.taskDate || 0, 1 == e.starFlag ? 1 : 0);
            this.DataRow.mid;
            t = "left" == $App.getLayout() ? _.template(k) : _.template(x);
            var s = { taskFlag: i, starFlag: a, taskDate: this.DataRow.taskDate };
            return 1 == i ? s.cls = "i-seticon i-setstar" : a ? s.cls = "i_star_y" : s.cls = "i_starM", $App.getMailboxView().model.isStarMode() && a && (s.cls = "i_star_y"), t(s)
        }, getRemarkIco: function () {
            if (this.DataRow.flags && this.DataRow.flags.memoFlag) {
                var e = this.DataRow.mid;
                return $T.Utils.format('<a href="javascript:;" mid="{0}" class="i_note_y"></a>', [e])
            }
            return ""
        }, getVipIcon: function () {
            var e = this.DataRow.from;
            if (void 0 == d[e] && (e = $Email.getEmailQuick(e), d[e] = Boolean(m[e])), this.model.isApproachMode()) {
                var t = this.model.get("tmpNameType");
                if (t != M.sender) return ""
            }
            return d[e] ? '<a class="i-v"></a>' : ""
        }, getBusinessIcon: function () {
            var e = this.DataRow.busAssistant;
            return 1 == e ? "left" == $App.getLayout() ? '<i class="icons i-identity" style="margin-top:-5px"></i>' : '<i class="icons i-identity"></i>' : ""
        }, getPrettyNumberIcon: function () {
            if (1 != this.DataRow.fid) return "";
            var e = this.DataRow.from, t = (this.DataRow.from, '<i class="icons i-s-pretty"></i>');
            if (this.model.isApproachMode()) return "";
            var i = $Email.getEmail(e);
            return top.$Email.isPrettyNumberEmail(i) ? t : ""
        }, getNewVipIcon: function () {
            var e = this.DataRow.from;
            return void 0 == d[e] && (e = $Email.getEmailQuick(e), d[e] = Boolean(m[e])), d[e] ? '<i class="i-v"></i>' : ""
        }, getSubject: function (e, t) {
            var e = $T.Html.encode(e) || "(无)";
            return e = t ? e.replace(T, "$1") : e.replace(T, "<b style='padding:2px;background-color:#F7D600'>$1</b>")
        }, getTrainOrderMore: function (e) {
            return this.DataRow.summaryJson["数量"] && this.DataRow.summaryJson["数量"] > 1 ? "shoppingList-order-listMore" : ""
        }, getStrokeVIcon: function () {
            var e = [1010001, 1010002, 1010003, 1010004, 1010005, 1010006, 1010007, 1000011], t = this.DataRow.sendId || 0;
            if ($.inArray(t, e) > -1) {
                var i = this.DataRow.mid;
                return "left" == $App.getLayout() ? $T.Utils.format('<i class="icons i-security_smler" style="margin-top:-5px" mid={0}></i>', [i]) : $T.Utils.format('<i class="icons i-security_smler" mid={0}></i>', [i])
            }
            return ""
        }, getIconClass: function () {
            var e = this.DataRow.summaryJson["航班"], t = $App.getAirlinesShortName(e).ename;
            return "i-" + t + "-18"
        }, getFlightNumber: function (e) {
            return this.DataRow.summaryJson[e] || ""
        }, getStrokeName: function () {
            var e = this.DataRow.summaryJson["航班"];
            return $App.getAirlinesShortName(e).cname || ""
        }, getStrokeEPName: function () {
            var e = this.DataRow.sendId, t = M139.Text.Email.getName(this.DataRow.from), i = {
                1000011: "行程邮件",
                1010001: "携程",
                1010002: "12306",
                1010003: "中国国际航空",
                1010004: "中国南方航空",
                1010005: "艺龙",
                1010006: "去哪儿网",
                1010007: "商旅100"
            }, a = i.hasOwnProperty(e) ? i[e] : t;
            return a
        }, getStrokeStart: function (e) {
            var t = this.DataRow.summaryJson["起飞"] || "——";
            if ("addr" == e) {
                var i = t.replace(/(\d)\s+/, "$1,").split(",")[1] || "——";
                return i
            }
            var a = t.replace(/(\d)\s+/, "$1,").split(",")[0] || "——";
            return a
        }, getFlightUpateDom: function () {
            var e = this.DataRow.sendId, t = this.DataRow.summaryJson["航班"] || "——", i = this.DataRow.summaryJson["起飞"] || "——", a = i.match(/\d{4}年\d+月\d+日/gi);
            if (null != a && null != a[0]) var s = a[0].replace(/年|月/g, "-").replace(/日/g, ""); else var s = "";
            var o = "", n = '<a href="javascript:void(0);" class="fr icoG flydongtai" flightNo={0} flightDate={1}><span class="p_relative" name="noclickzineng">航班动态</span></a>', r = [1010001, 1010003, 1010004, 1010005, 1010006, 1010007], l = $.inArray(e, r), c = l > -1 && "" != t && "" != s ? n.format(t, s) : o;
            return c
        }, getHoteltelephone: function (e, t) {
            var i = this.DataRow.summaryJson[e] || "", a = this.DataRow.summaryJson[t] || "", s = '<a tele="{0}" addr="{1}" class="fr icoG getHotel"><span class="p_relative" name="noclickzineng">联系酒店</span></a>', o = i.match(/\d+?/g);
            if (o instanceof Array && o.length >= 4) var n = s.format(i, a); else var n = s.format("——", a);
            return n
        }, getStrokeEnd: function (e) {
            var t = this.DataRow.summaryJson["到达"];
            if ("addr" == e) {
                var i = t.replace(/(\d)\s+/, "$1,").split(",")[1] || "——";
                return i
            }
            var a = t.replace(/(\d)\s+/, "$1,").split(",")[0] || "——";
            return a
        }, getEndCityPlcsDom: function (e) {
            var t = {
                "北京": { url: "beijing" },
                "上海": { url: "shanghai" },
                "广州": { url: "guangzhou" },
                "深圳": { url: "shenzhen" },
                "天津": { url: "tianjin" },
                "杭州": { url: "hangzhou" },
                "南京": { url: "nanjing" },
                "济南": { url: "jinan" },
                "重庆": { url: "chongqing" },
                "青岛": { url: "qingdao" },
                "大连": { url: "dalian" },
                "宁波": { url: "ningbo" },
                "厦门": { url: "xiamen" },
                "成都": { url: "chengdu" },
                "武汉": { url: "wuhan" },
                "哈尔滨": { url: "haerbin" },
                "沈阳": { url: "shenyang" },
                "西安": { url: "xian" },
                "长春": { url: "changchun" },
                "长沙": { url: "changsha" },
                "福州": { url: "fuzhou" },
                "郑州": { url: "zhengzhou" },
                "石家庄": { url: "shijiazhuang" },
                "苏州": { url: "suzhou" },
                "佛山": { url: "foushan" },
                "东莞": { url: "dongguan" },
                "无锡": { url: "wuxi" },
                "烟台": { url: "yantai" },
                "太原": { url: "taiyuan" },
                "合肥": { url: "hefei" },
                "南昌": { url: "nanchang" },
                "南宁": { url: "nanning" },
                "昆明": { url: "kunming" },
                "温州": { url: "wenzhou" },
                "淄博": { url: "shanghai" },
                "唐山": { url: "zibo" },
                "乌鲁木齐": { url: "wulumuqi" },
                "贵阳": { url: "guiyang" },
                "海口": { url: "haikou" },
                "兰州": { url: "lanzhou" },
                "银川": { url: "yinchuan" },
                "西宁": { url: "xining" },
                "呼和浩特": { url: "huhehaote" },
                "烟台": { url: "huhehaote" },
                "香港": { url: "xianggang" },
                "澳门": { url: "aomen" },
                "三亚": { url: "sanya" },
                "泉州": { url: "quanzhou" },
                "潍坊": { url: "weifang" },
                "徐州": { url: "xuzhou" },
                "桂林": { url: "guilin" },
                "大庆": { url: "daqing" },
                "中山": { url: "zhognshan" },
                "泰安": { url: "taian" },
                "长春": { url: "changchun" },
                "佛山": { url: "foshan" },
                "临沂": { url: "linyi" },
                "珠海": { url: "zhuhai" },
                "威海": { url: "weihai" },
                "咸阳": { url: "xianyang" },
                "苏州": { url: "suzhou" },
                "洛阳": { url: "luoyang" },
                "包头": { url: "baotou" },
                "常州": { url: "changzhou" },
                "南通": { url: "nantong" },
                "淮安": { url: "huaian" },
                "嘉兴": { url: "jiaxing" },
                "扬州": { url: "yangzhou" },
                "惠州": { url: "huizhou" },
                "慈溪": { url: "cixi" },
                "镇江": { url: "zhenjiang" },
                "义乌": { url: "yiwu" },
                "宜昌": { url: "yichang" },
                "银川": { url: "yinchuan" },
                "西宁": { url: "xining" }
            }, i = ["北京", "上海", "广州", "深圳", "天津", "杭州", "南京", "济南", "重庆", "青岛", "大连", "宁波", "厦门", "成都", "武汉", "哈尔滨", "沈阳", "西安", "长春", "长沙", "福州", "郑州", "石家庄", "苏州", "佛山", "东莞", "无锡", "烟台", "太原", "合肥", "南昌", "南宁", "昆明", "温州", "淄博", "唐山", "乌鲁木齐", "贵阳", "海口", "兰州", "银川", "西宁", "呼和浩特", "烟台", "香港", "澳门", "三亚", "泉州", "潍坊", "徐州", "桂林", "大庆", "中山", "泰安", "长春", "佛山", "临沂", "珠海", "威海", "咸阳", "苏州", "洛阳", "包头", "常州", "南通", "淮安", "嘉兴", "扬州", "惠州", "慈溪", "镇江", "义乌", "宜昌", "银川", "西宁"];
            if ("航班" == e) {
                var a = "<img src='../images/module/inbox/smartMail/dist_default/default_plane.png' alt='航班' title='航班'>", s = "<img src='../images/module/inbox/smartMail/city/{0}.jpg' alt='航班' title='航班'>", o = this.DataRow.summaryJson["到达"] || "——", n = o.replace(/(\d)\s+/, "$1,").split(",")[1] || "——", r = i.join("|"), l = n.match(r);
                if (null != l) var c = l[0], d = t.hasOwnProperty(c) && t[c].url.length > 0 ? s.format(t[c].url) : a; else var d = a;
                return d
            }
            if ("火车" == e) {
                var a = "<img src='../images/module/inbox/smartMail/dist_default/default_train.png' alt='火车' title='火车'>", s = "<img src='../images/module/inbox/smartMail/city/{0}.jpg' alt='火车' title='火车'>", p = this.DataRow.summaryJson["站点"].split("—")[1] || "——", r = i.join("|"), l = p.match(r);
                if (null != l) var c = l[0], d = t.hasOwnProperty(c) && t[c].url.length > 0 ? s.format(t[c].url) : a; else var d = a;
                return d
            }
        }, getSendidIicon: function () {
            var e = this.DataRow.sendId, t = "", i = {
                1000011: "i-trip",
                1010001: "i-xiec-18",
                1010002: "i-ch12306-18",
                1010003: "i-ca-18",
                1010004: "i-cz-18",
                1010005: "i-yil-18",
                1010006: "i-gow-18",
                1010007: "i-sl-18",
                1010101: "i-bankzh-18"
            }, a = i.hasOwnProperty(e) ? i[e] : t;
            return a
        }, getPassengerName: function (e) {
            var t = this.DataRow.summaryJson[e] || "——";
            return t.replace(/\s/g, "")
        }, getGrogshopName: function (e) {
            return this.DataRow.summaryJson[e] || "——"
        }, getGrogshopAddr: function (e) {
            return this.DataRow.summaryJson[e] || "——"
        }, getLiveTime: function (e) {
            return this.DataRow.summaryJson[e] || "——"
        }, getLeaveTime: function (e) {
            return this.DataRow.summaryJson[e] || "——"
        }, getTrainNumber: function (e) {
            return this.DataRow.summaryJson[e] || "——"
        }, getSeat: function () {
            return this.DataRow.summaryJson["座位"] || "——"
        }, getTrainTime: function (e) {
            return this.DataRow.summaryJson[e] || "——"
        }, getTrainStartAddr: function (e) {
            return this.DataRow.summaryJson[e].split("—")[0] || "——"
        }, getTrainEndAddr: function (e) {
            return this.DataRow.summaryJson[e].split("—")[1] || "——"
        }, getEofficialGroupDes: function () {
            var e = {
                0: "今天",
                1: "昨天",
                2: "前天",
                "default": "yyyy年MM月"
            }, t = new Date(1e3 * this.DataRow.receiveDate), i = new Date, a = new Date(t), s = $Date.getDaysPass(a, i);
            return e[s] ? e[s] : $Date.format(e["default"], a)
        }, getSubjectNew: function (e) {
            var e = $T.Html.encode(e) || "(无)";
            return e = e.replace(T, "<b style='padding:0 2px;background-color:#F7D600'>$1</b>")
        }, getSize: function (e) {
            return $T.Utils.getFileSizeText(e, {})
        }, getDate: function (e, t, a) {
            function s() {
                var e = o.model.get("order"), t = o.model.get("isTaskMode");
                return e = t ? "taskDate" : e, "taskDate" == e && !o.DataRow.taskDate
            }

            var o = this, n = w;
            if (s()) return "";
            if (a) {
                var r = new Date(1e3 * Number(a)), l = new Date(r.getFullYear(), r.getMonth(), r.getDate() + 1), c = new Date(n.years, n.month, n.date), d = new Date(n.years, n.month, n.date + 1), p = new Date(n.times);
                if (p > r && l > p) return "<span class='red' title='" + $Date.format("yyyy年M月dd日hh:mm:ss", r) + "'>" + $Date.format("hh:mm处理", r) + "</span>";
                if ($App.getMailboxView().model.isTaskMode()) {
                    var m, u = !1, c = new Date(w.years, w.month, w.date);
                    return u = c > r, m = r.getFullYear() == n.years ? r.format("M月dd日") : r.format("yyyy-M-dd"), r > c && d > r ? "<span class='red' title='" + $Date.format("yyyy年M月dd日hh:mm:ss", r) + "'>" + $Date.format("hh:mm处理", r) + "</span>" : r >= d ? "<span class='red' title='" + $Date.format("yyyy年M月dd日hh:mm:ss", r) + "'>" + $Date.format("M月dd日", r) + "</span>" : "<span" + (u ? " class='red'" : "") + " title='" + $Date.format("yyyy年M月dd日hh:mm:ss", r) + "'>" + m + "</span>"
                }
            }
            1 == i && t && (e = t);
            var h, f = new Date(1e3 * Number(e)), g = n.times - f.getTime();
            if (0 > g) h = g > -6e4 ? "刚刚" : f.format("M月dd日"); else if (f.getFullYear() == n.years && f.getMonth() == n.month && f.getDate() == n.date) {
                var v = Math.round(g / 1e3 / 60);
                h = 1 > v ? "刚刚" : v >= 1 && 60 > v ? v + "分钟前" : f.format("hh:mm")
            } else h = f.getFullYear() == n.years ? f.format("M月dd日") : f.format("yyyy-M-dd");
            return "<span title='" + $Date.format("yyyy年M月dd日 hh:mm", f) + "'>" + h + "</span>"
        }, getSummary: function () {
            var e = this.DataRow.summary, t = this.model.getKeyWord("content"), i = this.model.get("isSearchMode");
            return 0 != n || i && t ? (e = e.replace(/\s+/g, " "), e = e.replace(/[\u3000]+/g, " "), e = $T.Html.encode(e), e = e.replace(T, "<b style='padding:2px;background-color:#F7D600'>$1</b>"), e ? '<p class="gray" name="summary">' + e.replace(/\$/g, "") + "</p>" : '<p class="gray" name="summary">&nbsp;</p>') : ""
        }, getNewSummary: function () {
            var e = this.DataRow.summary;
            return 0 == n ? "" : (e = e.replace(/\s+/g, " "), e = e.replace(/[\u3000]+/g, " "), e = $T.Html.encode(e), e = e.replace(T, "<b style='padding:2px;background-color:#F7D600'>$1</b>"), e ? '<p class="mail-text" name="summary">' + e.replace(/\$/g, "") + "</p>" : '<p class="mail-text" name="summary">&nbsp;</p>')
        }, getVoiceMailPlayBtn: function () {
            var e, t, i;
            if (4 == this.DataRow.logoType && 0 == this.DataRow.sendId) {
                var a = this.DataRow.mid, s = this.DataRow.summary, o = s.replace(/^.+\.mp3\s?/, ""), n = o.replace(/【灵犀云转写】[\W\w]+$/g, ""), r = {
                    fid: 0,
                    mid: a,
                    autoName: 1,
                    markRead: 0,
                    returnHeaders: { Sender: "", "X-RICHINFO": "" },
                    filterStylesheets: 0,
                    filterImages: 0,
                    filterLinks: 0,
                    keepWellFormed: 0,
                    header: 1,
                    supportTNEF: 1,
                    returnAntispamInfo: 1
                };
                return $RM.readMail(r, function (s) {
                    window.voiceMailData = s["var"], e = voiceMailData.attachments[0].fileName || "", t = voiceMailData.attachments[0].fileName || "", i = voiceMailData.attachments[0].type || "";
                    var o = e.lastIndexOf(".");
                    t = e.substr(o), $("#voiceMailPlayBtn em").text(e), $("#voiceMailPlayBtn span").text(t), $("#voiceMailPlayBtn").attr({
                        title: e,
                        fileType: i
                    }), $("tr[mid='" + a + "']").find(".mTitle .gray").text(n)
                }), '<a  id="voiceMailPlayBtn" name="voiceMailBtn" taskflag="0" href="javascript:;" fileType ="" class="i-voi" title=""><i class="i-voi-y"></i><em style="display: none;width: 0;height: 0;font-size: 0;background: transparent;"></em><span class="text_suffix" style="visibility: hidden;"></span></a>'
            }
            return ""
        }, getSectionName: function () {
            function e(e, a) {
                if (n.DataRow.flags.top) return '<b id="period_top">置顶</b>';
                if (1 == parseInt(n.DataRow.flags.taskFlag, 10)) {
                    var s = new Date(1e3 * Number(n.DataRow.taskDate)), o = new Date(s.getFullYear(), s.getMonth(), +s.getDate() + 1), r = new Date(w.times);
                    if (r > s && o > r) return '<b id="remind_top">今日待处理</b>'
                }
                e.setHours(23, 59, 59), a.setHours(23, 59, 59);
                var l = a.getTime() - e.getTime(), c = Math.round(l / 1e3 / 60 / 60 / 24), d = "星期" + ["日", "一", "二", "三", "四", "五", "六"][e.getDay()], p = e.getDay();
                p = 0 == p ? 7 : p;
                var m = a.getDay();
                return m = 0 == m ? 7 : m, 8 == n.model.get("fid") ? e.getYear() == a.getYear() ? t(e, a) : i(e, a) : 1 >= c ? a.getDate() == e.getDate() ? '<b id="period_today">今天</b>' : 0 > c ? "今天" : "昨天" : 2 == c ? m - p == 2 || m - p == -5 ? "前天" : m - p == 1 || m - p == -6 ? "昨天" : "上周" : 7 > c ? m > p ? d : "上周" : 7 + m > c ? "上周" : "更早"
            }

            function t(e, t) {
                return e.getMonth() == t.getMonth() ? "本月" : (e.getMonth() + 1).toString() + "月"
            }

            function i(e, t) {
                return e.getYear() !== t.getYear() ? e.getFullYear().toString() + "年" + (e.getMonth() + 1).toString() + "月" : void 0
            }

            function a(e) {
                var t = new Date(w.years, w.month, w.date), i = new Date(w.years, w.month, +w.date + 1), a = new Date(w.years, w.month, +w.date + 2);
                return e.getTime() ? t > e ? "<b>已过期</b>" : e >= t && i > e ? "<b>今天</b>" : e >= i && a > e ? "<b>明天</b>" : "<b>更晚</b>" : "<b>稍后处理</b>"
            }

            var s = this.model.get("order"), o = this.model.get("isTaskMode");
            s = o ? "taskDate" : s;
            var n = this;
            if ("receiveDate" == s || "sendDate" == s) {
                date = new Date(1e3 * Number(this.DataRow.sendDate)), 1 == this.model.get("fid") && this.DataRow.receiveDate && (date = new Date(1e3 * Number(this.DataRow.receiveDate)));
                var r = new Date, l = ($Date.getDaysPass(date, r), e(new Date(date), r));
                return l
            }
            if ("taskDate" == s) {
                var c = new Date(1e3 * Number(this.DataRow.taskDate));
                return a(c)
            }
            return n.DataRow.flags.top ? '<b id="period_top">置顶</b>' : s
        }, getDeleteType: function () {
            var e = this.DataRow.deleteSource;
            return ["web/wap删信", "客户端删信"][e]
        }
    }
}
function _letterInlineScript(e, t) {
    function i(e, t) {
        var i = s.createElement("script");
        i.type = "text/javascript", i.charset = "utf-8", i.id = e, i.src = t + "?sid=" + $App.getSid(), s.getElementsByTagName("body")[0].appendChild(i)
    }

    function a(t) {
        function a() {
            var e = ($User.getAccountListArray().join(",").toLowerCase().split(","), "atInserted-"), t = $("span[id^='" + e + "']", s);
            return Boolean(t.length)
        }

        function o() {
            var t = !1;
            try {
                return $.each(m, function () {
                    this.test(e.subject) && (t = !0)
                }), t
            } catch (i) {
            }
        }

        function n() {
            var e = !1;
            try {
                return $.each(u, function (t) {
                    s.getElementById(u[t]) && (e = !0)
                }), e
            } catch (t) {
            }
            return e
        }

        function r() {
            var e = s.getElementById("139Command_MarketingMail");
            if (e) {
                var t = e.getAttribute("rel");
                t && /^\d+$/.test(t) && top.addBehavior && top.addBehavior("打开运营邮件", t)
            }
        }

        function l() {
            return t.headers && t.headers["X-RICHINFO"]
        }

        function c() {
            var e = ["subscribe@139.com", "cmpost@139.com", "smpost@139.com", "subscribe-service@139.com", "subscribe-topic@139.com"], a = !1;
            if ($.each(e, function (e, i) {
                return t.account && t.account.indexOf(i) >= 0 ? (a = !0, !1) : void 0
            }), t.headers && t.headers["X-RICHINFO"] && a) {
                var s = "/mpost2014/js/mpost/mail/m2012.readmail.subscribeaction.js";
                i("subscribeaction", s);
                var o = top.getRootPath() + "/component/mediaplayer/m139.component.mediaplayer.js";
                i("mediaplayer", o)
            }
        }

        function d() {
            var e = s.getElementById("139Command_ReadMark");
            if (e) {
                var t = e.getAttribute("actionid"), i = e.getAttribute("thingid"), a = e.getAttribute("moduleid");
                top.addBehaviorExt && top.addBehaviorExt({ actionId: t, thingId: i, moduleId: a })
            }
        }

        if (t && t.omid) {
            var p = (t.omid, !1);
            e.subject = t.subject, e.from = $Email.getEmail(t.account);
            var m = [new RegExp("这是[\\s\\S]+?的通讯录"), new RegExp("能把通讯录共享给我吗"), new RegExp("的电子名片"), new RegExp("更新了个人资料")], u = ["myVoting", "questionnaire", "139command_flash", "video", "mail139command", "aPostcard139", "139CommandQuickShare", "139Command_LinksShow", "btnVipUpdate", "btnMailUpdate", "addr_whoaddme", "welcome_alias", "welcome_mailnotify", "welcome_sms", "welcome_phoneFeixin", "welcome_pcFeixin", "welcome_foxmail", "welcome_collection", "welcome_mailList", "welcome_phoneToMail", "welcome_more", "139mailtobirthRemind", "birthRemind2", "checkin_go", "readmail", "quickHeadImg", "139olympic", "139jiayoly", "operationlinkId_0", "139Command_CustomLinks", "meetingInviteOp", "meetingInviteNew", "activityInviteMail", "calenderShareMail", "calenderFeedbackMail", "activityShareMail", "remindMail", "billRemindBtn", "groupMailInviteOp", "groupMail_linkToDisk", "calendar_addActivity", "note_saveCommand", "139Command_MiuiLottery_rewardNumber", "139Command_MiuiLottery", "christmasGreet", "_task_cal_mail", "139PCSign", "createAliasSuccessModule", "gotoUpMailsize", "quickClearMailSize", "LoadmailTemplate", "skinorderSucess", "cleanMailSucess", "setNameMailTpl"]
        }
        r(), d(), c();
        var h = navigator.userAgent.toLowerCase(), f = "ipad" == h.match(/ipad/i);
        (o() || n() || l() || f) && (f && (top.ipadLetterMid = t.omid), p = !0, setTimeout(function () {
            var e = top.getRootPath() + "/js/richmail/readmail/m2012.readmail.letterscript.js";
            i("letterscript", e)
        }, 1e3)), a() && setTimeout(function () {
            var e = top.getRootPath() + "/js/richmail/readmail/m2012.readmail.atscript.js";
            i("atscript", e)
        }, 50), e.from.toLowerCase().indexOf("postmaster") >= 0 && e.subject.indexOf("退回") >= 0 && s.getElementById("newBounceTemplate") && setTimeout(function () {
            var e = top.getRootPath() + "/js/richmail/readmail/bounce.letter.js";
            i("bounceletter", e)
        }, 100);
        var g = s.links;
        $.each(g, function (e) {
            var t = parent.$(g[e], s), i = t.attr("href"), a = t.attr("rel"), o = t.attr("param");
            if (/^prod$/i.test(a) ? t.click(function () {
                $PUtils && $PUtils.show(o, i)
            }) : /^http/i.test(i) ? t.attr("target", "_blank") : /^mailto:/i.test(i) && t.click(function () {
                i.replace(/^mailto:/i, "");
                return $App.show("compose", null, { inputData: { receiver: i.replace(/^mailto:/i, "") } }), !1
            }), "true" == t.attr("clicklog")) {
                var n = t.attr("thingid");
                n && /^\d+$/.test(n) && t.click(function () {
                    top.addBehavior && top.addBehavior("邮件正文点击统计", this.getAttribute("thingid"))
                })
            }
        }), "hidden" == e.frameElement.style.visibility && (e.frameElement.style.visibility = "")
    }

    e.from = "", e.subject = "";
    var s = e.document;
    ({ partid: $User.getPartid(), source: "jumpto", mid: $App.getCurrMailMid() });
    e.doc = $("body", s), e.doc.attr("rel", 1).attr("orignheight", e.doc.height()), $.browser.mozilla && e.doc.css("overflowX", "visible"), a(e.letterInfo), $("#attachAndDisk").hide(), function (e) {
        function t(e, t) {
            var i = s.createElement("script");
            i.type = "text/javascript", i.charset = "utf-8", i.src = e + "?sid=" + $App.getSid(), s.getElementsByTagName("body")[0].appendChild(i), $.browser.msie ? i.onreadystatechange = function () {
                "loaded" != i.readyState && "complete" != i.readyState || t && t()
            } : i.onload = function () {
                t && t()
            }
        }

        var a = ["attachAndDisk"], o = !1, n = s;
        try {
            $.each(a, function (e) {
                s.getElementById(a[e]) && (o = !0)
            })
        } catch (r) {
        }
        o && !top.$App.isSessionMode() && t(top.getRootPath() + "/js/packs/libs.pack.js", function () {
            i("attachanddiskdisplay", top.getRootPath() + "/js/richmail/readmail/m2012.readmail.attachanddiskdisplay.js"), 0 == $("#downloadDisk").length && $("<iframe id='downloadDisk' style='display: none;'></iframe>").appendTo(top.document.body)
        }), o && top.$App.isSessionMode() && t(top.getRootPath() + "/js/packs/libs.pack.js", function () {
            var e = $("#attachAndDisk", n).find("a");
            e.attr("down", 0), e.click(function (e) {
                var t = this;
                return "1" == $(this).attr("down") ? !1 : ($(this).attr("down", 1), void window.setTimeout(function () {
                    $(t).attr("down", 0)
                }, 5e3))
            })
        });
        var l = ($("#infoSta"), $("i[id='listUp']")), c = ($("i[id='listUp']:visible"), $("i[id='listDown']")), d = ($("i[id='listDown']:visible"), top.$App.getCurrMailMid()), p = top.$("#readmail_" + d), m = p.find("#infoSta");
        m.next("ul").find("li").length > 3 && (m.next("ul").hide(), l.show(), c.hide()), $("div[id='infoSta']").unbind("click").bind("click", function () {
            var e = this;
            top.BH("readmail_toggle"), 0 == $("i[id='listUp']:visible").length ? (c.hide(), $(e).next().slideUp(), l.show()) : (l.hide(), $(e).next().slideDown(), c.show())
        })
    }(M139)
}


//M2012.MatrixVM
!function (e, t, i) {
    var a, s = e;
    i.namespace("M2012.MatrixVM", Backbone.Model.extend({
        initialize: function (e) {
            e = e || {},
            a = e.window || window
        },
        start: function () {
            this.createRequestByScript();
            this.createFloatingFrame();
            this.createPathConfig();
            this.createUtils();
            this.createLoadScript();
            this.createUserData();
            this.createGlobalVariable();
            this.createLinksShow();
            this.createModuleManager();
            this.createMailTool();
            this.createWaitPanel();
            this.createValidate();
        },
        createFloatingFrame: function () {
            a.FF = window.FloatingFrame = o;
            return o;
        },
        createPathConfig: function () {
            a.rmResourcePath = (top.getDomain("resource") || "") + "/rm/richmail";
            a.resourcePath = a.rmResourcePath.replace("richmail", "coremail");
            a.SiteConfig.ucDomain = getDomain("webmail");
            a.ucDomain = getDomain("webmail");
            a.SiteConfig.smsMiddleware = getDomain("rebuildDomain") + "/sms/";
            a.SiteConfig.mmsMiddleware = getDomain("rebuildDomain") + "/mms/";
            a.SiteConfig.largeAttachRebuildUrl = getDomain("rebuildDomain") + "/disk/";
            a.SiteConfig.disk = getDomain("rebuildDomain") + "/disk/netdisk";
        },
        createUtils: function () {
            a.Utils = {
                PageisTimeOut: function () {
                    return !1
                },
                waitForReady: function (e, t) {
                    return i.Timing.waitForReady(e, t)
                },
                loadSkinCss: function (e, t, i, a) {
                    var s = "", o = "css", n = "/";
                    e = top.$User.getSkinNameMatrix && top.$User.getSkinNameMatrix() || "skin_shibo", /new_/.test(e) && (o = "theme" + n + e.match(/skin_(\w+)$/)[1], e = e.replace("new_", "")), i && (e = e.replace("skin", i + "_skin")), t || (t = document), top.SiteConfig && top.SiteConfig.skinCSSCacheVersion && (s = "?v=" + top.SiteConfig.skinCSSCacheVersion);
                    var r = top.rmResourcePath + n + o + n + e + ".css" + s;
                    a && (r = a + e + ".css" + s);
                    for (var l = t.getElementsByTagName("link"), c = 0; c < l.length; c++) {
                        var d = l[c];
                        if (!d.href) return void (d.href = r + s)
                    }
                },
                queryString: function (e, t) {
                    return $Url.queryString(e, t)
                },
                queryStringNon: function (e, t) {
                    for (var t = t || location.search, t = t.split(/&|\?/), i = null, a = 0; a < t.length; a++) {
                        var s = t[a].split("=");
                        if (s[0] == e) {
                            i = s[1];
                            break
                        }
                    }
                    return i
                },
                openControlDownload: function (e) {
                    top.$App.show("smallTool")
                },
                UI: {
                    selectSender: function (e, t, i) {
                        function a(e) {
                            e = e.trim();
                            var t = l ? '"{0}"<{1}>'.format(l.replace(/"|\\/g, ""), e) : e, i = new Option(t, e);
                            n.options.add(i), i.innerHTML = i.innerHTML.replace(/\&amp\;#/gi, "&#"), i.value == o && (i.selected = !0)
                        }

                        var o = $Url.queryString("from");
                        "undefined" == typeof i && (i = document), "undefined" == typeof t && (t = !1);
                        var n = i.getElementById(e);
                        UserData = window.top.UserData;
                        var r = top.$User.getDefaultSender(), l = top.$User.getTrueName(), c = top.$User.getAccountListArray();
                        r && a(r);
                        for (var d = 0; d < c.length; d++) {
                            var p = c[d];
                            r != p && a(p)
                        }
                        t && s(top.$App.getPopList()).each(function () {
                            for (var e = 0; e < n.options.length; e++) if (this == n[e].value) return;
                            a(this.email)
                        }), n.options.add(new Option("发信设置", "0"));
                        var m = function (e) {
                            var t = i.getElementById(e);
                            "0" == t.value && (t[0].selected = !0, top.$App.show("account"), top.addBehavior("写信页_别名设置")), t = null
                        };
                        n.onchange = function () {
                            m(e)
                        }
                    }
                },
                parseSingleEmail: function (e) {
                    e = e.trim();
                    var t = {}, i = /^([\s\S]*?)<([^>]+)>$/;
                    if (-1 == e.indexOf("<")) t.addr = e, t.name = e.split("@")[0], t.all = e; else {
                        var a = e.match(i);
                        a ? (t.name = a[1].trim().replace(/^"|"$/g, ""), t.addr = a[2], t.name = t.name.replace(/\\["']/g, "").replace(/^["']+|["']+$/g, ""), t.all = '"' + t.name.replace(/"/g, "") + '"<' + t.addr + ">") : (t.addr = e, t.name = e, t.all = e)
                    }
                    return t.addr && (t.addr = t.addr.encode()), t
                },
                parseEmail: function (e) {
                    var t = /(?:[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}|(?:"[^"]*")?\s?<[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}>)\s*(?=;|,|，|；|$)/gi, i = /^"([^"]+)"|^([^<]+)</, a = /<?([A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4})>?/i, s = e.match(t), o = [];
                    if (s) for (var n = 0, r = s.length; r > n; n++) {
                        var l = {};
                        l.all = s[n];
                        var c = s[n].match(i);
                        c && (l.name = c[1]), c = s[n].match(a), c && (l.addr = c[1]), l.addr && (l.account = l.addr.split("@")[0], l.domain = l.addr.split("@")[1], l.name || (l.name = l.account), o.push(l))
                    }
                    return o
                }
            },
            a.getXmlDoc = function (e) {
                return i.Text.Xml.parseXML(e)
            },
            a.xml2json = function (e, t) {
                function i(e, i) {
                    var a = {}, s = i.arrayElement;
                    if (s) var o = a[s] = [];
                    for (var n = 0, r = e.childNodes, l = r.length; l > n; n++) {
                        var c = r[n];
                        1 == c.nodeType && (c.tagName == i.arrayElement ? o.push(xml2json(c, t)) : a[c.tagName] = xml2json(c, t))
                    }
                    return a
                }

                function a(e) {
                    for (var t = {}, i = 0, a = e.childNodes, s = a.length; s > i; i++) {
                        var o = a[i];
                        1 == o.nodeType && (t[o.tagName] = document.all ? o.text : o.textContent)
                    }
                    return t
                }

                function s(e) {
                    for (var i = [], a = 0, s = e.childNodes, o = s.length; o > a; a++) {
                        var n = s[a];
                        1 == n.nodeType && i.push(xml2json(n, t))
                    }
                    return i
                }

                if ("string" == typeof e) try {
                    var o = getXmlDoc(e);
                    e = o.documentElement
                } catch (n) {
                }
                var r = t[e.tagName];
                return r ? "simple" == r.type ? a(e) : "rich" == r.type ? i(e, r) : "array" == r.type ? s(e) : null : document.all ? e.text : e.textContent
            },
            a.json2xml = function (e) {
                var t = [];
                for (var i in e) {
                    t.push("<"),
                    t.push(i),
                    t.push(">"),
                    t.push(encodeXML(e[i])),
                    t.push("</"),
                    t.push(i),
                    t.push(">");
                }
                return t.join("")
            },
            String.format || (String.format = function (e, t) {
                return i.Text.Utils.format(e, t)
            })
        },
        createLoadScript: function () {
            a.loadScriptM2011 = function (e, t, i, a) {
                function s() {
                    return rmResourcePath.match(/^(https?:\/\/)?([^\/]+)/i)[0]
                }

                for (var o = null, n = [{ name: "jquery.js", version: "20120302" }, {
                    name: "utils_controls.js",
                    version: "20121229"
                }, { name: "framework.js", version: "20121221" }, {
                    name: "common_option.js",
                    version: "20121123"
                }, { name: "utils.js", version: "20120302" }, {
                    name: "compose_2010_pack.js",
                    version: "20121227"
                }, { name: "folderview.js", version: "20121122" }, {
                    name: "welcome.js",
                    version: "20130104"
                }], r = 0; r < n.length; r++) if (n[r].name == e) {
                    o = top.rmResourcePath + "/js/" + e + "?v=" + n[r].version;
                    break
                }
                if (null == o) {
                    var l = a || "/rm/richmail/js/";
                    o = s() + l + e
                }
                return o.indexOf("utils_controls.js") > -1 ? top.loadScript(s() + top.getRootPath() + "/js/packs/m2011.utilscontrols.pack.js", t, i) : o.indexOf("AddressBook.js") > -1 ? top.loadScript(s() + top.getRootPath() + "/js/matrixvm/page/m2011.page.AddressBook.js", t) : o.indexOf("RichInputBox.js") > -1 ? top.loadScript(s() + top.getRootPath() + "/js/matrixvm/page/m2011.page.RichInputBox.js", t) : void (t || document).write('<script charset="' + (i || "gb2312") + '" type="text/javascript" src="' + o + '"></script>')
            },
            a.loadScripts = function (e, t) {
                for (var i = 0; i < e.length; i++) a.loadScriptM2011(e[i], t)
            },
            a.loadRes = function (e) {
                function t() {
                    return rmResourcePath.match(/^(https?:\/\/)?([^\/]+)/i)[0]
                }

                if (e && e.RES_FILES) {
                    for (var i = e.RES_FILES, a = 0; a < i.length; a++) if (i[a].js) {
                        var s = i[a].js;
                        s.indexOf("utils_controls.js") > -1 ? top.loadScript(t() + top.getRootPath() + "/js/packs/m2011.utilscontrols.pack.js", e.document) : s.indexOf("jquery.js") > -1 ? top.loadScript(rmResourcePath + "/js/jquery.js", e.document) : (s = s.replace("/groupmail/js/", "/groupmail/m2011.groupmail."), top.loadScript(s.replace("/$base$", m2012ResourceDomain + top.getRootPath() + "/js/service"), e.document, i[a].charset || "gb2312"))
                    } else if (i[a].css) {
                        var s = i[a].css;
                        top.loadCSS(s.replace("/$base$", t() + "/rm"), e.document)
                    }
                    if (e.location.href && e.location.href.indexOf("ComposeGroupmail") > -1) try {
                        top.loadScript(m2012ResourceDomain + top.getRootPath() + "/js/lib/underscore.js", e.document, "uft-8"), top.loadScript(m2012ResourceDomain + top.getRootPath() + "/js/lib/backbone.js", e.document, "uft-8"), top.loadScript(m2012ResourceDomain + top.getRootPath() + "/js/packs/m139.core.pack.js", e.document, "uft-8"), top.loadScript(m2012ResourceDomain + top.getRootPath() + "/js/ui/largeattach/m2012.ui.largeattach.model.js", e.document, "uft-8")
                    } catch (o) {
                    }
                    e.RES_FILES = null
                }
            }
        },
        createGlobalVariable: function () {
            var e = this;
            a.coremailDomain = $App.getMailDomain(),
            a.addrDomain = "/addrsvr",
            a.mailDomain = $App.getMailDomain(),
            a.isRichmail = !0,
            a.stylePath = "/m",
            a.wmsvrPath = "/s",
            a.wmsvrPath2 = window.location.protocol + "//" + location.host + "/RmWeb",
            a.maxTabCount = 3,
            a.Main = {
                closeCurrentModule: function () {
                    $App.closeTab()
                }
            },
            a.Main.setReplyMMSData = function (e) {
                e && (top.replyMMSData = {
                    content: "string" == typeof e.content && e.content || "",
                    receivers: t.isArray(e.receivers) && e.receivers || [],
                    subject: "string" == typeof e.subject && e.subject || ""
                })
            },
            a.behaviorClick = function (e, t) {
                top.M139.Logger.behaviorClick(e, t)
            },
            a.addBehavior = function (e, t) {
                top.M139.Logger.logBehavior({ key: e, thingId: t })
            },
            a.addBehaviorExt = function (e) {
                e && e.actionId && top.M139.Logger.logBehavior({
                    thingId: e.thingId || 0,
                    actionId: e.actionId,
                    moduleId: e.moduleId || 0,
                    actionType: e.actionType,
                    pageId: 24
                })
            },
            a.ScriptErrorLog = function () {
            },
            a.MailTool = {
                getAccount: function (e) {
                    return $Email.getAccount(e)
                },
                getAddr: function (e) {
                    return $Email.getEmail(e)
                }
            },
            a.encodeXML = function (e) {
                return $Xml.encode(e)
            },
            a.FilePreview = {
                isRelease: function () {
                    return !0
                },
                checkFile: function (e, t) {
                    if (t && t > 20971520) return -1;
                    var i = /\.(?:doc|docx|xls|xlsx|ppt|pptx|pdf|txt|jpg|jpeg|jpe|jfif|gif|png|bmp|ico|eml|)$/i, a = /\.(?:rar|zip|7z)$/i;
                    return i.test(e) ? 1 : a.test(e) ? 2 : -1
                },
                getUrl: function (e) {
                    var t = top.getRootPath() + "/html/onlinepreview/online_preview.html?fi={fileName}&mo={uid}&dl={downloadUrl}&sid={sid}&id={contextId}&rnd={rnd}&src={type}";
                    t += "&skin={skin}", t += "&resourcePath={resourcePath}", t += "&diskservice={diskService}", t += "&filesize={fileSize}", t += "&disk={disk}", t += "&callback={callback}";
                    var i = "";
                    return -1 != $T.Url.getFileExtName(e.fileName).indexOf("eml") && (i = "previewEmlReady"), t = $T.Utils.format(t, {
                        uid: top.M139.Text.Mobile.remove86(top.uid),
                        sid: top.UserData.ssoSid,
                        rnd: Math.random(),
                        skin: window.top.UserConfig.skinPath,
                        resourcePath: encodeURIComponent(top.rmResourcePath),
                        diskService: encodeURIComponent(top.SiteConfig.diskInterface),
                        type: e.type || "",
                        fileName: encodeURIComponent(e.fileName),
                        downloadUrl: encodeURIComponent(e.downloadUrl),
                        contextId: e.contextId || "",
                        fileSize: e.fileSize || "",
                        disk: top.SiteConfig.disk,
                        callback: i
                    })
                }
            },
            a.GetDiskArgs = function () {
                return top.diskSelectorArgs
            },
            a.OpenDisk = function (e) {
                e || (e = {}), top.diskSelectorArgs = e;
                var t = SiteConfig.disk + "/html/selectdisk.html?sid=" + $App.getSid() + "&restype=" + (e.restype ? e.restype : 1);
                top.FF.open("彩云", t, 484, 405, !0)
            };
            var s = this;
            a.GlobalEvent = {
                add: function (e, t) {
                    s.on(e, t)
                },
                broadcast: function (e, t) {
                    s.trigger(e, t)
                }
            },
            a.ReadMailInfo = {
                getDownloadAttachUrl: function (e) {
                    var t = "/view.do?func=attach:download&mid={0}&offset={1}&size={2}&name={3}&encoding={6}&sid={4}&type={5}";
                    return top.wmsvrPath2 + t.format(e.mid, e.fileOffSet, e.fileSize, encodeURIComponent(e.fileName), e.sid, e.type, e.encoding)
                }
            },
            e.createContacts && e.createContacts(),
            a.reloadAddr = function () {
                $App.trigger("change:contact_maindata")
            },
            a.namedVarToXML = function (e, t, a) {
                function s(e) {
                    return Object.prototype.toString.call(e).replace(/^\[object (\w+)\]$/, "$1")
                }

                function o(e, t) {
                    if (null == e) return "null";
                    var i = s(e);
                    if ("Number" == i) {
                        var a = t ? t : e.toString();
                        if (-1 == a.indexOf(".")) {
                            if (e >= -2147483648 & 2147483648 > e) return "int";
                            if (!isNaN(e)) return "long"
                        }
                        return "int"
                    }
                    return i.toLowerCase()
                }

                function n(e, t, i) {
                    var a = "<" + e;
                    return t && (a += ' name="' + r(t) + '"'), i ? (a += ">" + i, ">" == i.charAt(i.length - 1) && (a += "\n"), a + "</" + e + ">") : a + " />"
                }

                function r(e) {
                    return e = e.replace(/[\x00-\x08\x0b\x0e-\x1f]/g, "")
                }

                if (null == t) return a + n("null", e);
                var l = s(t);
                if ("String" == l) {
                    var c = r(t);
                    try {
                        c = i.Text.Xml.encode(c)
                    } catch (d) {
                    }
                    return a + n("string", e, c)
                }
                if ("Object" == l) {
                    if (t.nodeType) return top.FloatingFrame.alert(UtilsMessage.UtilsInvalidError.format(Object.inspect(t))), "";
                    var p = "";
                    for (var m in t) p += namedVarToXML(m, t[m], a + "  ");
                    return a + n("object", e, p + a)
                }
                if ("Array" == l) {
                    for (var p = "", m = 0; m < t.length; m++) p += namedVarToXML(null, t[m], a + "  ");
                    return a + n("array", e, p + a)
                }
                if ("Boolean" == l || "Number" == l) {
                    var p = t.toString();
                    return a + n(o(t, p), e, p)
                }
                if ("Date" == l) {
                    var p = "" + t.getFullYear() + "-" + (t.getMonth() + 1) + "-" + t.getDate();
                    return (t.getHours() > 0 || t.getMinutes() > 0 || t.getSeconds() > 0) && (p += " " + t.getHours() + ":" + t.getMinutes() + ":" + t.getSeconds()), a + n(o(t, p), e, p)
                }
                return top.FloatingFrame.alert(UtilsMessage.UtilsInvalidError.format(Object.inspect(t))), ""
            },
            a.UtilsMessage = {
                AddcontactEmptyError: "分组名称不能为空。",
                AddcontactSpecialError: "组名中不能包含特殊字符。",
                AddcontactSuccess: "添加成功!",
                AddsendcontactsAddError: "添加失败",
                AddsendcontactsAddSuccess: "添加成功!",
                AddsendcontactsNotice: "正在添加联系人...",
                AddsendcontactsOneError: "请至少选中一行!",
                AddsendcontactsTeamError: "请输入组名",
                ChecksecretfolderpwdError: "密码错误",
                Folder_smsError: "短信验证码输入错误，请重新输入!",
                Folder_smsNoError: "您还未获取短信验证码，请点击上方的按钮获取。",
                Folder_smsNotice: "正在获取短信验证码",
                FoldermanageError: "排序操作失败！",
                ForwardEmptyError: "邮箱地址不能为空",
                ForwardOneError: "很抱歉，只能转发到一个邮箱地址。",
                ForwardRightError: "请输入正确的邮箱地址（例：example@139.com）",
                ForwardSelfError: "转发用户不能填写自己的邮箱地址",
                PopfolderFullError: "邮箱容量将满,请及时清理",
                PopfolderFulledError: "邮箱容量已满, 请清理过期邮件",
                UtilsDebugError: "调试器错误",
                UtilsInvalidError: "Passing invalid object: {0}",
                UtilsNoloadError: "数据未加载成功，可能的原因是登录超时了。",
                UtilsRequestError: "请求出错:",
                UtilsScreenError: "截屏功能仅能在IE浏览器下使用",
                UtilsScreenInstallConfirm: "使用截屏功能必须安装139邮箱控件,是否安装?",
                UtilsTimeoutError: " <b>登录超时，可能由于以下原因：</b><br/>1、您同时使用多个帐号或多次登录邮箱<br/>2、您的网络链接长时间断开<br/>3、当前页面闲置太久",
                UtilsUpdateConfirm: "您安装的上传控件已经不能使用,是否更新?",
                UtilsUpgradeConfirm: "当前的截屏控件需要升级才可继续使用",
                UtilsUploadConfirm: "上传文件必须安装139邮箱控件,是否安装?",
                vipNoPermissionNotice: "VIP{0}{2}为{0}元版{1}邮箱专属{2}。<br/>立即升级，重新登录后即可使用。"
            },
            a.frameworkMessage = {
                AddsendcontactsTeamError: "请输入新分组名称",
                EditorFaceError: "纯文本模式无法使用表情!",
                EditorImgError: "纯文本模式无法插入图片!",
                EditorWordsError: "请先选择要加入链接的文字。",
                FetionAliasError: "对不起，设置邮箱别名后才能绑定飞信，请先设置邮箱别名",
                FetionAlreadyError: "您已绑定飞信",
                FetionBindConfirm: "系统将自动绑定飞信服务，是否继续?",
                FetionBindFeiError: "绑定失败，请重试",
                FetionLoading: "正在加载中......",
                FetionLoading2Confirm: "您已成功绑定飞信，现在可以直接用邮箱使用飞信.\r\n{0},继续登录飞信吗?",
                FetionLoadingConfirm: "您已成功绑定飞信，现在可以直接用邮箱使用飞信.继续登录飞信吗?",
                FetionLoginError: "您已经取消绑定飞信，请绑定飞信后登录",
                FetionNoOpenConfirm: "您的飞信服务还没有开通，现在是否注册？",
                FetionProofError: "获取凭证失败，请稍后再试",
                FetionTryLoading: "资源正在加载中，请稍后再试",
                FolderAddedError: "添加文件夹失败，请重试",
                FolderAlreadyError: "文件夹&nbsp;<b>{0}</b>&nbsp;已存在！",
                FolderCheckError: "已向服务器提交代收命令，请稍后检查您的代收文件夹。",
                FolderClearConfirm: "您确定要清空吗?",
                FolderCustomizeError: "自定义文件夹个数不能超过{0}个",
                FolderDelConfirm: "确定要删除该文件夹吗",
                FolderNameEmptyError: "文件夹名称不能为空",
                FolderNameOverError: "文件夹名字不能超过16个字母或者8个汉字！",
                FolderPopError: "POP代理正在执行中，请等待执行完毕",
                FolderSpecialError: "文件夹中不能包含特殊字符！",
                FolderWaiError: "正在为您代收邮件，请稍候......",
                GroupExists: "组名重复是否仍要添加？",
                LinksUnFunctionError: "该功能暂时无法使用",
                MailServerExistError: "对不起，文件夹名称已存在",
                MailServerLoginError: "对不起，登录超时，请重新登录。",
                MailboxAlreadyError: "您所选择的邮件已在当前文件夹中，请重新选择",
                MailboxBatchError: "您刚才有新邮件到达，请重新确认后再进行本项操作",
                MailboxDelConfirm: "系统提示：彻底删除此邮件后将无法取回，您确定要彻底删除吗？",
                MailboxDelsConfirm: "如果彻底删除，这{0}封邮件将无法找回，您确定吗？",
                MailboxExportMail: "仅支持导出200M以内的邮件",
                MailboxKeyError: "请输入关键字",
                MailboxMoveConfirm: "要转移的邮件包含已置顶邮件，转移后将不再置顶。您确定要转移吗？",
                MailboxSelError: "请选择邮件",
                MailboxSpamConfirm: "所选邮件将被移动到垃圾邮件夹。通过举报垃圾邮件，可以协助我们更有效的抵制垃圾邮件，感谢您！",
                MailboxTopError: "最多只能置顶10封邮件",
                MainConfigError: "配置文件未加载",
                MainSearchText: "邮件全文搜索...",
                MainWapSuccess: "139邮箱WAP访问地址已经发送到您的手机，请查收",
                Main_extDownConfirm: "尊敬的139用户，您好，请下载pushemail",
                ReadmailAttachSuccess: "附件：{0}保存成功，请到手机彩云我的文件柜查看。",
                ReadmailContentError: "请输入要回复的内容",
                ReadmailDelSuccess: "邮件已经删除!",
                ReadmailDiskError: "对不起，您尚未开通彩云服务。",
                ReadmailFilterError: "添加失败，您添加的过滤器数量已达到最大上限",
                ReadmailLoadError: "加载失败,请重试",
                ReadmailMailError: "请输入要回复的邮件地址",
                ReadmailReceiptConfirm: "对方要求发送已读回执,是否发送?<br />             <label for='chkShowReturnReceipt'>            <input id='chkShowReturnReceipt' onclick='window.chkShowReturnReceiptValue=this.checked' type='checkbox' />            以后都按本次操作            </label>",
                ReadmailReduktionSuccess: "操作成功，邮件已被还原到收件箱中。",
                ReadmailRejectionSuccess: "设置主题拒收成功",
                ReadmailReplySuccess: "回复成功",
                ReadmailRightMailError: "请输入正确的邮件地址:",
                ReadmailSelReceiveError: "请至少选择一个收件人",
                ReadmailTryAgainError: "服务器忙，请稍后重试",
                ReadmailWithdraw1Error: "撤回失败,邮件不存在",
                ReadmailWithdraw2Error: "撤回失败,此邮件不支持召回",
                ReadmailWithdraw3Error: "撤回失败,该邮件已超过撤回期限",
                SimpleframeSendConfirm: "确定不发送此明信片吗？",
                SysBusyTryAgainError: "系统繁忙，请稍后重试!",
                TablabelError: "Tab Init Error",
                TablabelExistError: "fTabLabelExist",
                TablabelNoTabError: "Tab 不存在",
                addContacting: "保存联系人中……",
                addFolderPageLoadError: "邮件地址格式有误，请重新填写！",
                addGroupTitle: "请输入新分组名称",
                addNotAllowed: "不支持添加自己为VIP联系人。",
                changeTagColorParamsError: "参数错误，改变标签颜色失败！",
                checkPswEnterPwdFormValid: "请输入密码！",
                checkPswNotOnlyNumFormValid: "密码不能是纯数字组合！",
                checkPswNotSeriesFormValid: "密码不能是字符串联，如aaaaaa、ABCDEF、FEDCBA！",
                checkPswNotSpecialCharFormValid: "密码中包含不合法字符，可支持字母、数字、及_~@#$^符号！",
                checkPswPwdLengthFormValid: "密码须由6位至16位字符或数字组成！",
                checkSelectSongsError: "请选择歌曲再播放！",
                delConfirmMsg: "确定取消“VIP联系人”？<br>其邮件将同时取消“VIP邮件”标记。",
                delContactEventConfirm: "确定要删除该联系人？",
                editGroupListSuc: "{0}已加为VIP联系人，其邮件已自动标记为“VIP邮件”。",
                error_contactOverlimit: "保存联系人失败，联系人数量已达上限。你可以<a href=\"javascript:(function(){top.FF.close();top.Links.show('addr');})();\">管理通讯录&gt;&gt;</a>",
                error_contactReachlimit: "保存联系人部分成功，联系人数量超出上限部分未保存，你可以<a href=\"javascript:(function(){top.FF.close();top.Links.show('addr');})();\">管理通讯录&gt;&gt;</a>",
                error_contactRepeat: "保存联系人失败，联系人已存在。",
                exportMailLongTime: "文件夹邮件较多，导出邮件可能需要较长的时间。",
                folderManageDelFolderlConfig: "确定要删除该文件夹吗？",
                folderManagePageClearFolderConfirm: "您确定要清空吗？",
                folderManageReNameTitle1: "重命名",
                folderManageReNameTitle2: "请输入文件夹名称",
                folderviewClearFolderFilled: "邮箱容量已满, 请清理过期邮件！",
                folderviewClearFolderFull: "邮箱容量将满,请及时清理！",
                folderviewDeleteFolderConfirm: "确定要删除该文件夹吗？",
                folderviewdelegateConfirm: "删除代收邮箱将同时删除此文件夹内所有的邮件，是否继续删除？",
                groupLimit: "分组联系人总数已达上限，不能添加。",
                markTagIsRepateError: '"{0}" 已经标记过  "{1}" 标签了',
                markTagNoSelectMailError: "请选择邮件",
                modContactError: "修改联系人失败，请稍后再试。",
                modContactSuccess: "修改联系人成功",
                modifySecretFolderPwdPageComparePwdFormValid: "两次密码输入不一致，请重新输入！",
                modifySecretFolderPwdPageEnterNewPwdFormValid: "请输入新密码！",
                modifySecretFolderPwdPageEnterOldPwdFormValid: "请输入旧密码！",
                modifySecretFolderPwdPageModifyError: "修改失败，请稍后再试",
                modifySecretFolderPwdPageOldPwdError: "旧密码错误！",
                modifySecretFolderPwdPageSetLockPwdSuccess: "安全锁密码修改成功！",
                opClear: "您已清空VIP联系人，其邮件同时取消“VIP邮件”标记。",
                opSuc: "操作成功。",
                operatingTagError: "操作失败，请稍后再试。",
                searchKeyWordIsEmptyError: "请输入要搜索的内容",
                searchPageFormatDateError: "日期格式有误！",
                secretFolderFolderNotFould: "找不到指定的文件夹",
                secretFolderPwdInvalid: "密码不正确或者密码不符合规则",
                secretFolderSetPageLockAreaFormValid: "请选择加锁范围！",
                secretFolderSetPageMaxFolderError: "设置安全锁的文件夹个数超出最大限制，最大只可以设置{0}个！",
                secretFolderSetPagePwdError: "密码错误！",
                secretFolderSetPagePwdFormValid: "两次密码输入不一致，请重新输入！",
                secretFolderSetPageSetError: "设置失败，请稍后再试！",
                secretFolderSetPageSetLockError: "设置失败，请稍后再试！",
                secretFolderSetPageSetLockSuccess: "安全锁设置成功！",
                showColorPickerParamsError: "参数错误，打开颜色盘失败！",
                sysBusy: "系统繁忙，操作失败。",
                sysError: "系统繁忙，请稍后再试!",
                tagManageDelFolderlConfig: "确定删除标签“{0}”吗？ 删除后相关邮件也将会移除此标签（邮件不会被删除）",
                tagManageReNameTitle1: "重命名",
                tagManageReNameTitle2: "请输入标签名称",
                tagMenuSelectError: "选择标签菜单或选择邮件出错，请稍后再试。",
                tagNameEmptyError: "标签名称不能为空！",
                tagNameOverError: "标签名字不能超过25个字母或汉字！",
                tagNameRepateError: "{0} 已经存在！",
                tagNameSpecialError: "标签名称中不能包含特殊字符！",
                tagOverflow: "很抱歉，每封邮件最多只能贴{0}张标签。",
                tearTagParamsError: "参数错误，撕掉标签操作失败！",
                userFolderPageBindDataClearEventConfirm: "您确定要清空吗？",
                vipContactsMax: "VIP联系人已达上限{0}个，不能添加。{1}",
                addVipSuc: "“{0}”已加为“VIP联系人”，其邮件已自动标记为“VIP邮件”",
                cancelVipText: "确定取消“VIP联系人”？<br/>其邮件将同时取消“VIP邮件”标记。",
                waitPannelAddFolder: "正在添加文件夹...",
                waitPannelAddTagName: "正在添加标签...",
                waitPannelClearFolder: "正在清空文件夹...",
                waitPannelDelete: "正在删除...",
                waitPannelLoad: "数据加载中...",
                waitPannelModifyPwd: "正在修改安全锁密码...",
                waitPannelReName: "正在重命名文件夹...",
                waitPannelReTagName: "正在重命名标签...",
                waitPannelSetLockSuccess: "正在设置安全锁...",
                warn_contactEmailToolong: "电子邮箱地址太长了",
                warn_contactIllegalEmail: "电子邮箱地址格式不正确，请重新输入!",
                warn_contactMobileError: "手机号码格式不正确，请重新输入",
                warn_contactMobileToolong: "手机号码太长了",
                warn_contactNameToolong: "联系人姓名太长了",
                warn_contactNamenotfound: "请输入联系人姓名",
                zw: ""
            }
        },
        createUserData: function () {
            a.UserData = {};
            try {
                return userdata = s.extend({}, top.$App.getConfig("UserData")), $App.on("userAttrsLoad", function (e) {
                    a.trueName = $User.getTrueName(), a.UserData && (a.UserData.userName = $User.getTrueName()), a.UserAttrs = $App.getConfig("UserAttrs")
                }), $App.on("userDataLoad", function (e) {
                    a.UserData = s.extend({}, e), a.uid = e.UID, a.sid = $App.getSid(), a.UserData.ssoSid = a.sid, a.UserData.ServerDateTime = new Date, a.UserData.userNumber = a.uid, a.trueName && (a.UserData.userName = a.trueName);
                    var t = [], i = a.UserData.uidList;
                    for (var o in i) i[o].name && t.push(i[o].name.replace(/@.+/, ""));
                    a.UserData.uidList = t, a.UserConfig = { skinPath: "skin_shibo" };
                    try {
                        var n = top.$User.getServiceItem();
                        "0016" == n ? e.vipInfo.MAIL_2000008 = "1" : "0017" == n ? e.vipInfo.MAIL_2000008 = "2" : e.vipInfo.MAIL_2000008 = "0", e.vipInfo.serviceitem = top.$User.getServiceItem()
                    } catch (r) {
                    }
                }), userdata
            } catch (e) {
            }
            return top.UserData && (userdata = top.UserData), a.UserData = userdata, a.UserData
        },
        createRequestByScript: function () {
            var e = {
                requestByScript: function (e, t) {
                    try {
                        return void top.M139.core.utilCreateScriptTag.apply(top.M139.core, arguments)
                    } catch (i) {
                    }
                    var a = top.getResourceHost() + top.getRootPath() + "/js/packs/" + e.src;
                    top.Utils.requestByScript(e.id, a, t, e.charset)
                }
            };
            return e
        },
        createLinksShow: function () {
            a.LinksConfig = a.LinkConfig, a.Links = {
                old: {
                    migrate: "migrate",
                    syncsetting: "syncsetting",
                    videomail: "videomail",
                    invite: "invite",
                    invitebymail: "invitebymail"
                },
                map: {
                    upgradeGuide: "mobile",
                    partner: "mobile",
                    uecLab: "uecLab",
                    shequ139: "shequ",
                    orderinfo: "mobile",
                    mobileGame: "mobileGame",
                    mnote: "note",
                    shareAddr: "addrshare",
                    shareAddrInput: "addrshareinput",
                    dingyuezhongxin: "googSubscription",
                    urlReplace: "urlReplace",
                    addrinputhome: "addrinputhome",
                    addroutput: "addroutput",
                    addr: "addrhome",
                    calendar_addAct: "calendar_addAct",
                    mobiSyncMail: "syncguide",
                    syncGuide: "syncguide",
                    addrImport: "addrImport",
                    homemail: "googSubscription",
                    addredit: "addrEdit",
                    billmanager: "billManager",
                    disk: "diskDev",
                    mailnotify: "notice",
                    tagsuser: "tags",
                    accountManage: "account",
                    antivirus: "spam_antivirusArea",
                    baseData: "account",
                    addMyCalendar: "addcalendar",
                    popagent: "popmail",
                    blacklist: "spam",
                    optionindex: "account",
                    password: "account_accountSafe",
                    autoreply: "preference_replySet",
                    autoforward: "preference_forwardSet",
                    mailnotifyTips: "preference_onlinetips",
                    filter: "type",
                    changenumber: "account_accountSafe",
                    folderall: "tags",
                    folderpop: "popmail",
                    inputAddr: "addrinputhome",
                    inputAddrI: "addrMcloudImport",
                    secretfolderpwd: "account_secSafe",
                    addrWhoAddMe: "addrWhoAddMe",
                    addrvipgroup: "addrvipgroup",
                    setPrivacy: "setPrivate",
                    notice: "notice",
                    calendar_search: "calendar_search",
                    calendar_square: "calendar_square",
                    calendar_calManager: "calendar_calManager"
                },
                show: function (e, t) {
                    var i = this.map;
                    if (t && /urlreplace/gi.test(t)) {
                        var a = window.LinkConfig[e],
                            s = "",
                            o = "",
                            n = {};
                        if (-1 == t.indexOf("http://") && -1 == t.indexOf("https://")) {
                            o = t.split("=")[0] + "=";
                            t = t.replace(o, "");
                            s = getDomain(e) + t;
                        }
                        t = s,
                        n.group = a.group,
                        n.title = a.title,
                        n.url = t,
                        e = "urlReplace",
                        window.LinkConfig[e] = n, t = null
                    }
                    if (i[e]) return void $App.show(i[e], t);
                    if (t && t.indexOf("&") > -1) {
                        t = "?from=jumpto" + t;
                        var r = $Url.getQueryObj(t);
                        $App.jumpTo(e, r)
                    } else $App.jumpTo(e)
                },
                showUrl: function (e, i) {
                    if (t.isEmpty(e) || (e = s.trim(e)), t.isEmpty(i) || (i = s.trim(i)), !t.isEmpty(e) && !t.isEmpty(i)) return $App.showUrl(e, i);
                    var a = { partid: top.$User.getPartid(), source: "jumpto", mid: top.$App.getCurrMailMid() };
                    $App.jumpTo("15", a)
                }
            }
        },
        createMailTool: function () {
            $App.on("userAttrsLoad", function () {
                a.FM = { folderList: $App.getConfig("FolderList") }
            }), a.MB = {
                show: function (e) {
                    $App.showMailbox(e);
                },
                showBillManager: function () {
                    $App.showMailbox(8)
                },
                subscribeTab: function (e, t) {
                    return e && s.inArray(e, ["myMag", "myCollect", "googSubscription"]) >= 0 ? void $App.show(e) : void $App.showMailbox(9, t)
                }
            }, a.CM = {
                show: function (e) {
                    $App.show("compose", null, { inputData: e });
                },
                sendMail: function (e, a) {
                    function s(t) {
                        e.onsuccess && e.onsuccess({ mid: t })
                    }

                    function o(t, i, a) {
                        e.onerror && e.onerror({ errorCode: t, errorMsg: i, code: a })
                    }

                    var n = {
                        to: e.to ? e.to.join(";") : "",
                        cc: e.cc ? e.cc.join(";") : "",
                        bcc: e.bcc ? e.bcc.join(";") : "",
                        showOneRcpt: e.singleSend || e.showOneRcpt ? 1 : 0,
                        isHtml: e.isHtml ? 1 : 0,
                        subject: e.subject,
                        content: e.content,
                        priority: e.priority || 3,
                        requestReadReceipt: e.sendReceipt ? 1 : 0,
                        saveSentCopy: e.saveToSendBox === !1 ? 0 : 1,
                        inlineResources: 0,
                        scheduleDate: 0,
                        normalizeRfc822: 0
                    }, r = {
                        compose: "103000000",
                        sms: "105000000",
                        contact: "109000000",
                        greetingCard: "102000000",
                        postCard: "101000000"
                    };
                    if (void 0 == a && (a = "compose"), e.timeset && t.isDate(e.timeset) && (n.scheduleDate = parseInt(e.timeset.getTime() / 1e3)), function (e) {
                        function i() {
                            return $User.getDefaultSender()
                    }

                        function a() {
                            return $User.getDefaultSender()
                    }

                        function s() {
                            return $User.getAliasName()
                    }

                        function o() {
                            return $User.getDefaultSender()
                    }

                        function r() {
                            return $User.getUid() + "@" + mailDomain
                    }

                        function l() {
                            return $User.getTrueName()
                    }

                        if (e || (e = {}), t.isString(e)) n.account = e; else if (t.isObject(e)) {
                            e.id = e.id || "default";
                            var c = { "default": i(), login: a(), alias: s(), number: r(), fetion: o() };
                            top.$Email.isEmail(e.id) || (e.id = c[e.id]), e.name = null == e.name ? l() : e.name, n.account = '"{0}"<{1}>'.format(e.name, e.id)
                    }
                    }(e.account), !i.Text.Email.isEmailAddr(n.account), e.headers) {
                        n.headers = {}, e.headers.subjectColor && (n.headers["X-RM-FontColor"] = e.headers.subjectColor);
                        var l = e.headers.smsNotify;
                        void 0 !== l && (n.headers["X-RM-SmsNotify"] = l)
                    }
                    var c = { attrs: n, action: "deliver", returnInfo: 1 };
                    e.loadingMsg && WaitPannel.show(e.loadingMsg);
                    var d = r[a];
                    d || (d = a), top.M139.RichMail.API.call("mbox:compose&comefrom=5&categroyId=" + d, c, function (t) {
                        WaitPannel.hide();
                        var i = t.responseData;
                        return e.callback ? void e.callback(i) : void ("S_OK" == i.code ? s(i["var"]) : "FA_INVALID_DATE" == i.code ? o("DateError", "定时发送的时间不能比当前的时间早", i.code) : o("Unknown", "发送失败", i.code))
                    })
                }
            }
        },
        createModuleManager: function () {
            return a.MM = {
                show: function (e, t) {
                }, activeModule: function (e) {
                    top.$App.closeTab(e)
                }, setTitle: function (e) {
                    top.$App.setTitle(e)
                }, close: function (e, t) {
                    try {
                        return void top.$App.closeTab(e)
                    } catch (i) {
                    }
                    var a = t || {};
                    "back" == a.exec ? top.MM.goBack() : "closeAll" == a.exec ? top.MM.closeAll() : top.MM.close(e)
                }
            }, a.MM
        },
        createWaitPanel: function () {
            return a.WaitPannel = {
                show: function (e, t) {
                    try {
                        return void top.M139.UI.TipMessage.show(e, t)
                    } catch (i) {
                    }
                    if (top.WaitPannel) {
                        if (t && t.delay) {
                            top.FF.alert(e);
                            return void setTimeout(function () {
                                top.FF.close()
                            }, t.delay);
                        }
                        top.WaitPannel.show(e)
                    }
                },
                hide: function () {
                    try {
                        return void top.M139.UI.TipMessage.hide()
                    } catch (e) {
                    }
                    top.WaitPannel && top.WaitPannel.hide()
                }
            }, a.WaitPannel
        },
        createValidate: function () {
            a.Validate = {
                config: {
                    mobile: { message: "手机格式不正确，请输入3-20位数字", regex: /^[\(\)\-\d]{3,20}$/ },
                    email: {
                        message: "邮箱格式不正确。应如zhangsan@139.com，长度6-90位",
                        regex: new RegExp("^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$", "i")
                    },
                    phone: { message: "电话号码格式不正确，请输入3-30位数字、-", regex: /^[\-\d]{3,30}$/ },
                    fax: { message: "传真号码话格式不正确，请输入3-30位数字、-", regex: /^[\-\d]{3,30}$/ },
                    zipcode: { message: "邮编格式不正确，请输入3-10位字母、数字、-或空格", regex: /^[\ \-\w]{3,10}$/ },
                    otherim: { message: "飞信号格式不正确，请输入6-10位数字", regex: /^\d{6,10}$/ },
                    qq: { message: "QQ格式不正确，请输入5-11位数字", regex: /^\d{5,11}$/ }
                }, test: function (e, t) {
                    var i = Validate.config[e];
                    if (!i) throw "找不到的正则:" + e;
                    return i.regex.test(t) ? !0 : (this.error = i.message, !1)
                }, testBirthday: function (e) {
                    var t = !1;
                    if (!e) return !1;
                    var i = e.match(/(\d{4})\-(\d{2})\-(\d{2})/);
                    if (i) try {
                        var a = [Number(i[1]), Number(i[2]) - 1, Number(i[3])], s = new Date;
                        if (a[0] > 0 && a[0] <= s.getFullYear() && a[1] > -1 && a[1] < 12 && a[2] > 0 && a[2] < 32) {
                            var o = new Date(a[0], a[1], a[2]);
                            s > o && (t = o.getFullYear() == a[0] && o.getMonth() == a[1] && o.getDate() == a[2])
                        }
                    } catch (n) {
                    }
                    return t
                }
            }
        }
    }));
    e.extend(M2012.MatrixVM, {
        tip: function (e, t) {
        }
    });
    var o = {
        alert: function (e, t) {
            try {
                return this.current = top.$Msg.alert(e, { onclose: t, isHtml: !0, icon: "warn" }), this.current
            } catch (i) {
            }
            top.FF && top.FF.alert && top.FF.alert(e)
        },
        prompt: function (e, t, i, a, s) {
            return this.current = $Msg.prompt(t, a, {
                dialogTitle: e,
                defaultValue: i,
                maxLength: s,
                isHtml: !0
            }), this.current
        },
        setHeight: function (e) {
            $Msg.getCurrent().setHeight(e), $Msg.getCurrent().resetHeight()
        },
        setWidth: function (e) {
            $Msg.getCurrent().setWidth(e)
        },
        close: function () {
            $Msg.getCurrent().close()
        },
        confirm: function (e, t, i, a) {
            var s = { icon: "warn", isHtml: !0 };
            return a && (s.buttons = [" 是 ", " 否 "]), this.current = $Msg.confirm(e, t, i, s), this.current
        },
        show: function (e, t, i, a, s, o, n) {
            this.current = $Msg.showHTML(e, { dialogTitle: t, width: i, height: a, onclick: o });
            return this.current;
        },
        open: function (e, t, i, a, s, o, n, r) {
            return this.current = $Msg.open({
                url: t,
                dialogTitle: e,
                width: i,
                height: a,
                hideTitleBar: r
            }), this.current
        },
        minimize: function () {
            $Msg.getCurrent().minisize()
        }
    }
}(jQuery, _, M139),


//M2012.Contacts.Business.Constant
function (e, t, i, a) {
    i.namespace("M2012.Contacts.Business.Constant", {
        MAX_VIP: 20,
        MAX_CONTACT_LV1: 3e3,
        MAX_CONTACT_LV2: 6e3,
        MSG_CONFIG: {
            SUCCESS: { delay: 1500 },
            ERROR: { delay: 1500, className: "msgRed" },
            WARNING: { delay: 1500, className: "msgYellow" }
        },
        FROM_TYPE: { MAIL: 16, MOBILE: 32, FAX: 64, NONE: 0, SMS: 1, CARD: 2, POST: 3, EMAIL: 4, MMS: 5, FILE: 6 },
        COLUMN: ["SerialId", "UserType", "SourceType", "AddrFirstName", "AddrSecondName", "AddrNickName", "UserSex", "CountryCode", "ProvCode", "AreaCode", "CityCode", "StreetCode", "ZipCode", "HomeAddress", "MobilePhoneType", "BirDay", "MobilePhone", "BusinessMobile", "BusinessPhone", "FamilyPhone", "BusinessFax", "FamilyFax", "OtherPhone", "OtherMobilePhone", "OtherFax", "FamilyEmail", "BusinessEmail", "OtherEmail", "PersonalWeb", "CompanyWeb", "OtherWeb", "OICQ", "MSN", "OtherIm", "CPCountryCode", "CPProvCode", "CPAreaCode", "CPCityCode", "CPStreetCode", "CPZipCode", "CPAddress", "CPName", "CPDepartName", "Memo", "StartCode", "BloodCode", "StateCode", "ImageUrl", "SchoolName", "BokeUrl", "UserJob", "GroupId", "AddGroupId", "AddGroupName", "AddNewGroup", "OverWrite", "FavoWord"]
    })
}(jQuery, _, M139, window._top || window.top),

//M2012.Contacts.Business.Msg
function (e, t, i, a) {
    i.namespace("M2012.Contacts.Business.Msg", {
        CODE: {
            9: "组名已存在",
            21: "保存失败，联系人数量已达上限{0}。你可以<br /><a href=\"javascript:(function(){ top.$App.show('addr'); top.FF.close(); })();\">管理通讯录&gt;&gt;</a>",
            22: "联系人分组已达上限",
            23: "保存失败，分组联系人总数已达上限。",
            28: "通讯录已存在邮箱/手机相同的联系人",
            224: "手机号码已存在",
            225: "商务手机已存在",
            226: "电子邮箱已存在",
            227: "商务邮箱已存在",
            2072: "暂时无法处理该请求，请稍后再试"
        },
        TIP: {
            SAVEING: "正在保存...",
            CANCEL_SUCCESS: "取消成功",
            GROUP_NOT_EMPTY: "组名不能为空",
            GROUP_IS_EXIST: "组名已存在",
            DELETE_SUCCESS: "删除成功",
            ADD_NOT_THIS: "不支持添加自己为VIP联系人。",
            OTHER_ERROR: "系统繁忙，请稍后再试",
            OPERATE_SUCCESS: "操作成功。",
            GET_SUCCESS: "获取成功",
            DEL_CONFIRM_CONTACTS: "确定要删除该联系人？",
            CLEAR_VIP: "您已清空VIP联系人，其邮件同时取消“VIP邮件”标记。",
            SELECT_ADD_VIP: "所选联系人已加为VIP联系人，其邮件已自动标记为“VIP邮件”。",
            ADD_VIP_MAX: "VIP联系人已经达到上限！",
            ADD_SUCCESS_VIP: "已加为“VIP联系人”，其邮件已自动标记为“VIP邮件”",
            CANCEL_VIP_CONFIRM: "确定取消“VIP联系人”？<br/>其邮件将同时取消“VIP邮件”标记。",
            VIP_TO_MAX: 'VIP联系人已经达到上限！<a style="text-decoration:none;" href="javascript:top.FF.close();top.Links.show(\'addrvipgroup\');" ><br/>管理VIP联系人</span></a>'
        }
    })
}(jQuery, _, M139, window._top || window.top),

//M2012.MatrixVM扩展
function (e, t, i) {
    var a = {},
        s = M2012.Contacts.Business.Msg,
        o = M2012.Contacts.Business.Constant,
        n = new i.Logger;
    a.init = function () {
        n.info("top.Contacts.init", !0)
    },
    a.getMaxContactLimit = function () {
        return $User.getMaxContactLimit()
    },
    a.getModel = function () {
        return M2012.Contacts.getModel()
    },
    a.getData = function () {
        var e = a.getModel();
        return e.get("data")
    },
    a.getMsgByCode = function (e) {
        return e && e.code && (e.msg = e.msg || "", e.msg = s.CODE[e.code] || e.msg), e.ResultMsg = e.msg || "", e.ResultCode = e.code || "", e
    },
    a.runWaiting = function () {
        n.info("top.Contacts.runWaiting", !0)
    },
    a.ready = function () {
        n.info("top.Contacts.ready", !0)
    },
    a.createAddressPage = function () {
        n.info("top.Contacts.createAddressPage", !0)
    },
    a.ajax = function () {
        n.info("top.Contacts.ajax", !0)
    },
    a.scriptReady = function () {
        n.info("top.Contacts.scriptReady", !0)
    },
    a.change = function () {
        n.info("top.Contacts.change", !0)
    },
    a.onchange = function () {
        n.info("top.Contacts.onchange", !0)
    },
    a.updateCache = function () {
        n.info("top.Contacts.updateCache", !0)
    },
    a.addSinglVipContact = function (e) {
        if (!e.serialId) return !1;
        if (a.IsPersonalEmail(e.serialId)) return top.M139.UI.TipMessage.show(s.TIP.ADD_NOT_THIS, o.MSG_CONFIG.WARNING), !1;
        var t = a.getData().vip, i = top.Contacts.getModel().getVIPContacts().length;
        if (i >= o.MAX_VIP) return top.$Msg.alert(s.TIP.VIP_TO_MAX.format(o.MAX_VIP), { isHtml: !0 }), top.BH("addr_vipGroup_exceed"), !1;
        var n = { data: { groupId: t.groupId, serialId: e.serialId, groupType: 1 } };
        n.success = function (t) {
            top.M139.UI.TipMessage.hide(), top.M139.UI.TipMessage.show(s.TIP.ADD_SUCCESS_VIP, o.MSG_CONFIG.SUCCESS), e.success && e.success(t), top.BH("addvipsuccess")
        }, n.fail = function (e) {
            top.M139.UI.TipMessage.hide(), e && "258" == e.code ? top.$Msg.alert(s.TIP.VIP_TO_MAX.format(o.MAX_VIP), { isHtml: !0 }) : top.$Msg.alert(a.getMsgByCode(e), { isHtml: !0 })
        }, top.M139.UI.TipMessage.show(s.TIP.SAVEING), M2012.Contacts.API.addGroupList(n)
    },
    a.delSinglVipContact = function (e) {
        top.$Msg.confirm(s.TIP.CANCEL_VIP_CONFIRM, function () {
            a.delSinglVipContact2(e)
        }, { isHtml: !0 })
    },
    a.delSinglVipContact2 = function (e) {
        if (!e.serialId) return !1;
        if (!a.IsExitVipGroup()) return !1;
        var t = a.getData().vip, i = { data: { groupId: t.groupId, serialId: e.serialId } };
        i.success = function (t) {
            top.M139.UI.TipMessage.hide(), top.M139.UI.TipMessage.show(s.TIP.CANCEL_SUCCESS, o.MSG_CONFIG.SUCCESS), e.success && e.success(a.getMsgByCode(t))
        }, i.error = function (e) {
        }, top.M139.UI.TipMessage.show(s.TIP.SAVEING), M2012.Contacts.API.delGroupList(i)
    },
    a.addVIPContact = function (e) {
        var i = a.getModel(), n = a.getData().vip.contacts, r = [];
        t.isArray(n) && (r = n.concat());
        for (var l = 0; l < r.length; l++) {
            var c = i.getContactsById(r[l]);
            c && c.getFirstEmail() ? r[l] = {
                name: c.name,
                serialId: c.SerialId,
                addr: c.getFirstEmail(),
                value: i.getSendText(c.name, c.getFirstEmail())
            } : (r.splice(l, 1), l--)
        }
        var d = top.M2012.UI.Dialog.AddressBook.create({
            receiverText: "VIP联系人",
            showLastAndCloseContacts: !1,
            showVIPGroup: !1,
            showSelfAddr: !1,
            getDetail: !0,
            filter: "email",
            maxCount: o.MAX_VIP,
            items: r,
            isAddVip: !0
        });
        d.on("select", function (i) {
            var s = t.pluck(i.value, "serialId");
            a.submitVipContact(s, function () {
                e && e(s)
            })
        }), d.on("additemmax", function () {
            $Msg.alert(s.TIP.ADD_VIP_MAX.format(o.MAX_VIP), { icon: "warn" }), top.BH("addr_vipGroup_exceed")
        })
    },
    a.submitVipContact = function (e, i, o) {
        var n = (a.getModel(), a.getData().vip), r = n.groupId;
        if (!(e.length <= 0 && n.contacts.length <= 0)) {
            o && "add" == o.type && (e = t.union(e, n.contacts));
            var l = { data: { groupType: 1, groupId: r, serialId: e.join(",") } };
            l.success = function (t) {
                if (l && l.notAlert) return void i();
                var a = [s.TIP.OPERATE_SUCCESS, "<br/>"];
                0 == e.length ? a.push(s.TIP.CLEAR_VIP) : a.push(s.TIP.SELECT_ADD_VIP), $Msg.alert(a.join("\n"), {
                    isHtml: !0,
                    onClose: function () {
                        i && i()
                    }
                })
            }, l.error = function (e) {
                $Msg.alert(a.getMsgByCode(e), { isHtml: !0 })
            }, M2012.Contacts.API.editGroupList(l)
        }
    },
    a.ConvertFrom = function (e) {
        var t = o.FROM_TYPE, i = 15 & e, a = 240 & e, s = "E", n = i == t.MMS ? "2" : "1";
        switch (a) {
            case t.FAX:
                s = "F";
                break;
            case t.MAIL:
                s = "E";
                break;
            case t.MOBILE:
                s = "M"
        }
        return { from: i, type: a, key: s, last: n }
    },
    a.isAutoSaveContact = function () {
        var e = top.$App.getUserCustomInfo(9);
        return !e || "1" === e
    },
    a.getContactsByMobile = function (e) {
        var t = a.getModel();
        return t.getContactsByMobile(e)
    },
    a.getSingleContactsByMobile = function (e) {
        var t = a.getContactsByMobile(e) || [];
        return t[0]
    },
    a.getNameByAddr = function (e, t) {
        arguments.callee.exists = !1;
        var i = a.getModel(), s = i.getAddrNameByEmail(e);
        return s = top.M139.Text.Html.encode(s), s == top.M139.Text.Email.getAccount(e) ? top.M139.Text.Email.getEmail(e) : s
    },
    a.getGroupByName = function (e) {
        var t = a.getModel();
        return t.getGroupByName(e)
    },
    a.getGroupById = function (e) {
        var t = a.getModel();
        return t.getGroupById(e)
    },
    a.isExistsGroupName = function (e) {
        return !!a.getGroupByName(e)
    },
    a.validateAddContacts = function (e) {
        var t = M2012.Contacts.API.validateAddContacts(e);
        return t.error <= 0
    },
    a.getContactsByGroupId = function (e, t) {
        var i = a.getModel();
        return t ? i.getGroupMembersId(e) : i.getGroupMembers(e)
    },
    a.getContactsById = function (e) {
        var t = a.getModel();
        return t.getContactsById(e)
    },
    a.getContactsGroupById = function (e) {
        var t = a.getModel();
        return t.getContactsGroupById(e)
    },
    a.getVipInfo = function () {
        var e = a.getData(), t = a.getModel(), i = {
            hasContact: !1,
            isExist: !1,
            vipContacts: [],
            vipEmails: [],
            vipGroupId: "",
            vipSerialIds: "",
            vipn: "0"
        };
        if (e) {
            i.hasContact = e.vip.contacts.length > 0, i.isExist = e.vip.groupId.length > 0, i.vipGroupId = e.vip.groupId || "", i.vipSerialIds = e.vip.contacts.join(","), i.vipn = e.vip.contacts.length;
            for (var s = 0; s < i.vipn; s++) {
                var o = t.getContactsById(e.vip.contacts[s]);
                o && (i.vipContacts.push(o), i.vipEmails = i.vipEmails.concat(o.emails))
            }
        }
        return i
    },
    a.setVipInfo = function () {
    },
    a.getContactsByEmail = function (e) {
        var t = a.getModel();
        return t.getContactsByEmail(e)
    },
    a.getAddrNameByEmail = function (e) {
        var t = a.getModel();
        return t.getAddrNameByEmail(e)
    },
    a.getChinaMobileByEmail = function (e) {
        var t = a.getModel();
        return t.getChinaMobileByEmail(e)
    },
    a.getSingleContactsByEmail = function (e) {
        var t = a.getContactsByEmail(e) || [];
        return t[0]
    },
    a.isExistMobile = function (e) {
        var t = a.getModel();
        return t.isExistMobile(e)
    },
    a.isExistEmail = function (e) {
        var t = a.getModel();
        return t.isExistEmail(e)
    },
    a.getContactsCount = function () {
        var e = a.getData();
        return e.TotalRecord
    },
    a.IsVipUser = function (e) {
        var t = a.getData(), i = t.vip.contacts;
        return i.join(",").indexOf(e) > -1
    },
    a.FilterVip = function (e) {
        var t = [];
        e = e || [];
        for (var i = 0; i < e.length; i++) a.IsVipUser(e[i]) && t.push(e[i]);
        return t
    },
    a.IsExitVipGroup = function () {
        var e = a.getData().vip;
        return e.groupId.length > 0
    },
    a.IsPersonalEmail = function (e) {
        for (var t = a.getContactsById(e) || {}, i = t.emails || [], s = $User.getAccountListArray().join(","), o = 0; o < i.length; o++) if (s.indexOf(i[o]) > -1) return !0;
        return !1
    },
    a.addContacts = function (e, t) {
        for (var i = e.sort ? e : [e], s = 0; s < i.length; s++) {
            var o = M2012.Contacts.API.validateAddContacts(i[s]);
            if (o.error.length > 0) return void (t && t({ success: !1, errorIndex: s, msg: o.error }))
        }
        a.addContactsMuti(e, t)
    },
    a.QueryUserInfo = function (e) {
        var t = {
            success: function (t) {
                t.info = new M2012.Contacts.ContactsInfo(t.data), e && e(t)
            }, error: function (t) {
                e && e(a.getMsgByCode(t))
            }
        };
        M2012.Contacts.API.queryUserInfo(t)
    },
    a.addContactsMobile = function (e, t, i) {
        var s = { data: { serialId: e, mobile: t } };
        s.success = function (e) {
            i && i(a.getMsgByCode(e))
        }, s.error = function (e) {
            i && i(a.getMsgByCode(e))
        }, M2012.Contacts.API.addContactsField(s)
    },
    a.ModContactsField = function (e, t, i, o, n) {
        var r = a.getContactsById(e);
        r = $.extend(r, t);
        var l = {
            data: {
                serialId: e,
                addrFirstName: r.AddrFirstName,
                familyEmail: r.FamilyEmail,
                mobilePhone: r.MobilePhone,
                businessEmail: r.BusinessEmail,
                businessMobile: r.BusinessMobile
            }
        };
        l.success = function (e) {
            e.resultCode = e.code, e.msg = n || s.TIP.OPERATE_SUCCESS, e.ContactInfo = r, e.SerialId = r.SerialId, e.data = r, o && o(a.getMsgByCode(e))
        }, l.error = function (e) {
            o && o(a.getMsgByCode(e))
        }, M2012.Contacts.API.modContactsField(l)
    }, a.addLastestContacts = function (e, t) {
        var i = { type: e, list: t };
        M2012.Contacts.API.addSendContacts(i, function (e) {
        })
    }, a.addGroup = function (e, t) {
        M2012.Contacts.API.addGroup(e.trim(), function (e) {
            t && t(e)
        })
    }, a.deleteGroup = function (e, t, i) {
        var o = { data: { groupId: e, isDeleteContacts: i } };
        o.success = function (e) {
            e.msg = s.TIP.DELETE_SUCCESS, t && t(e)
        }, o.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.delGroup(o)
    },
    a.deleteContacts = function (e, i) {
        e = t.isArray(e) ? e.join(",") : e, M2012.Contacts.API.deleteContacts({ serialId: e }, i)
    }, a.deleteContactsFromGroup = function (e, t, i) {
        var o = { data: { groupId: e, serialId: t } };
        o.success = function (e) {
            e.msg = s.TIP.DELETE_SUCCESS, i && i(a.getMsgByCode(e))
        }, o.error = function (e) {
            i && i(a.getMsgByCode(e))
        }, M2012.Contacts.API.delGroupList(o)
    }, a.copyContactsToGroup = function (e, t, i) {
        var o = { data: { groupId: e, serialId: t } };
        o.success = function (e) {
            e.msg = s.TIP.OPERATE_SUCCESS, i && i(a.getMsgByCode(e))
        }, o.error = function (e) {
            i && i(a.getMsgByCode(e))
        }, M2012.Contacts.API.addGroupList(o)
    },
    a.moveContactsToGroup = function (e, t, i, o) {
        var n = { data: { serialId: e, fromGroupId: t, toGroupId: i } };
        n.success = function (e) {
            e.msg = s.TIP.OPERATE_SUCCESS, o && o(a.getMsgByCode(e))
        }, n.error = function (e) {
            o && o(a.getMsgByCode(e))
        }, M2012.Contacts.API.moveGroupList(n)
    }, a.getContactsInfoById = function (e, t) {
        M2012.Contacts.API.getContactsDetail(e, t)
    },
    a.addContactsMuti = function (e, t) {
        var i = { data: { contacts: e } };
        i.success = function (i) {
            i.msg = s.TIP.GET_SUCCESS, t && t(a.getMsgByCode(i)), top.postJiFen && top.postJiFen(72, e.length)
        }, i.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.addContactsMuti(i)
    }, a.addContactDetails = function (e, t) {
        for (var i = {}, n = o.COLUMN, r = 0; r < n.length; r++) e[n[r]] && (i[n[r]] = e[n[r]]);
        var l = e.ImagePath || e.ImageUrl || "";
        if (l = /nopic/.test(l) ? "" : l, l.indexOf("?") > -1 && (l = l.substring(0, l.indexOf("?"))), l.indexOf("http://") > -1 && (l = l.substring(l.indexOf("Upload") - 1)), e.ImageUrl = l, e.ImagePath = l, !e.validated) {
            var c = e.validateDetails();
            if (!c.success) return void (t && t(c.msg, c.errorProperty))
        }
        var d = { data: { contacts: i } };
        d.success = function (i) {
            var o = i.data[0] || {};
            i.addGroupId = o.GroupId, i.serialId = o.SerialId, i.newGroupId = o.GroupId, i.newGroupName = e.AddGroupName, i.msg = s.TIP.OPERATE_SUCCESS, t && t(a.getMsgByCode(i))
        }, d.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.appendContacts(d)
    }, a.editContactDetails = function (e, t) {
        for (var i = {}, n = o.COLUMN, r = 0; r < n.length; r++) e[n[r]] && (i[n[r]] = e[n[r]]);
        var l = e.ImagePath || e.ImageUrl || "";
        if (l = /nopic/.test(l) ? "" : l, l.indexOf("?") > -1 && (l = l.substring(0, l.indexOf("?"))), l.indexOf("http://") > -1 && (l = l.substring(l.indexOf("Upload") - 1)), e.ImageUrl = l, e.ImagePath = l, !e.validated) {
            var c = e.validateDetails();
            if (!c.success) return void (t && t(c.msg, c.errorProperty))
        }
        var d = { data: { contacts: i } };
        d.success = function (i) {
            var o = i.data[0] || {};
            i.addGroupId = o.GroupId, i.serialId = o.SerialId, i.newGroupId = o.GroupId, i.newGroupName = e.AddGroupName, i.msg = s.TIP.OPERATE_SUCCESS, t && t(a.getMsgByCode(i))
        }, d.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.modContacts(d)
    },
    a.execContactDetails = function (e, t, i) {
        i ? a.addContactDetails(e, t) : a.editContactDetails(e, t)
    }, a.EmptyLastContactsInfo = function (e, t) {
        var i = { data: { type: e.type } };
        i.success = function (e) {
            e.msg = s.TIP.DELETE_SUCCESS, t && t(a.getMsgByCode(e))
        }, i.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.delLCContacts(i)
    }, a.getUpdatedContactsNumData = function (e) {
        var t = { data: {} };
        t.success = function (t) {
            e && e(a.getMsgByCode(t))
        }, t.error = function (t) {
            e && e(a.getMsgByCode(t))
        }, M2012.Contacts.API.getUpdatedContactsNum(t)
    },
    a.execIsAllContactsSameGroup = function (e, t) {
        var i = { data: { serialId: e.SerialId } };
        i.success = function (e) {
            t && t(a.getMsgByCode(e))
        }, i.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.queryContactsInGroup(i)
    }, a.AddGroupList = function (e, t) {
        var i = { data: { groupId: e.groupId || "", serialId: e.serialId || "", groupType: e.groupType || "" } };
        i.success = function (e) {
            t && t(a.getMsgByCode(e))
        }, i.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.addGroupList(i)
    }, a.editGroupList = function (e, t) {
        var i = {
            data: {
                groupId: e.groupId || "",
                groupName: e.groupName || "",
                serialId: e.serialId || "",
                groupType: e.groupType || ""
            }
        };
        i.success = function (e) {
            t && t(a.getMsgByCode(e))
        }, i.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.editGroupList(i)
    }, a.DelGroupList = function (e, t) {
        var i = { data: { groupId: e.groupId, serialId: e.serialId } };
        i.success = function (e) {
            t && t(a.getMsgByCode(e))
        }, i.error = function (e) {
            t && t(a.getMsgByCode(e))
        }, M2012.Contacts.API.delGroupList(i)
    },
    a.modDealStatus = function (e, t) {
        M2012.Contacts.API.modDealStatus(e, t)
    }, a.getFinishImportList = function (e, t, i) {
        var s = { data: { importId: e } };
        s.success = function (e) {
            t && t(a.getMsgByCode(e))
        }, s.error = function (e) {
            i && i(a.getMsgByCode(e))
        }, M2012.Contacts.API.getFinshImportList(s)
    }, a.addLastestContactsExt = function (e) {
        if (e.AddrTitle && (e.AddrTitle = unescape(e.AddrTitle)), e && e.ComeFrom && e.AddrContent && void 0 !== e.AddrTitle) {
            if (e.AddrType || (e.AddrType = e.ComeFrom.substring(0, 1)), "E" != e.AddrType && "M" != e.AddrType && "F" != e.AddrType) throw "参数传递错误!";
            "M" == e.AddrType && (e.AddrTitle = e.AddrTitle.substring(0, 20));
            var t = [], i = {
                M: function (e) {
                    return a.getContactsByMobile(e)[0]
                }, E: function (e) {
                    return a.getContactsByEmail(e)[0]
                }
            };
            "E" == e.AddrType ? $(Utils.parseEmail(e.AddrContent)).each(function () {
                var a = i[e.AddrType](this.addr);
                a ? (e.SerialId = a.SerialId, e.AddrName = a.name) : (e.SerialId = 0, e.AddrName = this.name);
                var s = {};
                for (var o in e) try {
                    s[o] = encodeXML(e[o])
                } catch (n) {
                }
                s.AddrContent = this.addr, t.push(s)
            }) : $(e.AddrContent.split(",")).each(function () {
                if (this.toString()) {
                    var a = i[e.AddrType](this.toString());
                    a ? (e.SerialId = a.SerialId, e.AddrName = a.name) : (e.SerialId = 0, e.AddrName = this.toString());
                    var s = {};
                    for (var o in e) try {
                        s[o] = encodeXML(e[o])
                    } catch (n) {
                    }
                    s.AddrContent = this.toString(), t.push(s)
                }
            });
            for (var s = { data: [] }, o = 0; o < t.length; o++) s.data.push({
                serialId: t[o].SerialId,
                addrName: t[o].AddrName,
                addrType: t[o].AddrType,
                addrId: "0",
                addrTitle: t[o].AddrTitle,
                comeFrom: t[o].ComeFrom,
                addrContent: t[o].AddrContent
            });
            s.success = function (e) {
            }, s.error = function (e) {
            }, M2012.Contacts.API.addLastContacts(s)
        }
    },
    a.createAddContactsPage = function (e) {
        if ("email" == e.type) {
            var t = e.emails;
            "string" == typeof t && (t = Utils.parseEmail(t)), e.container.emails = t;
            for (var i = 0; i < t.length; i++) a.isExistEmail(t[i].addr) && (t.splice(i, 1), i--);
            if (0 == t.length) return;
            var s = top.wmsvrPath2 + "/addsendcontacts.htm#type=email", o = "<iframe id='saveStrangerFrame' onload='this.contentWindow.$(\"input:text:eq(0)\").focus()' frameBorder='0' style='width:607px;display:none' scroll='no' src='{0}'></iframe>".format(s);
            $(e.container).html(o)
        } else if ("mobile" == e.type) {
            "string" == typeof e.mobiles && (e.mobiles = e.mobiles.split(","));
            for (var n = e.container.mobiles = e.mobiles, i = 0; i < n.length; i++) a.isExistMobile(n[i]) && (n.splice(i, 1), i--);
            if (0 == n.length) return;
            var s = top.wmsvrPath2 + "/addsendcontacts.htm#type=mobile", o = "<iframe onload='this.contentWindow.$(\"input:text:eq(0)\").focus()' frameBorder='0' style='width:607px;display:none' scroll='no' src='{0}'></iframe>".format(s);
            $(e.container).html(o)
        }
    }, a.DelSavedContact = function (e, t, i) {
        $Msg.confirm(s.DEL_CONFIRM_CONTACTS, function () {
            var i = -1;
            t.each(function (t) {
                return this.innerHTML.indexOf("del(" + e) > -1 ? (i = t, !1) : !0
            }), a.deleteContacts(e.toString(), function () {
                var e = $(t[i]).next()[0];
                e && "DIV" == e.tagName && $(t[i]).next().remove(), $(t[i]).remove()
            })
        })
    }, a.ModSavedContact = function () {
    },
    a.QuickAddGroup = function () {
    }, a.getFinishImportResult = function (e, t, i) {
        var s = { data: { importId: e } };
        s.success = function (e) {
            t && t(a.getMsgByCode(e))
        }, s.error = function (e) {
            i && i(a.getMsgByCode(e))
        }, M2012.Contacts.API.getFinshImportResult(s)
    },
    $.extend(M2012.MatrixVM.prototype, {
        createContacts: function () {
            window.Contacts = $.extend(window.Contacts, a),
            window.ContactsInfo = M2012.Contacts.ContactsInfo,
            window.ContactsInfo.prototype.search = function (e) {
                var t = [];
                t.push(this.name), t.push(this.emails), t.push(this.mobiles), t.push(this.faxes), (this.Quanpin || this.Jianpin) && (t.push(this.Quanpin), t.push(this.Jianpin));
                var i = e.toLowerCase(), a = t.join(",").toLowerCase();
                return a.indexOf(i) > -1
            },
            window.ContactsInfo.prototype.validateDetails = function (e) {
                function i(e, t) {
                    return { success: !1, msg: e, errorProperty: t || "" }
                }

                var a = M2012.Contacts.getModel(), s = /^[\d]{3,20}$/, o = /^[\d-]{3,30}$/, n = /^[a-zA-Z0-9-\s]{3,10}$/, r = /^[\d]{6,9}$/, l = /^[0-9a-zA-Z_][_.0-9a-zA-Z-]{0,31}@([0-9a-zA-Z][0-9a-zA-Z-]{0,30}\.){1,4}[a-zA-Z]{2,4}$/;
                if (!e) {
                    if (t.isEmpty(this.name.trim())) return i("请输入姓名", "name");
                    if (!(this.FamilyEmail || this.MobilePhone || this.BusinessEmail || this.BusinessMobile)) return i("电子邮箱和手机号码，请至少填写一项")
                }
                if (this.AddGroupName && a.getGroupByName(this.AddGroupName)) return i("新建的组名已存在", "AddGroupName");
                if (!t.isEmpty(this.FamilyEmail)) {
                    var c = this.FamilyEmail.length;
                    if (!(c >= 6 && 90 >= c && l.test(this.FamilyEmail))) return i("电子邮箱格式不正确。应如zhangsan@139.com，长度6-90位")
                }
                if (!t.isEmpty(this.BusinessEmail)) {
                    var c = this.BusinessEmail.length;
                    if (!(c >= 6 && 90 >= c && l.test(this.BusinessEmail))) return i("商务邮箱格式不正确。应如zhangsan@139.com，长度6-90位")
                }
                return t.isEmpty(this.MobilePhone) || s.test(this.MobilePhone) ? t.isEmpty(this.BusinessMobile) || s.test(this.BusinessMobile) ? t.isEmpty(this.CPZipCode) || n.test(this.CPZipCode) ? t.isEmpty(this.FamilyPhone) || o.test(this.FamilyPhone) ? t.isEmpty(this.BusinessPhone) || o.test(this.BusinessPhone) ? t.isEmpty(this.BusinessFax) || o.test(this.BusinessFax) ? t.isEmpty(this.OtherIm) || r.test(this.OtherIm) ? { success: !0 } : i("飞信号格式不正确，请输入6-10位数字") : i("传真号码格式不正确，请输入3-30位数字、-") : i("公司固话格式不正确，请输入3-30位数字、-") : i("常用固话格式不正确，请输入3-30位数字、-") : i("公司邮编格式不正确，请输入3-10位字母、数字、-或空格") : i("商务手机格式不正确，请输入3-20位数字") : i("手机号码格式不正确，请输入3-20位数字")
            }
        }
    })
}($, _, M139),

//M2012.Contacts.Cache
function (e, t, i) {
    i.namespace("M2012.Contacts.Cache", function (e) {
        var i = this, a = e.data, s = e.model || M2012.Contacts.getModel(), o = new M2012.Contacts.CacheGroup, n = new M2012.Contacts.CacheContacts, r = function (e) {
            a = e, i.setModelData(), i.dataRefresh()
        }, l = function () {
            return a
        };
        this.init = function () {
            this.setModelData(), this.regEvents()
        }, this.regEvents = function () {
            s.on("maindataload", function (e) {
                r(e)
            })
        }, this.getData = function () {
            return a
        }, this.setModelData = function () {
            var e = this.getData();
            e && s && s.set({ data: e })
        }, this.reload = function (e) {
            s.loadMainData({}, e), this.dataRefresh()
        },
        this.dataRefresh = function () {
            this.timer && clearTimeout(this.timer), this.timer = setTimeout(function () {
                s.trigger("update", {}), top.$App.trigger("ADDR_DATA_REFRESH")
            }, 1e3)
        }, this.refreshVipMail = function () {
            top.$App.trigger("change:contact_maindata")
        }, this.removeInvalidEmails = function (e) {
            var t = e && e.data && e.data.split(",") || [], i = s && s.get("invalidEmails") && s.get("invalidEmails").split(",") || [];
            if (t.length && i.length) {
                for (var a = i.length; a >= 0; a--) for (var o = i[a], n = 0; n < t.length; n++) o == t[n] && (i.splice(a, 1), console.warn && console.warn("invalidEmail: " + o));
                s.set("invalidEmails", i.join(","))
            }
        }, this.addContacts = function (e) {
            var i = l(), a = t.isArray(e.data) ? e.data : [e.data];
            a[0].groupId = a[0].groupId || a[0].GroupId, a[0].serialId = a[0].serialId || a[0].SerialId;
            var s = i.contactsMap[a[0].serialId], c = a[0].BeMerge;
            if (c && "1" == c) {
                var d = i.contactsMap;
                a[0].serialId = a[0].serialId || a[0].SerialId;
                var p = d[a[0].serialId];
                p.name = a[0].Name || s.name || "", p.AddrFirstName = a[0].Name || s.AddrFirstName || "", p.lowerName = a[0].Name || s.name || "", p.ImagePath = a[0].ImageUrl || s.ImageUrl || "", p.FirstNameword = a[0].FirstNameword || s.FirstNameword || "", p.Jianpin = a[0].FirstWord || s.FirstWord || "", p.Quanpin = a[0].FullNameword || s.FullNameword || "", p.emails = t.uniq(p.emails.concat(a[0].extEmail)), p.mobiles = t.uniq(p.mobiles.concat(a[0].extMobile)), p.faxes = t.uniq(p.faxes.concat(a[0].extFax))
            } else i = n.addContacts({ contacts: a, data: i }), i = o.addContacts({
                groupId: a[0].groupId,
                serialId: a[0].serialId,
                data: i
            }), this.isVipGroup(a[0].groupId) && this.addVip({ serialId: a[0].serialId }), r(i)
        }, this.addContactsField = function (e) {
            var i = this.getData(), a = i.contacts, s = i.contactsMap, o = i.contactsIndexMap, n = e.SerialId || e.serialId, l = o[n] || 0, c = s[n] || {};
            for (var d in e) t.isEmpty(e[d]) || (c[d] = e[d]);
            c = new M2012.Contacts.ContactsInfo(c), a[l] = c, o[n] = c, r(i)
        }, this.removeContacts = function (e) {
            var t = l();
            e = $.extend(e, { data: t }), t = o.removeContacts(e), t = n.removeContacts(e), e.isBatch || r(t), this.isVipContacts(e.serialId) && this.removeVip(e)
        }, this.batchAddContacts = function () {
            this.reload()
        }, this.batchRemoveContacts = function (e) {
            for (var t = e.serialId || [], i = t.length, a = 0; i > a; a++) this.removeContacts({
                serialId: t[a],
                isBatch: !0,
                InterfaceName: e.InterfaceName || ""
            });
            r(l())
        }, this.updateContacts = function (e) {
            var t = e.data || {};
            t.groupId = t.groupId || t.GroupId, t.serialId = t.serialId || t.SerialId, this.removeContacts({ serialId: t.serialId }), this.addContacts(e)
        }, this.updateContactsField = function (e) {
            var i = e.data || {}, a = i.serialId || i.SerialId, o = s.getContactsById(a);
            o.GroupId = s.getContactsGroupById(a).join(","), this.updateContacts({ data: t.extend(o, i) })
        }, this.addGroup = function (e) {
            var t = l(), i = t.groups, a = t.groupsMap, s = t.groupMember, o = e.contacts || [], n = {
                id: e.groupId,
                name: e.groupName,
                GroupId: e.groupId,
                GroupName: e.groupName,
                CntNum: o.length,
                count: o.length
            };
            i.push(n), s[n.id] = o, a[n.id] = n, t.TotalRecordGroup = i.length, this.updateNoGroup(t)
        }, this.updateGroup = function (e) {
            var t = l(), i = t.groups, a = t.groupsMap, s = t.groupMember, o = e.contacts || [], n = {
                id: e.groupId,
                name: e.groupName,
                GroupId: e.groupId,
                GroupName: e.groupName,
                CntNum: o.length,
                count: o.length
            };
            if (this.isVipGroup(e.groupId)) return void this.updateVip({ serialId: e.contacts });
            for (var r = 0; r < i.length; r++) if (i[r].GroupId == e.groupId) {
                i[r] = n;
                break
            }
            s[n.id] = o, a[n.id] = n, this.updateNoGroup(t)
        }, this.updateGroupName = function (e) {
            var t = l(), i = t.groups, a = t.groupsMap, s = t.groupMember, o = s[e.groupId] || [], n = {
                id: e.groupId,
                name: e.groupName,
                GroupId: e.groupId,
                GroupName: e.groupName,
                CntNum: o.length,
                count: o.length
            };
            if (!this.isVipGroup(e.groupId)) {
                for (var c = 0; c < i.length; c++) if (i[c].GroupId == e.groupId) {
                    i[c] = n;
                    break
                }
                s[n.id] = o, a[n.id] = n, r(t)
            }
        }, this.removeGroup = function (e) {
            var t = l(), i = t.groups, a = t.groupsMap, s = t.groupMember, o = s[e.groupId];
            e.isDeleteContacts && this.batchRemoveContacts({ serialId: o });
            for (var n = 0; n < i.length; n++) if (i[n].GroupId == e.groupId) {
                i.splice(n, 1);
                break
            }
            delete a[e.groupId], delete s[e.groupId], t.TotalRecordGroup = i.length, this.updateNoGroup(t)
        }, this.copyContacts = function (e) {
            return e.isNewGroup ? void this.reload() : void this.addContactsByGroup({
                groupId: e.groupId,
                contacts: e.contacts
            })
        }, this.moveContacts = function (e) {
            this.addContactsByGroup({
                groupId: e.toGroupId,
                contacts: e.contacts
            }), this.removeContactsByGroup({ groupId: e.fromGroupId, contacts: e.contacts })
        }, this.addContactsByGroup = function (e) {
            var i = this.getData(), a = i.groups, s = i.groupsMap, o = i.groupMember, n = o[e.groupId] || [], r = e.contacts || [];
            if (this.isVipGroup(e.groupId)) return void this.addVip({ serialId: r });
            n = t.union(n, r);
            for (var l = 0; l < a.length; l++) if (a[l].groupId == e.groupId) {
                a[l].count = n.length, a[l].CntNum = n.length;
                break
            }
            o[e.groupId] = n, s[e.groupId].count = n.length, s[e.groupId].CntNum = n.length, this.updateNoGroup(i)
        }, this.removeContactsByGroup = function (e) {
            var t = l(), i = t.groups, a = t.groupsMap, s = t.groupMember, o = s[e.groupId] || [], n = e.contacts || [], r = n.join(",");
            if (this.isVipGroup(e.groupId)) return void this.removeVip({ serialId: n });
            for (var c = o.length; c >= 0; c--) r.indexOf(o[c]) > -1 && o.splice(c, 1);
            for (var c = 0; c < i.length; c++) if (i[c].groupId == e.groupId) {
                i[c].count = o.length, i[c].CntNum = o.length;
                break
            }
            s[e.groupId] = o, a[e.groupId].count = o.length, a[e.groupId].CntNum = o.length, this.updateNoGroup(t)
        }, this.orderGroup = function (e) {
            var t = l(), i = t.groupsMap, a = e.groupId, s = "" == a ? [] : a.split(","), o = [];
            $.each(s, function (e, t) {
                o.push(i[t])
            }), t.groups = o, r(t)
        }, this.importContacts = function () {
            this.reload()
        }, this.removeCloseContacts = function (e) {
            var i = l(), a = i.closeContacts, s = [];
            t.isUndefined(e) || (s = t.isUndefined(e.addr) ? t.isArray(e.addr) ? e.addr : [e.addr] : t.isArray(e.addr) ? e.addr : e.addr.split(","));
            for (var o = 0; o < s.length; o++) s[o] = s[o].toLowerCase();
            for (var n = s.join(","), o = a.length - 1; o >= 0; o--) {
                var c = a[o].AddrContent.toLowerCase();
                n.indexOf(c) > -1 && a.splice(o, 1)
            }
            r(i)
        }, this.emptyCloseContacts = function () {
            var e = l();
            e.closeContacts = [], r(e)
        }, this.emptyLastContacts = function () {
            var e = l();
            e.lastestContacts = [], r(e)
        }, this.addLastContacts = function (e) {
            var i = l(), a = i.lastestContacts || [], s = [];
            t.isUndefined(e) || (s = t.isUndefined(e.contacts) ? t.isArray(e.contacts) ? e.contacts : [e.contacts] : t.isArray(e.contacts) ? e.contacts : e.contacts.split(","));
            for (var o = [], n = 50, c = {}, d = 0; d < s.length; d++) {
                var p = {
                    AddrContent: s[d].AddrContent || "",
                    AddrName: s[d].AddrName || "",
                    AddrType: s[d].AddrType || "",
                    SerialId: s[d].SerialId || ""
                };
                n > d && p.AddrContent.length > 0 && (o.push(p), c[p.AddrContent] = p)
            }
            if (o.length != n) for (var d = 0; d < a.length; d++) o.length < n && !c[a[d].AddrContent] && o.push(a[d]);
            i.lastestContacts = o, e.newContacts && e.newContacts.length && this.addContacts({ data: e.newContacts }), r(i)
        }, this.removeLastContacts = function (e) {
            var i = l(), a = i.lastestContacts, s = [];
            t.isUndefined(e) || (s = t.isUndefined(e.addr) ? t.isArray(e.addr) ? e.addr : [e.addr] : t.isArray(e.addr) ? e.addr : e.addr.split(","));
            for (var o = 0; o < s.length; o++) s[o] = s[o].toLowerCase();
            for (var n = s.join(","), o = a.length - 1; o >= 0; o--) {
                var c = a[o].AddrContent.toLowerCase();
                n.indexOf(c) > -1 && a.splice(o, 1)
            }
            r(i)
        }, this.mergeContacts = function (e) {
            this.batchRemoveContacts(e), this.addContacts({ data: e.contacts });
            var i = e.contacts.groupId;
            i = 0 == i.length ? [] : i, i = t.isString(i) ? i.split(",") : i;
            for (var a = 0; a < i.length; a++) if (this.isVipGroup(i[a])) {
                this.addVip({ serialId: e.serialId });
                break
            }
        }, this.updatedContacts = function (e) {
            var t = e.data.SerialId, i = s.getContactsById(t);
            i = $.extend(i, e.data), i.GroupId = s.getContactsGroupById(t).join(","), this.updateContacts({ data: i })
        }, this.newUpdatedContacts = function (e) {
            if (e.isDelete) return void this.removeContacts({ serialId: e.serialId });
            var i = function (e) {
                var i = [];
                return t.each(e, function (e) {
                    i = t.union(i, t.values(e))
                }), i
            }, a = e.serialId, o = i(e.email || []), n = i(e.mobile || []), r = s.getContactsById(a);
            r && (o.length && (r.FamilyEmail = o.shift()), o.length && (r.BusinessEmail = o.shift()), o.length && (r.OtherEmail = o.shift()), n.length && (r.MobilePhone = n.shift()), n.length && (r.BusinessMobile = n.shift()), n.length && (r.OtherMobilePhone = n.shift()), r.extMobile = n.concat(), r.extEmail = o.concat(), this.updateContacts({ data: r }))
        }, this.autoUpdateContacts = function () {
            this.reload()
        }, this.autoMerge = function () {
            this.reload()
        }, this.autoUpdate = function () {
            this.reload()
        }, this.addVip = function (e) {
            var i = l(), a = i.vip || {}, s = [];
            t.isUndefined(e) || (s = t.isUndefined(e.serialId) ? t.isArray(e.serialId) ? e.serialId : [e.serialId] : t.isArray(e.serialId) ? e.serialId : e.serialId.split(",")), t.isArray(a.contacts) || (a.contacts = []), a.groupId.length > 0 ? (a.contacts = t.union(a.contacts, s), r(i), this.refreshVipMail()) : this.refreshVipMail()
        }, this.removeVip = function (e) {
            var i = l(), a = i.vip || {}, s = [];
            t.isUndefined(e) || (s = t.isUndefined(e.serialId) ? t.isArray(e.serialId) ? e.serialId : [e.serialId] : t.isArray(e.serialId) ? e.serialId : e.serialId.split(","));
            var o = s.join(",");
            if (t.isArray(a.contacts) || (a.contacts = []), 0 != a.contacts.length) {
                for (var n = a.contacts.length - 1; n >= 0; n--) o.indexOf(a.contacts[n]) > -1 && a.contacts.splice(n, 1);
                r(i), this.refreshVipMail()
            }
        }, this.updateVip = function (e) {
            var i = l(), a = i.vip, s = (a.contacts, []);
            t.isUndefined(e) || (s = t.isUndefined(e.serialId) ? t.isArray(e.serialId) ? e.serialId : [e.serialId] : t.isArray(e.serialId) ? e.serialId : e.serialId.split(",")), t.isArray(a.contacts) || (a.contacts = []), a.groupId.length > 0 ? (a.contacts = s, r(i), this.refreshVipMail()) : this.refreshVipMail()
        }, this.isVipGroup = function (e) {
            var i = this.getData(), a = i.vip, s = !1, o = [];
            o = t.isUndefined(e) ? t.isArray(e) ? e : [e] : "number" == typeof e ? t.isArray(e) ? e : [e] : t.isArray(e) ? e : e.split(",");
            for (var n = 0; n < o.length; n++) if (o[n] == a.groupId) {
                s = !0;
                break
            }
            return s
        }, this.isVipContacts = function (e) {
            var t = l(), i = t.vip, a = i.contacts || [], s = a.join(",");
            return s.indexOf(e) > -1
        }, this.updateNoGroup = function (e) {
            var t = {}, i = [], a = e || l(), s = a.groupMember, o = a.contactsMap;
            for (var n in s) for (var c = s[n], d = 0, p = c.length; p > d; d++) t[c[d]] = 1;
            for (var m in o) t[m] || i.push(m);
            a.noGroup = i, r(a)
        }, this.updateUserInfo = function () {
            var e = {};
            e.success = function (e) {
                s.UserInfoData = { code: "S_OK", "var": e.data }
            }, e.error = function () {
            }, M2012.Contacts.API.queryUserInfo(e)
        }, this.init()
    }),
    i.namespace("M2012.Contacts.CacheContacts", function () {
        this.addContacts = function (e) {
            for (var t = e.data, i = e.contacts, a = t.contacts, s = t.contactsMap, o = t.contactsIndexMap, n = 0; n < i.length; n++) {
                var r = this.parseData(i[n]), l = a.length;
                r.Quanpin = r.FullNameword || "", r.Jianpin = r.FirstWord || "", r.SerialId = r.serialId || r.SerialId;
                var c = new M2012.Contacts.ContactsInfo(r);
                a[l] = c, s[c.SerialId] = c, o[c.SerialId] = l, t.emailHash && c.emails && c.emails.length > 0 && (t.emailHash[c.emails[0]] = c)
            }
            return t.TotalRecord += i.length, t
        }, this.removeContacts = function (e) {
            var i = e.data, a = i.contacts, s = e.serialId, o = i.contactsIndexMap[s], n = e.InterfaceName, r = [];
            if (t.isNumber(o)) {
                r = "DelContacts" == n ? a.splice(o, 1) : a.splice(o, 1), delete i.contactsMap[s], delete i.contactsIndexMap[s];
                var l = i.contactsIndexMap;
                $.each(l, function (e, t) {
                    t > o && l[e]--
                }), i.emailHash && r.length && r[0].emails && r[0].emails.length > 0 && delete i.emailHash[r[0].emails[0]], i.TotalRecord -= 1
            }
            return i
        }, this.parseData = function (e) {
            return e.extEmail = e.extEmail || [], e.extMobile = e.extMobile || [], e.extFax = e.extFax || [], e.extEmail.length > 0 && (e.FamilyEmail = e.extEmail.shift()), e.extEmail.length > 0 && (e.BusinessEmail = e.extEmail.shift()), e.extEmail.length > 0 && (e.OtherEmail = e.extEmail.shift()), e.extMobile.length > 0 && (e.MobilePhone = e.extMobile.shift()), e.extMobile.length > 0 && (e.BusinessMobile = e.extMobile.shift()), e.extMobile.length > 0 && (e.OtherMobilePhone = e.extMobile.shift()), e.extFax.length > 0 && (e.FamilyFax = e.extFax.shift()), e.extFax.length > 0 && (e.BusinessFax = e.extFax.shift()), e.extFax.length > 0 && (e.OtherFax = e.extFax.shift()), delete e.Fax, delete e.Email, delete e.Mobile, e
        }
    }),
    i.namespace("M2012.Contacts.CacheGroup", function (e) {
        this.addContacts = function (e) {
            var i = e.serialId || "", a = e.groupId || "", s = e.data;
            if (0 == i.length) return s;
            a = 0 == a.length ? [] : a, a = t.isString(a) ? a.split(",") : a;
            var o = s.groups, n = s.groupsMap, r = s.groupMember;
            return 0 == a.length ? s.noGroup.push(i) : t.each(a, function (e) {
                var a = r[e];
                t.isUndefined(a) && (s.groupMember[e] = [], a = s.groupMember[e]), t.isUndefined(n[e]) && (s.groupsMap[e] = {}), a.push(i), n[e].CntNum = a.length, n[e].count = a.length.toString(), $.each(o, function (t, i) {
                    return i.GroupId == e ? (i.CntNum = a.length, i.count = a.length.toString(), !1) : void 0
                })
            }), s
        }, this.removeContacts = function (e) {
            var i = e.serialId, a = e.data, s = a.noGroup || [], o = a.groups, n = a.groupsMap, r = a.groupMember, l = s.join(",");
            return t.each(r, function (e, t) {
                var a = e.join(",");
                if (a.indexOf(i) > -1) for (var s = 0; s < e.length; s++) if (e[s] == i) {
                    e.splice(s, 1), n[t].CntNum = e.length, n[t].count = e.length.toString(), $.each(o, function (i, a) {
                        return a.GroupId == t ? (a.CntNum = e.length, a.count = e.length.toString(), !1) : void 0
                    });
                    break
                }
            }), l.indexOf(i) > -1 && $.each(s, function (e, t) {
                return s[e] == i ? (s.splice(e, 1), !1) : void 0
            }), a
        }
    })
}(jQuery, _, M139),

//M2012.Contacts.Model
function (e, t, i) {
    var a = e, s = !1;
    i.namespace("M2012.Contacts.Model", Backbone.Model.extend({
        initialize: function (e) {
            this.initEvents()
        },
        getUserNumber: function () {
            return top.$User.getUid()
        },
        loadMainData: function (e, t) {
            e = e || {};
            var s = this;
            this.isLoading = !0;
            if (e.testUrl) {
                a.get(e.testUrl, function (e) {
                    s.onMainDataLoad(i.JSON.tryEval(e), t)
                });
            } else {
                $App.once("userAddrJsonData_load", function (e) {
                    s.isLoading = !1, clearTimeout(o);
                    var a = i.JSON.tryEval(e.response);
                    s.onMainDataLoad(a, t)
                });
                var o = setTimeout(function () {
                    var e = { GetUserAddrJsonData: {} };
                    M2012.Contacts.API.call("GetUserAddrJsonData", e, function (e) {
                        s.isLoading = !1;
                        if (e) {
                            if (e.responseData) {
                                if ("0" == e.responseData.ResultCode) {
                                    s.onMainDataLoad(e.responseData, t)
                                } else {
                                    if ("216" == e.responseData.ResultCode) {
                                        $App.trigger("change:sessionOut", {}, !0);
                                    } else {
                                        i.Logger.getDefaultLogger().error("addrsvr response error", e.responseData);
                                    }
                                }
                            } else {
                                i.Logger.getDefaultLogger().error("addrsvr response invalid", e.responseText);
                            }
                        }
                        else {
                            i.Logger.getDefaultLogger().error("addrsvr response empty");
                        }
                    })
                }, 7e3)
            }
        },
        loadQueryUserInfo: function (e) {
            function a(t, i) {
                i && (t = $App.deepCloneJSON(t)), e({ responseData: t }), a = new Function
            }

            function o() {
                var e = null;
                try {
                    e = document.getElementById("welcome").contentWindow.addrQueryUserInfo
                } catch (t) {
                }
                return e
            }

            if (SiteConfig.m2012NodeServerRelease && $App.isShowWelcomePage() && s) {
                var n = o();
                n ? setTimeout(function () {
                    a(n, !0)
                }, 0) : $App.on("welcome_QueryUserInfo_load", function (e) {
                    a(e, !0)
                })
            } else {
                var r = new i.ExchangeHttpClient({
                    name: "ContactsLoadMainDataHttpClient",
                    responseDataType: "JSON2Object"
                });
                r.on("error", function (e) {
                    options && t.isFunction(options.error) && options.error(e)
                });
                var l = "<QueryUserInfo><UserNumber>" + $User.getUid() + "</UserNumber></QueryUserInfo>";
                r.request({
                    method: "post",
                    url: "/addrsvr/QueryUserInfo?sid=" + $App.query.sid + "&formattype=json",
                    data: l
                }, e)
            }
            s = !1
        },
        getUserInfo: function (e, t) {
            var i = this;
            if (top.$User) {
                if (e = e || {}, i.UserInfoData && !e.refresh && t && "function" == typeof t) try {
                    return void t(i.UserInfoData)
                } catch (a) {
                }
                i.getUserInfoWaiting = !0, this.loadQueryUserInfo(function (e) {
                    if (e && e.responseData) {
                        var a = e.responseData.ResultCode, s = { code: "S_FALSE", ResultCode: a };
                        "0" == a && (s = {
                            code: "S_OK",
                            "var": i.userInfoTranslate(e.responseData.UserInfo[0])
                        }), i.UserInfoData = s;
                        var o = top.window.trueName = s["var"].AddrFirstName;
                        top.window.UserData && (top.window.UserData.userName = o);
                        var n = top.$App.getConfig("UserAttrs");
                        if (n && (n.trueName = o), t && "function" == typeof t) try {
                            t(s)
                        } catch (r) {
                        }
                    }
                    i.getUserInfoWaiting = !1
                })
            }
        },
        contactRequest: function (e, t, a) {
            var s = new i.ExchangeHttpClient({
                name: "ContactsLoadMainDataHttpClient",
                requestDataType: "ObjectToXML2",
                responseDataType: "JSON2Object"
            });
            t || (t = {}), t.UserNumber = top.$User.getUid();
            var o = {};
            o[e] = t, s.request({
                method: "post",
                url: "/addrsvr/" + e + "?sid=" + top.$App.query.sid + "&formattype=json",
                data: o
            }, function (e) {
                a && a(e)
            })
        },
        modifyUserInfo: function (e, t) {
            var i = this;
            this.contactRequest("ModUserInfo", e, function (e) {
                i.UserInfoData = null, e && e.responseData && t && t(e.responseData)
            })
        },
        modifyGroup: function (e, t) {
            this.contactRequest("EditGroupList", e, function (e) {
                e && e.responseData && t && t(e.responseData)
            })
        },
        userInfoTranslate: function (e) {
            var t = {
                a: "UserType",
                b: "SourceType",
                c: "AddrFirstName",
                d: "AddrSecondName",
                e: "AddrNickName",
                f: "UserSex",
                g: "CountryCode",
                h: "ProvCode",
                i: "AreaCode",
                j: "CityCode",
                k: "StreetCode",
                l: "ZipCode",
                m: "HomeAddress",
                n: "MobilePhoneType",
                o: "BirDay",
                p: "MobilePhone",
                q: "BusinessMobile",
                r: "BusinessPhone",
                s: "FamilyPhone",
                t: "BusinessFax",
                u: "FamilyFax",
                v: "OtherPhone",
                w: "OtherMobilePhone",
                x: "OtherFax",
                y: "FamilyEmail",
                z: "BusinessEmail",
                c2: "OtherEmail",
                c3: "PersonalWeb",
                c4: "CompanyWeb",
                c5: "OtherWeb",
                c6: "OICQ",
                c7: "MSN",
                c8: "OtherIm",
                c9: "CPCountryCode",
                d0: "CPProvCode",
                d1: "CPAreaCode",
                a0: "CPCityCode",
                a1: "CPStreetCode",
                a2: "CPZipCode",
                a3: "CPAddress",
                a4: "CPName",
                a5: "CPDepartName",
                a6: "Memo",
                a7: "ContactCount",
                a8: "ContactType",
                a9: "ContactFlag",
                b0: "SynFlag",
                b1: "SynId",
                b2: "RecordSeq",
                b3: "FirstNameword",
                b4: "CountMsg",
                b5: "StartCode",
                b6: "BloodCode",
                b7: "StateCode",
                b8: "ImageUrl",
                b9: "SchoolName",
                c0: "BokeUrl",
                c1: "UserJob",
                e1: "FamilyPhoneBrand",
                e2: "BusinessPhoneBrand",
                e3: "OtherPhoneBrand",
                e4: "FamilyPhoneType",
                e5: "BusinessPhoneType",
                e6: "OtherPhoneType",
                e7: "EduLevel",
                e8: "Marriage",
                e9: "NetAge",
                e0: "Profession",
                f1: "Income",
                f2: "Interest",
                f3: "MoConsume",
                f4: "ExpMode",
                f5: "ExpTime",
                f6: "ContactMode",
                f7: "Purpose",
                f8: "Brief",
                f9: "FavoEmail",
                f0: "FavoBook",
                g1: "FavoMusic",
                g2: "FavoMovie",
                g3: "FavoTv",
                g4: "FavoSport",
                g5: "FavoGame",
                g6: "FavoPeople",
                g7: "FavoWord",
                g8: "Character",
                g9: "MakeFriend",
                ui: "UserInfo",
                un: "UserNumber",
                sd: "SerialId",
                gd: "GroupId",
                gp: "Group",
                gi: "GroupInfo",
                ct: "Contacts",
                ci: "ContactsInfo",
                gl: "GroupList",
                li: "GroupListInfo",
                tr: "TotalRecord",
                rc: "ResultCode",
                rm: "ResultMsg",
                gn: "GroupName",
                cn: "CntNum",
                ri: "RepeatInfo",
                lct: "LastContacts",
                lctd: "LastContactsDetail",
                lci: "LastContactsInfo",
                cct: "CloseContacts",
                cci: "CloseContactsInfo",
                an: "AddrName",
                at: "AddrType",
                ac: "AddrContent",
                us: "UserSerialId",
                ai: "AddrId",
                lid: "LastId",
                ate: "AddrTitle",
                trg: "TotalRecordGroup",
                trr: "TotalRecordRelation",
                cf: "ComeFrom",
                cte: "CreateTime",
                trg: "TotalRecordGroup",
                trr: "TotalRecordRelation",
                Bct: "BirthdayContacts",
                bci: "BirthdayContactInfo",
                ee: "extEmail",
                em: "extMobile",
                ef: "extFax",
                hf: "HecomboFlag",
                MotiSentence: "MotiSentence",
                LastImageURL: "LastImageUrl"
            }, i = {};
            for (elem in e) t[elem] && (i[t[elem]] = e[elem]);
            return i.extEmail = i.extEmail ? i.extEmail.split(",") : [], i.extMobile = i.extMobile ? i.extMobile.split(",") : [], i.extFax = i.extFax ? i.extFax.split(",") : [], i
        },
        getPrivateSettings: function (e) {
            if (window.$User) {
                var t = new i.ExchangeHttpClient({
                    name: "ContactsLoadMainDataHttpClient",
                    responseDataType: "JSON2Object"
                }), a = "<GetPrivacySettings><UserNumber>" + $User.getUid() + "</UserNumber></GetPrivacySettings>";
                t.request({
                    method: "post",
                    url: "/addrsvr/GetPrivacySettings?sid=" + $App.query.sid,
                    data: a
                }, function (t) {
                    if (t && t.responseData) {
                        var i = t.responseData, a = i.ResultCode, s = { code: "S_FALSE" };
                        if ("0" == a && (s = {
                            code: "S_OK",
                            "var": { addMeRule: i.WhoAddMeSetting, UserInfoSetting: i.UserInfoSetting }
                        }), e && "function" == typeof e) try {
                            e(s)
                        } catch (o) {
                        }
                    }
                })
            }
        },
        updatePrivateSettings: function (e, t) {
            var s = new i.ExchangeHttpClient({
                name: "ContactsLoadMainDataHttpClient",
                requestDataType: "ObjectToXML2",
                responseDataType: "JSON2Object"
            }), o = $User.getUid(), n = { UserNumber: o };
            n = { SavePrivacySettings: a.extend(n, e) }, s.request({
                method: "post",
                url: "/addrsvr/SavePrivacySettings?sid=" + $App.query.sid,
                data: n
            }, function (e) {
                if (e && e.responseData) {
                    var i = e.responseData, a = {
                        code: ("0" == i.ResultCode ? "S_OK" : i.ResultCode) || "FS_UNKNOWN",
                        "var": { msg: i.ResultMsg || "" }
                    };
                    t && t(a)
                }
            })
        },
        requireData: function (e) {
            var t = this.get("data");
            t ? e && e(t) : (this.isLoading || this.loadMainData(), this.on("maindataload", function (t) {
                this.off("maindataload", arguments.callee), e && setTimeout(function () {
                    e(t)
                }, 0)
            }))
        },
        isLoaded: function () {
            return !!this.get("data")
        },
        onMainDataLoad: function (e, t) {
            e.Groups = e.Group || e.Groups;
            e.LastContacts || (e.LastContacts = []);
            e.CloseContacts || (e.CloseContacts = []);
            e.BirthdayContacts || (e.BirthdayContacts = []);
            e.Contacts || (e.Contacts = []);
            e.Groups || (e.Groups = []);
            e.GroupMember || (e.GroupMember = {});
            e.NoGroup || (e.NoGroup = []),
            e.TotalRecord = parseInt(e.TotalRecord);
            e.TotalRecordGroup = parseInt(e.TotalRecordGroup);
            e.TotalRecordRelation = parseInt(e.TotalRecordRelation);
            e.userSerialId = e.UserSerialId;
            var i = {
                TotalRecord: e.TotalRecord,
                TotalRecordGroup: e.TotalRecordGroup,
                TotalRecordRelation: e.TotalRecordRelation,
                noGroup: e.NoGroup
            };
            this.createGroupData({ data: e, exports: i });
            this.createContactsData({
                data: e,
                exports: i
            });
            this.createGroupMemberData({ data: e, exports: i });
            this.createLastAndCloseContactsData({
                data: e,
                exports: i
            });
            this.createBirthdayContactsData({ data: e, exports: i }),
            this.createVIPContactsData({
                data: e,
                exports: i
            });
            e.UserInfo && e.UserInfo[0] && (this.UserInfoData = {
                code: "S_OK",
                "var": this.userInfoTranslate(e.UserInfo[0])
            });
            this.set("data", i);
            e.Welcome && this.set("invalidEmails", e.Welcome[0].ie || "");
            this.trigger("maindataload", i);
            t && t(i);
        },
        createGroupData: function (e) {
            for (var t = e.exports, i = e.data, a = i.Groups, s = new Array(a.length), o = {}, n = 0, r = a.length; r > n; n++) {
                var l = a[n];
                o[l.gd] = s[n] = { GroupId: l.gd, id: l.gd, GroupName: l.gn, name: l.gn, CntNum: l.cn, count: l.cn }
            }
            t.groups = s;
            t.groupsMap = o;
        },
        createContactsData: function (e) {
            for (var t = e.exports, i = e.data, a = i.Contacts, s = new Array(a.length), o = {}, n = {}, r = M2012.Contacts.ContactsInfo, l = 0, c = a.length; c > l; l++) {
                var d = a[l];
                d.ee = d.ee ? d.ee.split(",") : [];
                d.em = d.em ? d.em.split(",") : [];
                d.ef = d.ef ? d.ef.split(",") : [];
                var p = new r({
                    SerialId: d.sd,
                    AddrFirstName: d.c,
                    AddrSecondName: d.d,
                    MobilePhone: d.p,
                    BusinessMobile: d.q,
                    OtherMobilePhone: d.w,
                    FamilyEmail: (d.y || "").toLowerCase(),
                    BusinessEmail: (d.z || "").toLowerCase(),
                    OtherEmail: (d.c2 || "").toLowerCase(),
                    FirstNameword: (d.b3 || "").toLowerCase(),
                    FamilyFax: d.u,
                    BusinessFax: d.t,
                    OtherFax: d.x,
                    ImageUrl: d.b8,
                    Quanpin: (d.d2 || "").toLowerCase(),
                    Jianpin: (d.d3 || "").toLowerCase(),
                    CPName: d.a4,
                    UserJob: d.c1,
                    extEmail: d.ee,
                    extMobile: d.em,
                    extFax: d.ef
                });
                s[l] = p,
                o[d.sd] = p,
                n[d.sd] = l
            }
            t.contacts = s;
            t.contactsMap = o;
            t.contactsIndexMap = n;
            var m = $App.getTabByName("addr");
            m && (m.isRendered = !1);
        },
        updateContactsData: function (e) {
        },
        createGroupMemberData: function (e) {
            var t = e.data,
                i = e.exports,
                a = i.contactsMap,
                s = i.groupsMap,
                o = t.GroupMember;
            for (var n in o) {
                var r = s[n];
                if (r) {
                    for (var l = o[n], c = 0; c < l.length; c++) {
                        a[l[c]] || (l.splice(c, 1), c--);
                    }
                    r.CntNum = l.length
                } else {
                    /^\d+$/.test(n) && delete s[n];
                }
            }
            i.groupMember = o
        },
        createLastAndCloseContactsData: function (e) {
            for (var t = e.exports, i = e.data, a = i.LastContacts, s = i.CloseContacts, o = [], n = [], r = 0, l = a.length; l > r; r++) {
                var c = a[r];
                "object" != typeof c.ac && o.push({ SerialId: c.sd, AddrName: c.an, AddrType: c.at, AddrContent: c.ac })
            }
            for (var r = 0, l = s.length; l > r; r++) {
                var c = s[r];
                "object" != typeof c.ac && n.push({ SerialId: c.sd, AddrName: c.an, AddrType: c.at, AddrContent: c.ac })
            }
            t.lastestContacts = o;
            t.closeContacts = n;
        },
        createBirthdayContactsData: function (e) {
            for (var t = e.exports, i = e.data, a = i.BirthdayContacts, s = new Array(a.length), o = a.length - 1; o >= 0; o--) {
                var n = a[o];
                s[o] = {
                    SerialId: n.sd,
                    AddrName: n.an,
                    MobilePhone: n.p,
                    FamilyEmail: n.y,
                    BusinessEmail: n.z,
                    OtherEmail: n.c2,
                    BirDay: n.o
                };
            }
            t.birthdayContacts = s;
        },
        createVIPContactsData: function (e) {
            var t = e.data,
                i = e.exports,
                a = t.Vip && t.Vip[0],
                s = { groupId: "", contacts: [] };
            if (a) try {
                s.groupId = a.vipg,
                s.contacts = a.vipc ? a.vipc.split(",") : []
            } catch (o) {
            }
            i.vip = s
        },
        getContactsById: function (e) {
            return this.get("data") && this.get("data").contactsMap[e] || null
        },
        getContactsGroupById: function (e) {
            return this.getContactsGroupId(e)
        },
        getGroupById: function (e) {
            return this.get("data") && this.get("data").groupsMap[e] || null
        },
        getGroupByName: function (e) {
            for (var t = this.getGroupList(), i = 0, a = t.length; a > i; i++) {
                var s = t[i];
                if (s.name === e) return s
            }
            return null
        },
        getReadGroupCount: function () {
            var e = this.getGroupByName("读信联系人");
            return e ? e.CntNum : null
        },
        getContactsGroupId: function (e) {
            var t = this.get("data") && this.get("data").groupMember, i = [];
            if (t) for (var a in t) for (var s = t[a], o = 0, n = s.length; n > o; o++) if (s[o] === e) {
                i.push(a);
                break
            }
            return i
        },
        getGroupList: function () {
            var e = this.get("data");
            return e && (e = e.groups), e = e && t.isFunction(e.concat) ? e.concat() : []
        },
        getGroupMembersLength: function (e) {
            var t = this.getGroupById(e);
            if (!t) throw "M2012.Contacts.Model.getGroupContactsLength:不存在联系人分组gid=" + e;
            return t.CntNum
        },
        getGroupMembersId: function (e, t) {
            for (var i = this.getGroupMembers(e, t), a = 0, s = i.length; s > a; a++) i[a] = i[a].SerialId;
            return i
        },
        getGroupMembers: function (e, t) {
            t = t || {};
            var i = (t.filter, this.get("data")), a = i && i.contactsMap, s = i && i.groupMember, o = [];
            if (e == this.getVIPGroupId()) o = this.getVIPContacts(); else {
                var n = s && s[e];
                if (n) for (var r = 0, l = n.length; l > r; r++) {
                    var c = n[r], d = a && a[c];
                    d && o.push(d)
                }
            }
            return t && t.filter && (o = this.filterContacts(o, { filter: t.filter, colate: t.colate })), o
        },
        getVIPContacts: function () {
            var e = this.get("data"), t = [], i = e && e.vip, a = e && e.contactsMap;
            if (i && i.contacts) for (var s = i.contacts, o = 0; o < s.length; o++) {
                var n = s[o], r = a[n];
                r && t.push(r)
            }
            return t
        },
        getVIPGroupId: function () {
            var e = "", t = this.get("data");
            return t && t.vip && (e = t.vip.groupId), e
        },
        isVip: function (e) {
            var t = this.get("data"), i = !1;
            return t && t.vip && a.each(t.vip.contacts, function (t, a) {
                return a == e ? (i = !0, !1) : void 0
            }), i
        },
        filterContacts: function (e, t) {
            for (var i = t.filter, a = [], s = 0, o = e.length; o > s; s++) {
                var n = e[s];
                "email" == i && n.getFirstEmail() ? a.push(n) : "mobile" == i && n.getFirstMobile() ? a.push(n) : "fax" == i && n.getFirstFax() ? a.push(n) : t.colate && n.getFirstEmail().indexOf(i) > -1 && a.push(n)
            }
            return a
        },
        initEvents: function () {
            var e = this,
                t = "dataForMatch_email",
                i = "dataForMatch_mobile",
                a = "dataForMatch_fax";
            e.on("update", function (s) {
                e.has(t) && e.unset(t), e.has(i) && e.unset(i), e.has(a) && e.unset(a)
            });
            e.on("maindataload", function () {
                e.has(t) && e.unset(t), e.has(i) && e.unset(i), e.has(a) && e.unset(a)
            })
        },
        getDataForMatch: function (e) {
            function t(e, t) {
                var i;
                "email" == t ? i = "emails" : "fax" == t ? i = "faxes" : "mobile" == t && (i = "mobiles");
                for (var a = [], s = 0, o = e.length; o > s; s++) for (var n = e[s], r = n[i], l = 0; l < r.length; l++) {
                    var c = r[l];
                    c && n.name && n.lowerName && a.push({
                        name: n.name,
                        lowerName: n.lowerName,
                        addr: c,
                        id: n.SerialId,
                        quanpin: n.Quanpin,
                        jianpin: n.Jianpin
                    })
                }
                return a
            }

            var i = "dataForMatch_" + e, a = this.get(i);
            if (!a) {
                var s = this.filterContacts(this.get("data").contacts, { filter: e });
                a = t(s, e), this.set(i, a)
            }
            return a
        },
        getInputMatch: function (e) {
            function t(e, t, i) {
                var a = t + p + e;
                10 > t && (a = "0" + a);
                var s = l[a];
                s || (l[a] = s = []), s.push(i)
            }

            function i(e) {
                return d[e.split(p)[1]]
            }

            function a(e) {
                return parseInt(e.split(p)[0], 10)
            }

            for (var s = this.getDataForMatch(e.filter), o = e.keyword, n = s.length, r = [], l = {}, c = {
                addr: "01",
                name: "02",
                quanpin: "03",
                jianpin: "04"
            }, d = { "01": "addr", "02": "name", "03": "quanpin", "04": "jianpin" }, p = "0._.0", m = 0; n > m; m++) {
                var u = s[m], h = 1e4, f = null;
                if (u.addr && u.lowerName) {
                    var g = u.addr.indexOf(o);
                    if (-1 != g && h > g && (h = g, f = c.addr), 0 != g) if (g = u.lowerName.indexOf(o && o.toLowerCase()), -1 != g && h > g && (h = g, f = c.name), 0 != h) {
                        if (/[^a-zA-Z]/.test(o)) {
                            if (/[\u4e00-\u9fa5]/.test(o) && u.name && (g = u.name.indexOf(o), -1 != g && h > g && (h = g, f = c.name), 0 == h)) {
                                t(f, h, m);
                                continue
                            }
                        } else if (u.quanpin && u.jianpin) {
                            if (g = u.quanpin.indexOf(o), -1 != g && h > g && (h = g, f = c.quanpin), 0 == h) {
                                t(f, h, m);
                                continue
                            }
                            g = u.jianpin.indexOf(o), -1 != g && h > g && (h = g, f = c.jianpin)
                        }
                        f && t(f, h, m)
                    } else t(f, h, m); else t(f, h, m)
                }
            }
            var v = [];
            for (var b in l) v.push(b);
            v.sort(function (e, t) {
                return e.localeCompare(t)
            });
            for (var y = e.maxLength || 30, m = 0; m < v.length; m++) for (var w = v[m], _ = l[w], M = i(w), C = a(w), x = 0; x < _.length; x++) {
                var $ = _[x];
                if (r.push({ info: s[$], matchAttr: M, matchIndex: C }), r.length >= y) break
            }
            return r
        },
        search: function (e, i) {
            var i = i || {}, a = [], s = [];
            i.contacts ? a = i.contacts : t.isEmpty(this.get("data")) || (a = this.get("data").contacts, i.filter && this.isLoaded() && (a = this.filterContacts(a, { filter: i.filter })));
            for (var o = 0, n = a.length; n > o; o++) {
                var r = a[o], l = r.match;
                i.quickMatch && (l = r.quickMatch), l.call(r, e) && s.push(r)
            }
            return s
        },
        getAddr: function (e, t) {
            return "email" == t ? i.Text.Email.getEmail(e) : "mobile" == t ? i.Text.Mobile.getNumber(e) : ""
        },
        getName: function (e, t) {
            return "email" == t ? i.Text.Email.getName(e) : "mobile" == t ? i.Text.Mobile.getName(e) : ""
        },
        getSendText: function (e, t) {
            return e = (e || "") && e.replace(/["\r\n]/g, " "), '"' + e + '"<' + t + ">"
        },
        getContactsByEmail: function (e) {
            e = $Email.getEmailQuick(e);
            var t = this.getHashContacts()[e];
            return t ? t.hashArray ? t.hashArray : [t] : []
        },
        getContactsByEmailV2: function (e) {
            e = $Email.getEmailQuick(e);
            var t = this.get("data");
            if (!t) return [];
            var i = t.contacts, a = [];
            if (i) for (var s = 0, o = i.length; o > s; s++) for (var n = i[s], r = 0; r < n.emails.length; r++) n.emails[r] == e && a.push(n);
            return a
        },
        getHashContacts: function () {
            var e = this.get("data");
            if (!e) return {};
            if (!e.emailHash) {
                var t = e.contacts, i = {};
                if (t) for (var a = 0, s = t.length; s > a; a++) for (var o = t[a], n = 0; n < o.emails.length; n++) {
                    var r = o.emails[n];
                    i[r] ? i[r].hashArray.push(o) : (i[r] = o, o.hashArray = [o])
                }
                e.emailHash = i
            }
            return e.emailHash || {}
        },
        getContactsByMobile: function (e) {
            var t = this.get("data"), i = [];
            if (!t || !t.contacts) return i;
            for (var a = 0, s = t.contacts, o = s.length; o > a; a++) for (var n = s[a], r = 0; r < n.mobiles.length; r++) n.mobiles[r] == e && i.push(n);
            return i
        },
        getAddrNameByEmail: function (e) {
            e = e || "", e = e.trim();
            var t = this.getContactsByEmail(e), i = $Email.getAccount(e);
            if (t && t.length > 0) {
                for (var a = 0; a < t.length; a++) if (i != t[a].name) return t[a].name;
                return t[0].name
            }
            var s = $Email.getNameQuick(e);
            return s && "" != s.replace(/['"\s]/g, "") ? s : (s = e.replace(/<[^>]+>$/, ""), s && "" != s.replace(/['"\s]/g, "") ? s : e)
        },
        getChinaMobileByEmail: function (e) {
            var t = "", i = this.getContactsByEmail(e);
            return i && i.length > 0 && (t = i[0].MobilePhone), t = t || ("139.com" == $Email.getDomain(e) ? $Email.getName(e) : ""), $Mobile.isChinaMobile(t) ? t : ""
        },
        getFieldByType: function (e) {
            var i = [], a = e.serialId;
            if (t.isArray(a)) {
                for (var s = 0; s < a.length; s++) i = i.concat(arguments.callee.call(this, {
                    type: e.type,
                    serialId: a[s]
                }));
                return i
            }
            var o = [], n = this.getContactsById(a);
            if (n) switch (e.type) {
                case "email":
                    i = n.emails || i;
                    break;
                case "mobile":
                    i = n.mobiles || i
            }
            for (var s = 0; s < i.length; s++) if (!t.isEmpty(i[s])) {
                o.push(i[s]);
                break
            }
            return o
        },
        isExistMobile: function (e) {
            var t = this.getContactsByMobile(e) || [];
            return t.length > 0
        },
        isExistEmail: function (e) {
            var t = this.getContactsByEmail(e) || [];
            return t.length > 0
        },
        updateCache: function (e) {
            this.trigger("update", e)
        },
        getContactsCount: function (e) {
            return e && i.Timing.waitForReady('"undefined" !== typeof top.$App.getModel("contacts").get("data").contacts.length', function () {
                e(this.get("data").contacts.length)
            }), this.isLoaded() ? this.get("data").contacts.length : -1
        }
    })),
    e.extend(M2012.Contacts, {
        getModel: function () {
            var e = this;
            return window != window.top ? top.M2012.Contacts.getModel() : (this.current || (this.current = new M2012.Contacts.Model), this.cache && this.cache.setModelData(), this.cache || (this.cache = new M2012.Contacts.Cache({ model: e.current })), this.current)
        }, getCache: function () {
            return window != window.top ? top.M2012.Contacts.getCache() : (this.cache || this.getModel(), this.cache)
        }
    })
}(jQuery, _, M139),

//M2012.Contacts.ContactsInfo
function (e, t, i) {
    function a(e) {
        for (var t in e) this[t] = e[t] || "";
        this.emails = [], this.mobiles = [], this.faxes = [];
        this.name || (this.name = (this.AddrFirstName || "") + (this.AddrSecondName || "")), this.lowerName = this.name.toLowerCase(), this.check(this.FamilyEmail) && this.emails.push(this.FamilyEmail), this.check(this.BusinessEmail) && this.emails.push(this.BusinessEmail), this.check(this.OtherEmail) && this.emails.push(this.OtherEmail), this.check(this.MobilePhone) && this.mobiles.push(this.MobilePhone), this.check(this.BusinessMobile) && this.mobiles.push(this.BusinessMobile), this.check(this.OtherMobilePhone) && this.mobiles.push(this.OtherMobilePhone), this.check(this.FamilyFax) && this.faxes.push(this.FamilyFax), this.check(this.BusinessFax) && this.faxes.push(this.BusinessFax), this.check(this.OtherFax) && this.faxes.push(this.OtherFax), this.extEmail = this.checkExtend(this.extEmail), this.extMobile = this.checkExtend(this.extMobile), this.extFax = this.checkExtend(this.extFax), this.emails = this.emails.concat(this.extEmail), this.mobiles = this.mobiles.concat(this.extMobile), this.faxes = this.faxes.concat(this.extFax), n || (n = Boolean(top.$App)), n && this.fixPhoto()
    }

    var s, o, n = !1, r = ["/upload/photo/system/nopic.jpg", "/upload/photo/nopic.jpg"];
    a.prototype = {
        getMobileSendText: function () {
            var e = this.getFirstMobile();
            if (e = e && e.replace(/\D/g, ""), !e) return "";
            var t = this.name.replace(/"/g, "");
            return '"' + t + '"<' + e + ">"
        }, getEmailSendText: function () {
            var e = this.getFirstEmail();
            if (!e) return "";
            var t = this.name.replace(/"/g, "");
            return '"' + t + '"<' + e + ">"
        }, getFaxSendText: function () {
            var e = this.getFirstFax();
            if (!e) return "";
            var t = this.name.replace(/"/g, "");
            return '"' + t + '"<' + e + ">"
        }, getFirstEmail: function () {
            return this.emails && this.emails[0] ? this.emails[0] : ""
        }, getFirstMobile: function () {
            return this.mobiles && this.mobiles[0] ? this.mobiles[0] : ""
        }, getFirstFax: function () {
            return this.faxes && this.faxes[0] ? this.faxes[0] : ""
        }, match: function (e) {
            return [this.name, this.BusinessEmail, this.BusinessFax, this.BusinessMobile, this.CPName, this.FamilyEmail, this.FamilyFax, this.FirstNameword, this.Jianpin, this.MobilePhone, this.OtherEmail, this.OtherFax, this.OtherMobilePhone, this.Quanpin, this.UserJob, this.emails.join(""), this.mobiles.join(""), this.faxes.join("")].join("").toLowerCase().indexOf(e.toLowerCase()) > -1
        }, quickMatch: function (e) {
            return [this.name, this.BusinessEmail, this.CPName, this.FamilyEmail, this.FirstNameword, this.Jianpin, this.OtherEmail, this.Quanpin].join("").toLowerCase().indexOf(e.toLowerCase()) > -1
        }, fixPhoto: function () {
            function e() {
                var e = location.host, i = "";
                return e.indexOf("10086.cn") > -1 && top.$User.isGrayUser() ? i = "{0}//image0.139cm.com" : e.indexOf("10086.cn") > -1 && !top.$User.isGrayUser() ? i = "{0}//images.139cm.com" : e.indexOf("10086ts") > -1 ? i = "{0}//g2.mail.10086ts.cn" : e.indexOf("10086rd") > -1 && (i = "{0}//static.rd139cm.com"), i.format(t.getHttp())
            }

            var t = this;
            if (!this.ImagePath) if (s || (s = $App.getResourcePath() + "/images/face.png", o = e()), this.ImageUrl) {
                if (0 == this.ImageUrl.indexOf(t.getHttp() + "//")) return;
                this.ImagePath = this.ImageUrl;
                var i = this.ImagePath;
                i == r[0] || i == r[1] || "" == i ? this.ImageUrl = s : this.ImageUrl = o + i + "?rd=" + Math.random()
            } else this.ImageUrl = s, this.ImagePath = "/upload/photo/nopic.jpg"
        }, check: function (e) {
            return !t.isEmpty(e)
        }, checkExtend: function (e) {
            e = e || [];
            for (var i = e.length; i > 0; i--) t.isEmpty(e[i]) && e.splice(i, 1);
            return e
        }, getHttp: function () {
            return top.location.protocol
        }
    }, i.namespace("M2012.Contacts.ContactsInfo", a)
}(jQuery, _, M139);


//M2012.Main.View 顶端导航条
var top_model = Backbone.Model.extend({
    defaults: {},
    tips: {
        getSmsCode: "获取验证码",
        setBieName: "请您设置别名邮箱",
        aliasEnStart: "必须以英文字母开头",
        aliasLength: "别名长度必须5-15字符",
        aliasStrRange: "别名支持字符范围：0~9,a~z,“.”,“_”,“-”",
        limitedError: "您的操作过于频繁,请稍后再试",
        aliasOvermore: "别名个数超出限制",
        hasBieNameed: "别名已存在,请尝试其他别名",
        S_OKBieName: "别名邮箱设置成功",
        S_FALLBieName: "别名邮箱设置不成功",
        S_OKBindCellphone: "手机号绑定成功",
        S_FALLBindCellphone: "手机号绑定失败",
        S_OKSmsCode: "验证码发送成功",
        S_FALLSmsCode: "验证码发送失败",
        rightCellphone: "请输入11位正确的手机号码",
        plc_rightSmsCode: "请输入正确的验证码",
        plc_showSmsCode: "请输入短信验证码",
        systemError: "系统繁忙,请稍后再试",
        hasBinded: "该手机号已经绑定了139邮箱"
    },
    vipCenterConfig: {
        0: { name: "邮箱套餐", url: "html/index.html", bh: "topBar_vipmailCenter_meal_click", child: !1 },
        1: { name: "邮箱特权", url: "html/function.html", bh: "topBar_vipmailCenter_privileges_click", child: !1 },
        2: { type: "line" },
        3: {
            name: "特权包",
            child: {
                0: {
                    name: "邮箱伴侣",
                    url: "html/detailsPage(partner).html",
                    bh: "topBar_vipmailCenter_orderPartiner_click"
                },
                1: { name: "邮箱商务助手", url: "html/detailsPage(business).html", bh: "topBar_vipmailCenter_business_click" },
                2: {
                    name: "小和玛主题包",
                    url: "html/detailsPage(hema-theme).html",
                    bh: "topBar_vipmailCenter_xiaohema_click"
                },
                3: { name: "邮箱尊享权益包", url: "html/detailsPage(honor).html", bh: "topBar_vipmailCenter_emailEnjoy_click" },
                4: {
                    name: "邮箱精品权益包",
                    url: "html/detailsPage(young).html",
                    bh: "topBar_vipmailCenter_qualityGoods_click"
                },
                5: { name: "邮箱装扮权益包", url: "html/detailsPage(skin).html", bh: "topBar_vipmailCenter_dressUp_click" }
            }
        },
        4: {
            name: "短信彩信",
            child: {
                0: { name: "自写短信100条", url: "html/detailsPage(100).html", bh: "topBar_vipmailCenter_order100_click" },
                1: { name: "自写短信200条", url: "html/detailsPage(200).html", bh: "topBar_vipmailCenter_order200_click" },
                2: { name: "自写彩信50条", url: "html/detailsPage(50).html", bh: "topBar_vipmailCenter_order50_click" }
            }
        },
        5: {
            name: "邮箱功能",
            child: {
                0: {
                    name: "禁止转发",
                    url: "html/detailsPage(norelay).html",
                    bh: "topBar_vipmailCenter_buyForwardlock_click"
                },
                1: {
                    name: "误删除恢复",
                    url: "html/detailsPage(recovery).html",
                    bh: "topBar_vipmailCenter_mistakenDelete_click"
                },
                2: {
                    name: "邮件群发人数增加400人",
                    url: "html/detailsPage(400).html",
                    bh: "topBar_vipmailCenter_addMailSender_click"
                }
            }
        },
        6: {
            name: "邮箱装扮",
            child: {
                0: {
                    name: "VIP皮肤",
                    url: "html/detailsPage(vipSkin).html",
                    bh: "topBar_vipmailCenter_vipSkinBuy_click"
                },
                1: { name: "VIP名片", url: "html/detailsPage(vipCard).html", bh: "topBar_vipmailCenter_vip_card_click" },
                2: {
                    name: "靓号邮箱",
                    url: "html/detailsPage(pretty-number).html",
                    bh: "topBar_vipmailCenter_prettyNumber_click"
                },
                3: {
                    name: "纯净邮箱",
                    url: "html/detailsPage(clean-mail).html",
                    bh: "topBar_vipmailCenter_cleanMailBuy_click"
                }
            }
        },
        7: {
            name: "邮箱容量",
            child: {
                0: {
                    name: "5G邮箱容量包",
                    url: "html/detailsPage(capacity5g).html",
                    bh: "topBar_vipmailCenter_capacity5g_click"
                },
                1: {
                    name: "20G邮箱容量包",
                    url: "html/detailsPage(capacity20g).html",
                    bh: "topBar_vipmailCenter_capacity20g_click"
                }
            }
        }
    },
    serverCheckAlias: function (e, t) {
        var i = { alias: e, birthday: "" };
        M139.RichMail.API.call("user:checkAliasAction", i, function (e) {
            t(e.responseData)
        })
    },
    update: function (e, t) {
        M139.RichMail.API.call("user:updateAliasAction", e, function (e) {
            t(e.responseData)
        })
    },
    sendSmsCode: function (e, t) {
        M139.RichMail.API.call("user:sendSmsCode", e, function (e) {
            t && t(e)
        })
    },
    bindMobileNumber: function (e, t) {
        M139.RichMail.API.call("user:bindMobileNumber", e, function (e) {
            t && t(e.responseData)
        })
    }
});
M139.namespace("M2012.Main.View", {
    TopView: Backbone.View.extend({
        el: "#header",
        events: {},
        initialize: function (e) {
            var t = this;
            this.model = null,
            this.initEvents(),
            $App.on("infoSetLoad", function (e) {
                t.fsbeenCleanSkinUser(),
                t.setBackDefaultskin(),
                t.Screenadvertising();
                var i = e.userMainData.mainUserConfig.shownewuserguide && e.userMainData.mainUserConfig.shownewuserguide[0],
                    a = $App.getCurrentTab();
                if ("1" != i && a && "setting" != a.group && "83" != UserData.provCode &&
                    ($App.isOnceShowed("UserOpenNotify") || (top.mailNotifyData ? t.showNotifyOpen(top.mailNotifyData) : $App.once("notify_load", function (e) {
                    t.showNotifyOpen(e)
                }))), "13902220729" !== $User.getShortUid() && "13922201256" !== $User.getShortUid()) {
                    var s = new Date,
                        o = s.getHours();
                    14 > o ? ($(".replace-skin").on("click", "a", function (e) {
                        $(this).hasClass("replace-btn") ? (top.BH("changeSkin_oneKey_leaf"), top.$App.setSkin("skin_claritDreamLeaf"), $(this).parent().parent().hide(), $(document.getElementById("changeSkin").contentWindow.document.body).find(".main h2[name=newSkinLast]").next().find("li a").each(function (e, t) {
                            $(t).find("span:first").addClass("hide")
                        }), $(document.getElementById("changeSkin").contentWindow.document.body).find(".main h2[name=newSkinLast]").next().find("li:first").find("span").eq(1).removeClass("hide")) : $(this).hasClass("i_u_close") && (top.BH("changeSkin_leaf_close"), $(this).parent().hide())
                    }), setTimeout(function () {
                        top.$App.showOnce("transparentSkin", function () {
                            top.BH("changeSkin_leaf_number");
                            var e = $(".replace-skin").eq(0).find("img");
                            e.attr("_src") && e.attr("src", e.attr("_src")), $(".replace-skin").eq(0).show()
                        })
                    }, 3e3)) : o >= 14 && ($(".replace-skin").on("click", "a", function (e) {
                        $(this).hasClass("replace-btn") ? (top.BH("changeSkin_oneKey_water"), top.$App.setSkin("skin_claritSideRiver"), $(this).parent().parent().hide(), $(document.getElementById("changeSkin").contentWindow.document.body).find(".main h2[name=newSkinLast]").next().find("li a").each(function (e, t) {
                            $(t).find("span:first").addClass("hide")
                        }), $(document.getElementById("changeSkin").contentWindow.document.body).find(".main h2[name=newSkinLast]").next().find("li:last").find("span").eq(1).removeClass("hide")) : $(this).hasClass("i_u_close") && ($(this).parent().hide(), top.BH("changeSkin_water_close"))
                    }), setTimeout(function () {
                        top.$App.showOnce("transparentSkin", function () {
                            var e = $(".replace-skin").eq(1).find("img");
                            e.attr("_src") && e.attr("src", e.attr("_src")), $(".replace-skin").eq(1).show(), top.BH("changeSkin_water_number")
                        })
                    }, 3e3))
                }
            }),
            $GlobalEvent.on("click", this.resetTopFixTabsCssAndDropdown)
        },
        Screenadvertising: function () {
            "CleanMailbox" == top.$App.isclearSkinUser() && top.$App.on("welcome_UnifiedPosition_load", function (e) {
                top.$App.getCommConfig({ configId: 610 }, function (e) {
                    var t = { configId: 610, configValue1: 0, configValue2: "" };
                    "S_OK" == e.code && (0 == e["var"].length && (e["var"][0] = t), 0 == e["var"][0].configValue1 && (top.mwUnifiedPositionContent = ""))
                })
            })
        },
        setBackDefaultskin: function () {
            var e = this, t = "ComplexMailbox" == top.$App.isclearSkinUser(), i = top.$User.isHemaThemeUser(), a = top.$User.getSkinName(), s = e.getUserType(), o = e.isChangePackageStaute(a), n = $Cookie.get("SkinPath2");
            "free" == s && 1 == o && $App.setSkin("skin_lightblue"), t && "skin_cleanMail" == n && $App.setSkin("skin_lightblue"), i || "skin_hemaTheme" != n || $App.setSkin("skin_lightblue")
        },
        getUserType: function () {
            var e = "", t = top.$User.getServiceItem();
            if ("0016" == t || "0017" == t) e = "vip"; else if ("0010" == t || "0015" == t) {
                e = "free";
                for (var i = top.$App.getConfig("UserData").orderInfoList, a = i.length, s = [], o = [], n = 0; a > n; n++) s.push(i[n].serviceId), o.push(i[n].orderStatus);
                for (var n in s) {
                    if ("260" == s[n] && ("0" == o[n] || "4" == o[n])) {
                        e = "vip";
                        break
                    }
                    e = "free"
                }
            }
            return e
        },
        isChangePackageStaute: function (e) {
            for (var t = ["skin_twelAnimals", "skin_pink", "skin_golf", "skin_light", "skin_star", "skin_cat", "skin_animalMouse", "skin_animalBull", "skin_animalTiger", "skin_animalRabit", "skin_animalDragon", "skin_animalSnail", "skin_animalHorse", "skin_animalSheep", "skin_animalMonkey", "skin_animalChicken", "skin_animalDog", "skin_animalPig"], i = "", a = 0; a < t.length; a++) {
                if (e == t[a]) {
                    i = 1;
                    break
                }
                i = 2
            }
            return i
        },
        fsbeenCleanSkinUser: function () {
            "CleanMailbox" == top.$App.isclearSkinUser() && top.$App.showOnce("cleanMailChange", function () {
                top.$App.setSkin("skin_cleanMail")
            })
        },
        onReceiveLetterClick: function () {
            $App.getView("folder").model.set("vipMailStats", null), $App.trigger("reloadFolder", {
                callback: function () {
                    $App.showMailbox(1)
                }
            })
        },
        onComposeClick: function (e) {
            if (e.preventDefault(), this.composeClickTime && new Date - this.composeClickTime < 1e3) return void (this.composeClickTime = new Date);
            this.composeClickTime = new Date;
            var t = $App.getView("tabpage").model.pages;
            for (var i in t) if (i && i.indexOf("compose") >= 0) {
                var a = $(t[i].element).find("iframe")[0].contentWindow;
                try {
                    if ("compose" == a.mainView.model.get("pageType") && 1 == a.mainView.model.isBlankCompose()) return void $App.getView("tabpage").activeTab(i)
                } catch (s) {
                    console.error("onComposeClick ERROR.")
                }
            }
            return $App.show("compose"), !1
        },
        initEvents: function () {
            var e, t = this;
            e = "https:" == window.location.protocol ? getDomain("mail") + "/login/Logout.aspx?sid=" + sid + "&redirect=http://mail.10086.cn/logout.htm" :
                getDomain("mail") + "/login/Logout.aspx?sid=" + sid + "&redirect=" + encodeURIComponent(getDomain("mail") + "/logout.htm"),
            $("#logout").click(function (t) {
                t.cancel = !1, window.sessionStorage && (window.sessionStorage.removeItem("currentPage"), window.sessionStorage.removeItem("currentOptions"));
                try {
                    var i = $(top.$App.getCurrentTab().view.el).find("iframe")[0].contentWindow.$composeApp;
                    i && i.trigger("handlerClose", {
                        callback: function () {
                            return top && top.$App && top.$App.trigger("removeBeforeunload"), window.location.replace(e), !1
                        }, event: t
                    })
                } catch (a) {
                    t.cancel = !1
                }
                return !t.cancel && window.location.replace(e), !1
            }),
            $(document.getElementById("btn_compose")).click(function (e) {
                t.onComposeClick(e, arguments[1])
            }),
            $(document.getElementById("btn_receive")).click(function (e) {
                t.onReceiveLetterClick(e)
            }),
            $App.once("userDataLoad", function (e) {
                var i = 0;
                t.renderAccountList(e),
                t.checkAvaibleForMobile(),
                $.browser.msie || document.documentMode || "complete" == document.readyState ? t.renderUmcBox(e) : $(window).load(function () {
                    setTimeout(function () {
                        t.renderUmcBox(e)
                    }, 1e3)
                }),
                t.handlerEnterpriseArea(),
                t.phoneNoticeEvent(),
                t.renderHelpMenu(),
                t.renderUpdateServer(),
                t.specialInfo(),
                t.bindSkinEvent(),
                $User.isChinaMobileUser() ? i = $User.getProvCode() : $("#mailLog").attr("href", "javascript:$App.showMailbox(1)"),
                $("#help").attr("href", getDomain("help") + "/" + i + "/index.html?sid=" + $App.getSid());
                var a = getDomain("uec");
                $User.isGrayUser() && (a = "http://smsrebuild0.mail.10086.cn/uec"),
                $("#btn_feedback").attr("href", a + "/jumpFeedbackRedirect.do?isdirect=1&nav=3&isfirst=1&sid=" + $App.getSid()),
                t.showTopAd(),
                M139.Logger.getDefaultLogger().debug("userdataload topviewrender"),
                $App.requireUserData(function () {
                    M139.UI.HelloFriend.initialize(), M139.UI.fileClear.initialize(), new M139.UI.TipSubscribeCalendar, t.getMailExeIntall()
                })
            }),
            t.initTopFixedTabs(),
            $("#recommend").hover(function () {
                $(this).offset().left > 0 && $(this).addClass("selectOn")
            }, function () {
                $(this).removeClass("selectOn")
            }),
            VoiceInput.create({
                button: "#btn_foiceSearch", onComplete: function (e) {
                    var i = $("#newTb_mailSearch");
                    i.val() == t.seachBoxtip ? i.val(e) : i.val(i.val() + e), setTimeout(function () {
                        i.focus()
                    }, 500)
                }
            }),
            $("ul.newLogoInfo").on("mouseenter", "li.newLogoInfo_li", function () {
                $(this).addClass("on")
            }).on("mouseleave", "li.newLogoInfo_li", function () {
                $(this).removeClass("on")
            }),
            $("#iMobile").click(function () {
            }).hover(function () {
                "6" == top.$User.getProvCode() || "22" == top.$User.getAreaCode();
                $("#qrc_title").html("139邮箱手机APP"), $("#iMobile img").each(function () {
                    $(this).attr("src") || $(this).attr("src", $(this).attr("orgsrc"))
                }), top.$User.isChinaMobileUser() ? (M139.HttpRouter.addRouter("weixin", ["weixin:getWeixinQrCode"]), M139.RichMail.API.call("weixin:getWeixinQrCode", {}, function (e) {
                    e && e.responseData && "S_OK" == e.responseData.code ? $(".weChat_img").attr("src", e.responseData.qrCodeUrl) : "-2" == e.responseData.code ? $(".weChat_img").attr("src", "../images/global/weChat.jpg") : $(".weChat_img").attr("src", "../images/global/weChat.jpg")
                })) : $(".weChat_img").attr("src", "../images/global/weChat.jpg"), $("#i_qrcode").show()
            }, function () {
                setTimeout(function () {
                    0 == $("#iMobile").hasClass("on") && $("#i_qrcode").hide()
                }, 500)
            }),
            $("#i_qrcode").click(function (e) {
                e.stopPropagation()
            }),
            top.$("#i_qrcode").find("#epDownBtn").on("click", function () {
                $(this).attr({
                    href: "http://mail.10086.cn/advertise/index.html",
                    target: "_blank"
                }), top.BH("mob_client_top_sendEp")
            }),
            $App.on("notify_load", function (e) {
                top.mailNotifyData = e, t.Mailnotify ? M2015.Mailnotify.View.setData({ notifydata: e }) : (t.Mailnotify = M2015.Mailnotify.View.create({
                    notifydata: e,
                    type: "notify"
                }), $App.registerView("mailnotifyTip", t.Mailnotify))
            }),
            $App.on("Undisturb_load", function (e) {
                t.Mailnotify ? M2015.Mailnotify.View.setData({ Undisturbdata: e }) : (t.Mailnotify = M2015.Mailnotify.View.create({
                    Undisturbdata: e,
                    type: "Undisturb"
                }), $App.registerView("mailnotifyTip", t.Mailnotify))
            }),
            window.isReadFirstMailInLeft = !0;
            
        },
        bindguild: {
            cancelled: ['<div class="norTips" style="padding:30px;">', '<span class="norTipsIco"><i class="MB_Icon i-redWarnBig" style="vertical-align:top;"></i></span>', '<dl class="norTipsContent layouttipsAccount">', '<dt class="norTipsTitle MB_MessageBox_Title"><p class="orange">该手机号码与邮箱已解除绑定</p></dt>', '<dd class="norTipsLine"><p class="gray fz_12">如需继续使用139邮箱，请您设置别名或绑定手机号，否则手机号被他人使用，您将不能登录邮箱。</p></dd>', '<dd class="norTipsLine mt_5">', '<p class="fw_b">设置邮箱别名帐号</p>', '<p class="gray fz_12" id="">可以用来登录邮箱，更有效保护个人隐私。</p>', '<div class="mt_5"><input type="text" class="ipt-text" id="bieNameText" style="width:140px;margin-right:5px;" value="" placeholder="" /><span class="">@139.com</span></div>', '<div class="gray fz_12 id="checkTip">以字母开头，5-15个字符。</div>', '<div class="red fz_12" id= "tip" ></div>', "</dd>", "</dl>", "</div>"].join(""),
            bmdtip: ['<div class="norTips" style="padding:30px;">', '<span class="norTipsIco"><i class="MB_Icon i-redWarnBig" style="vertical-align:top;"></i></span>', '<dl class="norTipsContent layouttipsAccount">', '<dt class="norTipsTitle MB_MessageBox_Title"><p class="orange">该手机号码与邮箱已解除绑定</p></dt>', '<dd class="norTipsLine"><p class="gray fz_12">如需继续使用139邮箱，请您设置别名或绑定手机号，否则手机号被他人使用，您将不能登录邮箱。</p></dd>', '<dd class="norTipsLine mt_5">', '<p class="fw_b">绑定新手机号码</p>', '<p class="gray fz_12">可实时收到免费的邮件到达提醒。</p>', '<div class="mt_5"><input type="text" class="ipt-text" style="width:210px;" id="cardTitle" value="" placeholder=""/></div>', '<div class="red fz_12" id= "tipst" style="padding-left:5px" ></div>', '<div class="mt_5"><input type="text" class="ipt-text" style="width:100px;margin-right:5px;" id="smsCode" value="" placeholder=""  /><a class="icoTb" href="javascript:"><span id="getmsmCode">获取验证码</span></a></div>', '<div class="red fz_12" id= "tipnd" style="padding-left:5px"></div>', "</dd>", "</dl>", "</div>"].join("")
        },
        topmodel: new top_model,
        specialInfo: function () {
            function e() {
                this.timer && (clearInterval(this.timer), u.$el.find("#getmsmCode").text(d.topmodel.tips.getSmsCode).removeClass("c_ccc"));
                var t = 60;
                this.timer = setInterval(function () {
                    --t, 0 >= t ? (clearInterval(this.timer), u.$el.find("#getmsmCode").text(d.topmodel.tips.getSmsCode).removeClass("c_ccc"), u.$el.find("#getmsmCode").bind("click", function () {
                        a() && (top.BH("click_setbindNumber_getsmscode"), e(), n())
                    }), o("#cardTitle", "请输入手机号码", "#tipst")) : (u.$el.find("#getmsmCode").unbind("click"), u.$el.find("#cardTitle").unbind(""), u.$el.find("#getmsmCode").text(t + "秒后重试").addClass("c_ccc"))
                }, 1e3)
            }

            function t() {
                var e = u.$el, t = e.find("#smsCode").val(), i = t.trim(), a = /^\d{6}$/.test(i);
                return a ? (e.find("#tipnd").text(""), !0) : (e.find("#tipnd").text(d.topmodel.tips.plc_showSmsCode), !1)
            }

            function i() {
                var e = m.$el, t = e.find("#bieNameText").val(), i = t.trim(), a = /^[^A-Za-z]\w*/.test(i), s = /\s/.test(i) || /[^A-Za-z0-9_\-\.]/.test(i);
                return "例:bieming" == i ? (e.find("#tip").text(d.topmodel.tips.setBieName), !1) : s ? (e.find("#tip").text(d.topmodel.tips.aliasStrRange), !1) : a ? (e.find("#tip").text(d.topmodel.tips.aliasEnStart), !1) : i.length > 15 || i.length < 5 ? (e.find("#tip").text(d.topmodel.tips.aliasLength), !1) : (e.find("#tip").text(), !0)
            }

            function a() {
                var e = u.$el, t = e.find("#cardTitle").val(), i = t.trim(), a = /^(13[0-9]|14[0-9]|15[0-9]|18[0-9])\d{8}$/.test(i);
                return a ? (e.find("#tipst").text(""), !0) : (e.find("#tipst").text(d.topmodel.tips.rightCellphone), !1)
            }

            function s(e, t, i) {
                var a = m.$el, s = a.find(e).val(), o = s.trim();
                0 == o.length && a.find(e).val(t).addClass("gray"), a.find(e).focus(function (s) {
                    a.find(e).val() == t && $(this).val("").removeClass("gray"), $(this).parent().siblings(i).text("")
                }).blur(function (i) {
                    var s = a.find(e).val(), o = s.trim();
                    0 == o.length && $(this).val(t).addClass("gray")
                })
            }

            function o(e, t, i) {
                var a = u.$el, s = a.find(e).val(), o = s.trim();
                0 == o.length && a.find(e).val(t).addClass("gray"), a.find(e).focus(function (s) {
                    a.find(e).val() == t && $(this).val("").removeClass("gray"), $(this).parent().siblings(i).text("");
                }).blur(function (i) {
                    var s = a.find(e).val(), o = s.trim();
                    0 == o.length && $(this).val(t).addClass("gray")
                })
            }

            function n() {
                var e = u.$el, t = e.find("#cardTitle").val(), i = t.trim();
                a() && d.topmodel.sendSmsCode({ mobileNumber: i }, function (t) {
                    var t = t.responseData;
                    return "S_OK" == t.code ? (e.find("#tipnd").text(d.topmodel.tips.S_OKSmsCode), !0) : "Frequency_Limited_Error" == t.code ? (e.find("#tipnd").text(d.topmodel.tips.limitedError), !1) : (e.find("#tipnd").text(d.topmodel.tips.S_FALLSmsCode), !1)
                })
            }

            function r() {
                var e = u.$el, i = e.find("#cardTitle").val(), s = e.find("#smsCode").val(), o = i.trim(), n = s.trim();
                a() && t() && d.topmodel.bindMobileNumber({ mobileNumber: o, passid: "", password: n }, function (e) {
                    var t = e.code;
                    c(t)
                })
            }

            function l(i, s) {
                switch (i) {
                    case "S_OK":
                        d.topmodel.update({ alias: s, isNewVersion: 1, opType: 0 }, function (i) {
                            var s = i.code;
                            if ("S_OK" == s) m.close(), top.$App.trigger("userAttrChange"), u = top.$Msg.showHTML(d.bindguild.bmdtip, function (e) {
                                e.cancel = !0, top.BH("click_setbindNumber"), a() && t(), r()
                            }, function () {
                            }, { buttons: ["确定", "取消"] }), bindMobile = u.$el, bindMobile.find("#getmsmCode").click(function (t) {
                                a() && (top.BH("click_setbindNumber_getsmscode"), e(), n()), u.$el.find("#cardTitle").on("fcousInputB")
                            }), o("#cardTitle", "请输入手机号码", "#tipst"), o("#smsCode", "请输入验证码", "#tipnd"); else {
                                var l = m.$el;
                                l.find("#tip").text(d.topmodel.tips.S_FALLBieName)
                            }
                        });
                        break;
                    case "PML10406002":
                        var l = m.$el;
                        l.find("#tip").text(d.topmodel.tips.hasBieNameed);
                        break;
                    case "PML10406001":
                        var l = m.$el;
                        l.find("#tip").text(d.topmodel.tips.limitedError);
                        break;
                    default:
                        var l = m.$el;
                        l.find("#tip").text(d.topmodel.tips.aliasOvermore)
                }
            }

            function c(e) {
                switch (e) {
                    case "0":
                        var t = u.$el;
                        t.find("#tipnd").text(""), top.M139.UI.TipMessage.show("加载中..."), top.M139.UI.TipMessage.show(d.topmodel.tips.S_OKBindCellphone, { delay: 2e3 }), u.close(), top.$App.trigger("userAttrChange");
                        break;
                    case "ER_PWD_EXPIRE":
                    case "ER_PWD_UNPASS":
                    case "ER_PWD_OVERFLOW":
                        var t = u.$el;
                        t.find("#tipnd").text(d.topmodel.tips.plc_rightSmsCode);
                        break;
                    case "99":
                    case "201023":
                        var t = u.$el;
                        t.find("#tipnd").text(d.topmodel.tips.systemError);
                        break;
                    case "201030":
                    case "201031":
                    case "201001":
                    case "202039":
                    case "20203":
                        var t = u.$el;
                        t.find("#tipnd").text(d.topmodel.tips.hasBinded);
                        break;
                    default:
                        var t = u.$el;
                        t.find("#tipnd").text(d.topmodel.tips.systemError)
                }
            }

            var d = this, p = $Cookie.get("loginProcessFlag");
            if ($Cookie.set({
                name: "loginProcessFlag",
                value: "",
                domain: "mail." + document.domain
            }), p && 2 == p) BH("rpassword_show"), $Msg.confirm("为防止您的帐号被他人非法盗用，请及时修改密码。", function () {
                BH("rpassword_change"), d.changepassword()
            }, function () {
                BH("rpassword_not")
            }, {
                dialogTitle: "温馨提示",
                title: "密码安全等级过低",
                buttons: ["修改密码", "暂不修改"],
                icon: "warn"
            }), $("a.CloseButton") && $("a.CloseButton").attr("bh", "rpassword_close"); else if (p && 1 == p) BH("cancelfrozen_show"), $Msg.confirm("您的帐号可能发送过垃圾邮件，如非本人操作，请及时修改密码。", function () {
                BH("cancelfrozen_change"), d.changepassword()
            }, function () {
                BH("cancelfrozen_not"), $Msg.confirm("下次仍有可能被他人非法使用，为保护您的帐户安全，请及时修改密码", function () {
                    BH("cancelfrozen_change_again"), d.changepassword()
                }, function () {
                    BH("cancelfrozen_not_again")
                }, {
                    dialogTitle: "温馨提示",
                    title: "您确定要继续使用原密码登录？",
                    buttons: ["修改密码", "不再提示"],
                    icon: "warn"
                }), $("a.CloseButton") && $("a.CloseButton").attr("bh", "cancelfrozen_close_again")
            }, {
                dialogTitle: "温馨提示",
                title: "解冻成功",
                buttons: ["修改密码", "暂不修改"],
                icon: "ok"
            }), $("a.CloseButton") && $("a.CloseButton").attr("bh", "cancelfrozen_close"); else if (p && 3 == p) BH("auto_passage_show"), $Msg.confirm("您上次已关闭139邮箱业务，现已为您自动激活，点击确定即可正常使用", function () {
                BH("auto_passage_sure")
            }, function () {
                BH("auto_passage_not"), window.location.href = "https://www.cmpassport.com/umc/?sourceid=3&from=3"
            }, {
                dialogTitle: "温馨提示",
                title: "互联网通行证登录成功",
                buttons: ["确定", "暂不使用"],
                icon: "ok"
            }), $("a.CloseButton") && $("a.CloseButton").attr("bh", "auto_passage_close"); else if (p && 4 == p) {
                if ("" == top.$User.getAliasName()) {
                    var m = top.$Msg.showHTML(d.bindguild.cancelled, function (e) {
                        e.cancel = !0, top.BH("click_setbindbiename");
                        var t = $(m.$el).find("#bieNameText").val(), t = m.$el.find("#bieNameText").val();
                        i() && d.topmodel.serverCheckAlias(t, function (e) {
                            var i = e.code;
                            l(i, t)
                        })
                    }, function (i) {
                        m.close(), u = top.$Msg.showHTML(d.bindguild.bmdtip, function (e) {
                            e.cancel = !0, top.BH("click_setbindNumber"), a() && t(), r()
                        }, function (e) {
                        }, { buttons: ["确定", "取消"] }), bindMobile = u.$el, bindMobile.find("#getmsmCode").click(function (t) {
                            a() && (top.BH("click_setbindNumber_getsmscode"), e(), n()), u.$el.find("#cardTitle").on("fcousInputB")
                        }), o("#cardTitle", "请输入手机号码", "#tipst"), o("#smsCode", "请输入验证码", "#tipnd")
                    }, { buttons: ["下一步", "跳过"] });
                    s("#bieNameText", "例:bieming", "#tip")
                } else var u = top.$Msg.showHTML(d.bindguild.bmdtip, function (e) {
                    e.cancel = !0, top.BH("click_setbindNumber"), a() && t(), r()
                }, function () {
                }, { buttons: ["确定", "取消"] });
                u.$el.find("#getmsmCode").on("click", function () {
                    a() && (top.BH("click_setbindNumber_getsmscode"), e(), n())
                }), o("#cardTitle", "请输入手机号码", "#tipst"), o("#smsCode", "请输入验证码", "#tipnd")
            }
        },
        bindSkinEvent: function () {
            var e = $App.getCustomAttrs("skinIcon"), t = $("#head_changeSkin");
            e || t.find("a").html('<i class="i-newsmall"></i>换肤'), t.off("click").on("click", function (e) {
                $App.getCustomAttrs("skinIcon") || ($App.setCustomAttrs("skinIcon", "1"), t.find("a").html("<i>换肤</i>"));
                try {
                    Package.require("skin_tip", function () {
                        var e = M2012.SelectSkinsTips.View.instance;
                        if (e) e.closeTip(); else {
                            var t = new M2012.SelectSkinsTips.View;
                            t.render()
                        }
                    }), top.BH("open_changeskin")
                } catch (e) {
                }
            })
        },
        showTopAd: function () {
            $("#divTab").append('<div style="right:15px; top:0px; position:absolute; display:none;" id="indexTopAd"></div>'), setTimeout(function () {
                var e = {
                    comeFrom: 4,
                    positionCodes: "web_078"
                }, t = $Date.getDaysPass(new Date, $Date.parse("2016-11-22"));
                if (t > 1) {
                    var i = Math.random();
                    1 / t + .15 > i && (e = { comeFrom: 4, positionCodes: "web_078,web_163" })
                } else e = { comeFrom: 4, positionCodes: "web_078,web_163" };
                top.M139.RichMail.API.call("unified:getUnifiedPositionContent", e, function (e) {
                    var t = e.responseData, i = t["var"] && t["var"].web_078 && t["var"].web_078[0];
                    if (t && "S_OK" == t.code && i) try {
                        var a = i.content;
                        a && -1 == a.indexOf("none") && (a = a.replace(/http:/g, location.protocol), $("#indexTopAd").html(a)), "mailbox_1" == top.$App.getCurrentTab().name ? $("#indexTopAd").show() : $("#indexTopAd").hide()
                    } catch (s) {
                        $("#indexTopAd").remove()
                    } else $("#indexTopAd").remove()
                })
            }, 1e3), top.$App.on("showTab", function (e) {
                "mailbox_1" == e.name ? $("#indexTopAd").show() : $("#indexTopAd").hide()
            })
        },
        showNotifyOpen: function (e) {
            var t = this, i = e;
            if (console.log(i), i && i[0] && !i[0].enable) {
                i[0].enable = !0, i[0].notifytype = "0010" == top.$User.getUserLevel() || "0015" == top.$User.getUserLevel() ? 1 : 4;
                var a = {
                    win: ['<div id="openNotify" class="messageRemind" style="z-index:9999;position:absolute">', '<div class="messageremind-head"><h2>有了短信提醒，再也不会错过重要邮件啦！</h2></div>', '<div class="messageremind-content">', '<img class="messageremind-bg" src="../images/global/avatar/messageremind-bg.jpg">', '<div class="messageremind-clumn">', '<div class="clumn-t">', "<p>Boss用邮件给你布置了<em>紧急任务</em>，你却浑然不知?</p>", "<p>他 / 她用邮件给你发了<em>心里话</em>，<br>你3天后才回应？</p>", "<p>现在，你再也不用担心错过时机!</p>", "</div>", '<div class="clumn-b">', "<p>短信提醒，助你第一时间掌控重<br/>要邮件信息。</p>", '<div class="clumn-b-link">', '<a href="javascript:void(0)" class="link-free">免费开通</a><a href="javascript:void(0)" class="link-now">暂不开通</a>', "</div>    ", "</div>    ", "</div>", "</div>", "</div>"].join(""),
                    sucess: ['<div id="sucessNotify" class="messageRemind" style="z-index:9999;position:absolute">', '<div class="messageremind-head"><h2>有了短信提醒，再也不会错过重要邮件啦！</h2></div>', '<div class="messageremind-content">', '<img class="messageremind-bg" src="../images/global/avatar/messageremind-bg.jpg">', '<div class="messageremind-sucess">', '<div class="messageremind-sucess-t">', '<h2><span class="norTipsIco"><i class="i_ok"></i></span>开通成功</h2>', "<p>不想收到骚扰邮件？</p>", '<p class="messageremind-info">进入详细设置看看吧！</p>', "</div>  ", '<a href="javascript:void(0)" class="messageremind-set">进入短信提醒设置</a>', '<a href="javascript:void(0)" class="set-now">暂不设置</a>', "</div>", "</div>"].join("")
                };
                $User.isChinaMobileUser() && $App.showOnce("UserOpenNotify", function () {
                    t.showNotifyWin(a, i)
                })
            }
        },
        showNotifyWin: function (e, t) {
            var i = this;
            i.mask = $Msg.showMask({ zIndex: 9998 }), $("body").append(e.win);
            var a = $("#openNotify"), s = $D.getWinHeight(), o = $D.getWinWidth();
            a.css({ top: s / 2 - 221 + "px", left: o / 2 - 291 + "px" }), a.find(".link-free").click(function () {
                BH("set_notice_save"), M139.RichMail.API.call("user:updateMailNotify", { mailnotify: t }, function (t) {
                    t && t.responseData && "S_OK" == t.responseData.code ? (a.remove(), i.showNotifySucess(e.sucess)) : alert("网络异常，请重试")
                })
            }), a.find(".link-now").click(function () {
                i.mask.remove(), a.remove()
            })
        },
        showNotifySucess: function (e) {
            var t = this;
            $("body").append(e);
            var i = $("#sucessNotify"), a = $D.getWinHeight(), s = $D.getWinWidth();
            i.css({ top: a / 2 - 221 + "px", left: s / 2 - 291 + "px" }), i.find(".messageremind-set").click(function () {
                t.mask.remove(), i.remove(), $App.show("spam_new_setting")
            }), i.find(".set-now").click(function () {
                t.mask.remove(), i.remove()
            })
        },
        showNewyearwish: function () {
            var e = new Date("2016,0,9,0,0,0").getTime(), t = top.M139.Date.getServerTime().getTime();
            t >= e || top.$App.showOnce("newYearWish2016", function () {
                top.Package.require("newyearwish", function () {
                    "welcome" == top.$App.getView("top").getDefaultEntrytab() && 2 != top.UserData.vipType && (top.$(".layer_mask").remove(), $Msg.showMask({ zIndex: 4999 }), window.birthdayWish = new M2012.Product.NewYearWish.View, birthdayWish.render())
                })
            })
        },
        changepassword: function () {
            var e = 12, t = {
                optype: 12,
                rnd: Math.random()
            }, i = M139.HttpRouter.getUrl("umc:rdirectCall").replace("/setting/", "/mw2/setting/");
            top.$User.isUmcUserAsync(function (a) {
                a || (t.to = t.optype, t.optype = e), i = $Url.makeUrl(i, t), a ? top.window.open(i) : (top.LinkConfig.password = {
                    url: i,
                    site: "",
                    title: "修改密码"
                }, top.$App.show("password"))
            })
        },
        preInitSearch: function () {
            var e = this;
            e.switchSearchBoxTips(), $("#tb_mailSearch").css("color", "gray").val(e.seachBoxtip), $("#op_mail").mouseover(function () {
                $(this).css("cursor", "default")
            }), e.initForSearch()
        },
        initForSearch: function () {
            function e(e, t) {
                var s = t;
                ("" == F.val().trim() || $(s).val() && "" == $(s).val().trim()) && (e = !1), e ? (i(null, s), C.firstShow = !1) : a()
            }

            function t(e) {
                for (var t = L[e], i = 0, a = t.length; a > i; i++) U.find("li:eq(" + t[i] + ")").show()
            }

            function i(e, i) {
                var a = ($App.getCustomAttrs("searchDefaultSetting"), $(i).val() && $(i).val().trim() || F.val().trim()), s = C.getNewTextOverFlow2(a), o = U.find("a");
                o.each(function (e, t) {
                    "isAllmail" == this.getAttribute("newField") || "subject" == this.getAttribute("field") || "subject_content" == this.getAttribute("field") ? $(this).find("strong").text(s) : $(this).find("strong").text(s.split(" ")[0])
                });
                var n = 1, r = $("#toFixTabs").find("li.on").attr("name");
                C.subKeyWords;
                if (U.find("li").hide(), "googSubscription" == r) {
                    L.googSubscription = [];
                    for (var l = C.subKeyWords && C.subKeyWords.length, c = E ? 15 : 13, d = l; d > 0; d--) d != l ? (L.googSubscription.push(c + d), U.find("li:eq(" + (c + d) + ") a").html(C.subKeyWords[d]).click(function () {
                        F.val($(this).html())
                    })) : (e !== !0 && L.googSubscription.push(c - 1), L.googSubscription.push(c))
                }
                "addr" == r || "diskDev" == r || "googSubscription" == r || "calendar" == r ? (n = L[r][0], t(r)) : ($.each(j, function (e, t) {
                    return "allmail" == $(this).attr("field") ? (n = e, !1) : void 0
                }), U.find("li").show(), $("#li_op_subject_content,#li_op_tempStorage").hide(), $("#li_op_attach_name,#li_op_attach_from,#li_op_attach_subject").hide(), _.each(L.calendar, function (e) {
                    U.find("li").eq(e).hide()
                }, this), U.find("#everyOneSearch").parent().hide(), U.find(".searchAD").parent().hide()), j.removeClass("sel"), i && "newTb_mailSearch" == i.id ? $("#searchMenu").find("a").removeClass("selected") : (j.eq(n).addClass("sel"), w(j.eq(n))), F.parent().addClass("searchContentOn"), U.removeClass("hide")
            }

            function a() {
                F.parent().removeClass("searchContentOn"), U.addClass("hide")
            }

            function s() {
                top.$App.getView("mailbox_other").model.set("searchIsComeformDefault", "from")
            }

            function o(t, i) {
                R = !0, top.$App.getView("mailbox").model.set("IamFromLaiwang", !1);
                var a = ($App.getCustomAttrs("searchDefaultSetting"), F.val().trim()), s = $("#toFixTabs").find("li.on").attr("name");
                if (top.$App.getView("mailbox_other").model.set("searchContent", a), T || "" != a && ("googSubscription" == s || a != C.seachBoxtip)) if (C.keyword = a, "mail" == t) if (a.length > 100 && (top.FF.alert("仅支持对100个字符的关键词搜索，100个字符外的字词将被忽略"), a = a.substring(0, 100)), top.$App.getView("mailbox_other").model.set("showSearchclassify", !0), top.$App.getView("mailbox_other").model.set("closeFromTo", !1), i && "allmail" == i) {
                    var o = r(a);
                    top.$App.getView("mailbox_other").model.set("closeFromTo", !0), top.$App.getView("mailbox_other").model.set("closeFromTo", !0), $App.searchMail(o)
                } else if (i && "all" != i) {
                    var o = n(a, i);
                    $App.searchMail(o)
                } else "all" == i ? $App.searchMail(a) : $App.searchMail(a); else {
                    if ("attach" == t) return BH("diskv2_search"), T ? (T.from = "attachment", $App.show("diskDev", T), void (T = null)) : (k = k ? k : "attachName", $App.show("diskDev", {
                        from: "attachment",
                        keyword: a,
                        filterName: k
                    }), void (k = ""));
                    "disk" == t ? $App.show("diskDev", "&keyword=" + escape(a)) : "contact" == t ? "addr" == s ? $App.trigger("searchkeywordChange", {
                        type: "addr",
                        keyword: a
                    }) : top.SiteConfig.isAddrV3 ? $App.show("addrhome", {
                        goid: 9001,
                        keyword: a,
                        redirect: "addr_search"
                    }) : $App.show("addrhome", {
                        goid: 9001,
                        keyword: a,
                        homeRoute: 10300
                    }) : "tempStorage" == t ? (BH("diskv2_search"), $App.show("diskDev", {
                        from: "cabinet",
                        keyword: a
                    })) : "googSubscription" == t ? (a.length > 100 && ($Msg.alert("仅支持对100个字符的关键词搜索，100个字符外的字词将被忽略"), a = a.substring(0, 100)), C.subKeyWords && C.subKeyWords[0] == a.trim() ? BH("mpost_search_default") : $.inArray(a.trim(), C.subKeyWords) ? BH("mpost_search_word") : BH("mpost_search_normal"), $App.show("googSubscription", { keyword: a })) : "calendar" == t ? (BH("calendar_calendarsearch_click"), $App.trigger("calendarSearch", {
                        type: "subscribe",
                        keyword: a,
                        searchType: "calendar"
                    })) : "calendarActivity" == t && (BH("calendar_calendarPersonalSearch_click"), $App.trigger("calendarSearch", {
                        type: "describe",
                        keyword: a,
                        searchType: "activity"
                    }))
                } else $Msg.alert("请输入关键词");
                e(!1), F.blur()
            }

            function n(e, t) {
                for (var i = e, t = t.split("_"), a = [], s = 2, o = 0; o < t.length; o++) a.push({
                    field: t[o],
                    operator: "contains",
                    value: e
                });
                return "" != e && (i = {
                    condictions: a,
                    isFullSearch: s
                }, "attachName" == t && (i.flags = { attached: 1 })), i
            }

            function r(e) {
                for (var t, i = ["subject", "from", "to"], a = [], s = 0; s < i.length; s++) a.push({
                    field: i[s],
                    operator: "contains",
                    value: e
                });
                return t = { condictions: a }
            }

            function l() {
                var e = [], t = { fullSearchType: 2, searchAttach: !0 };
                return V.each(function (i, a) {
                    var s = this.value.trim();
                    this.getAttribute("oldValue") && (s = s.replace(/[,，;；、\/]/g, " ").replace(/\s+/g, " "), "from" != this.getAttribute("field") && "to" != this.getAttribute("field") || (s = s.split(" ")[0]), e.push({
                        field: this.getAttribute("field"),
                        operator: "contains",
                        value: s
                    }), "from" != this.getAttribute("field") && (t.fullSearchType = 1), "attachName" != this.getAttribute("field") && (t.searchAttach = !1))
                }), 0 == e.length ? void top.$Msg.alert("请输入关键字") : void c(e, t)
            }

            function c(e, t) {
                var i = 0, t = t || {};
                if (t.searchAttach) {
                    var a = $("#newSearch_attach").val().replace(/[,，;；、\/]/g, " ").replace(/\s+/g, " ");
                    return void $App.show("diskDev", { from: "attachment", keyword: a, filterName: "attachName" })
                }
                1 == $App.getConfig("UserAttrs").fts_flag && 1 == t.fullSearchType && (i = 3);
                var s = { condictions: e, isFullSearch: i };
                top.$App.searchMail(s)
            }

            function d() {
                function t() {
                    var e = $App.getConfig("UserAttrs");
                    return 1 == e.fts_flag ? "310px" : "290px"
                }

                var i = $("#toFixTabs").find("li.on").attr("name");
                e(!1);
                var i = $("#toFixTabs").find("li.on").attr("name");
                if ("diskDev" === i) return void m();
                if (!$("#popup_searchadvance").is(":visible")) {
                    var a = top.$App.getView("mailbox_other").model;
                    a.set("loadAdvanceSearchForm", "top"), $("#popup_searchadvance .searchadvance").html('<iframe src=\'advance_search_v2.html\' frameborder="0" allowTransparency="true" style=\'border:0px;width:408px;height:' + t() + "'/>"), $("#popup_searchadvance").css({ height: t() }), $("#popup_searchadvance").show(), setTimeout(function (e) {
                        $(document.body).click(function () {
                            $("#popup_searchadvance").hide(), $("#popup_searchadvance .searchadvance").html("")
                        })
                    }, 1e3)
                }
            }

            function p() {
                var e = [{ text: "全部文件夹" }, { text: "VIP附件", fid: "99" }, {
                    text: "星标附件",
                    fid: "98"
                }], t = top.$App.getFolders("tag");
                _.each(t, function (t) {
                    e.push({ text: t.name, fid: t.fid })
                }), A = M2012.UI.DropMenu.create({
                    defaultText: "全部文件夹",
                    width: "226px",
                    maxHeight: 156,
                    menuItems: e,
                    container: $("#attach_folders")
                })
            }

            function m() {
                if (A && I) $("#attachAdvanceSearch").is(":visible") ? h() : u(); else {
                    p(), top.$App.on("reloadFolder", function () {
                        A.menu && A.menu.$el.remove(), A && A.remove(), p()
                    });
                    var e = (new Date).valueOf(), t = 864e5;
                    I = M2012.UI.DropMenu.create({
                        defaultText: "不限",
                        width: "226px",
                        maxHeight: 156,
                        menuItems: [{ text: "不限" }, { text: "一周内", start: e - 7 * t, timeFlag: 1 }, {
                            text: "一月内",
                            start: e - 30 * t,
                            timeFlag: 2
                        }, { text: "三月内", start: e - 90 * t, timeFlag: 3 }, {
                            text: "半年内",
                            start: e - 330 * t,
                            timeFlag: 4
                        }, { text: "一年内", start: e - 365 * t, timeFlag: 5 }, { text: "自定义" }],
                        container: $("#attach_timeRange")
                    }), I.on("change", function (e) {
                        if ("自定义" == e.text) {
                            var t = (new Date).format("yyyy-MM-dd");
                            if ($("#attach_startTime").val(t), $("#attach_endTime").val(t), $("#attach_customTime").show(), S) return;
                            var i = $("#attach_startTime"), a = $("#attach_endTime"), s = $("#attach_timeTip"), o = $Date.parse(i.val() + " 00:00:00"), n = $Date.parse(a.val() + " 00:00:00");
                            S = new M2012.UI.Picker.Calendar({
                                bindInput: i,
                                value: o,
                                dateStart: "0000000000000",
                                dateEnd: n.getTime() + ""
                            }), S.on("select", function (e) {
                                var t = e.value.format("yyyy-MM-dd");
                                i.val(t), e.value > $Date.parse(a.val() + " 00:00:00").getTime() ? (B = !1, s.show()) : (B = !0, s.hide())
                            }), D = new M2012.UI.Picker.Calendar({
                                bindInput: a,
                                value: n,
                                dateStart: "0000000000000",
                                dateEnd: n.getTime() + ""
                            }), D.on("select", function (e) {
                                var t = e.value.format("yyyy-MM-dd");
                                a.val(t), $Date.parse(i.val() + " 00:00:00").getTime() > e.value ? (B = !1, s.show()) : (B = !0, s.hide())
                            })
                        } else $("#attach_customTime").hide()
                    }), u()
                }
            }

            function u() {
                $("#attachAdvanceSearch").show(), M139.Dom.bindAutoHide({
                    action: "click",
                    element: $("#attachAdvanceSearch")[0],
                    stopEvent: !0,
                    callback: h
                })
            }

            function h() {
                $("#attachAdvanceSearch input").val(""), A.setSelectedIndex(0), I.setSelectedIndex(0), $("#attach_customTime").hide(), $("#attachAdvanceSearch").hide(), M139.Dom.unBindAutoHide({
                    action: "click",
                    element: $("#attachAdvanceSearch")[0]
                })
            }

            function f(e, t) {
                BH("top_searchWithEnter"), t && "newTb_mailSearch" == t.id && top.BH("newEnterSearch");
                var i = b(), a = "allmail";
                if (t && "tb_mailSearch" != t.id) {
                    var s = $("#searchMenu").find("a.selected").attr("field") || "allmail";
                    o("mail", s)
                } else if (null == i || e) {
                    var n = $("#toFixTabs").find("li.on").attr("name");
                    if ("addr" == n) return o("contact"), !1;
                    if ("diskDev" == n) return k = i.attr("filterName"), o("attach"), !1;
                    if ("googSubscription" == n) return o("googSubscription"), !1;
                    if ("calendar" == n) return o("calendar"), !1;
                    a && "from,subject,to_from,subject_content,all".indexOf(a) > -1 ? o("mail", a) : (o("mail", "allmail"), top.$App.getView("mailbox_other").model.set("setting", "from"))
                } else i.click()
            }

            function g(e) {
                var t = e || {};
                if ($("#searchMenu").is(":visible")) {
                    var i = y();
                    if (i >= 0) {
                        do i--, i = 0 > i ? i + j.length : i, 0 == i && "newTb_mailSearch" != t.id && (i = j.length - 1); while (!j.eq(i).is(":visible"));
                        "newTb_mailSearch" == t.id && 0 == j.eq(i).parent().height() && i--, w(j.eq(i))
                    }
                }
            }

            function v(e) {
                var t = e || {};
                if ($("#searchMenu").is(":visible")) {
                    var i = y();
                    if (i >= 0) {
                        do i = (i + 1) % j.length, 0 == i && "newTb_mailSearch" != t.id && (i = 1); while (!j.eq(i).is(":visible"));
                        "newTb_mailSearch" == t.id && 0 == j.eq(i).parent().height() && i++, w(j.eq(i))
                    }
                    -1 == i && "newTb_mailSearch" == t.id ? w(j.eq(0)) : -1 == i && w(j.eq(1))
                }
            }

            function b() {
                var e = y();
                return e >= 0 ? j.eq(e) : null
            }

            function y() {
                for (var e = 0; e < j.length; e++) if (j.eq(e).hasClass("selected")) return e;
                return -1
            }

            function w(e) {
                var t = b();
                null != t && M(t), e.addClass("selected"), "btn_searchAdvance" === e.attr("id") && e.find("b").removeClass("c_666")
            }

            function M(e) {
                e.removeClass("selected"), "btn_searchAdvance" === e.attr("id") && e.find("b").addClass("c_666")
            }

            var C = this;
            C.firstShow = !0;
            var x = null, k = "", T = null, A = null, I = null, S = null, D = null, B = !0, L = null, E = $App.getConfig("UserAttrs") && $App.getConfig("UserAttrs").fts_flag, U = $("#searchMenu"), F = $("#tb_mailSearch");
            $("#searchIcon"), $("#diskDev_dropDown");
            if (U.find("#li_op_disk").remove(), E) {
                $("#open_all").hide();
                var j = U.find("li a");
                L = { addr: [10], diskDev: [6, 7, 8, 9, 21], googSubscription: [], calendar: [11, 12] }
            } else {
                $("#li_op_all").hide(), $("#li_op_subject_content").hide();
                var j = U.find("li[id!='li_op_all'][id!='li_op_subject_content'] a");
                U.find("#li_op_all, #li_op_subject_content").remove(), L = {
                    addr: [8],
                    diskDev: [4, 5, 6, 7, 19],
                    googSubscription: [],
                    calendar: [9, 10]
                }, $("#open_all").click(function () {
                    $RM.setAttrs({ attrs: { fts_flag: 1 } }, function (e) {
                        if ("S_OK" == e.code) {
                            BH("open_search_all_succeed");
                            $Msg.confirm("全文检索开通成功，刷新页面生效", function () {
                                location.reload()
                            }, { title: "", dialogTitle: "系统通知", icon: "ok", buttons: ["立即刷新"] })
                        } else top.M139.UI.TipMessage.show("全文检索开通失败", { className: "msgRed", delay: 1e3 })
                    })
                })
            }
            j.hover(function () {
                w($(this))
            }, function () {
            });
            var N = { up: 38, down: 40, enter: 13, left: 37, right: 39 }, R = !1;
            if ($("#op_from,#op_to,#op_subject,#op_subject_content,#op_all,#op_mail").click(function () {
                top.$App.getView("mailbox").model.set("IamFromLaiwang", !1);
                var e = $(this).attr("field") || null;
                return e ? BH("search_" + e) : BH("top_search"), "from" == e && s(), top.$App.getView("mailbox_other").model.set("setting", e), o("mail", e), !1
            }), $("#op_disk").click(function () {
                return o("disk"), !1
            }), $("#op_contact").click(function () {
                return o("contact"), !1
            }), $("#op_tempStorage").click(function () {
                return o("tempStorage"), !1
            }), $("#op_googSubscription").click(function () {
                return o("googSubscription"), !1
            }), $("#op_calendar").click(function () {
                return o("calendar"), !1
            }), $("#op_calendar_activity").click(function () {
                return o("calendarActivity"), !1
            }), $("#op_attach,#op_attach_name,#op_attach_from,#op_attach_subject").click(function () {
                return BH("attach_advance_search"), k = $(this).attr("filterName"), o("attach"), e(!1), !1
            }), !x) {
                x = M2012.UI.DropMenu.create({
                    defaultText: "附件夹",
                    width: "70px",
                    menuItems: [{ text: "附件夹", id: 0 }, { text: "暂存柜", id: 1 }],
                    container: $("#diskDev_dropDown")
                }), $App.on("switchDiskSearch", function (e) {
                    x.setSelectedIndex(e.index), x.trigger("change", { id: e.index })
                });
                var P = L.diskDev;
                x.on("change", function (e) {
                    0 === e.id ? ($("#searchIcon").show(), L.diskDev = P) : ($("#searchIcon").hide(), L.diskDev = E ? [13] : [11])
                }), $("#diskDev_dropDown>.dropDown").css("border", "0")
            }
            $("#searchIcon").click(function (e) {
                $App.trigger("documentClick", e.target), d(), M139.Event.stopEvent(), BH("top_searchDrop")
            }), $("#attach_endTime,#attach_startTime").click(function () {
                $("#attach_timeTip").hide()
            }), $("#attach_searchBtn").click(function () {
                if (!B) return !1;
                BH("attach_advance_search");
                var e = A.getSelectedItem(), t = I.getSelectedItem(), i = $("#attach_name").val().trim(), a = $("#attach_sender").val().trim(), s = $("#attach_subject").val().trim();
                T = {}, e && e.fid && (T.fid = e.fid), t && ("自定义" == t.text ? (T.start = Math.floor($Date.parse($("#attach_startTime").val() + " 00:00:00").valueOf() / 1e3), T.end = Math.floor($Date.parse($("#attach_endTime").val() + " 00:00:00").valueOf() / 1e3)) : t.start && (T.timeFlag = t.timeFlag, T.start = Math.floor(parseInt(t.start) / 1e3))), i && (T.attachName = i), a && (T.sender = a), s && (T.subject = s), h(), o("attach")
            }), $("#attach_cancelBtn").click(function () {
                h()
            }), $("#searchBtnIcon,#newSearchBtnIcon").click(function () {
                BH("search_icon"), "searchBtnIcon" == this.id ? f(!$("#searchMenu").is(":visible")) : o("mail", "allmail")
            });
            var V = $("#newTabSelect").children(".superTemplate").find("input");
            V.keyup(function (e) {
                var t = e.target, i = $("#searchAutoList").find(".selected");
                if (this.setAttribute("oldValue", this.value), 13 == e.keyCode && 0 == $("#searchAutoList").length) top.BH("newEnterSearch"), l(); else if (13 == e.keyCode) i.length > 0 && ($(t).attr("oldValue", i.attr("selectval")), $(t).val(i.attr("selectval")), $("#searchAutoList").remove()); else if (40 == e.keyCode || 38 == e.keyCode) 40 == e.keyCode && i.next().length > 0 ? (i.removeClass("selected").find("a").css({
                    "background-color": "#fff",
                    color: "#666"
                }), i.next().addClass("selected").find("a").css({
                    "background-color": "#666",
                    "border-radius": "3px",
                    color: "#fff"
                })) : i.prev().length > 0 && (i.removeClass("selected").find("a").css({
                    "background-color": "#fff",
                    color: "#666"
                }), i.prev().addClass("selected").find("a").css({
                    "background-color": "#666",
                    "border-radius": "3px",
                    color: "#fff"
                })); else if ($(this).attr("searchAutocomplete")) {
                    var a = this.value.trim();
                    a != this.defaultValue && "" != a && ($("#searchAutoList").remove(), C.searchAutocomplete(this, a))
                }
            }).blur(function (e) {
                setTimeout(function () {
                    $("#searchAutoList").remove()
                }, 200)
            }), $("#superSearchBtnIcon").click(function () {
                l()
            }), $("#newTabSelect").find(".selectSeachType").click(function (e) {
                var t = e.target, i = $("#newTabSelect").find(".superTemplate");
                return 1 == $App.getConfig("UserAttrs").fts_flag && i.children(".content").show(), $(t).closest("li").hide().siblings().show(), $(t).hasClass("super") ? (top.BH("superSearch"), top.$App.setUserCustomInfoNew({ fullSearchType: 1 })) : (top.BH("concisionSearch"), top.$App.setUserCustomInfoNew({ fullSearchType: 0 })), !1
            }), $("#superSearchBtnIcon,#newSearchBtnIcon").hover(function () {
                top.$App.showOnce("searchBtnTip", function () {
                    var e = '<div class="search-Tips" id = "search-Tips"><span>Enter直接搜索，或点击高级试试</span></div>';
                    $("#searchContainer").append(e)
                })
            }, function () {
                $("#search-Tips").remove()
            }), $("#showMoreSelector").click(function (t) {
                function i() {
                    var e = $App.getConfig("UserAttrs");
                    return 1 == e.fts_flag ? "283px" : "312px"
                }

                top.BH("addSearchCondision"), $("#popup_searchadvance").find(".searchadvance").click(function (e) {
                    e.stopPropagation()
                });
                var a = $("#toFixTabs").find("li.on").attr("name");
                e(!1);
                var a = $("#toFixTabs").find("li.on").attr("name");
                if ("diskDev" === a) return void m();
                if (!$("#popup_searchadvance").is(":visible")) {
                    var s = top.$App.getView("mailbox_other").model;
                    s.set("loadAdvanceSearchForm", "top"), $("#popup_searchadvance .searchadvance").html('<iframe src=\'advance_search_v3.html\' frameborder="0" allowTransparency="true" style=\'border:0px;width:408px;height:' + i() + "'/>"), $("#popup_searchadvance").css({ height: i() }), $("#popup_searchadvance").show(), $(document).click(function () {
                        $("#popup_searchadvance").hide(), $("#popup_searchadvance .searchadvance").html("")
                    }), t.stopPropagation()
                }
            }), $("#newTabSelect").find(".superTemplate").children("input").focus(function () {
                this.style.color = "black", this.getAttribute("oldValue") || (this.value = "")
            }).blur(function () {
                "" == this.value && (this.style.color = "#999", this.value = this.defaultValue)
            }), F.mouseleave(function () {
                "" != this.value && $(this).attr("oldValue", this.value)
            }).mouseenter(function () {
                var e = $(this).attr("oldValue");
                void 0 != e && this.value != e && e.indexOf("搜索") >= 0 && (this.value = this.value.replace(new RegExp(e), ""))
            }), $("#tb_mailSearch,#newTb_mailSearch").focus(function () {
                "tb_mailSearch" == this.id ? (F = $("#tb_mailSearch"), C.seachBoxtip == $(this).val() && (this.value = "")) : (F = $("#newTb_mailSearch"), this.value == this.defaultValue && $(this).val("")), $(this).css("color", "black"), e(!0, this), setTimeout(function () {
                    C.popupSearch && $("#popup_searchadvance").length > 0 && C.popupSearch.close()
                }, 50), "" == $(this).val().trim() && "googSubscription" == $("#toFixTabs").find("li.on").attr("name") && i(!0)
            }).blur(function (t) {
                var i = this;
                "tb_mailSearch" == this.id ? (F = $("#tb_mailSearch"), "" == this.value && (this.style.color = "#999", F.val(C.seachBoxtip))) : (F = $("#newTb_mailSearch"), "" == $(this).val() && ($(this).css("color", "gray"), this.value = this.defaultValue)), window.setTimeout(function () {
                    R || e(!1, i), R = !1
                }, 200)
            }).keydown(function (e) {
                var t = e.target;
                switch (F = "tb_mailSearch" == this.id ? $("#tb_mailSearch") : $("#newTb_mailSearch"), e.keyCode) {
                    case N.up:
                        g(t);
                        break;
                    case N.down:
                        v(t);
                        break;
                    default:
                        return
                }
            }).keyup(function (t) {
                var i = t.target;
                switch (F = "tb_mailSearch" == this.id ? $("#tb_mailSearch") : $("#newTb_mailSearch"), t.keyCode) {
                    case N.enter:
                        f(null, i);
                        break;
                    case N.down:
                    case N.up:
                    case N.right:
                    case N.left:
                        break;
                    default:
                        var a = $(this).val().trim();
                        C.keyword = a;
                        var s = U.hasClass("hide") || "none" == $("#op_googSubscription").parent().css("display");
                        s && e(!0, i), "" == a && e(!1, i);
                        var o = C.getNewTextOverFlow2(a), n = U.find("a");
                        n.each(function (e, t) {
                            "isAllmail" == this.getAttribute("newField") || "subject" == this.getAttribute("field") || "subject_content" == this.getAttribute("field") ? $(this).find("strong").text(o) : $(this).find("strong").text(o.split(" ")[0])
                        })
                }
            }), $("#btn_searchAdvance").click(function (e) {
                d(), M139.Event.stopEvent(), BH("top_searchAdvance")
            }), C.setTopKeyword = function (e) {
                if (e || "" == e) {
                    var t = e.trim();
                    this.keyword = e, F.val(t), U.find("strong").text(C.getTextOverFlow(t))
                }
            }
        },
        searchAutocomplete: function (e, t) {
            var i = this.onInput(t), a = e;
            if (i.length > 0) {
                var s = this.getSearchItems(i);
                this.createSearchAutoList({
                    target: a,
                    width: "400px",
                    items: s,
                    container: document.body,
                    onItemClick: function (e) {
                        $(a).attr("oldValue", e), $(a).css("color", "black"), $(a).val(e)
                    }
                }, function (e) {
                    $(".dayControl").hide()
                })
            }
        },
        createSearchAutoList: function (e) {
            var t = '<div class="menuPop shadow " style="z-index: 9001;max-height:302px; position: absolute;display:none;overflow-y:auto;" id="searchAutoList" bindautohide="1"></div>', i = e.top || $(e.target).offset().top + e.target.offsetHeight, a = e.left || $(e.target).offset().left, s = e.onItemClick;
            $(e.container).append(t);
            for (var o = [], n = 0, r = e.items.length; r > n; n++) 0 == n ? o.push('<li class="selected" selectVal="' + e.items[n].name + '"><a href="javascript:;" style="background-color:#666;border-radius:3px;color:#fff;">' + $T.Html.encode(e.items[n].text) + "</a></li>") : o.push('<li selectVal="' + e.items[n].name + '"><a href="javascript:;">' + $T.Html.encode(e.items[n].text) + "</a></li>");
            var l = "<ul>" + o.join("") + "</ul>";
            $("#searchAutoList").append(l).show().css({
                width: e.width,
                height: e.height,
                top: i,
                left: a
            }), $("#searchAutoList").find("li").find("a").hover(function () {
                $(this).css({ "background-color": "#666", "border-radius": "3px", color: "#fff" })
            }, function () {
                $(this).css({ "background-color": "#fff", color: "#666" })
            }), s && $("#searchAutoList").children("ul").children("li").click(function () {
                s(this.getAttribute("selectval")), $("#searchAutoList").remove()
            })
        },
        onInput: function (e) {
            var t = [];
            if ("" != e) {
                for (var e = e.toLowerCase(), i = top.M2012.Contacts.getModel().getInputMatch({
                    keyword: e,
                    filter: "email",
                    container: $("#divCompanyAddressList")
                }), a = e.length, s = {}, o = 0; o < i.length; o++) {
                    var n = i[o], r = n.info, l = "";
                    if (!s[r.addr + "|" + r.name]) {
                        s[r.addr + "|" + r.name] = 1, "addr" == n.matchAttr ? (matchText = r.addr.substring(n.matchIndex, n.matchIndex + a), l = r.addr.replace(matchText, "[b]" + matchText + "[/b]"), l = '"' + r.name.replace(/\"/g, "") + '"<' + l + ">", l = M139.Text.Html.encode(l).replace("[b]", "<span style='font-weight:bold'>").replace("[/b]", "</span>")) : "name" == n.matchAttr ? (matchText = r.name.substring(n.matchIndex, n.matchIndex + a), l = r.name.replace(matchText, "[b]" + matchText + "[/b]"), l = '"' + l.replace(/\"/g, "") + '"<' + r.addr + ">", l = M139.Text.Html.encode(l).replace("[b]", "<span style='font-weight:bold'>").replace("[/b]", "</span>")) : (l = '"' + r.name.replace(/\"/g, "") + '"<' + r.addr + ">", l = M139.Text.Html.encode(l));
                        var e = r.addr;
                        e = M139.Text.Email.getSendText(r.name, r.addr), t.push({ text: l, value: e, name: r.name })
                    }
                }
                delete s
            }
            return t
        },
        getSearchItems: function (e) {
            for (var t = [], i = 0, a = e.length; a > i; i++) {
                var s = { text: e[i].value, name: e[i].name };
                t.push(s)
            }
            return t
        },
        checkAvaibleForMobile: function () {
            $User.checkAvaibleForMobile("#sms_link,#btn_sms,#mms_link,#link_cm,#link_score,#btn_g3,#note_link,#fetionContainerId,#btn_pushemail,#tc_link,#fc_link,#colorcloud_link,#music_link,#recommend a,#btn_userCenter"), $User.isNotChinaMobileUser() && $("#li_weibo_fetion").hide()
        },
        getMailExeIntall: function () {
            var e = this, t = top.$App.getConfig("mailCapacity");
            e.getAllMailCapacityInfo(t)
        },
        queryMailCapacityInfo: function (e) {
            top.$RM.call("user:mailCapacityInfo", {}, function (t) {
                var i = t.responseData;
                "S_OK" == i.code ? e.success && e.success(i["var"]) : e.error && e.error(i)
            })
        },
        getAllMailCapacityInfo: function (e) {
            this.queryMailCapacityInfo({
                success: function (e) {
                    top.$App.registerConfig("mailCapacity", e);
                    var e = top.$App.getConfig("mailCapacity");
                    top.$User.isFreeUser() && e.totalSize > 5242880 && (e.totalSize = 2097152), e.totalSize <= 0 && (e.totalSize = 2097152);
                    var t = 1024 * e.totalSize, i = 1024 * e.messageSize;
                    top.$T.Utils.getFileSizeText(i), top.$T.Utils.getFileSizeText(t), (100 * i / t).toFixed(2) + "%"
                }, error: function (t) {
                    e.error && e.error(t)
                }
            })
        },
        bigMailsizeShowPctips: function (e) {
            var t = ['<div class="boxIframeText MB_Content wTipCont downloadTips-box">', '<div class="fl">', '<img src="../images/module/inbox/downloadTips1.png" alt="">', "</div>", '<div class="norTips mt_5 fr">', '<dl class="norTipsContent">', '<dt class="norTipsLine"><strong class=" fz_16">邮箱剩余容量不足！</strong></dt>', '<dd class="norTipsLine fz_12 c_999"><p>推荐您使用PC客户端！邮件存本地，释放更多空间</p></dd>', '<dd class="norTipsLine mt_5"><a class="btnSure btn-use"  bh="mailSizebigger" id="usePcApp" target="_blank" href="http://images.139cm.com/m2012/controlupdate/139Mail_Setup.exe">立即使用</a></dd>', "</dl>", "</div>", "</div>"].join(""), i = top.$App.getUserCustomInfo("firstShowTimePc"), a = top.$Date.getDaysPass(new Date(Number(i)), new Date);
            return a > 31 && top.$App.setUserCustomInfoNew({ firstShowTimePc: "undefined" }), e == 1 / 0 ? !1 : void (1 == isNaN(a) && e > 80 && ($BTips.addTask({
                width: 320,
                title: " ",
                addNewClass: "downloadTips-box",
                content: t,
                timeout: 99999e3,
                onclick: function (e) {
                    $(e.target).closest("#usePcApp").length && top.BH("mailSizebigger")
                }
            }), top.$App.setUserCustomInfoNew({ firstShowTimePc: M139.Date.getServerTime().getTime() })))
        },
        renderUmcBox: function (e) {
            function t(e) {
                return [l, "?func=", e, "&sourceid=", d, "&ver=", c].join("")
            }

            function i(e) {
                return [t("plug:init"), "&anchor=", e.anchor, "&artifact=", e.artifact, "&passid=", e.passid].join("")
            }

            function a(e, t) {
                M139.RichMail.API.call("umc:getArtifact", {}, function (i) {
                    var a = i.responseData;
                    a && "S_OK" == a.code && (a = a["var"], a.artifact ? e(a) : t ? t() : M139.Logger.getDefaultLogger().info("umc.getartifact is empty", !0))
                })
            }

            function s(e) {
                if (!top._session_flag_umcbox_added_) {
                    top._session_flag_umcbox_added_ = !0;
                    var t = ['<li id="umcboxpluginbar" class="newLogoInfo_li"></li>', '<li class="newLogoInfo_li noMar">|</li>'].join("");
                    if (/windows nt 5.1/.test(window.navigator.userAgent.toLowerCase()) && $B.is.ie) return t = ['<li id="umcboxpluginbar" class="newLogoInfo_li newLogoInfo_raset" style="position: relative;">', '<a id="umcboxpluginbarWarn" href="javascript:void;" class="newLogoInfo_a">和通行证</a>', '<li class="newLogoInfo_li noMar">|</li>'].join(""), $("#mailSetLi").before(t), void $("#umcboxpluginbarWarn").click(function () {
                        top.$Msg.alert("由于Https安全证书升级，和通行证暂不支持XP及以下系统，请升级操作系统！")
                    });
                    if ($("#chooseVipMail").before(t), top.SiteConfig.testUmcFeatures) {
                        var i = "800011348", s = l.replace("/UmcSSO/plugin", "") + "/test/getartifact?account=13601000030";
                        return void $.getScript(s, function () {
                            p.umcBoxAdded = !0, e({ artifact: artifact, passid: i }), o()
                        })
                    }
                    a(e, function () {
                        setTimeout(function () {
                            M139.Logger.getDefaultLogger().info("umc.getartifact fetch again", !0), a(e, null)
                        }, 15e3)
                    })
                }
            }

            function o() {
                var e = !0, t = $("#umcboxpluginbar");
                t.addClass("newLogoInfo_raset"), t.find("a:eq(0)").addClass("newLogoInfo_a").html("和通行证").off("click").click(function () {
                    $("#skinTips").length && $("#chooseVipMail").trigger("click"), p.resetTopFixTabsCssAndDropdown();
                    var i = t.offset().left;
                    e && $B.is.ie && $B.getVersion() <= 8 ? setTimeout(function () {
                        $("#umcpassportplugin").css("left", i + 96 + "px"), e = !1
                    }, 50) : $("#umcpassportplugin").css("left", i + 96 + "px"), BH("click_umcboxpluginbar")
                })
            }

            function n() {
                o()
            }

            var r = !!e.isumcuser;
            if (r) {
                var l = getDomain("UMCSVR") || window.location.protocol + "//www.rdcmpassport.com:30030/UmcSSO/plugin", c = "1.0", d = "3", p = this;
                s(function (e) {
                    var t = "umcboxpluginbar";
                    e = $.extend({ sourceid: d, anchor: t }, e);
                    var a = i(e);
                    M139.Core.utilCreateScriptTag({ id: "UMC_SSO_BOX_PACK", src: a }, function () {
                        n(t)
                    })
                })
            }
        },
        handlerEnterpriseArea: function () {
            var e = this,
                t = 0,
                i = $("#toEnterpriseEml").find("a"),
                a = "https://qiye.mail.10086.cn/webmail/login/userssologin.do",
                s = "https://qiye.mail.10086.cn/webmail/login/openuserssoauth.do";
            M139.RichMail.API.call("together:getTokenInfo", {}, function (o) {
                var n = o.responseData;
                if (i.find("#msgBoxComing").remove(), n && "S_OK" == n.code) {
                    var r = n["var"];
                    if (r) {
                        var l = r.ssoCode, c = r.token, d = r.unreadMessageCount;
                        l && (t && clearTimeout(t), i.attr("href", a + "?ssocode=" + l)), c && (t && clearTimeout(t), i.attr("href", s + "?token=" + c), t = setTimeout(function () {
                            e.handlerEnterpriseArea()
                        }, 9e5), Number(d) && i.find("i").after('<i class="i-red_dot" id="msgBoxComing" style="position:absolute;right:-4px;top:4px;"></i>'))
                    } else i.attr("href", a)
                } else i.attr("href", a)
            }, function () {
                i.attr("href", a)
            })
        },
        renderUmcUpgrade: function (e) {
            console.log("umcuser", e.isumcuser);
            var t = !!e.isumcuser;
            if (!t && !this.isRenderedUmcUpgrade) {
                this.isRenderedUmcUpgrade = !0;
                var i = $App.getConfig("UserData");
                i && i.mainUserConfig && i.mainUserConfig.shownewuserguide && "1" == i.mainUserConfig.shownewuserguide[0] || M139.core.utilCreateScriptTag({
                    src: top.getRootPath() + "/js/packs/umcupdate.html.pack.js",
                    charset: "utf-8"
                }, function () {
                    new M2012.Product.UmcUpdate.View
                })
            }
        },
        renderQiXiActivity: function () {
            M139.core.utilCreateScriptTag({
                src: top.getRootPath() + "/js/packs/qixiwish.html.pack.js",
                charset: "utf-8"
            }, function () {
                setTimeout(function () {
                    2 != top.UserData.vipType && "22" != $User.getAreaCode() && top.$App.showOnce("qixiActivity", function () {
                        top.$(".layer_mask").remove(), $Msg.showMask({ zIndex: 998 }), (new M2012.Product.QiXiWish.View).render()
                    })
                }, 3e3)
            })
        },
        renderUpdateServer: function () {
            function e() {
                $("#chooseVipMail ul").children().hover(function (e) {
                    e.stopPropagation();
                    var t = $(e.target).closest("[index]").attr("index");
                    if (!t) return !1;
                    if ($("#vipUpdateChildBox").parent().attr("index") == t) return $("#vipUpdateChildBox").show(), !0;
                    $("#vipUpdateChildBox").remove();
                    var s = $(a.childBox), o = "", n = i[t].child;
                    if (!n) return $("#vipUpdateChildBox").hide(), !1;
                    for (var r in n) if (n.hasOwnProperty(r)) {
                        var l = n[r];
                        l.type ? "line" == l.type && (o += a.line) : o += _.template(a.title_child)({
                            name: l.name,
                            index: r,
                            url: l.url ? $App.getVipMailCenterUrl(l.url) : "javascript:;",
                            child: l.child,
                            bh: l.bh || ""
                        })
                    }
                    s.html(o), $(e.target).closest("[index]").append(s)
                })
            }

            var t = this, i = t.topmodel.vipCenterConfig, a = {
                title: ['<li index="<%= index %>"><a href="<%= url %>" manualBh="<%= bh %>" target="<%= targetAction %>"><span class="text"><%= name %></span>', "<% if(child){ %>", '<i class="icons i-set-tqb"></i>', "<% } %>", "</a></li>"].join(""),
                line: '<li class="line"></li>',
                title_child: '<li index="<%= index %>"><a href="<%= url %>" manualBh="<%= bh %>" target="_blank"><span class="text text-i"><%= name %></span></a></li>',
                childBox: '<div id="vipUpdateChildBox" class="menuPop shadow" style="top: -5px; left: 181px; z-index: 9001; width: 182px;"></div>'
            };
            $("#chooseVipMail").off("click").click(function (s) {
                s.stopPropagation();
                var o = $(s.target).parents("a").attr("manualBh");
                o ? BH(o) : "";
                var n = $("#chooseVipMail").find(".menuPop ul");
                if (!n.html()) {
                    var r = "";
                    for (var l in i) if (i.hasOwnProperty(l)) {
                        var c = i[l];
                        c.type ? "line" == c.type && (r += a.line) : r += _.template(a.title)({
                            name: c.name,
                            index: l,
                            url: c.url ? $App.getVipMailCenterUrl(c.url) : "javascript:;",
                            child: c.child,
                            targetAction: c.child ? "" : "_blank",
                            bh: c.bh || ""
                        })
                    }
                    $("#chooseVipMail").find(".menuPop ul").append(r), e()
                }
                $("#vipUpdateChildBox").hide(), t.resetTopFixTabsCssAndDropdown($("#chooseVipMail"))
            })
        },
        renderHelpMenu: function () {
            var e = this, t = 0;
            $User.isChinaMobileUser() && (t = $User.getProvCode()), $("#helpcenter").attr("href", getDomain("help") + "/" + t + "/index.html?sid=" + $App.getSid());
            var i = getDomain("uec");
            $User.isGrayUser() && (i = "http://smsrebuild0.mail.10086.cn/uec"), $("#feedback").attr("href", i + "/jumpFeedbackRedirect.do?isdirect=1&nav=3&isfirst=1&sid=" + $App.getSid()), $("#mailSetLi").off("click").click(function (t) {
                t.stopPropagation(), 0 == $("#changeSkinEntry").length ? Package.require("skin_tip2015", function () {
                    window.selectSkinView = new M2015.SelectSkinsTips.View({ container: $("#mailSetLi").find(".menuPop") })
                }) : window.selectSkinView && selectSkinView.setSelectedStatus(), $("#skinTips").length && $("#head_changeSkin").trigger("click"), e.resetTopFixTabsCssAndDropdown(this), BH("top_setting")
            }), $("#mailSetLi li").click(function (t) {
                t.stopPropagation(), e.resetTopFixTabsCssAndDropdown(this);
                var i, a = settingsIndexView.getNav(), s = $(this).attr("target"), o = $(this).attr("statistical"), n = $("#toFixTabs").find("li.on").attr("channel"), r = $Config.get("currentSetTab"), l = $App.getCurrentTab().name;
                return o && top.BH(o), s && (i = s.indexOf("_") > -1 ? s.split("_")[0] : s), "setDefaultTabEntry" == s ? void $("#setDefaultTabDiv").removeClass("hide") : void (!s || a && $("#" + a.currentSetting)[0] && a.currentSetting === i ? ("mail" !== n && $App.showChannel("mail"), l !== r && $App.activeTab(r), a.scrollToAnchor(s)) : ($Config.set("viewObj.closeOrigin", s), a && $("#" + a.currentSetting)[0] && $App.closeTab(r), $App.show(s)))
            });
            var a = $App.getVipMailCenterUrl("html/function.html");
            $("#updateServer").attr({ href: a, target: "_blank" }), $("#updateServer").click(function () {
                BH("uc_index")
            }), $("#helpLi").off("click").click(function (t) {
                t.stopPropagation(), e.resetTopFixTabsCssAndDropdown(this), $("#skinTips").length && $("#head_changeSkin").trigger("click")
            });
            try {
            } catch (s) {
            }
        },
        phoneNoticeEvent: function () {
            var e = $("#phoneNotice"), t = $User.isInternetUser();
            t && e.find("i").removeClass("i-phoneNotice").addClass("i-phoneNoticeGray"), e.off("click").click(function () {
                return t ? $User.showMobileLimitAlert() : $App.show("notice"), !1
            })
        },
        switchSubscribe: function () {
            top.$User.isGrayUser() && 3 == top.$User.getAreaCode() ? LinkConfig.googSubscription = {
                url: "http://subscribe3.mail.10086.cn/inner/index.jsp",
                group: "subscribe",
                title: "精品订阅"
            } : (LinkConfig.googSubscription = {
                url: "http://subscribe2.mail.10086.cn/inner/index.jsp",
                group: "subscribe",
                title: "精品订阅"
            }, LinkConfig.myCollect = {
                url: "http://subscribe2.mail.10086.cn/inner/show_favorite.action",
                group: "subscribe",
                title: "精品订阅"
            });
            var e = $("#googSubscription");
            e.size() > 0 && (top.$User.isGrayUser() && 3 == top.$User.getAreaCode() ? e.attr("src", "http://subscribe3.mail.10086.cn/inner/index.jsp") : e.attr("src", "http://subscribe2.mail.10086.cn/inner/index.jsp"))
        },
        renderMobLogin: function () {
            var e = $App.getUserCustomInfo("mobLogin"), t = $App.getUserCustomInfo("mobLoginClose"), i = (new Date).getTime();
            e && !(i - Number(e) > 6048e5) || t || ($App.setUserCustomInfoNew({ mobLogin: i }), top.M139.RichMail.API.call("unified:getUnifiedPositionContent", { positionCodes: "web_091" }, function (e) {
                if (e.responseData.code && "S_OK" == e.responseData.code && "mobileLoginAdShow" == e.responseData["var"].web_091[0].content) {
                    var t = (e.responseData["var"], new M2012.mobLoginView);
                    t.render()
                }
            }))
        },
        render: function () {
            if (!$User.isChinaMobileUser()) {
                $App.on("folderLoaded", function () {
                    $App.off("folderLoaded", arguments.callee),
                    $App.showMailbox(1),
                    setTimeout(function () {
                        $("[tabid=mailbox_1] .i_close").remove()
                    }, 200)
                });
                $(".mailLogo_new").attr("href", "javascript:$App.showMailbox(1)");
            }
        },
        initTopFixedTabs: function () {
            var e = this, t = $App.getView("tabpage").model, i = t.getInitTabsData(), a = this.getDefaultEntrytab();
            window.sessionStorage && window.sessionStorage.getItem("currentPage") || $App.getView("tabpage").showLoading(a);
            for (var s = [], o = 0, n = i.length; n > o; o++) {
                var r = i[o];
                s.push({ text: t.topFixTabObj[r], value: r, myData: o })
            }
            $User.isChinaMobileUser() || $("#toFixTabs li[name=welcome]").hide(), $("#toFixTabs>li").click(function () {
                BH("click_fixedtab_" + $(this).attr("name"))
            }), e.menuDefaultEntryTab = M2012.UI.DropMenu.create({
                container: $("#defaultTabSel"),
                defaultText: t.topFixTabObj[a],
                menuItems: s,
                width: "90px"
            }), e.menuDefaultEntryTab.on("change", function (e) {
                a = e.value
            }), $("#setDefaultTabDiv").click(function (t) {
                t.stopPropagation(), 0 == $(t.target).closest("#defaultTabSel").length && e.menuDefaultEntryTab.menu.hide()
            }), $("#setDefaultTabConfirm").click(function (e) {
                BH("set_defaultentrytab_" + a), $("#setDefaultTabDiv").addClass("hide"), $App.setUserConfigInfo("defaultentrytab", a, function () {
                    $Cookie.set({
                        name: "defaultTab" + $App.getSid(),
                        value: a
                    }), $App.getConfig("UserData").mainUserConfig.defaultentrytab || ($App.getConfig("UserData").mainUserConfig.defaultentrytab = []), $App.getConfig("UserData").mainUserConfig.defaultentrytab[1] = a, $("#toFixTabs>li").removeClass("on").filter("[name=" + a + "]").addClass("on"), "mailbox_1" == a ? $App.showMailbox(1) : $App.show(a)
                })
            }), $("#setDefaultTabCalcel").click(function (e) {
                $("#setDefaultTabDiv").addClass("hide")
            })
        },
        resetTopFixTabsCssAndDropdown: function (e) {
            e = e || {};
            var t = e.event ? e.event.target : $(e)[0];
            $App.trigger("documentClick", t),
            $("#setDefaultTab, #chooseVipMail, #mailSetLi, #helpLi, #accountSet, #audioBox").each(function () {
                var t = $(this),
                    i = t.attr("id"),
                    a = "on";
                if ("accountSet" == i) {
                    a = "selected";
                } else if ("setDefaultTab" == i) {
                    a = "focus";
                } else if ("audioBox" == i && e && e != this) {
                    return void (top.MusicBox && top.MusicBox.hide(!0));
                }
                if (e && $(e).attr("id") == i) {
                    $App.getView("mailnotifyTip") && $App.getView("mailnotifyTip").hideElement();
                    t.find(".J-dropdown,.menuPop").toggleClass("hide");
                    t.find(".J-dropdown,.menuPop").hasClass("hide") ? t.removeClass(a) : t.addClass(a)
                } else {
                    t.removeClass(a).find(".J-dropdown,.menuPop").addClass("hide");
                }
            })
        },
        getDefaultEntrytab: function () {
            var e = $Cookie.get("defaultTab" + $App.getSid()) || $Url.queryString("tab"), t = $App.getView("tabpage").model.getInitTabsData();
            return e && -1 != t.join(",").indexOf(e) || (e = $User.isChinaMobileUser() ? "welcome" : "mailbox_1"), e
        },
        setSearchBox: function (e) {
            "googSubscription" == e || "calendar" == e || "addr" == e || "addrhome" == e ? $("#searchIcon, #btn_foiceSearch, #diskDev_dropDown").hide() : "diskDev" == e ? ($("#btn_foiceSearch").hide(), $("#searchIcon, #diskDev_dropDown").show(), $("#tb_mailSearch").width(125)) : ($("#diskDev_dropDown").hide(), $("#searchIcon, #btn_foiceSearch").show(), $("#tb_mailSearch").width(164))
        },
        switchSearchBoxTips: function () {
            var e = $App.getCurrentTab(), t = e && (e.name || e.group), i = { calendar: "输入公开日历名称或活动主题" };
            switch (t) {
                case "diskDev":
                case "disk":
                    this.seachBoxtip = "搜索文件";
                    break;
                case "googSubscription":
                    if (this.subKeyWords) this.seachBoxtip = this.subKeyWords[0]; else {
                        var a = top.getDomain("subscribeUrl") + "wordSearch?sid=" + top.sid, s = this;
                        top.M139.RichMail.API.call(a, {}, function (e) {
                            var t = e.responseData;
                            if (0 == t.resultCode) {
                                var i = t.body;
                                console.log(t), s.subKeyWords = i.keyWords, s.seachBoxtip = s.subKeyWords[0], o.val(s.subKeyWords[0])
                            }
                        })
                    }
                    break;
                case "calendar":
                    this.seachBoxtip = i.calendar;
                    break;
                case "addr":
                    this.seachBoxtip = "搜索联系人";
                    break;
                default:
                    this.seachBoxtip = "搜索关键词"
            }
            var o = $("#tb_mailSearch"), n = ($("#diskDevtb_mailSearch"), $.trim(o.val()));
            "搜索关键词" != n && "搜索文件" != n && "搜索资讯、杂志、应用" != n && n != i.calendar && "搜索联系人" != n && n != (this.subKeyWords && this.subKeyWords[0]) || o.val(this.seachBoxtip)
        },
        renderAccountList: function (e) {
            if (e) {
                var t = this,
                    i = $("#accountSet"),
                    a = ($User.getAccountListArray(),
                    this.changeMinMobile($User.getDefaultSender()));
                "@139.com" == a && M139.Timing.waitForReady('top.$App.getConfig("UserAttrs")', function () {
                    var e = (top.$App.getConfig("UserAttrs") || {}).uid;
                    e && (a = t.changeMinMobile(e), i.find("a:eq(0)").html('<i class=""></i>' + a + '<i class="triangle t_blackDown"></i>'))
                }),
                i.find("a:eq(0)").html('<i class=""></i>' + a + '<i class="triangle t_blackDown"></i>'),
                i.off("click").on("click", function (e) {
                    $App.trigger("documentClick", e.target);
                    $("#skinTips").length && $("#head_changeSkin").trigger("click");
                    if ($(e.target).closest("#accountInfo").length) {
                        return void $Event.stopEvent(e)
                    } else {
                        Package.require("account_info", function () {
                            t.accountInfo = new M2012.Main.View.AccountInfo({ $el: $("#accountSet") })
                        });
                        top.BH("click_top_account");
                        return void e.stopPropagation();
                    }
                });
            }
        },
        changeMinMobile: function (e) {
            var t = top.$Email.getAccount(e);
            if (top.$Mobile.isMobile(t)) {
                var i = e.indexOf("@"), a = t.replace(/(\d{3})\d*(\d{4})/, "$1****$2");
                return a + e.substr(i)
            }
            return e
        },
        getTextOverFlow: function (e) {
            return $TextUtils.getTextOverFlow2(e, 10, !0)
        },
        getNewTextOverFlow2: function (e) {
            return this.getTextOverFlow3(e, 10, !0)
        },
        getTextOverFlow3: function (e, t, i) {
            for (var a = e.split(""), s = 0, o = new RegExp("[A-Z]|[^\x00-ÿ]", "g"), n = 0; n < a.length; n++) {
                a[n].match(o);
                if (s += 2, s > t) return e.substring(0, n) + (i ? "..." : "")
            }
            return e
        }
    })
});

//TabPageView TabControl
var TabPageModel = Backbone.Model.extend({
    initialize: function (e) {
    },
    moduleConfig: {
        simpleframe: { model: "SimpleIframeModel", view: "SimpleIframeView" },
        readmail: { model: "ReadModel", view: "ReadView" },
        mailbox: { model: "MailboxModel", view: "MailboxView" },
        compose: { model: "ComposeModel", view: "ComposeView" }
    },
    pages: {},
    TabpageModel: [],
    moduleCount: 0,
    defaults: {
        currentModule: null,
        moduleConfig: {},
        maxTab: 5,
        maxTabsNum: 25,
        myapptabs: ["addr", "calendar", "googSubscription"],
        initTabsData: ["welcome", "mailbox_1", "addr", "calendar", "diskDev", "googSubscription"],
        initInternetUserTabsData: ["mailbox_1", "addr", "diskDev", "googSubscription"],
        channelState: {},
        isAlert: !1,
        selected: []
    },
    topFixTabObj: {
        welcome: "首页",
        mailbox_1: "邮件",
        addr: "通讯录",
        calendar: "日历",
        diskDev: "彩云网盘",
        googSubscription: "云邮局"
    },
    fillModuleData: function (e) {
        var t;
        if (e.mutiple) {
            e.orignName = e.name,
            t = (e.data && e.data.key ? e.data.key : Math.random());
            e.name = e.name + "_" + t;
        }
        e.group || (e.group = e.name);
        e.title || (e.title = e.name);
        e.data || (e.data = new Object);
        this.pages[e.name] = e;
        return e;
    },
    deleteModule: function (e) {
        this.pages[e];
        delete this.pages[e]
    },
    existModule: function (e) {
        return !!this.getModule(e)
    },
    getModule: function (e) {
        return "string" == typeof e ? this.pages[e] : this.pages[e.name]
    },
    getCurrent: function () {
        var e = this.get("currentModule");
        return e ? this.getModule(e) : null
    },
    getPrevious: function () {
        var e = this.previous("currentModule");
        return e ? this.getModule(e) : null
    },
    getInitTabsData: function () {
        return $User.isChinaMobileUser() ? this.get("initTabsData") : this.get("initInternetUserTabsData")
    },
    setFixedTabsData: function (e, t) {
        $App.setCustomAttrs("fixedtabs", e, t)
    },
    getFixedTabsData: function () {
        var e = null;
        return e = this.getInitTabsData()
    },
    markSetFixedTabs: function (e) {
        this.hasSetFixedTabs() || $App.setCustomAttrs("hasSetFixedTabs", "1", e)
    },
    saveChannelState: function (e, t) {
        var i = this.get("channelState");
        if (!(e && "groupMail" != e)) {
            e = "mail";
        }
        i[e] = { current: t };
    },
    hasSetFixedTabs: function () {
        return $App.getCustomAttrs("hasSetFixedTabs")
    }
});
TabPageView = Backbone.View.extend({
    initialize: function (e) {
        var t = this;
        this.toolbar = $('<div id="main_toolbar" class="bgMargin" style="display:none"></div>')[0],
        this.$el.append(this.toolbar),
        this.model = new TabPageModel(e),
        this.model.on("change:currentModule", function (e, i, a) {
            function s(e, t) {
                for (var i = 0; c > i; i++) {
                    if (t[i] == e) {
                        return d = !0;
                    }
                }
                return d;
            }

            if (null != i) {
                var o = i;
                try {
                    t.showModule(o);
                    t.activeTab(o);
                    t.renderChannel(o);
                    if ($App.getView("tabpage").tab.count > top.maxTabCount) {
                        $("#indexTopAd").hide();
                        $("#tabsMenuIco").show();
                        $App.set("isTabsExtendLimit", !0);
                    } else {
                        $("#tabsMenuIco").hide();
                    }
                    if ($App) {
                        $App.trigger("isShowTopAd");
                    }
                    $App.getView("top").setSearchBox(o);
                    $App.getView("top").switchSearchBoxTips();
                    var n = "welcome" == top.$App.getCurrentTab().name || "addr" == top.$App.getCurrentTab().name || "calendar" == top.$App.getCurrentTab().name || "diskDev" == top.$App.getCurrentTab().name,
                        r = ["skin_anniversary", "skin_mobileConference", "skin_sheepyear"],
                        l = top.$User.getSkinName(),
                        c = r.length,
                        d = !1;
                    s(l, r) && n ? $("#logoArea").addClass("skin-setTopH") : $("#logoArea").removeClass("skin-setTopH");
                    var p = $App.getCurrentTab().name,
                        m = {
                            addr: !0,
                            addrhome: !0,
                            calendar: !0,
                            calendar_square: !0,
                            diskDev: !0,
                            fileShareRemind_disk: !0,
                            googSubscription: !0,
                            calendar_viewlabel: !0,
                            baseData: !0,
                            teamNotify: !0,
                            addrWhoAddMe: !0,
                            addcalendar: !0,
                            addBirthcalendar: !0,
                            teamCreate: !0,
                            addrvipgroup: !0,
                            groupMail: !0,
                            writeGroupMail: !0
                        },
                    u = $App.getTabByName(p);
                    if (m[p] || m[u.group] || m[u.channel]) {
                        $("#div_main").addClass("mainIframeBg_noBg");
                        if ("googSubscription" !== p && "groupMail" !== p && "writeGroupMail" !== p) {
                            $("#skinBgSub").addClass("skin_not")
                        } else {
                            $("#skinBgSub").removeClass("skin_not");
                        }
                    } else {
                        $("#div_main").removeClass("mainIframeBg_noBg");
                        $("#skinBgSub").removeClass("skin_not");
                    }

                    var h = ("none" == $("#divTab")[0].style.display ? 106 : 74, $("#div_main"));
                    -1 != p.indexOf("compose_") && h.height($App.getBodyHeight() - h.offset().top), $App.onResize()
                } catch (f) {
                    console.error(f.message)
                }
                "none" != $("#divTab ul")[0].style.display ? $(".skin-mainContainer").addClass("offset-top") : $(".skin-mainContainer").removeClass("offset-top"), "welcome" == p ? $(".skin-mainContainer").hide().prev().hide() : $(".skin-mainContainer").show().prev().show(), this.lastModule = o, $App.closeWriteOkPage(), $("#scoutTemplate", top.document).remove()
            }
        }),

        this.tab = new TabLabel(document.getElementById("divTab"), this),
        this.tab.call = [this.onTabDelete, this.onTabActive, this.onTabClose],

        this.watchScrollbar(),
        this.setAnimalSkin()
    },
    orignTabs: null,
    prevModule: null,
    events: {},
    render: function () {
        var e = this.model.get("currentModule");
        if (e) {
            this.activeTab(e);
        }
    },
    setAnimalSkin: function () {
        var e = this;
        window.ZodiacCommand = function (e, t) {
            "dispear" == e && ($("#animalFlash").addClass("hide"), window.isHideAnimalFlash = !0)
        }, setTimeout(function () {
            var t = $App.getView("tabpage").prevChannel;
            if ("welcome" != t) {
                var i = $Cookie.get("SkinPath2");
                e.addFlash2AnimalSkin(i)
            } else $("#animalFlash").addClass("hide");
            top.M139.HttpRouter.addRouter("together", ["together:heMessage"]), top.M139.RichMail.API.call("together:heMessage", {}, function (e) {
            })
        }, 3e3)
    },
    setTitle: function (e, t) {
        if (!t) {
            t = this.model.get("currentModule");
        }
        this.tab.title(t, e);
        this.model.getModule(t).title = e;
    },
    showModule: function (e) {
        var t = this.model,
            i = t.getModule(e),
            a = t.getPrevious();
        if (!i) {
            i = t.getModule("welcome");
        }
        if (null != a && a != i) {
            $(a.element).hide();
        }
        i.element.style.display = "";
        i.view.el = i.element;
        if (i.view && i.view.render) {
            var s = !!i.isRendered,
                o = i.view.model && i.view.model.get("mid");
            if (i.view.model.get("strokeRead") && o && !strokeUnAlreadyRead) {
                s = !0;
                i.view.model.set("needReload", !1);
                i.view.model.set("strokeRead", !1);
                strokeUnAlreadyRead = null;
            };
            i.view.render(s);
            i.isRendered = !0
        }
        if (i.view && i.view.getToolbar) {
            if (i.group != a.group) {
                var n = i.view.getToolbar();
                if ("string" == typeof n) {
                    this.toolbar.innerHTML = n
                } else {
                    if (0 == this.toolbar.childNodes.length) {
                        this.toolbar.appendChild(n);
                    }
                }
                this.toolbar.style.display = "";
            }
        } else {
            this.toolbar.style.display = "none";
        }
        return i;
    },
    getVisibleTab: function () {
        var e = $("#divTab ul").children(),
            t = $.grep(e, function (e, t) {
                return "none" != e.style.display && "tabsMenuIco" != e.id
            });
        return t;
    },
    getVisibleCount: function () {
        return this.getVisibleTab().length
    },
    renderCloseAllButton: function () {
    },
    renderMenuListButton: function () {
        $("#tabsMenuIco")[0] || $("#divTab ul").append('<li id="tabsMenuIco" class="noAll" tabindex="0"><a href="javascript:;" class="closeAll" title="点击查看更多"></a></li>')
    },
    activeTab: function (e) {
        var t = this;
        if (this.tab.exist(e)) {
            if (this.lastActive && this.lastActive[e] && new Date - this.lastActive[e] < 200) {
                return;
            }
            this.lastActive = {},
            this.lastActive[e] = new Date,
            this.tab.active(e);
        } else {
            this.createTab(e);
        }
        try {
            $App.trigger("showTab", this.model.getModule(e))
        } catch (i) {
        }
        
        if ("skin_sheepyear" == top.$User.getSkinName()) {
            $(".christmasHats").remove();
            setTimeout(function () {
                $("#divTab li[class=on]").append('<i class="christmasHats"></i>');
            }, 100);
        }
        setTimeout(function () {
            t.hideOverTab();
        }, 200),
        this.addClass2left(e);
    },
    addClass2left: function (e) {
        var t = e,
            i = $App.getCurrentFid(),
            a = $App.getMailboxView() && $App.getMailboxView().model;
        $("#sub li").find("a").removeClass("on");
        if ("mailbox_1" == t) {
            $("#sub li[fid=1]").find("a").addClass("on")
        } else {
            if ("mailsub_0" == t) {
                if (1 != i) { $("#sub li[fid=" + i + "]").find("a").addClass("on") } else {
                    if (a && a.isVipMode()) {
                        $("#sub li#li_vip").find("a").addClass("on");
                    } else {
                        if (a && a.isStarMode()) { $("#sub li#li_star").find("a").addClass("on") } else {
                            if (a && a.isTaskMode()) {
                                $("#sub li#li_remind").find("a").addClass("on");
                            } else {
                                if (a && a.isBillMode()) {
                                    $("#sub li#li_bill").find("a").addClass("on");
                                } else {
                                    if (a && a.isSubscribeMode()) {
                                        $("#sub li#li_subscribe").find("a").addClass("on");
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
   
    replace: function (e, t) {
        this.tab.replace(e, t)
    },
    close: function (e) {
        if (!e) {
            e = this.model.get("currentModule");
        }
        this.tab.close(e);
    },
    closeAllTab: function () {
        for (elem in this.model.pages) {
            if ("welcome" != elem) {
                this.close(elem);
            }
        }
        setTimeout(function () {
            M2012.History.clear()
        }, 1e3)
    },
    resize: function () {
        var e = this;
        this.showAllTab(),
        this.tab.size(),
        setTimeout(function () {
            e.hideOverTab()
        }, 100)
    },
    showAllTab: function () {
        if ($App && 83 * this.getVisibleCount() < $D.getWinWidth() - 154 && $App.getView("tabpage").prevChannel && "mail" == $App.getView("tabpage").prevChannel) {
            $("#divTab li").not("[tabid=welcome]").not("#tabsMenuIco").show();
            for (var e = $("#divTab li").not("[tabid=welcome]").not("#tabsMenuIco"), t = 0; t < e.length; t++) {
                var i = e[t].getAttribute("tabid"),
                    a = $App.getTabByName(i),
                    s = a.group || a.channel;
                if (!("addr" != s && "disk" != s && "calendar" != s && "subscribe" != s)) {
                    $(e[t]).hide();
                }
            }
            $("[tabid*=mpostOnlineService]").hide();
        }
    },
    fixFlashRemove: function (e) {
        if ($.browser.msie && (e.indexOf("compose") >= 0 || "account" == e || "mms" == e || "postcard" == e) || "greetingcard" == e || "activityInvite" == e || "quicklyShare" == e || "diskDev" == e) {
            var t = this.model.getModule(e);
            if (t) {
                var i = t.element;
                if ($(i).find("iframe")[0]) {
                    var a = $("object", $(i).find("iframe")[0].contentWindow.document);
                    "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" == a.attr("classid") && a.remove()
                }
            }
        }
    },
    framePool: [],
    getFrame: function (e) {
        var t;
        if (this.framePool.length > 0) {
            t = this.framePool.shift();
        } else {
            t = document.createElement("iframe");
        }
        t.src = e;
        return t;
    },
    recycleFrame: function (e) {
        $(e).removeAttr("id");
        $(e).removeAttr("name");
        $(e).removeAttr("style");
        this.framePool.push(e);
        e.parentNode.removeChild(e);
    },
    onCloseTab: function (e) {
        var t = this.model.getModule(e);
        if (t) {
            this.fixFlashRemove(e);
            var i = t.element;
            this.model.deleteModule(e);
            var a = $(i).find("iframe");
            if (a.length > 0) {
                var s = a.get(0);
                this.recycleFrame(s)
            }
            $(i).remove();
        }
    },
    clearTabCache: function (e) {
        for (elem in this.model.pages) {
            var t = this.model.pages[elem];
            if (t.name.indexOf(e) >= 0) {
                t.isRendered = !1;
            }
        }
    },
    createOrignTabs: function (e, t, i) {
        for (var a, s, o = 0; o < e.length; o++) {
            a = e[o];
            if ("mailbox_1" == a) {
                s = {
                    name: "mailbox_1",
                    view: $App.getView("mailbox"),
                    title: "收件箱",
                    group: "mailbox",
                    deactive: !0
                };
            } else {
                var n = window.LinkConfig[a];
                s = { name: a, view: t, title: n.title, group: n.group, deactive: !0, mutiple: n.mutiple }
            }
            this.createModule(s);
            this.createTab(a, !0, i);
        }
    },
    createModule: function (e) {
        var t = this.model.getModule(e.name);
        if (t) {
            if (t.data && "object" == typeof t.data.inputData) {
                _.extend(t.data.inputData, e.data.inputData);
            }
            return t;
        }
        this.model.fillModuleData(e);
        var i = document.createElement("div");
        if (e.deactive) {
            i.innerHTML = "";
        } else {
            i.className = "gload";
            if ("setting" === e.group && navigator.userAgent.indexOf("iPad") > -1) {
                var a = document.body.clientHeight - 106;
                i.setAttribute("style", "-webkit-overflow-scrolling:touch; overflow: auto; height:" + a + "px;");
            }
            i.innerHTML = "<span class='gloadbg'></span>"
        }
        if ("welcome" == e.name && document.getElementById("div_welcome")) {
            i = document.getElementById("div_welcome")
        }
        else {
            if (e.name.indexOf("compose") >= 0 && !e.type && document.getElementById("div_composeContainer")) {
                if ($.browser.safari || $.browser.mozilla || $B.is.ie && $B.getVersion() <= 8) {
                    this.el.appendChild(i);
                    window.firstComposeLoaded = !0;
                } else {
                    i = document.getElementById("div_composeContainer");
                    i.id = "";
                }
            }
            else {
                this.el.appendChild(i);
            }

        }
        e.element = i;
        e.view.el = i;
    },
    watchScrollbar: function () {
        if (!($.browser.msie && $.browser.version < 8) && $.browser.msie) {
            var e = ["#sidebar", "#div_maillist", "#readmail_container", "#covMailSummaryList"];
            M139.Timing.setInterval("watchScrollbar", function () {
                for (var t = 0; t < e.length; t++) {
                    var i = $(e[t]);
                    i.length > 0 && i.each(function (e, t) {
                        t.getAttribute("hasWatched") || (console.log("start watch........", t), M139.Timing.watchElementScroll(t), t.setAttribute("hasWatched", !0))
                    })
                }
            }, 1e3);
        }
    },
    channelOptions: {},
    showChannel: function (e) {
        if (top.$App.pushMpostMsg) {
            top.$App.trigger("updateMpostMsgStatus");
        }
        if ("welcome" != e) {
            var t = $Cookie.get("SkinPath2");
            $("#animalFlash").hasClass("hide") && this.addFlash2AnimalSkin(t);
        } else {
            $("#animalFlash").addClass("hide");
        }
        if ("subscribe" === e) {
            top.$App.trigger("renderMpostMailnotify");
            setTimeout(function () {
                $App.getTabByName("googSubscription") || $App.show("googSubscription")
            }, 500);
        }
        var i = "mail";
        if (this.channelOptions[e]) {
            i = this.channelOptions[e].defaultTab;
        }
        var a = this.model.get("channelState");
        if (a[e] && a[e].current) {
            i = a[e].current;
            if (this.tab.exist(i)) {
                $App.activeTab(i);
                if ("welcome" != i) {
                    $(".loadingTip").remove();
                }
            } else {
                if (this.channelOptions[e] && this.channelOptions[e].defaultTab) {
                    $App.show(this.channelOptions[e].defaultTab)
                } else {
                    $App.showMailbox(1);
                }
            }
        } else {
            this.showLoading(i)
            if ("mail" == i) {
                $App.showMailbox(1)
            } else {
                $App.show(i);
            }
        }
    },
    showLoading: function (e) {
        var t = {
            calendar: { icon: "i-pre-loading i-loading-clock", text: "<h6>待办事项提醒，不漏每一项重要工作</h6>" },
            addr: { icon: "i-pre-loading i-loading-men", text: "<h6>轻松发送会议邀请，体验高效工作</h6>" },
            diskDev: { icon: "i-pre-loading i-loading-mail", text: "<h6>发往139邮箱的邮件，可以在发送成功后撤回邮件</h6>" },
            mailbox_1: { icon: "i-pre-loading i-loading-link", text: "<h6>重要信息@TA,快速定位与自己有关的内容</h6>" },
            mail: { icon: "i-pre-loading i-loading-readed", text: "<h6>自定义重要邮件类型，首页处理更快捷</h6>" }
        },
        i = t[e];
        if (i) {
            var a = ['<div id="loadingTip' + e + '" class="tipsBox loadingTip" style="z-index:400;background:#FFF">',
                '<div class="tipsBox-container">', '<div class="tipsBox-aside fl"><i class="' + i.icon + '"></i></div>',
                '<div class="tipsBox-main fl" style="width: 209px;">', i.text, '<div class="mtop_5">', '<img class="mright_5" src="../images/global/load.gif">',
                "<span>正在加载页面……</span>", "</div>", "</div>", "</div>", "</div>"].join("");
            $(".loadingTip").remove();
            $("body").append(a);
            var s = $("#loadingTip" + e);
            setTimeout(function () {
                s.remove()
            }, 4e3);
        }
    },
    addFlash2AnimalSkin: function (e) {
        if (M139.Dom.flashChecker().hasFlash) if (e.indexOf("animal") > -1 && !window.isHideAnimalFlash) {
            $("#animalFlash").removeClass("hide");
            var t = '<embed src="../flash/skin/' + e.split("animal")[1].toLowerCase() + '.swf" width="200" height="200" type=application/x-shockwave-flash; quality="high"wmode="transparent">';
            $("#animalFlash").html(t)
        } else $("#animalFlash").addClass("hide"), $("#animalFlash embed").attr("src", "")
    },
    registerChannel: function (e, t) {
        this.channelOptions[e] = t
    },
    renderChannel: function (e) {
        function t(e, t) {
            if (e) {
                $("#leftOther").hide(), !$App.isNewWinCompose() && s.show(), $("#main").css("left", "201px");
                var i = $App.getView("folder");
                i && i.resizeSideBar()
            } else {
                $("#leftOther").show(), !$App.isNewWinCompose() && s.hide();
                var a = t ? "201px" : "0px";
                $("#main").css("left", a)
            }
        }

        function i(e) {
            $App.currentChannel = e, $("#toFixTabs [class=on]").removeClass(), $("#toFixTabs [channel=" + e + "]").addClass("on");
            var t = a.channelOptions[e];
            t && t.withinMail && $("#toFixTabs [channel=mail]").addClass("on");
            var i = "10" != $T.Url.queryString("v"), s = "10" == $T.Url.queryString("v");
            s && "welcome" == e && (t = {
                leftNav: "mail",
                defaultTab: "welcome",
                hideTab: !1
            }), "welcome" == e && i || t && t.hideTab ? ($("#divTab").addClass("mainTop_not").children().hide(), $("#main").addClass("main_not")) : ($("#divTab").removeClass("mainTop_not").show(), $("#divTab").removeClass("mainTop_not").children().show(), $("#main").removeClass("main_not")), "welcome" == e ? ($("#div_main").css("background", "transparent"), $("#skinBgSub").css("background", "none")) : ($("#div_main").attr("style", ""), $("#divTab").attr("style", ""), $("#skinBgSub").show()), "welcome" == e && i && "skin_christmas" == $User.getSkinName() ? $(".skinTopRight").hide() : $(".skinTopRight").show(), $App.isNewWinCompose() && $("#divTab").hide();
            var o = a.tab.tabs;
            for (elem in o) if (o.hasOwnProperty(elem)) {
                var n = o[elem], r = a.model.getModule(elem) || {}, l = a.channelOptions[r.channel] || a.channelOptions[r.group];
                "mail" == e || t && t.withinMail ? l ? 0 == l.hideTab ? $(n).show() : $(n).hide() : $(n).show() : "subscribe" == e || "note" == e || "welcome" == e && s ? (e = "welcome" == e ? "mailbox" : e, r.group == e || r.channel == e ? $(n).show() : $(n).hide()) : $(n).hide()
            }
            a.tab.count = a.getVisibleCount(), a.prevChannel && a.prevChannel != e && a.tab.size(), setTimeout(function () {
                a.hideOverTab()
            }, 200), a.prevChannel = e
        }

        var a = this, s = $("#sub"), o = 36, n = $App.getBodyHeight(), r = $(top.document).find("#mainContentBox"), l = 40;
        if ("welcome" == top.$App.getCurrentTab().name && "10" != $T.Url.queryString("v")) {
            var c = n - o - l;
            r.height(c).attr("welcome", "true"), $(top.document).find(".welcomeFooter").show()
        } else {
            if (top.$App.getCurrentTab().name.indexOf("compose") >= 0 && r.attr("welcome")) {
                r.height(c).removeAttr("welcome");
                var d = $(top.document).find(".main-iframe").height();
                $(top.document).find(".main-iframe").height(d - 32)
            }
            var c = n - o;
            r.height(c).removeAttr("welcome"), $(top.document).find(".welcomeFooter").hide()
        }
        var p = this.model.getModule(e), m = p.channel || p.group;
        if (this.channelOptions[m]) {
            this.model.saveChannelState(m, e);
            var u = this.channelOptions[m].leftNav, h = "10" == $T.Url.queryString("v");
            if (h && "welcome" == m && (u = "mail"), "none" == u) t(!1); else if ("mail" == u) t(!0, !0); else {
                t(!1, !0);
                var f = u();
                f && ("sub" == s.prev().attr("class") ? s.prev().html(f) : s.before('<div  id="leftOther">' + f + "</div>"));
            }
            i(m)
        } else {
            var g = "welcome" == e ? "welcome" : "mail";
            this.model.saveChannelState(g, e);
            var h = "10" == $T.Url.queryString("v");
            t(h && "welcome" == m ? !0 : "welcome" !== e), i(g)
        }
    },
    hideOverTab: function () {
        var e = 30,
            t = $D.getWinWidth() - e - 124,
            i = this.getVisibleTab(),
            a = Math.ceil(t / 83);
        if (83 * (i.length - 1) > t) {
            $("#tabsMenuIco").show();
            if (a < i.length) {
                for (var s = a; s < i.length; s++) {
                    $(i[s]).hide();
                }
            }
        }
    },
    maxTabHandler: function () {
        var e, t,
            i = this.model.get("maxTabsNum") || 23;
        this.tabContainer = this.tabContainer || $("#divTab ul");
        var a = this.tabContainer.find("li").not("#tabsMenuIco").not("[tabid=welcome]");
        if (a.length >= i) {
            e = this.tabContainer[0].lastChild.previousSibling;
            t = e.getAttribute("tabid");
            t && $App.closeTab(t);
        }
    },
    createTab: function (e, t, i) {
        var a = this;
        s = this.tab.exist(e);
        if (!s) {
            try {
                var o = $("#divTab ul").find("li").not("#tabsMenuIco").not("[tabid=welcome]");
                if (o.length >= 25 && !$App.getUserCustomInfo("isReplaceOverTab") && !a.model.get("isAlert")) {
                    a.model.set("isAlert", !0);
                    var n = $Msg.confirm("您打开的标签过多，即将打开新的标签，将替换最后打开的标签",
                        function () {
                            a.maxTabHandler();
                            $App.setUserCustomInfoNew({ isReplaceOverTab: "1" });
                            var s = a.model.pages[e].title;
                            o = { name: e, text: s, group: a.model.pages[e].group };
                            if ("welcome" == e) {
                                o.close = !0;
                            }
                            a.tab.add(o, t, i),
                            a.hideOverTab(),
                            a.model.set("isAlert", !1)
                        },
                        function () {
                            a.tab.close(e);
                            var t = $("#divTab ul")[0].lastChild.previousSibling,
                                i = t.getAttribute("tabid");
                            $(top.$App.getCurrentTab().element).find("iframe")[0].contentWindow.cancelTabOpen = !0;
                            a.activeTab(i),
                            a.model.set("isAlert", !1)
                        },
                        { icon: "warn", dialogTitle: "温馨提示", buttons: ["我知道了", "暂不打开"] });
                    n.$el.find(".CloseButton").click(function () {
                        a.tab.close(e);
                        var t = $("#divTab ul")[0].lastChild.previousSibling, i = t.getAttribute("tabid");
                        $(top.$App.getCurrentTab().element).find("iframe")[0].contentWindow.cancelTabOpen = !0;
                        a.activeTab(i);
                        a.model.set("isAlert", !1);
                    });
                } else {
                    a.maxTabHandler();
                    var r = this.model.pages[e].title,
                        l = { name: e, text: r, group: this.model.pages[e].group };
                    if ("welcome" == e) {
                        l.close = !0
                    };
                    var c = this.model.getModule(e).view;
                    if (c && c.param && c.param.type && "draft" == c.param.type && c.param.mid) {
                        l.mid = c.param.mid;
                    }
                    this.tab.add(l, t, i);
                }
            } catch (d) {
                console.log(d)
            }
        }
    },
    onTabDelete: function (e) {
    },
    onTabActive: function (e) {
        return this.model.set("currentModule", e), !0
    },
    onTabClose: function (e) {
        var t = this,
            i = { cancel: !1, name: e };
        try {
            $App.trigger("closeTab", i)
        } catch (a) {
        }
      
        setTimeout(function () {
            t.showAllTab();
            t.tab.size();
            t.hideOverTab();
        }, 200);
        return i.cancel ? !1 : (this.onCloseTab(e), !0)
    }
}),

//FrameControl 
function () {
    var e = Backbone.Model.extend({
        initialize: function (e) {
            window.LinkConfig || (window.LinkConfig = {
                welcome: {
                    url: "welcome_v2.html",
                    site: "",
                    title: "首页",
                    tab: "welcome",
                    group: "welcome"
                },
                compose: { url: "compose_v3.html", site: "", title: "写信", mutiple: !0 },
                activityInvite: { url: "activityinvite/invite_v3.html", site: "", title: "发起邀请", mutiple: !0 },
                startDiscuss: { url: "startDiscuss/discuss_v3.html", site: "", title: "发起讨论", mutiple: !0 },
                viewDiscussInfo: { url: "startDiscuss/viewDiscussInfo.html", site: "", title: " ", mutiple: !0 },
                meetingManage: { url: "activityinvite/meetingManage.html", site: "", title: "我的邀请" },
                account: { group: "setting", title: "设置", url: "set/account.html", site: "", tab: "account" },
                account_accountSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=accountSet",
                    site: "",
                    tab: "account"
                },
                account_secSafe: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=secSafe",
                    site: "",
                    tab: "account"
                },
                account_areaSign: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=areaSign",
                    site: "",
                    tab: "account"
                },
                account_userInfo: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=userInfo",
                    site: "",
                    tab: "account"
                },
                account_mailPwd: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=mailPwd",
                    site: "",
                    tab: "account"
                },
                account_clientSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=clientSet",
                    site: "",
                    tab: "account"
                },
                account_httpsSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=httpsSet",
                    site: "",
                    tab: "account"
                },
                account_mobileLogin: {
                    group: "setting",
                    title: "设置",
                    url: "set/account.html?anchor=mobileLogin",
                    site: "",
                    tab: "account"
                },
                accout_mailmove: {
                    group: "setting",
                    title: "设置",
                    url: "set/accout_mailmove.html?&anchor=mailmove",
                    site: "",
                    tab: "account"
                },
                preference: { group: "setting", title: "设置", url: "set/preference.html", site: "", tab: "preference" },
                preference_dispSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=dispSet",
                    site: "",
                    tab: "preference"
                },
                preference_readSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=readSet",
                    site: "",
                    tab: "preference"
                },
                preference_forwardSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=forwardSet",
                    site: "",
                    tab: "preference"
                },
                preference_shortcutKey: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=shortcutKey",
                    site: "",
                    tab: "preference"
                },
                preference_foldersClean: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=foldersClean",
                    site: "",
                    tab: "preference"
                },
                preference_onlinetips: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=onlinetips",
                    site: "",
                    tab: "preference"
                },
                preference_secSafe: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=secSafe",
                    site: "",
                    tab: "preference"
                },
                preference_replySet: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=forwardSet",
                    site: "",
                    tab: "preference"
                },
                preference_autoDelSet: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=foldersClean",
                    site: "",
                    tab: "preference"
                },
                preference_clientSend: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=clientSet",
                    site: "",
                    tab: "preference"
                },
                preference_popReceiveMail: {
                    group: "setting",
                    title: "设置",
                    url: "set/preference.html?anchor=clientSet",
                    site: "",
                    tab: "preference"
                },
                popmail: { group: "setting", title: "设置", url: "set/pop.html", site: "", tab: "popmail" },
                addpop: { group: "setting", title: "设置", url: "set/add_pop.html", site: "", tab: "popmail" },
                addpopok: { group: "setting", title: "设置", url: "set/add_pop_ok.html", site: "", tab: "popmail" },
                editpop: { group: "setting", title: "设置", url: "set/edit_pop.html", site: "", tab: "popmail" },
                type: { group: "setting", title: "设置", url: "set/sort.html", site: "", tab: "type_new" },
                type_new: { group: "setting", title: "设置", url: "set/sort_new.html", site: "", tab: "type_new" },
                createType: { group: "setting", title: "设置", url: "set/create_sort.html", site: "", tab: "type_new" },
                tags: { group: "setting", title: "设置", url: "set/tags.html", site: "", tab: "tags" },
                tags_customerTags: {
                    group: "setting",
                    title: "设置",
                    url: "set/tags.html?anchor=forwardSet",
                    site: "",
                    tab: "tags"
                },
                tags_systemFolder: {
                    group: "setting",
                    title: "设置",
                    url: "set/tags.html?anchor=systemFolder",
                    site: "",
                    tab: "tags"
                },
                spam: { group: "setting", title: "设置", url: "set/spam.html", site: "", tab: "spam" },
                spam_new: { group: "setting", title: "设置", url: "set_v2/spam_new.html", site: "", tab: "spam_new" },
                spam_new_setting: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/spam_new.html?anchor=setting",
                    site: "",
                    tab: "spam_new"
                },
                spam_whiteListArea: {
                    group: "setting",
                    title: "设置",
                    url: "set/spam.html?anchor=forwardSet",
                    site: "",
                    tab: "spam"
                },
                spam_spamMailArea: {
                    group: "setting",
                    title: "设置",
                    url: "set/spam.html?anchor=spamMailArea",
                    site: "",
                    tab: "spam"
                },
                spam_antivirusArea: {
                    group: "setting",
                    title: "设置",
                    url: "set/spam.html?anchor=antivirusArea",
                    site: "",
                    tab: "spam"
                },
                message_control: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/message_control.html?anchor=notify",
                    site: "",
                    tab: "message_control"
                },
                message_control_loginsms: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/message_control.html?anchor=loginsms",
                    site: "",
                    tab: "message_control"
                },
                message_control_spam: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/message_control.html?anchor=spam",
                    site: "",
                    tab: "message_control"
                },
                message_control_nodisturb: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/message_control.html?anchor=nodisturb",
                    site: "",
                    tab: "message_control"
                },
                safe: { group: "setting", title: "设置", url: "set/safe.html", site: "", tab: "safe" },
                safe_secSafe: {
                    group: "setting",
                    title: "设置",
                    url: "set/safe.html?anchor=secSafe",
                    site: "",
                    tab: "safe"
                },
                accountLock: { group: "setting", title: "设置", url: "set/account_lock.html", site: "", tab: "safe" },
                lockForget: {
                    group: "setting",
                    title: "设置",
                    url: "set/account_lock_verifycode.html",
                    site: "",
                    tab: "safe"
                },
                editLockPass: {
                    group: "setting",
                    title: "设置",
                    url: "set/account_lock_edit_password.html",
                    site: "",
                    tab: "safe"
                },
                mobile: { group: "setting", title: "设置", url: "set/mobile_new.html", site: "", tab: "mobile" },
                partner: {
                    group: "setting",
                    title: "设置",
                    url: "set/mobile_new.html?anchor=notify",
                    site: "",
                    tab: "mobile"
                },
                notice: { group: "setting", title: "设置", url: "set/notice.html", site: "", tab: "notice" },
                notice_notify: { group: "setting", title: "设置", url: "set/notice.html", site: "", tab: "notice" },
                notify_new: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/spam_new.html?anchor=notify",
                    site: "",
                    tab: "spam_new"
                },
                set_addr: { group: "setting", title: "设置", url: "set_v2/set_addr.html", site: "", tab: "settingsaddr" },
                set_calendar: {
                    group: "setting",
                    title: "设置",
                    url: "set_v2/set_calendar.html",
                    site: "",
                    tab: "settingscalendar"
                },
                set_disk: { group: "setting", title: "设置", url: "set_v2/set_disk.html", site: "", tab: "settingsdisk" },
                set_mpost: {
                    group: "setting",
                    title: "设置",
                    url: "/mpost2014/html/columnmanager.html?sid=" + top.sid,
                    site: "",
                    tab: "settingsmpost"
                },
                set_mms: { group: "setting", title: "设置", url: "set_v2/set_mms.html", site: "", tab: "settingsmms" },
                pushEmail: { url: "/pushmail/default.aspx", site: "webmail", title: "pushEmail", tab: "pushemail" },
                G3Phone: {
                    url: top.SiteConfig.ssoInterface + "/GetUserByKeyEncrypt?url=" + encodeURIComponent("http://auth.weibo.10086.cn/sso/139mailframe.php?a=g3&environment=2&partId=1&path=&skin=shibo&sid=") + "&comeFrom=weibo&sid=" + top.sid,
                    title: "G3通话",
                    tab: "G3Phone"
                },
                fetion: { url: "http://i2.feixin.10086.cn/home/indexpart", site: "", title: "飞信同窗", tab: "fetion" },
                shequ: {
                    url: top.SiteConfig.ssoInterface + "/GetUserByKeyEncrypt?url=" + encodeURIComponent("http://auth.weibo.10086.cn/sso/139mailframe.php?sid=") + "&comeFrom=weibo&sid=" + top.sid,
                    comefrom: "weibo",
                    title: "移动微博",
                    group: "移动微博",
                    tab: "shequ"
                },
                cancelPackage: {
                    url: "/userconfig/matrix/MailUpgrade.aspx?page=MailUpgrade.aspx",
                    site: "webmail",
                    title: "套餐信息",
                    tab: "cancelpackage"
                },
                syncguide: { url: "../html/syncguide.html", site: "", title: "手机同步邮箱", tab: "syncguide" },
                pay139: {
                    url: top.SiteConfig.ssoInterface + "/GetUserByKeyEncrypt?url=" + encodeURIComponent(domainList.global.pay139 + "&sid=") + "&comeFrom=weibo&sid=" + top.sid,
                    site: "",
                    title: "手机支付",
                    tab: "pay139"
                },
                note: { url: "note/note.html", site: "", title: "和笔记", tab: "note" },
                heyuedu: {
                    url: top.SiteConfig.ssoInterface + "/GetUserByKeyEncrypt?url=" + encodeURIComponent("http://read.10086.cn/email139/index?Sid=") + "&comeFrom=weibo&sid=" + top.sid,
                    comeFrom: "weibo",
                    site: "",
                    title: "和阅读",
                    tab: "heyuedu"
                },
                sms: { url: "sms/sms_send.html", group: "sms", title: "发短信", homeUrl: "sms_send.html" },
                mms: { url: "mms/mmsRedirect.html", group: "mms", title: "发彩信" },
                diskDevOld: {
                    url: "disk/disk_jump.html",
                    site: "",
                    group: "disk",
                    title: "彩云网盘",
                    homeUrl: "disk_default.html"
                },
                diskDev: {
                    url: "disk_v3/index.html",
                    site: "",
                    group: "disk",
                    title: "彩云",
                    homeUrl: "disk_v3/index.html"
                },
                diskShare: {
                    url: "disk_v2/disk_share.html",
                    site: "",
                    group: "disk",
                    title: "彩云网盘",
                    homeUrl: "disk_v2/disk_share.html"
                },
                greetingcard: { url: "card/card_sendcard.html", site: "", title: "贺卡" },
                card_success: { url: "card/card_success.html", site: "", title: "贺卡" },
                quicklyShareOld: { url: "largeattach/largeattach_welcome.html", site: "", title: "文件快递" },
                quicklyShare: { url: "fileexpress/cabinet.html", site: "", group: "disk", title: "彩云网盘" },
                postcard: {
                    url: "card/postcard.html",
                    group: "postcard",
                    site: "",
                    title: "明信片",
                    homeUrl: "card/postcard.html"
                },
                attachlist: { url: "mailattach/mailattach_attachlist.html", site: "", group: "disk", title: "彩云网盘" },
                calendar: {
                    url: "calendar_v2/cal_index.html",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                },
                addMyCalendar: {
                    url: "calendar_v2/mod/cal_mod_schedule_v1.html",
                    homeUrl: "cal_index.html",
                    title: "添加活动",
                    group: "calendar"
                },
                vipEmpty: { url: "mail/vipmail_empty.html", site: "", title: "VIP邮件" },
                clientPc: {
                    url: getDomain("rebuildDomain") + "/disk/netdisk/wp.html?jsres=http%3A//images.139cm.com/rm/newnetdisk4//&res=http://images.139cm.com/rm/richmail&isrm=1",
                    site: "",
                    title: "pc客户端",
                    target: "_blank"
                },
                smallTool: {
                    url: top.getRootPath() + "/html/control139.htm",
                    site: "",
                    title: "pc客户端/小工具",
                    target: "_blank"
                },
                smallToolSetup: {
                    url: top.getRootPath() + "/controlupdate/mail139_tool_setup.exe",
                    site: "",
                    title: "小工具安装",
                    target: "_blank"
                },
                pcClientSetup: {
                    url: top.getRootPath() + "/html/disk_v2/wp.html",
                    site: "",
                    title: "pc客户端",
                    target: "_blank"
                },
                health: { url: "health.html", group: "health", title: "邮箱健康度" },
                userCenter: {
                    url: " http://zone.mail.10086.cn/api/sso/ssoformail.ashx?to=CN201204A1&flag=6",
                    site: "",
                    title: "用户中心"
                },
                voiceSetting: { url: top.getRootPath() + "/html/voiceMail/redirect.html", site: "", title: "和留言设置" },
                usercenter: { url: "usercenter/uc_index.html", site: "", title: "升级服务", tab: "usercenter" },
                shareFriend: {
                    group: "addr",
                    tab: "addr",
                    title: "收到的分享",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?v=20120620&homeRoute=10100",
                    site: ""
                },
                addrvipgroup: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?v=20120620&homeRoute=10100",
                    site: ""
                },
                addrhome: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html",
                    site: ""
                },
                addrinputhome: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_import_clone",
                    site: ""
                },
                addroutput: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_export",
                    site: ""
                },
                addrWhoAddMe: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_whoaddme",
                    site: ""
                },
                addrWhoWantAddMe: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_request",
                    site: ""
                },
                updateContact: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_update",
                    site: ""
                },
                addrshare: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr/addr_share_home.html?check=1",
                    site: ""
                },
                addrshareinput: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "/addr/matrix/share/ShareAddrInput.aspx",
                    site: "webmail"
                },
                addrbaseData: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_info_basic",
                    site: ""
                },
                dyContactUpdate: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "/addr/matrix/updatecontactinfo.htm",
                    site: "webmail"
                },
                addrImport: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_import_pim",
                    site: ""
                },
                addrImportFile: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_import_file",
                    site: ""
                },
                addrMcloudImport: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_import_pim",
                    site: ""
                },
                addrAdd: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_add_contacts",
                    site: ""
                },
                addrEdit: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_editContact",
                    site: ""
                },
                addrMyVCard: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr/addr_businesscard.html?type=mybusinesscard&pageId=0",
                    site: ""
                },
                addr: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html",
                    site: ""
                },
                setPrivate: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_setprivacy",
                    site: ""
                },
                baseData: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_info_basic",
                    site: ""
                },
                teamCreate: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_team_create",
                    site: ""
                },
                teamNotify: {
                    group: "addr",
                    tab: "addr",
                    title: "通讯录",
                    homeUrl: "addr_index.html",
                    url: "addr_v2/addr_index.html?homeRoute=10200&redirect=addr_team_notify",
                    site: ""
                },
                syncGuide: {
                    url: "/rm/richmail/page/sync_guide_inner.html",
                    site: "",
                    title: "手机同步邮箱",
                    tab: "syncguide"
                },
                groupMail: {
                    url: top.getRootPath() + "/html/groupmail/list.html",
                    site: "",
                    title: "群邮件",
                    group: "groupMail"
                },
                writeGroupMail: {
                    url: top.getRootPath() + "/html/groupmail/list.html?redirect=writeGroupMail",
                    site: "",
                    title: "群邮件",
                    group: "groupMail"
                },
                groupMailWrite: {
                    url: "GroupMail/GroupMail/ComposeGroupmail.aspx?action=write",
                    site: "webmail",
                    group: "groupMailCompose",
                    title: "写群邮件"
                },
                groupMailSetting: {
                    url: "/GroupMail/GroupOper/GroupManager.aspx",
                    site: "webmail",
                    group: "groupMail",
                    title: "群邮件",
                    refresh: !0
                },
                groupMailFindGroup: {
                    url: "/GroupMail/GroupOper/FindGroup.aspx",
                    site: "webmail",
                    group: "groupMail",
                    title: "群邮件",
                    refresh: !0
                },
                groupMailCreateGroup: {
                    url: "/GroupMail/GroupOper/CreateGroup.aspx",
                    site: "webmail",
                    group: "groupMail",
                    title: "群邮件",
                    refresh: !0
                },
                groupMailAddGroupUser: {
                    url: "/GroupMail/GroupOper/AddUserGroup.aspx",
                    site: "webmail",
                    group: "groupMail",
                    title: "群邮件",
                    refresh: !0
                },
                groupMailEditGroup: {
                    url: "/GroupMail/GroupOper/EditGroupNickName.aspx",
                    site: "webmail",
                    group: "groupMail",
                    title: "群邮件",
                    refresh: !0
                },
                myrings: { url: "set/myrings.html", site: "", title: "咪咕音乐" },
                billManager: { url: "bill/billmanager.htm", site: "", group: "mailsub_0", title: "服务邮件" },
                billLife: {
                    url: "http://bill.mail.10086.cn/huidu/billcenter/mybill.jsp?lc=main",
                    site: "",
                    title: "账单生活"
                },
                billLifeNew: {
                    url: "http://bill.mail.10086.cn/handler/bill/goto.ashx",
                    site: "",
                    group: "mailsub_0",
                    title: "服务邮件"
                },
                billLifeSsoIndex: {
                    url: " http://bill.mail.10086.cn/handler/bill/goto.ashx?lc=main&provcode=0&areacode=0&from=1&fromtype=1 ",
                    site: "",
                    title: "账单生活"
                },
                billLifeSsoWater: {
                    url: " http://bill.mail.10086.cn/handler/bill/goto.ashx?lc=pay.waterselect&provcode=0&areacode=0&from=1&fromtype=1 ",
                    site: "",
                    group: "mailsub_0",
                    title: "账单生活"
                },
                billLifeSsoElectric: {
                    url: " http://bill.mail.10086.cn/handler/bill/goto.ashx?lc=pay.electricselect&provcode=0&areacode=0&from=1&fromtype=1 ",
                    site: "",
                    group: "mailsub_0",
                    title: "账单生活"
                },
                billLifeSsoGass: {
                    url: " http://bill.mail.10086.cn/handler/bill/goto.ashx?lc=pay.gasselect&provcode=0&areacode=0&from=1&fromtype=1 ",
                    site: "",
                    group: "mailsub_0",
                    title: "账单生活"
                },
                billLifeTraffic: {
                    url: "http://bill.mail.10086.cn/handler/bill/goto.ashx?lc=pay.trafficselect&provcode=0&areacode=0&from=1&fromtype=1",
                    site: "",
                    group: "mailsub_0",
                    title: "账单生活"
                },
                uecLab: { url: "uec/lab.html", title: "实验室" },
                meeting: { url: "meeting.html", title: "会议通" },
                selfSearch: { url: "set/selfsearch.html", title: "自助查询" },
                fax: { url: "fax/fax_index.html", site: "", title: "收发传真" },
                pushemail: { url: "/pushmail/default.aspx", site: "webmail", title: "手机客户端" },
                smsnotify: { url: "sms/notifyfriends.html", group: "sms", title: "短信提醒" },
                mobileGame: { url: "http://g.10086.cn/s/139qr/", group: "mobileGame", title: "手机游戏" },
                earth2013: { url: "topicality/earth2013/indexearth.html", site: "", title: "地球一小时" },
                addcalendar: {
                    url: "calendar/calendar_editcalendar.html",
                    homeUrl: "calendar_view.html",
                    title: "日历",
                    group: "calendar"
                },
                prettyNumberActivity: { url: "prettyNumber/html/main.html", site: "", title: "限时抢靓号" },
                chaozhouSendMail: { url: "chaozhou/sendEmail/popup.html", site: "", title: "发邮件邮好礼" },
                myTask: {
                    url: "http://zone.mail.10086.cn/api/sso/ssoformail.ashx?to=CN201306B1",
                    site: "",
                    title: "我的积分任务"
                },
                sportLottery: { url: "http://3g.weicai.com/139mail/index.php", type: "sso", comefrom: "weibo" },
                changeSkin: { url: "replacingskins.html", site: "", title: "换皮肤" },
                mailHall: { url: "hall/index.html", site: "", title: "邮箱营业厅" },
                lottery: {
                    url: top.getDomain("lotteryRequest") + "/setting/s?func=setting:examineUserStatus&versionID=1",
                    site: "",
                    title: "开箱邮礼"
                },
                blueSky: {
                    url: "http://zone.mail.10086.cn/api/sso/ssoformail.ashx?to=CN201403A1",
                    site: "",
                    title: "蓝天自造"
                },
                billCharge: { url: top.SiteConfig.billChargeUrl, site: "", title: "邮箱营业厅" },
                colorfulEgg: {
                    url: "http://zone.mail.10086.cn/api/sso/ssoformail.ashx?to=CN201403D1",
                    site: "",
                    title: "生日管理"
                },
                smartLife: {
                    url: top.getDomain("happyMailUrl") + "/api/sso/ssoformail.ashx?to=CN201407B1",
                    site: "",
                    title: "拥抱智能生活"
                },
                cardMail: { url: "/mpost2014/html/cardMail/cardMailList.html", site: "", title: "订阅邮件" },
                receiveRights: { url: top.getRootPath() + "/edm/receive_rights/newyear.html", site: "", title: "限免特权" },
                doubleEleven: { url: "/m2015/edm/double_eleven/index.html", site: "", title: "光棍节" },
                koyuki: { url: "/m2015/edm/koyuki/index.html", site: "", title: "小雪节气" },
                winnerSolstice: { url: "/m2015/edm/winnerSolstice/index.html", site: "", title: "冬至节气" },
                fileShareRemind_disk: {
                    group: "disk",
                    title: "我收到的分享",
                    url: "disk_v3/index.html?v=20120620&homeRoute=10100&from=friendsShare"
                },
                officialsharing: {
                    group: "disk",
                    title: "官方共享",
                    url: "disk_v3/index.html?v=20120620&homeRoute=10100&from=officialsharing"
                },
                pcLottery: { url: "/m2015/edm/pcLottery/index.html", site: "", title: "签到有奖" },
                helloFriend: { url: "/m2015/html/hello/helloFriend.html", site: "", title: "打招呼" },
                helloSendSuccessfulPage: { url: "/m2015/html/hello/helloSendSuccessful.html", site: "", title: "发送成功" },
                clearFileTool: { url: "/m2015/html/clearFile/clearFileIndex.html", site: "", title: "文件整理工具" },
                nothing: {}
            },
            domainList.global.billLife || (domainList.global.billLife = "http://bill.mail.10086.cn"),
            this.addSubscribeLinks(),
            this.fixlinks())
        },
        modules: [],
        defaults: { currentLink: null, container: null },
        getLinkByKey: function (e) {
            var t = window.LinkConfig[e];
            if (t && t.url) {
                t.url = t.url.replace("http:", window.location.protocol);
            }
            return t;
        },
        getLink: function (e) {
            var t = e.get("currentModule"), i = t, a = e.getModule(t);
            a.orignName && (i = a.orignName);
            var s = this.getLinkByKey(i);
            return a.view && a.view.inputData && a.view.inputData.categroyId && (s.categroyId = a.view.inputData.categroyId), s
        },
        addLink: function (e, t) {
            window.LinkConfig[e] = t
        },
        addSubscribeLinks: function () {
            var e = top.getProtocol() + top.location.host;
            getDomain("homemail");
            this.addLink("goodMag", {
                url: e + "/inner/magazine_list_main.action",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("googSubscription", {
                url: e + "/mpost2014/html/mpost.html",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("mpostOnlineService", {
                url: e + "/mpost2014/html/onlineservice.html",
                channel: "subscribe",
                mutiple: !0,
                refresh: !0,
                title: "云邮局"
            }), this.addLink("mpostOnlineRead", {
                url: e + "/mpost2014/html/mymagazine.html",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("myMag", {
                url: e + "/inner/magazine_list_main.action",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("myCollect", {
                url: e + "/inner/show_favorite.action",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("myCloudSubscribe", {
                url: e + "/inner/mysubscribe.action",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("setSubscription", {
                url: e + "/inner/to_subscribe_manager.action",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("myBookshelf", {
                url: e + "/inner/magazine_list_main.action",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("dingyuezhongxin", {
                url: e + "/mpost2014/html/mpost.html",
                group: "subscribe",
                title: "云邮局"
            }), this.addLink("dingyueDownload", {
                url: "http://jpdyapp.mail.10086.cn/?21",
                group: "subscribe",
                title: "云邮局"
            })
        },
        addAddrLinks: function () {
            this.addLink("addrvipgroup", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_vip_group",
                site: ""
            }), this.addLink("addrhome", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html",
                site: ""
            }), this.addLink("addrinputhome", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_import",
                site: ""
            }), this.addLink("addroutput", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_export",
                site: ""
            }), this.addLink("addrWhoAddMe", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=maybeknown",
                site: ""
            }), this.addLink("addrWhoWantAddMe", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=maybeknown",
                site: ""
            }), this.addLink("updateContact", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_update",
                site: ""
            }), this.addLink("addrshare", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr/addr_share_home.html?check=1",
                site: ""
            }), this.addLink("addrshareinput", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html",
                site: "webmail"
            }), this.addLink("addrbaseData", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=userinfo_review",
                site: ""
            }), this.addLink("dyContactUpdate", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html",
                site: "webmail"
            }), this.addLink("addrImport", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_import",
                site: ""
            }), this.addLink("addrImportFile", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_import",
                site: ""
            }), this.addLink("addrMcloudImport", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_import",
                site: ""
            }), this.addLink("addrAdd", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addredit",
                site: ""
            }), this.addLink("addrEdit", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addredit",
                site: ""
            }), this.addLink("addrMyVCard", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr/addr_businesscard.html?type=mybusinesscard&pageId=0",
                site: ""
            }), this.addLink("addr", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html",
                site: ""
            }), this.addLink("setPrivate", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=maybeknown",
                site: ""
            }), this.addLink("baseData", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=userinfo_review",
                site: ""
            }), this.addLink("teamCreate", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_team_create",
                site: ""
            }), this.addLink("teamNotify", {
                group: "addr",
                tab: "addr",
                title: "通讯录",
                homeUrl: "addr_index.html",
                url: "addr_v3/addr_index.html?redirect=addr_team_notify",
                site: ""
            })
        },
        fixlinks: function () {
            if (top.SiteConfig.calendarRemind) if (top.SiteConfig.isLoadingCalendarRemind) this.addLink("calendar", {
                url: "calendar_reminder/loading.html",
                homeUrl: "month.html",
                title: "日历",
                group: "calendar"
            }); else {
                var e = window.location.search, t = e.substring(1);
                this.addLink("calendar", {
                    url: "calendar_v2/cal_index.html",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_homepage", {
                    url: "calendar_v2/cal_index.html?redirect=homepage&" + t,
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar",
                    clearSid: !0
                }), this.addLink("calendar_addCal", {
                    url: "calendar_v2/cal_index.html?redirect=addCal",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_addAct", {
                    url: "calendar_v2/cal_index.html?redirect=addAct",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("addBirthcalendar", {
                    url: "calendar_v2/cal_index.html?redirect=addbirthact",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_viewAct", {
                    url: "calendar_v2/cal_index.html?redirect=viewAct",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_msg", {
                    url: "calendar_v2/cal_index.html?redirect=msg",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_search", {
                    url: "calendar_v2/cal_index.html?redirect=search",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_square", {
                    url: "calendar_v2/cal_index.html?redirect=square",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_calManager", {
                    url: "calendar_v2/cal_index.html?redirect=calManager",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_viewCal", {
                    url: "calendar_v2/cal_index.html?redirect=viewCal",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_addActFast", {
                    url: "calendar_v2/cal_index.html?redirect=addActFast",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                }), this.addLink("calendar_showView", {
                    url: "calendar_v2/cal_index.html?redirect=showView",
                    homeUrl: "cal_index.html",
                    title: "日历",
                    group: "calendar"
                });
                for (var i = [{ labelId: 6, name: "birth", page: "list_system.html" }, {
                    labelId: 1,
                    name: "appointment",
                    page: "list_system.html"
                }, { labelId: 2, name: "pay", page: "list_system.html" }, {
                    labelId: 3,
                    name: "special",
                    page: "list_system.html"
                }, { labelId: 5, name: "sport", page: "list_system.html" }, {
                    name: "baby",
                    page: "list_baby.html"
                }], a = null, s = null, o = null, n = 0; n < i.length; n++) a = i[n], o = a.page, s = "calendar_v2/" + a.page, a.labelId && (s += "?labelId=" + a.labelId), this.addLink("specialCalendar_" + a.name, {
                    url: s,
                    homeUrl: o,
                    title: "日历",
                    group: "calendar"
                })
            }
            var r = "1" == $Cookie.get("cookiepartid");
            if ("20" == $T.Url.queryString("v") || "25" == $T.Url.queryString("v")) {
                var l = window.location.protocol;
                LinkConfig.welcome.url = "/m2012server/home?Protocol=" + encodeURIComponent(l)
            } else {
                var l = window.location.protocol;
                LinkConfig.welcome.url = "/m2012server/welcome?Protocol=" + encodeURIComponent(l)
            }
            if (r || (window.LinkConfig.billLife.url = "http://bill.mail.10086.cn/handler/bill/goto.ashx?lc=main"), top.SiteConfig.isAddrV3) {
                for (var c in window.LinkConfig) {
                    var d = window.LinkConfig[c];
                    "addr" === d.group && "addr" === d.tab && delete window.LinkConfig[c]
                }
                this.addAddrLinks()
            }
        }
    },
    {
        getLinkByKey: function (e) {
            var t = window.LinkConfig[e];
            if (t && t.url) {
                t.url = t.url.replace("http:", window.location.protocol);
            }
            return t;
        }
    });
    window.FrameModel = e
}();
var FrameView = Backbone.View.extend({
    initialize: function (e) {
        this.parentView = e.parent,
        this.model = new FrameModel,
        this.param = e.param,
        this.url = e.url,
        this.html = e.html,
        this.title = e.title,
        this.inputData = e.inputData;
        var t = this;
        $(window).resize(function () {
            t.onResize()
        })
    },
    render: function (e) {
        var t = this,
            i = this.parentView.model,
            a = i.get("currentModule"),
            s = this.model.getLink(i),
            o = ['<div class="bodyerror ErrorTips" style="display:none">',
                '<img id="img_smile" _src="../images/global/smile.png" width="73" height="72">',
                "<p>没加载出来，再试一次吧</p>",
                '<a class="btnTb" href="javascript:"><span class="p_relative">重新加载</span></a>',
                '</div><div class="gtips NoCompleteTips" style="display:none">',
                '<span class="ml_5">由于网络原因，当前页面未完全加载，是否<a class="Retry" style="text-decoration: underline;" href="javascript:">重新加载</a>？</span>',
                '<a href="javascript:" class="i_u_close Close"></a>', "</div>"].join("");
        if (s) {
            this.parentView.setTitle(i.getModule(a).title || s.title);
            if ("" == $(this.el).html() || !e || s.refresh) {
                var n = s.url.indexOf("?") >= 0 ? "&" : "?";
                if (s.tab) {
                    $App.getView("tabpage").showLoading(s.tab);
                }
                var r = s.url;
                s.clearSid || (r = r + n + "sid=" + sid);
                s.categroyId && (r += "&categroyId=" + s.categroyId);
                s.site && (r = getDomain(s.site) + "/" + r);
                if (this.param) {
                    if ("string" == typeof this.param) {
                        if (this.param.indexOf("urlReplace") >= 0) {
                            r = this.param.match("urlReplace=(.+)")[1];
                            var l = s.url.match(/https?:\/\/.+?\//);
                            l && (r = l + r)
                        } else {
                            r += this.param;
                        }
                    } else {
                        r = M139.Text.Url.makeUrl(r, this.param);
                    }
                }
                this.inputData && (r = $App.inputDataToUrl(r, this.inputData));
                var c = a;
                if (s.tab && (c = s.tab), "welcome" == c && document.getElementById("welcome_preload")) {
                    var d = document.getElementById("welcome_preload");
                    d.id = "welcome"
                } else if (c.indexOf("compose") >= 0 && !window.firstComposeLoaded && -1 == r.indexOf("mid")
                    && -1 == r.indexOf("type") && -1 == r.indexOf("inputData") && document.getElementById("compose_preload")) {
                    var d = document.getElementById("compose_preload");
                    $(d).closest("div").show(), window.firstComposeLoaded = !0, setTimeout(function () {
                        var e = $(d).contents().height() - $(d).contents().find("#htmlEdiorContainer").offset().top;
                        e -= 80, 25 > e && (e = 25), $(d).contents().find(".eidt-body").height(e)
                    }, 100)
                } else {
                    var p = this;
                    if (c.indexOf("compose") >= 0) setTimeout(function () {
                        var e = p.createIframe(r, c);
                        $(p.el).empty().append(e).append($(o))
                    }, 0); else {
                        var d = this.createIframe(r, c);
                        $(this.el).empty().append(d).append($(o))
                    }
                }
            }
        } else {
            if (this.url) {
                this.parentView.setTitle(this.title);
                d = this.createIframe(this.url);
                $(this.el).empty().append(d).append($(o));
            } else {
                if (this.html) {
                    this.parentView.setTitle(this.title), $(this.el).html(this.html);
                }
            }
        }
        setTimeout(function () {
            t.onResize()
        }, 50);
        if (!e) {
            setTimeout(function () {
                t.watchIframeStatus(i.getModule(a))
            }, 0);
        }
    },
    createIframe: function (e, t) {
        var i, a,
            s = $App.getView("tabpage").getFrame(e);
        $(s).attr({
            scrolling: "auto",
            "class": "main-iframe",
            name: "ifbg",
            frameborder: "no",
            width: "100%",
            allowtransparency: "true"
        });
        if (t) {
            $(s).attr({ id: t });
            $(s).on("load", function () {
                $(".loadingTip").remove()
            });
        }
        if (e.match(/^set.*|uec\/.*\.html/)) {
            i = $('<div class="skin_mainWrapper"></div>'),
            a = $('<div class="skin_main"></div>').append(s),
            s = i.append(a);
        }
        return s;
    },
    onResize: function () {
        if (this.el) try {
            var e = $(this.el).find("iframe")[0];
            !e && (e = {}) && (e.id = "");
            var t = $App.getCurrentTab && $App.getCurrentTab() && $App.getCurrentTab().name;
            if ("welcome" == e.id && "welcome" != t) return;
            $iframe = $(e);
            var i = $App.getBodyHeight() - $("#div_main").offset().top;
            if (-1 != t.indexOf("compose_") ? setTimeout(function () {
                i = $(document.body).height() - $("#div_main").offset().top, $iframe.height(i - 4)
            }, 0) : "addr" == e.id && "addr" == t || "diskDev" == e.id ? $iframe.height(i) : "welcome" == e.id ? $iframe.height(i) : $iframe.height(i - 4), $.browser.msie && $.browser.version < 8) {
                var a = e.id;
                if (a && -1 !== a.indexOf("mpostOnlineService") || "googSubscription" === a || "diskDev" == a || "calendar" == a || "createCalendar" == a || "addcalendar" == a || a.toLowerCase().indexOf("calendar_") > -1 || "addr" == a || "jpdy_topic_1" === a || "billCharge" == a || "changeSkin" == a || "meetingManage" == a || "groupMail" == a || -1 != a.indexOf("compose_")) return;
                $App.isNewWinCompose() || "welcome" != t && $iframe.width($(document.body).width() - 214)
            }
        } catch (s) {
        }
    },
    getIframe: function () {
        return this.el.firstChild || null
    },
    setTabStatus: function (e) {
        var t = this.getIframe();
        t && t.id && $App.getView("tabpage").tab.setStateIcon(t.id, e), this.model.set("tabStatus", e)
    },
    getTabStatus: function () {
        return this.model.get("tabStatus")
    },
    watchIframeStatus: function (e) {
        function t() {
            var e = c.src;
            return /^\/|https?:\/\/(appmail\d+|rm|app|smsrebuild\d+|subscribe\d+|html5)\.mail\./.test(e) && e.indexOf(top.getRootPath()) > -1 ? !(e.indexOf("inner/reader/index") >= 0 || e.indexOf("voiceMail") >= 0) : !1
        }

        function i(e) {
            var i;
            t() ? $Iframe.isAccessAble(c) ? d.LoadStatusCheck ? (i = setTimeout(n, 3e3), $Timing.waitForReady(function () {
                return d.LoadStatusCheck.isComplete() && l.checkIframeHealth(c)
            }, function () {
                clearTimeout(i), a()
            })) : l.checkIframeHealth(c) ? a() : setTimeout(function () {
                l.checkIframeHealth(c) ? a() : n()
            }, 3e3) : "onload" == e && o() : a()
        }

        function a() {
            l.setTabStatus("hide"), $(l.el).find("div.ErrorTips,div.NoCompleteTips").hide(), c.style.visibility = ""
        }

        function s() {
            !top.$User.isChinaMobileUser() || "0010" != top.$User.getUserLevel() && "0015" != top.$User.getUserLevel() || $(c.contentWindow.document).find("#upPackage").show().prev().show()
        }

        function o() {
            l.setTabStatus("error"), $(l.el).find("#img_smile").attr("src", "../images/global/smile.png"), $(l.el).find("div.ErrorTips").show().find("a").click(function () {
                $(this).unbind("click"), r()
            }), c.style.visibility = "hidden", $App.trigger("httperror", { loadResourceError: !0 })
        }

        function n() {
            l.setTabStatus("error");
            var e = $(l.el).find("div.NoCompleteTips").show();
            e.find("a.Retry").click(function () {
                $(this).unbind("click"), r()
            }), e.find("a.Close").click(function () {
                e.hide()
            }), c.style.visibility = "", $App.trigger("httperror", { loadResourceError: !0 }), l.iframeErrorLog && M139.Logger.sendClientLog(l.iframeErrorLog)
        }

        function r() {
            c.src = c.src, $(l.el).find("div.ErrorTips,div.NoCompleteTips").hide()
        }

        var l = this, c = this.getIframe();
        if ("function" != typeof c.onload && c.contentWindow && setTimeout(function () {
            s()
        }, 50), $(c).load(function () {
            this.id && -1 != this.id.indexOf("compose") && s()
        }), SiteConfig.labelIframeLoadingRelease && !($B.is.ie && $B.getVersion() < 9) && c && "welcome" != c.id) {
            setTimeout(function () {
                i("settimeout")
            }, 100), setTimeout(function () {
                "error" == l.getTabStatus() && (e.isRendered = !1)
            }, 1e4);
            var d = c.contentWindow;
            c.onload = function () {
                i("onload")
            }, t() && $Timing.waitForReady(function () {
                return d.document.domain === document.domain
            }, function () {
                $(d.document).ready(i)
            })
        }
    },
    checkIframeHealth: function (e) {
        var t = this, i = !0;
        return ($B.is.ie && $B.getVersion() >= 9 || window.FormData) && !function () {
            for (var a = e.contentWindow.document.getElementsByTagName("script"), s = 0; s < a.length; s++) {
                var o = a[s];
                if ("0" === o.getAttribute("jsonload")) return i = !1, void (t.iframeErrorLog = {
                    level: "ERROR",
                    name: "JSLoadError",
                    url: o.src
                })
            }
            if (!($B.is.chrome && $B.getVersion() < 25 || $B.is.safari || $B.is.firefox && $B.getVersion() < 25)) for (var n = e.contentWindow.document.getElementsByTagName("link"), s = 0; s < n.length; s++) {
                var r = n[s];
                if ((!r.parentNode || "HEAD" === r.parentNode.tagName) && "0" === r.getAttribute("cssonload")) return i = !1, void (t.iframeErrorLog = {
                    level: "ERROR",
                    name: "CSSLoadError",
                    url: r.href
                })
            }
        }(), i
    }
});


//拓展tablabel
_.extend(TabLabel.prototype, {
    init: function (e) {
        this.context = e;
        this.cur = null;
        this.tabs = [];
        this.group = [];
        this.count = 0;
        this.width = 720;
        this.max = 124;
        this.min = 90;
        this.history = [];
        this.call = [];
    },
    add: function (e, t, i) {
        function a() {
            return "welcome" === n || "mailbox_1" === n || $.inArray(n, l) > -1 ? !0 : void 0
        }

        function s(e) {
            setTimeout(function () {
                o.call[2].call(o.context, e) && o.del(e)
            }, 0)
        }

        var o = this,
            n = e.name,
            r = document.createElement("li"),
            l = this.context.model.getFixedTabsData();
        e.text = e.text || "",
        $(r).attr({
            role: "tab",
            tabid: n,
            title: e.text,
            tabindex: "0",
            "aria-selected": t ? "false" : "true"
        }),
        e.mid && $(r).attr("mid", e.mid);
        r.className = t ? "" : "on";
        r.innerHTML = '<i style="display:none;" class="error-loading"></i><span>' + $T.Html.encode(e.text) + "</span>";
        a() || (r.innerHTML += '<a href="javascript:;" class="i_close" title="关闭"></a>');
        r.onmousedown = function (e) {
            e = e || window.event;
            var t = e.target || e.srcElement;
            if ("A" != t.tagName) {
                var i = this.getAttribute("tabid");
                o.exist(i) != o.cur && o.active(i)
            }
        }
        if (!e.close) {
            var c = r.getElementsByTagName("a")[0];
            r.ondblclick = function () {
                c && ($(c).trigger("click"), $(".santaClaus").length > 0 && $(".santaClaus").remove())
            };
            c && (c.onclick = function (e) {
                var t = this.parentNode.getAttribute("tabid");
                s(t)
            });
        }
        var d = "delOrignTab_" + n;
        $App.off(d).on(d, function () {
            "welcome" === n || n.indexOf("mailbox_") > -1 && !$User.isChinaMobileUser() || (s(n), console.log(n))
        }),
        i ? $(this.main).find("li:eq(0)").after(r) : $("#tabsMenuIco").before(r),
        $("#tabsMenuList").hide(),
        this.tabs[n] = r,
        t || this.active(n),
        this.count++,
        this.size();
        var p = /myMag|myCollect|googSubscription|myCloudSubscribe/i;
        p.test(e.name) && (e.group = "subscribe", e.name = "精品订阅");
        if (e.group) {
            var m = this.group[e.group];
            m && m != n && this.exist(m) && (this.call[2].call(this.context, m), this.replace(m, n)),
            this.group[e.group] = n
        }
        specialTreatments(e, r, this)
    },
    exist: function (e) {
        var t = this.tabs[e];
        return t && t.nodeType && t.getAttribute("tabid") ? t : null
    },
    del: function (e) {
        var t = this.exist(e);
        t && (this.cur == t && (this.cur = null), this.main.removeChild(t), delete this.tabs[e], this.count--, this.size(), this.call[0] && this.call[0].call(this.context, e), this.update(e, !1), !this.cur && this.history.length && (t = this.history[this.history.length - 1], this.history.length--, "welcome" == t && (t = "mailbox_1"), this.active(t)), $App.getView("tabpage").tab.count > top.maxTabCount ? $("#tabsMenuIco").show() : $("#tabsMenuIco").hide())
    },
    active: function (e) {
        function t(e, t) {
            if (t) {
                var i = e.getAttribute("tabid");
                e.className = "on";
                e.setAttribute("aria-selected", "true");
                "welcome" == i ? e.className = "home on" : e.className = "on";
            } else {
                var a = e.getAttribute("tabid");
                "welcome" == a ? e.className = "home" : e.className = "";
                e.setAttribute("aria-selected", "false");
            }
        }

        var i = this.exist(e);
        if (i) {
            if (this.call[1] && !this.call[1].call(this.context, e)) return !1;
            this.cur && t(this.cur, !1),
            this.cur = i,
            t(i, !0),
            this.update(e, !0)
        }
    },
    title: function (e, t) {
        var i = this.exist(e);
        if (i) {
            var a = i.getElementsByTagName("span")[0];
            if (!t) {
                var s = $T.Html.decode(a.innerHTML);
                return s
            }
            a.innerHTML = $T.Html.encode(t), i.title = t
        }
    },
    close: function (e) {
        var t = this.exist(e);
        t && $(t).find(".i_close").trigger("click")
    },
    change: function (e, t, i) {
        var a = this.exist(e);
        if (a) {
            t && this.title(e, t), delete this.tabs[e], a.setAttribute("tabid", i), this.tabs[i] = a;
            var s, o = this.history.length;
            for (s = 0; o > s; s++) if (this.history[s] == e) {
                this.history[s] = i;
                break
            }
        }
    },
    replace: function (e, t) {
        var i = this.exist(e) && this.exist(t);
        if (i) {
            var a = this.title(t);
            this.cur = this.exist(e), this.del(t), this.change(e, a, t), this.active(t)
        }
    },
    size: function (e) {
        var t, i;
        if (e) this.width = e; else {
            var a = 30;
            this.width = $D.getWinWidth() - a - this.max
        }
        this.count = $.grep($("#divTab ul").find("li[tabid]"), function (e, t) {
            return "none" != e.style.display
        }).length, (this.count - 1) * this.max > this.width ? this.min = Math.floor(this.width / (this.count - 1)) < 83 ? 83 : Math.floor(this.width / (this.count - 1)) : this.min = this.max;
        for (i in this.tabs) if (t = this.exist(i)) {
            var s = "收件箱" == $(t).text() ? this.max - 33 : this.min - 33;
            .5 > s && (s = 0), t.style.width = s + "px"
        }
    },
    update: function (e, t) {
        var i, a, s = this.history.length, o = [];
        for (i = 0; s > i; i++) a = this.history[i], a != e && (o[o.length] = a);
        t && (o[o.length] = e), this.history = o
    },
    setStateIcon: function (e, t) {
        var i = {
            loading: "error-loading",
            error: "error-tab",
            cluster: "i_m_rss",
            uploading: "write-loading"
        }, a = this.tabs[e] && this.tabs[e].firstChild;
        a && "I" == a.tagName && ("hide" == t ? a.style.display = "none" : (a.className = i[t], "cluster" == t && $(a).css({
            left: "3px",
            top: "9px"
        }), a.style.display = ""))
    }
}),

//M2012.TabMenu.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.TabMenu.View", s.extend({
        events: { "click #orignTabsManage": "onOrignTabsManage" },
        template: {
            menu: ['<div id="tabsMenuList" class="tab-menu shadow" style="position:absolute;left:{left}px;top:{top}px;background:white;z-index:999">', '<ul class="tab-top">', '<li id="closeAllTabs" onClick="appView.closeAllTab()">', '<a href="javascript:;"> <i class="i-tab i-tab-c"></i>', '<span class="title">关闭所有标签</span>', "</a>", "</li>", "</ul>", '<div id="otherTabsMenu" class="sweb tab-ullist" style="display:none">', '<ul class="tab-list">', "</ul>", "</div>", "</div>"].join(""),
            item: ['<li tabid="{tabid}" class="{css}" data-curr="{flag}" bh="tab_menulist_other">', '<span class="tab-text" title="{title}">{name}</span>', '<span class="i-tab i-tab-x" name="close" style="{display}" title="关闭"></span>', "</li>"].join(""),
            nothing: ""
        },
        initialize: function () {
            this.model = appView.getView("tabpage").model;
            this.isChinaMobileUser = $User.isChinaMobileUser();
            this.initEvents();
            return s.prototype.initialize.apply(this, arguments);
        },
        initContainer: function () {
            this.mainTab = this.mainTab || a("#divTab"), this.tabsMenuList = this.tabsMenuList || a("#tabsMenuList"), this.fixedTabsUl = this.fixedTabsUl || a("#fixedTabsUl"), this.otherTabsMenu = this.otherTabsMenu || a("#otherTabsMenu")
        },
        onOrignTabsManage: function () {
            i.UI.TipMessage.show("数据加载中..."), setTimeout(function () {
                M2012.TabManage ? ((new M2012.TabManage.View).render(), i.UI.TipMessage.hide()) : i.core.utilCreateScriptTag({
                    id: "tabsmanagescript",
                    src: top.getRootPath() + "/js/richmail/main/tabmanage.view.js",
                    charset: "utf-8"
                }, function () {
                    i.UI.TipMessage.hide()
                })
            }, 500)
        },
        onShowMenuClick: function () {
            var e = this.template.menu;
            this.container = a("#tabsMenuIco");
            var t = this.container.offset().left - 220 + 23, i = this.container.offset().top + 31;
            e = $T.Utils.format(e, { left: t, top: i }), a("#tabsMenuList")[0] ? this.$el.css({
                left: t + "px",
                top: i + "px",
                display: ""
            }) : (a("body").append(e), this.setElement("#tabsMenuList"), this.initContainer(), this.onFixedTabsEvent(), this.hoverTabsEvent()), this.showOtherTabsList(), this.initFixCurrTab(), BH("tab_menulist")
        },
        initFixCurrTab: function () {
            var e = !0, t = $App.getCurrentTab(), i = t.name;
            this.fixedTabsUl.find("li").removeClass("sel").removeAttr("data-curr"), "myCloudSubscribe" === i && (i = "googSubscription"), "mailbox_1" === i && "收件箱" !== t.title && (e = !1), /calendar|addr|welcome|googSubscription|mailbox_1/i.test(i) && e && this.fixedTabsUl.find("li[rel=" + i + "]").addClass("sel").attr("data-curr", "1")
        },
        showOtherTabsList: function () {
            var e = this, t = [], i = "", s = "";
            this.mainTab.find("li").each(function (o, n) {
                i = a(this).attr("tabid") || "", s = a(this).attr("title") || "", /mailbox_/.test(i) && !e.isChinaMobileUser && (i = null), i && s && t.push({
                    name: i,
                    title: s
                })
            });
            var o = this.template.item, n = this.model.getFixedTabsData(), r = [], l = 0, c = "", d = /calendar/i;
            n = n.concat(this.model.getInitTabsData()), a.each(t, function (e, t) {
                if (-1 == a.inArray(t.name, n) && !d.test(t.name)) {
                    l++;
                    var i = $App.getCurrentTab().name === t.name;
                    c = $T.Utils.format(o, {
                        tabid: t.name,
                        css: i ? "sel" : "",
                        title: $T.Utils.htmlEncode(t.title),
                        flag: i ? "1" : "",
                        name: $T.Utils.htmlEncode(t.title),
                        display: i ? "" : "display: none;"
                    }), r.push(c)
                }
            }), r = r.join("");
            var p = this.otherTabsMenu;
            if (r) {
                l > 7 ? p.addClass("tab-ullist-h") : p.removeClass("tab-ullist-h"), p.find("ul").html(r);
                var m = 24 * a("#otherTabsMenu").find("li.sel").index();
                a("#otherTabsMenu").scrollTop(m), p.show(), this.onOtherTabsEvent()
            } else p.find("ul").html(""), p.hide();
            this.hoverTabsEvent(p);
            var m = 24 * a("#otherTabsMenu").find("li.sel").index();
            a("#otherTabsMenu").scrollTop(m)
        },
        hoverTabsEvent: function (e) {
            var e = e || this.tabsMenuList;
            e.find("li").hover(function () {
                a(this).addClass("on"), a(this).find(".i-tab-x").show()
            }, function () {
                a(this).attr("data-curr") || (a(this).removeClass("on"), a(this).find(".i-tab-x").hide())
            })
        },
        onFixedTabsEvent: function () {
            this.fixedTabsUl.delegate("li", "click", function () {
                var e = a(this).attr("rel"), t = $App.getTabByName(e);
                if (e) if (t) {
                    if ("mailbox" === t.group && "收件箱" !== t.title) return void $App.showMailbox(1);
                    $App.getView("tabpage").activeTab(e)
                } else "mailbox_1" === e ? $App.showMailbox(1) : $App.show(e)
            })
        },
        onOtherTabsEvent: function () {
            this.otherTabsMenu.find("li").bind("click", function (e) {
                var t = a(this).attr("tabid"), i = a(e.target);
                "close" === i.attr("name") && $App.close(t), $App.getView("tabpage").activeTab(t)
            })
        },
        initEvents: function () {
            var e = this;
            a("#divTab").delegate("#tabsMenuIco", "click", function () {
                e.onShowMenuClick()
            }), a("#divTab").delegate('li[tabid="googSubscription"]', "click", function () {
                top.BH("clickYUNmail")
            }), top.$GlobalEvent.on("click", function (t) {
                var i = t.event, s = i.srcElement || i.target;
                "tabsMenuIco" === a(s).attr("id") || "closeAll" === a(s).attr("class") || e.tabsMenuList && e.tabsMenuList.hide()
            })
        }
    }))
}(jQuery, _, M139);

//好像是加载js包使用的
var Package = {
    config: function () {
        var e = this;
        this.defaultDir = top.$App.getResourceHost() + top.getRootPath() + "/js/packs/", this.packageList = {
            main_ext: {
                path: "main_ext.pack.js",
                directory: e.defaultDir,
                depend: null
            },
            mailbox_ext: { path: "mailbox_ext.pack.js", directory: e.defaultDir, depend: null },
            timingremind_ext: { path: "calremind.timingremind.pack.js", directory: e.defaultDir, depend: null },
            shortcut_key: { path: "shortcutkey.pack.js", directory: e.defaultDir, depend: null },
            denyforward_ext: { path: "m2012.denyforward.pack.js", directory: e.defaultDir, depend: null },
            readmail_ext: { path: "readmail_ext.pack.js", directory: e.defaultDir, depend: null },
            compose_ext: { path: "compose_ext.pack.js", directory: e.defaultDir, depend: null },
            newyearwish: { path: "m2012.newyearwish.pack.js", directory: e.defaultDir, depend: null },
            account_info: {
                path: "account_info.js",
                directory: top.$App.getResourceHost() + top.getRootPath() + "/js/richmail/main/",
                depend: null
            },
            qrcode: {
                path: "qrcode.js",
                directory: top.$App.getResourceHost() + top.getRootPath() + "/js/plugin/",
                depend: null
            },
            jquery_zclip: {
                path: "jquery.zclip.min.js",
                directory: top.$App.getResourceHost() + top.getRootPath() + "/js/plugin/",
                depend: null
            },
            qrcode_ext: { path: "qrcode_ext.pack.js", directory: e.defaultDir, depend: null },
            skin_tip: {
                path: "m2012.selectskinstips.view.js",
                directory: top.$App.getResourceHost() + top.getRootPath() + "/js/richmail/changeskin/",
                depend: null
            },
            skin_tip2015: {
                path: "m2015.selectskinstips.view.js",
                directory: top.$App.getResourceHost() + top.getRootPath() + "/js/richmail/changeskin/",
                depend: null
            },
            sync_guide_tip: {
                path: "m2012.product.syncguide.js",
                directory: top.$App.getResourceHost() + top.getRootPath() + "/js/prod/syncguide/",
                depend: null
            },
            cool_mail: { path: "m2012.coolmail.pack.js", directory: e.defaultDir, depend: null }
        }
    },
    addConfig: function (e) {
        this.packageList || this.config(), _.defaults(this.packageList, e)
    },
    require: function (e, t) {
        function i(e) {
            if (e.loaded) t(); else {
                var i = top.getResourceVersion(e.path) || $Date.format("yyyyMMdd", new Date), a = {
                    id: s,
                    src: e.directory + e.path + "?v=" + i,
                    charset: "utf-8"
                };
                e.failed && (a.src += "&rnd=" + Math.random());
                var o;
                top.$App.trigger("beforeRequireLoad", { key: s }), M139.core.utilCreateScriptTag(a, function (i) {
                    return 0 == i ? (e.failed = !0, void M139.Logger.sendClientLog({
                        level: "ERROR",
                        name: "ScriptLoadError",
                        url: a.src,
                        errorMsg: "RequireJs加载脚本失败"
                    })) : (window.clearTimeout(o), e.loaded = !0, void (!e.invoked && t()))
                }), o = window.setTimeout(function () {
                    e.failed = !0, a.src += "&timeout=1", M139.core.utilCreateScriptTag(a, function (i) {
                        return 0 == i ? void M139.Logger.sendClientLog({
                            level: "ERROR",
                            name: "ScriptLoadError",
                            url: a.src,
                            errorMsg: "RequireJs加载脚本失败(重试)"
                        }) : (M139.UI.TipMessage.hide(), e.loaded = !0, e.invoked = !0, void t())
                    }), M139.Logger.sendClientLog({
                        level: "ERROR",
                        name: "ScriptLoadError",
                        url: a.src,
                        errorMsg: "RequireJs加载脚本超时，自动重试1次"
                    })
                }, 4e3)
            }
        }

        this.packageList || this.config();
        var a, s;
        "string" == typeof e && (e = [e]);
        for (var o = 0; o < e.length; o++) s = e[o], a = this.packageList[s], a.depend ? this.require(a.depend, function () {
            i(a)
        }) : i(a)
    }
};


//M2012.History
M139.namespace("M2012.History", {
    initialize: function () {
        function e() {
            var e = $App.getCurrentTab() || $App.getTabByName("welcome");
            t.add(e)
        }
        var t = this;
        this.historyIndex = 0;
        this.historyList = [];
        this.referUrl = top.location.href;
        this.funcList = [];
        if (window.history.pushState) {
            this.createHtml5History(e);
        } else {
            this.createIframeHistory(e);
        }
        $App.on("showTab", function (e) {
            try {
                t.addBehavior(e);
            } catch (i) {
            }
            if (e.fromHistory || t.fromHistory) {
                delete e.fromHistory;
                t.fromHistory = !1;
            } else {
                if (!(0 != t.historyList.length && t.historyList[t.historyList.length - 1] == e.name)) {
                    t.add(e);
                }
            }
            t.updatePage(e.name);
        });
        if (window.sessionStorage && window.sessionStorage.getItem("currentPage")) {
            var i = document.getElementById("welcome");
            i && (i.style.visibility = "hidden");
            M139.Timing.waitForReady('$App.getConfig("InitData")', function () {
                i && (i.style.visibility = "");
                t.restorePage();
            });
        }
    },
    updatePage: function (e, t) {
        if (window.sessionStorage) if (window.sessionStorage.setItem("currentPage", e), "mailsub_0" == e) {
            var i = $App.getMailboxView().model;
            if (i.get("isSearchMode")) {
                var a = i.get("lastSearchOptions");
                a.title = $App.getCurrentTab().title;
                var s = i.get("billTab");
                void 0 != s && (a.billTab = s), window.sessionStorage.setItem("currentOptions", JSON.stringify(a))
            } else window.sessionStorage.setItem("currentOptions", JSON.stringify({ folderId: i.get("fid") }))
        } else "diskDev" == e && t && window.sessionStorage.setItem("currentOptions", JSON.stringify({ index: t }))
    },
    restorePage: function () {
        if (window.sessionStorage) {
            var e = window.sessionStorage.getItem("currentPage");
            if (e) if ("mailsub_0" == e) {
                var t = JSON.parse(window.sessionStorage.getItem("currentOptions"));
                t.folderId ? $App.showMailbox(t.folderId) : (void 0 != t.billTab && $App.getView("mailbox_other").model.set("billTab", t.billTab), $App.searchMail(t), $App.setTitle(t.title))
            } else if ("mailbox_1" == e) $App.showMailbox(1); else if (e.indexOf("readmail_") >= 0) $App.readMail(e.match(/readmail_(.+)/)[1]); else if (e.indexOf("compose_") >= 0) $App.show("compose"); else {
                if ("welcome" == e) return;
                $App.show(e), e.indexOf("diskDev") >= 0 && setTimeout(function () {
                    var e = JSON.parse(window.sessionStorage.getItem("currentOptions"));
                    e.index && $("#diskDev").contents().find("#scrollDiv .listMenu li a").get(e.index).click()
                }, 2e3)
            }
        }
    },
    addBehavior: function (e) {
        function t(e, t) {
            return window.LinkConfig[e] ? window.LinkConfig[e].url :
                "mailbox_1" == e || "mailsub_0" == e ? "VIP邮件" == t.title ? "mail_vip" :
                "星标邮件" == t.title ? "mail_star" : "待办任务" == t.title ? "mail_task" :
                "服务邮件" == t.title ? "mail_service" :
                "s?func=mbox:listMessages&fid=" + $App.getCurrentFid() : e.indexOf("readmail") >= 0 ? "s?func=view:readMessage&mid=" + e.replace("readmail_", "") :
                e.indexOf("compose") >= 0 ? "compose.html" : e
            if (window.LinkConfig[e]) {
                return window.LinkConfig[e].url;
            }
            else {
                if ("mailbox_1" == e || "mailsub_0" == e) {
                    if ("VIP邮件" == t.title) {
                        return "mail_vip";
                    } else {
                        if ("星标邮件" == t.title) {
                            return "mail_star";
                        } else {
                            if ("待办任务" == t.title) {
                                return "mail_task";
                            } else {
                                if ("服务邮件" == t.title) {
                                    return "mail_service";
                                } else {
                                    return "s?func=mbox:listMessages&fid=" + $App.getCurrentFid();
                                }
                            }
                        }
                    }
                } else {
                    if (e.indexOf("readmail") >= 0) {
                        return "s?func=view:readMessage&mid=" + e.replace("readmail_", "");
                    } else {
                        if (e.indexOf("compose") >= 0) {
                            return "compose.html";
                        } else {
                            return e;
                        }
                    }
                }
            }
        }

        if ((!window.simpleMode || !window.simpleMode()) && window._udata && window._udata.sendPageInfo) {
            var i = t(e.name, e);
            this.referUrl && i && window._udata.sendPageInfo({ fp: this.referUrl, cp: i });
            this.referUrl = i;
        }
    },
    clear: function () {
        this.historyList = []
    },
    add: function (e) {
        var t = this;
        if (this.historyList.push(e), this.historyIndex++, window.history.pushState) {
            var i = location.href.replace(/[\&]?h=\d+/gi, "");
            i += "&h=" + this.historyIndex, window.history.pushState({ h: this.historyIndex }, "", i)
        } else setTimeout(function () {
            try {
                var e = window.frames.frmHistory.document;
                e.open(), e.domain = window.location.host.match(/[^.]+\.[^.]+$/)[0], e.write("<script>document.domain=window.location.host.match(/[^.]+.[^.]+$/)[0]</script>"), e.write("<body>" + t.historyIndex + "</body>"), e.close()
            } catch (i) {
            }
        }, 50)
    },
    addCompose: function (e, t) {
        var i = $.extend({}, e), a = $.extend({}, t), s = $App.getCurrentTab().name;
        return function () {
            $App.getTabByName(s) ? $App.activeTab(s) : $App.show("compose", i, { inputData: a })
        }
    },
    modifyCurrent: function (e) {
        this.historyList.pop(), this.historyList.push(e)
    },
    goBack: function (e) {
        if (this.historyList.length > 1) {
            var t = this.historyList.pop(), i = this.historyList[this.historyList.length - 1];
            if (i.fromHistory = !0, this.fromHistory = !0, "function" == typeof i) i(); else {
                var a = $App.getTabByName(i.name);
                if (a) t.name.indexOf("compose") >= 0 && ($("#top").is(":visible") || $("#operateFullScreen", $(t.element).find("iframe")[0].contentWindow.document)[0].click()), $App.activeTab(i.name); else {
                    if (i.name.indexOf("readmail") >= 0) return void $App.readMail(i.name.replace(/readmail_/, ""));
                    if (i.name.indexOf("compose") >= 0) return void $("#btn_compose").trigger("click");
                    i.isRendered = !1, $App.showPage(i)
                }
            }
        }
    },
    createHtml5History: function (e) {
        var t = this, i = window.onload;
        window.onload = function () {
            i && i(), setTimeout(function () {
                window.onpopstate = function () {
                    t.goBack(!0)
                }
            }, 0)
        }, setTimeout(function () {
            e && e()
        }, 50)
    },
    createIframeHistory: function (e) {
        var t = this, i = document.createElement("iframe");
        i.id = "frmHistory", i.name = "frmHistory", i.style.display = "none", document.body.appendChild(i), i.style.display = "none", i.contentWindow.location.href = "history.html?sid=" + top.sid;
        $(i).load(function () {
            try {
                if (0 == t.historyIndex) return void (e && e());
                var i = Number(window.frames.frmHistory.document.body.innerHTML);
                i < t.historyIndex && t.goBack(), History && (History.lastIndex = i)
            } catch (a) {
            }
        })
    }
}),

//M2012.UserModel
function (e, t, i) {
    var a = e, s = i.Model.ModelBase, o = "M2012.UserModel";
    i.namespace(o, s.extend({
        initialize: function (e) {
            return s.prototype.initialize.apply(this, arguments)
        },
        name: o,
        getAliasName: function (e) {
            e = e || "common";
            var t = a.grep(this.getAccountList(), function (t, i) {
                return t.type == e
            });
            return t.length > 0 ? t[0].name : ""
        },
        getHeadImageUrl: function (e) {
            var t = "/upload/photo/system/nopic.jpg" == e || "/upload/photo/nopic.jpg" == e;
            return /^(?:https?:)?\/\//i.test(e) ? e : (t || !e ? e = top.$App.getResourcePath() + "/images/face.png" : "string" == typeof e && e.length > 0 && (e = top.getDomain("resource") + e + "?rd=" + Math.random()), e)
        },
        getUserHeadImage: function () {
            var e = this, i = {
                type: "",
                url: ""
            }, a = top.$App.getConfig("NewUserInfo"), s = t.isObject(a) ? a.ImageUrl : top.$App.getResourcePath() + "/images/face.png";
            return /\/\bCommonHeadImage\b\//.test(s) ? /\/\bdefault\b\//.test(s) ? i.type = "system" : /\/\bcommonimage\b\//.test(s) ? i.type = "ad" : /\.\bgif\b/.test(s) ? i.type = "default" : i.type = "ignore" : /\/\bPhoto\b\/[0-9]+/.test(s) ? i.type = "custom" : i.type = "unKnow", i.url = e.getHeadImageUrl(s), i
        },
        setHeadImageUrl: function (e) {
            var t = top.$App.getConfig("NewUserInfo") || {};
            t.ImageUrl ? t.ImageUrl = e : t.ImageUrl = top.$App.getResourcePath() + "/images/face.png", $App.registerConfig("NewUserInfo", t)
        },
        getDefaultAccountType: function (e) {
            return { common: 1, mobile: 2, fetion: 3, passid: 4 }[e]
        },
        getPartId: function () {
            var e = this.get("partid");
            return e || (e = getCookie("cookiepartid") || "", this.set("partid", e)), e
        },
        isGrayUser: function () {
            return "1" == this.getPartId()
        },
        getPartid: function () {
            return this.getPartId()
        },
        getUserDataObj: function () {
            var e = { userNumber: "", ssoSid: top.sid, provCode: "1" };
            return e
        },
        getDefaultFont: function (e) {
            var t = "2;宋体;#000000;1.5";
            e && e.isCompose && (t = "3;微软雅黑;#000000;1.5");
            var i = this.tryGetObjectValue($App.getConfig("UserAttrsAll"), "fonts", t), a = {}, s = i.split(";");
            a.size = s[0], a.family = s[1].replace(/'/g, ""), a.color = s[2], a.lineHeight = s[3] || 1.5, a.lineHeight = 1 == a.lineHeight ? 1.2 : a.lineHeight;
            var o = { 6: "一号", 5: "二号", 4: "三号", 3: "四号", 2: "五号", 1: "六号" };
            a.sizeText = o[a.size];
            var n = { 1.2: "单倍", 1.5: "1.5倍", 2: "2倍", 2.5: "2.5倍" };
            return a.lineHeightText = n[a.lineHeight], a
        },
        getSkinName: function () {
            var e = $Cookie.get("SkinPath2" + $Url.queryString("k"));
            return !/^skin_\w+$/.test(e) || HIDDEN_SKIN[e] ? e = "skin_lightblue" : "skin_normal" == e && (e = 1 == $Cookie.get("cookiepartid") ? "skin_red" : "skin_lightblue"), e
        },
        getSkinNameMatrix: function () {
            var e = this.getSkinName(), t = {
                skin_red: "skin_red",
                skin_pink: "skin_pink",
                skin_golf: "new_skin_golf",
                skin_light: "skin_g1",
                skin_star: "new_skin_startrek",
                skin_cat: "new_skin_riches",
                skin_mstar: "skin_snow",
                skin_sunset: "skin_mZone",
                skin_paint: "skin_2010",
                skin_mcloud: "skin_shibo",
                skin_lightblue: "skin_shibo",
                skin_sunflower: "skin_mZone",
                skin_rose: "new_skin_rabbit",
                skin_flowers: "new_skin_spring",
                skin_brocade: "skin_love",
                skin_newyear: "new_skin_rabbit",
                skin_dew: "skin_green",
                skin_cherry: "skin_pink",
                skin_warm: "new_skin_rabbit",
                skin_lithe: "skin_blue",
                skin_night: "new_skin_riches",
                skin_morning: "new_skin_rabbit",
                skin_spring: "skin_green",
                skin_summer: "skin_blue",
                skin_autumn: "skin_xmas",
                skin_winter: "skin_love",
                skin_child: "skin_mZone",
                skin_woman: "skin_pink",
                skin_bluesky: "skin_shibo",
                skin_claritBamboo: "skin_grassGreen",
                skin_claritBrown: "skin_brown",
                skin_claritGreen: "skin_paleGreen",
                skin_claritPurple: "skin_lavender",
                skin_claritRed: "skin_pinks"
            }, i = t[e] || "skin_shibo";
            return i
        },
        tryGetObjectValue: function (e, t, i) {
            i = void 0 === i ? "" : i;
            var a = e && e[t] || i;
            return a
        },
        tryGetUDValue: function (e, t) {
            return this.tryGetObjectValue($App.getConfig("UserData"), e, t)
        },
        tryGetUAttrValue: function (e, t) {
            return this.tryGetObjectValue($App.getConfig("UserAttrs"), e, t)
        },
        tryGetPDataValue: function (e, t) {
            return this.tryGetObjectValue($App.getConfig("PersonalData"), e, t)
        },
        getUid: function () {
            return $App.getConfig && $App.getConfig("UserData") ? $App.getConfig("UserData").UID : ""
        },
        getShortUid: function () {
            return $T.Mobile.remove86(this.getUid())
        },
        isUmcUserAsync: function (e) {
            var t = $App.getConfig("UserData"), a = e || new Function;
            return "undefined" != typeof t.isumcuser ? void a(t.isumcuser) : void i.Timing.waitForReady(function () {
                try {
                    var e = $App.getConfig("UserData");
                    if ("undefined" != typeof e.isumcuser) return !0
                } catch (t) {
                }
                return !1
            }, function () {
                var e = $App.getConfig("UserData");
                a(e.isumcuser)
            })
        },
        isInternetUser: function () {
            return "83" === this.getProvCode()
        },
        isChinaMobileUser: function () {
            return false;
            // return this.getProvCode() <= 31
        },
        isPrettyNumberUser: function () {
            if (!$App.getConfig("UserData")) return !1;
            for (var e = $App.getConfig("UserData").orderInfoList, t = 0; t < e.length; t++) if ("310" == e[t].serviceId && ("4" == e[t].orderStatus || "0" == e[t].orderStatus)) return !0;
            return !1
        },
        isHemaThemeUser: function () {
            if (!$App.getConfig("UserData")) return !1;
            for (var e = $App.getConfig("UserData").orderInfoList, t = 0; t < e.length; t++) if ("350" == e[t].serviceId && ("4" == e[t].orderStatus || "0" == e[t].orderStatus)) return !0;
            return !1
        },
        isNotChinaMobileUser: function () {
            return !this.isChinaMobileUser()
        },
        checkAvaibleForMobile: function (e) {
            var t = this;
            return this.isChinaMobileUser() ? !0 : (e ? (a(e).unbind("click"), "string" == typeof e ? a(e).live("click", function (e) {
                t.showMobileLimitAlert(), e.stopPropagation(), e.preventDefault()
            }) : a(e).bind("click", function (e) {
                t.showMobileLimitAlert(), e.stopPropagation(), e.preventDefault()
            })) : t.showMobileLimitAlert(), !1)
        },
        showMobileLimitAlert: function () {
            this.isInternetUser() ? $Msg.alert('尊敬的用户：您暂时无法使用本功能。如需使用完整功能，请使用中国移动手机开通139邮箱。<a href=\'javascript:top.$App.show("account",{anchor:"accountAdmin"}); $Msg.getCurrent().close();\'>绑定手机账号</a>', { isHtml: !0 }) : $Msg.alert("尊敬的用户：您暂时无法使用本功能。如需使用完整功能，请使用中国移动手机开通139邮箱。")
        },
        getProvCode: function () {
            return window.PROVCODE = i.Text.Cookie.get("provCode"), window.PROVCODE ? window.PROVCODE : this.getUserDataObj().provCode + ""
        },
        getProvText: function () {
            var e = {
                1: "广东",
                2: "云南",
                3: "广西",
                4: "上海",
                5: "山东",
                6: "北京",
                7: "辽宁",
                8: "福建",
                9: "黑龙江",
                10: "贵州",
                11: "安徽",
                12: "甘肃",
                13: "海南",
                14: "河北",
                15: "河南",
                16: "湖北",
                17: "湖南",
                18: "吉林",
                19: "江苏",
                20: "江西",
                21: "内蒙古",
                22: "宁夏",
                23: "青海",
                24: "山西",
                25: "陕西",
                26: "四川",
                27: "天津",
                28: "西藏",
                29: "新疆",
                30: "浙江",
                31: "重庆"
            }, t = this.getProvCode();
            return e[t]
        },
        getOnemailInfo: function () {
            return {
                1: { columnId: 55365, key: 55365, title: "广东移动" },
                2: { columnId: 55447, key: 55447, title: "云南移动" },
                3: { columnId: 55467, key: 55467, title: "广西移动" },
                4: { columnId: 55453, key: 55453, title: "上海移动" },
                5: { columnId: 55433, key: 55433, title: "山东移动" },
                6: { columnId: 55451, key: 55451, title: "北京移动" },
                7: { columnId: 55457, key: 55457, title: "辽宁移动" },
                8: { columnId: 55441, key: 55441, title: "福建移动" },
                9: { columnId: 42861, key: 42861, title: "黑龙江移动" },
                10: { columnId: 42571, key: 42571, title: "贵州移动" },
                11: { columnId: 55459, key: 55459, title: "安徽移动" },
                12: { columnId: 55463, key: 55463, title: "甘肃移动" },
                13: { columnId: 55461, key: 55461, title: "海南移动" },
                14: { columnId: 55455, key: 55455, title: "河北移动" },
                15: { columnId: 42653, key: 42653, title: "河南移动" },
                16: { columnId: 42653, key: 42653, title: "湖北移动" },
                17: { columnId: 55445, key: 55445, title: "湖南移动" },
                18: { columnId: 55443, key: 55443, title: "吉林移动" },
                19: { columnId: 55431, key: 55431, title: "江苏移动" },
                20: { columnId: 55423, key: 55423, title: "江西移动" },
                21: { columnId: 55421, key: 55421, title: "内蒙古移动" },
                22: { columnId: 55439, key: 55439, title: "宁夏移动" },
                23: { columnId: 55465, key: 55465, title: "青海移动" },
                24: { columnId: 55473, key: 55473, title: "山西移动" },
                25: { columnId: 42575, key: 42575, title: "陕西移动" },
                26: { columnId: 55437, key: 55437, title: "四川移动" },
                27: { columnId: 42863, key: 42863, title: "天津移动" },
                28: { columnId: 55469, key: 55469, title: "西藏移动" },
                29: { columnId: 42653, key: 42653, title: "新疆移动" },
                30: { columnId: 42577, key: 42577, title: "浙江移动" },
                31: { columnId: 55449, key: 55449, title: "重庆移动" }
            }
        },
        getAreaCode: function () {
            return this.tryGetUDValue("areaCode")
        },
        getAccountList: function () {
            try {
                var e = $App.getConfig("UserData");
                if (!e || !e.uidList) return [];
                for (var t, i = {
                    0: "common",
                    1: "fetion",
                    2: "mobile",
                    3: "passid",
                    4: "prettyNumber(pass)",
                    5: "prettyNumber(m139)"
                }, a = {
                    0: 4,
                    1: 3,
                    2: 2,
                    3: 1,
                    4: 5,
                    5: 6
                }, s = [], o = !1, n = 0, r = e.uidList; t = r[n]; n++) s.push({
                    from: t.from,
                    sortid: a[t.type] || a[0],
                    name: t.name,
                    type: i[t.type] || i[0]
                }), o = o || "2" == t.type;
                return o || "83" === e.provCode || s.push({
                    sortid: a[2],
                    name: $App.getAccountWithLocalDomain($Mobile.remove86(e.UID)),
                    type: i[2]
                }), s.sort(function (e, t) {
                    return t.sortid - e.sortid
                }), s
            } catch (l) {
            }
            return []
        },
        getAccountByName: function (e) {
            for (var t = this.getAccountList(), i = 0, a = t.length; a > i; i++) if (t[i].name === e) return t[i]
        },
        getAccountListArray: function () {
            var e = this.getAccountList(), t = [];
            if (e) for (var i = 0; i < e.length; i++) this.isInternetUser() && this.isInternetUserNumberEmail(e[i]) || t.push(e[i].name);
            return t
        },
        isOwnEmail: function (e) {
            var i = this.getAccountList() || [], a = t.pluck(i, "name");
            return t.contains(a, e)
        },
        isInternetUserNumberEmail: function (e) {
            return i.Text.Email.getAccount(e) == this.getShortUid()
        },
        getDefaultSender: function () {
            function e(e) {
                var t = $App.getConfig("UserAttrs");
                if (t) {
                    var i = t.uid;
                    if ("@139.com" == e && i) return i
                }
                return e
            }

            try {
                var i = $App.getConfig("UserData");
                if (!i) return $App.getConfig("UserAttrs").uid;
                if (i && i.defaultSenderAccount) return e(i.defaultSenderAccount);
                var a = i.defaultSender;
                if ("0" === a || "" === a || t.isUndefined(a)) {
                    var s = i.loginName || this.getShortUid();
                    return $App.getAccountWithLocalDomain(s)
                }
                for (var o = {
                    1: function (e) {
                        return "mobile" === e.type
                }, 2: function (e) {
                        return "common" === e.type
                }, 3: function (e) {
                        return "fetion" === e.type || "passid" === e.type
                }
                }[a], n = this.getAccountList(), r = n.length; r--;) if (o(n[r])) return n[r].name;
                return e(n[0].name)
            } catch (l) {
                if (this.isInternetUser()) throw "$User.getDefaultSender()";
                return this.getShortUid() + "@" + $App.getMailDomain()
            }
        },
        setDefaultSender: function (e, t, a) {
            var s = { setDefaultSendAccount: e };
            i.HttpRouter.addRouter("setting", ["user:setDefaultSendAccount"]), i.RichMail.API.call("user:setDefaultSendAccount", s, function (t) {
                var i = t.responseData;
                "S_OK" == i.code && ($App.getConfig("UserData").defaultSenderAccount = e), a && a(i)
            }, function () {
                $Msg.alert("服务器发生不可预期的错误")
            })
        },
        getLastLoginDate: function () {
            return this.tryGetUDValue("lastLoginDate")
        },
        getLoginName: function () {
            var e = this.tryGetUDValue("loginName", this.getShortUid());
            return /^8680/.test(e) && (e = i.Text.Email.getAccount(this.getDefaultSender())), e
        },
        getCardType: function () {
            return this.tryGetUDValue("cardType")
        },
        getServiceItem: function () {
            return this.tryGetUDValue("serviceItem")
        },
        getMealData: function (e) {
            var t = this;
            this.isChinaMobileUser() && top.M139.Timing.waitForReady("$App.getConfig('mealInfo')", function () {
                var i = $App.getConfig("mealInfo");
                "" == t.packageName && (t.packageName = i.serviceName), e && e(i)
            })
        },
        getPackage: function () {
            return this.packageName
        },
        packageName: "",
        getUserIntegral: function () {
            return this.tryGetUDValue("mainUserIntegral", null)
        },
        getMyApp: function () {
            return this.tryGetUDValue("myapp", null)
        },
        getMyAppIdByKey: function (e) {
            var t = this.getMyApp(), i = a.grep(t, function (t, i) {
                return t.key == e
            });
            return i && i[0] ? i[0].id : null
        },
        getUserConfig: function () {
            return this.tryGetUDValue("mainUserConfig", null)
        },
        getUecInfo: function () {
            return this.tryGetUDValue("uecInfo", null)
        },
        getUidList: function () {
            return this.tryGetUDValue("uidList", [])
        },
        levelEnum: { free0010: "0010", free0015: "0015", vipOther: "0011", vip5: "0016", vip20: "0017" },
        getVipInfo: function () {
            return this.tryGetUDValue("vipInfo", {})
        },
        getCapacity: function (e, t) {
            var i = {
                diskfilesize: "DISK_1000001",
                filesharecapacity: "DISK_1000002",
                filesharesavedays: "DISK_1000003",
                transcribetimelen: "MAIL_2000001",
                mailgsendlimit: "MAIL_2000002",
                maildaylimit: "MAIL_2000003",
                addrstorenum: "MAIL_2000004",
                maxannexsize: "MAIL_2000005",
                vipidentity: "MAIL_2000006",
                letterpaperid: "MAIL_2000007",
                congracardid: "MAIL_2000008",
                postcardid: "MAIL_2000009",
                dermaid: "MAIL_2000010"
            };
            t = "undefined" == typeof t ? 0 : Number(t);
            var a = t, s = this.getVipInfo();
            return s[i[e]] && (a = parseInt(s[i[e]], 10)), isNaN(a) && (a = t), a
        },
        getMaxSend: function () {
            var e = 50;
            e = this.getCapacity("mailgsendlimit", e), 50 > e && (e = 50);
            var t = $User.getServiceItem();
            return 200 > e && t == this.levelEnum.vip5 ? e = 200 : 400 > e && t == this.levelEnum.vip20 && (e = 400), e
        },
        isRedListUser: function () {
            return top.UserData && "2" == top.UserData.vipType
        },
        getMaxContactLimit: function () {
            var e = this.getCapacity("addrstorenum");
            return e || (e = 6e3), top.UserData && "2" == top.UserData.vipType && (e = 1e5), e
        },
        getGroupMailInfo: function () {
            return this.tryGetUDValue("groupMailInfo", null)
        },
        getTrueName: function () {
            return this.tryGetUAttrValue("trueName", "")
        },
        getSendName: function () {
            var e = this.getTrueName() || this.getAliasName().replace(/@.+/, "") || this.getUid().replace(/^86/, "");
            return e
        },
        getFtsflag: function () {
            return this.tryGetUAttrValue("fts_flag", 0)
        },
        getDefaultPageSize: function () {
            return this.tryGetUAttrValue("defaultPageSize", 20)
        },
        getPageStyle: function () {
            var e = $App.getCustomAttrs("pageStyle") || 1;
            return this.getPageStyleByKey(e)
        },
        getPageStyleByKey: function (e) {
            var t = { 3: " td-small", 1: "", 2: " td-big" };
            return t[e] || ""
        },
        getReplyWithQuote: function () {
            return this.tryGetUAttrValue("replyWithQuote", 0)
        },
        getMailNotifyInfo: function () {
            return this.tryGetPDataValue("mailNotifyInfo", null)
        },
        getPartner: function () {
            return this.tryGetPDataValue("partner", "false")
        },
        getPushemail: function () {
            return this.tryGetPDataValue("pushemail", "false")
        },
        getSmsMMsInfo: function () {
            return $App.getConfig("PersonalData").smsMMsInfo || null
        },
        getPresentMmsCount: function () {
            return this.tryGetObjectValue(this.getSmsMMsInfo(), "PresentMmsCount", "")
        },
        getPresentSmsCount: function () {
            return this.tryGetObjectValue(this.getSmsMMsInfo(), "PresentSmsCount", "")
        },
        getUsedMmsCount: function () {
            return this.tryGetObjectValue(this.getSmsMMsInfo(), "UsedMmsCount", "")
        },
        getFreeSmsCount: function () {
            var e = this.getPresentSmsCount() - this.getUsedSmsCount();
            return e >= 0 ? e : 0
        },
        getFreeMmsCount: function () {
            var e = this.getPresentMmsCount() - this.getUsedMmsCount();
            return e >= 0 ? e : 0
        },
        needMailPartner: function () {
            var e = top.$User.getProvCode();
            return 1 == e || 10 == e || 7 == e ? "false" == this.getPartner() : !1
        },
        getUsedSmsCount: function () {
            return this.tryGetObjectValue(this.getSmsMMsInfo(), "UsedSmsCount", "")
        },
        getMessageInfo: function () {
            return $App.getConfig("MessageInfo") || null
        },
        getFolderCount: function () {
            return this.tryGetObjectValue(this.getMessageInfo(), "folderCount", "")
        },
        getLimitMessageSize: function () {
            return this.tryGetObjectValue(this.getMessageInfo(), "limitMessageSize", "")
        },
        getMessageCount: function () {
            return this.tryGetObjectValue(this.getMessageInfo(), "messageCount", "")
        },
        getMessageSize: function () {
            return this.tryGetObjectValue(this.getMessageInfo(), "messageSize", "")
        },
        getUnreadMessageCount: function () {
            return this.tryGetObjectValue(this.getMessageInfo(), "unreadMessageCount", "")
        },
        getUserLevel: function () {
            var e = this.getServiceItem();
            for (var t in this.levelEnum) if (e && a.trim(e).toLowerCase() == a.trim(this.levelEnum[t]).toLowerCase()) return e;
            return this.levelEnum.free0010
        },
        isFreeUser: function () {
            var e = this.getUserLevel();
            return "0010" == e || "0015" == e
        },
        getServerTime: function () {
        },
        getVipStr: function (e) {
            switch (e) {
                case "5,20":
                    return this.levelEnum.vip5 + "," + this.levelEnum.vip20;
                case "20":
                    return this.levelEnum.vip20;
                default:
                    return this.levelEnum.free0010 + "," + this.levelEnum.free0015 + "," + this.levelEnum.vip5 + "," + this.levelEnum.vip20
            }
        },
        receiveRights: function (e, t, a) {
            function s() {
                for (var t = e.split(","), i = 0; i < t.length; i++) top.BH("receive_" + t[i])
            }

            i.RichMail.API.call("user:getRightStatus", { rightCode: e }, function (o) {
                var n = o.responseData.code;
                if (n) {
                    var r = { rightCodes: e };
                    i.RichMail.API.call("user:receiveRight", r, function (e) {
                        n = e.responseData.code, "S_OK" == n ? (t && t(), s()) : "PML10406004" == n ? a ? a("repeat") : alert("您已领取过，不能重复领取") : a ? a("error") : alert("领取失败")
                    })
                } else "S_OK" == n && alert("您已领取过，不能重复领取")
            })
        },
        unitTest: function () {
            for (var e in this) 0 == e.indexOf("get") && t.isFunction(this[e]) && console.log(e + ":" + this[e]())
        }
    })), window.$User = new M2012.UserModel
}(jQuery, _, M139),

//M2012.MainApplication
function (jQuery, Backbone, _, M139) {
    function enqueueMailInfo(e) {
        M139.core.utilCreateScriptTag({
            id: "contact_inbox_async_method",
            src: $App.getResourceHost() + top.getRootPath() + "/js/packs/m2012_contacts_saveinbox_async.pack.js",
            charset: "utf-8"
        }, function () {
            enqueueMailInfo = function (e) {
                $App.trigger("app:mailreaded#savecontact", e)
            }, $App.trigger("app:mailreaded#savecontact", e)
        })
    }
    var $ = jQuery,
        superClass = M139.PageApplication;
    M139.namespace("M2012.MainApplication", superClass.extend({
        initialize: function (e) {
            superClass.prototype.initialize.apply(this, arguments)
        },
        defaults: { name: "M2012.MainApplication" },
        //程序启动
        run: function () {
            window.sid = $T.Html.encode($App.query.sid);
            if (window.name && "string" == typeof window.name && window.name.indexOf("sid") >= 0) {
                var e = $Url.queryString("cguid"), t = M139.Text.Utils.getDateTimeFromCGUID(e);
                if (new Date - t > 2e4) {
                    var i = window.name.match(/sid=([^&]+)/);
                    if (i) {
                        window.sid = i[1];
                        $App.query.sid = window.sid;
                    }
                } else {
                    window.name = "";
                }
            }
            var a = M139.Logger.getDefaultLogger();
            if (a && "function" != typeof a.timeStart) {
                a.timeStart = function () { };
                a.timeEnd = function () { };
            }
            if (this.isNewWinCompose()) {
                $("#sub, #divTab, #header").hide();
                $("#top").children().not("a:first").hide();
                $("#top>a:first").attr("href", "javascript:;").css("cursor", "default");
                $("#main").removeClass("main").addClass("main_write").hide();
            }
            this.registerView("folder", new M2012.Folder.View.FolderMain);
            this.loadLevel = 0;
            this.initConfigData();
            this.initEvents();
            this.initModels();
            this.initApi();
            this.initSubViews();
            this.initOldTimesAdapter();
            M2012.History.initialize();
            this.registerChannel("welcome", {
                leftNav: "none",
                defaultTab: "welcome",
                hideTab: !0
            });
            this.registerChannel("addr", {
                leftNav: "none",
                defaultTab: "addr",
                hideTab: !0
            });
            this.registerChannel("disk", {
                leftNav: "none",
                defaultTab: "diskDev",
                hideTab: !0
            });
            this.registerChannel("calendar", {
                leftNav: "none",
                defaultTab: "calendar",
                hideTab: !0
            });
            this.registerChannel("subscribe", {
                leftNav: "none",
                defaultTab: "googSubscription"
            });
            this.registerChannel("billCharge", {
                leftNav: "none",
                defaultTab: "billCharge",
                hideTab: !0
            });
            this.registerChannel("note", {
                leftNav: "none",
                hideTab: !1,
                withinMail: !0
            });
            this.registerChannel("groupMail", {
                leftNav: "none",
                hideTab: !1,
                withinMail: !0
            });
            this.registerChannel("setting", {
                leftNav: function () {
                    settingsIndexView.getSettingsNav()
                }, hideTab: !1, withinMail: !0
            });
            this.registerChannel("usercenter", {
                leftNav: "none", hideTab: !1, withinMail: !0
            });
        },

        initEvents: function () {
            function e() {
                var e = i.getBodyHeight();
                if ("true" == s.attr("welcome")) {
                    var t = 0, o = e - a - t;
                    s.height(o);
                    $(".welcomeFooter").show();
                    var n = $("#welcome").height() - 100;
                    if (window.$iframe) {
                        $iframe.find("#div_scroller_inter").height(n);
                        $iframe.find(".welcomeNewSon_leftCon").height(o);
                    }
                } else {
                    s.height(e - 36);
                    $(".welcomeFooter").hide();
                }
            }
            function t(e) {
                var t = o;
                if (t) {
                    if ("tab" == t.type) {
                        if (t.name.indexOf(e.name) >= 0) {
                            $App.showSysTips(t.summary);
                        }
                    } else {
                        if ($App.currentChannel == t.name) {
                            $App.showSysTips(t.summary);
                        }
                    }
                }
            }
            var i = this;
            this.on("folderRendered", function () {
                this.onResize()
            });
            var a = $(".headerTopMenu").height(), s = $("#mainContentBox");
            e();
            $(window).resize(function () {
                e();
                i.onResize();
            });
            top.$App.on("bindBeforeunload", function () {
                $(window).unbind("beforeunload").bind("beforeunload", function () {
                    var e = window.event, t = !1;
                    if (e && e.clientY > 0 && (t = !0), !t) {
                        var i = $App.getCurrentTab(), a = i.name.indexOf("compose_") > -1;
                        if (a || $App.isNewWinCompose()) {
                            var s = $($App.getCurrentTab().element).find("iframe").get(0).contentWindow.mainView, o = s && s.model.compare();
                            if (o) return "确定放弃对此信件所做的操作？"
                        }
                    }
                })
            });
            top.$App.on("removeBeforeunload", function () {
                $(window).unbind("beforeunload")
            });
            top.$GlobalEvent.on("keydown", function (e) {
                top.SiteConfig.shortcutKeyConf ? $App.shortcutKey(e.event, e.window) : $App.keyReply(e.event, e.window)
            });
            top.$GlobalEvent.on("click", function (e) {
                M139.UI.TipMailView && M139.UI.TipMailView.rollTitleConfig && 1 === M139.UI.TipMailView.rollTitleConfig.run && M139.UI.TipMailView.reSetDocTitle()
            });
            this.on("change:sessionOut", function (e, t) {
                t && this.showSessionOutDialog()
            });
            this.on("change:contact_maindata", function (e, t) {
                i.initContactData()
            });
            this.on("sms_send", function (e) {
                var t = e.count, i = $User.getSmsMMsInfo();
                i && (i.UsedSmsCount = Number(i.UsedSmsCount) + t), $App.clearTabCache("welcome")
            });
            this.on("mms_send", function (e) {
                var t = e.count, i = $User.getSmsMMsInfo();
                i && (i.UsedMmsCount = Number(i.UsedMmsCount) + t), $App.clearTabCache("welcome")
            });
            this.on("mail_send", function (e) {
                $App.clearTabCache("welcome")
            });
            $B.is.ie && this.on("closeTab", function () {
                M139.Dom.fixIEFocus()
            }); this.on("addCalendar", function (e, t) {
                i.addCalendar(e, t)
            });
            var o, n = {
                1: { name: "mail" },
                2: { name: "mail" },
                3: { name: "addr" },
                4: { name: "subscribe" },
                5: { name: "calendar" },
                6: { name: "disk" },
                7: { name: "sms", type: "tab" },
                8: { name: "mms", type: "tab" },
                9: { name: "postcard|greetingcard", type: "tab" },
                10: { name: "mail" }
            };

            this.on("maintaining", function (e) {
                var i = e.summary;
                if ("PML410070001" == e.code || "0" == e.serviceId) {
                    this.showSysTips(i);
                } else {
                    o = e.serviceId && n[e.serviceId] ? n[e.serviceId] : n[1], o.summary = i, t(this.getCurrentTab());
                }
            });
            this.on("showTab", function (e) {
                if ("welcome" == e.name && (top.$App.dyinfoChanged || top.$App.dyinfoChanged1)) {
                    var i = top.document.getElementById("welcome").contentWindow.welcomeView;
                    i && i.reloadProd()
                }
                setTimeout(function () {
                    t(e)
                }, 10)
            });
            $(window).load(function () {
                setTimeout(function () {
                    M139.RichMail.API.call("setting:querySystemStatus", {}, function (e) {
                        if (e.responseData.code && "S_OK" == e.responseData.code) {
                            $(e.responseData["var"]).each(function (e, t) {
                                if ("0" != t.status) {
                                    (t.code = t.status, "0" == t.serviceId ? t.code = "PML410070001" : t.code = "PML410070002", $App.trigger("maintaining", t));
                                } else {
                                    t.summary && "" != t.summary && $App.trigger("maintaining", t);
                                }
                            });
                        }
                    })
                }, 1e3);
                $App.getPrettyNumberData();
            });
            if (SiteConfig.saveinboxcontact) {
                var r = this;
                window.simpleMode && window.simpleMode() || r.on("readmail", function (e) {
                    enqueueMailInfo(e)
                })
            }
            this.on("httperror", function (e) {
                (e.isTimeout || 401 == e.status || 502 == e.status || e.loadResourceError) && M2012.UI.Tip.NetHealthCheck.check()
            }), $("#divTab li").live("click", function () {
                var e = $(this).attr("tabid");
                "mailbox_1" == e && BH("click_mailbox_tab")
            })
        },
        initModels: function () {
        },
        onUserDataComplete: function (e) {
            this.completeCallbackList || (this.completeCallbackList = []),
            this.completeCallbackList.push(e),
            this.checkUserDataComplete()
        },
        checkUserDataComplete: function () {
            if (this.loadLevel >= 2 && this.completeCallbackList) {
                for (; this.completeCallbackList.length > 0;) {
                    var e = this.completeCallbackList.shift();
                    e()
                }
            }
        },
        initConfigData: function () {
            var e = this;
            this.initContactData();
            this.reloadUserAttrs({
                callback: function () {
                    e.loadLevel++;
                    e.checkUserDataComplete();
                }
            });
            if (window.MessageInfo) {
                this.registerConfig("MessageInfo", MessageInfo);
            }
            $App.on("userAttrChange", function (t) {
                var i = t && t.callback;
                t = $.extend(t, {
                    callback: function () {
                        $App.getView("top").renderAccountList(e.getConfig("UserData"));
                        i && i();
                    }
                });
                $App.clearTabCache("welcome");
                e.reloadUserAttrs(t);
            });
            
            this.getNewUserInfo();
        },
        initContactData: function (e) {
            var t = this,
                i = M2012.Contacts.getModel();
            this.registerModel("contacts", i);
            i.loadMainData({}, function (e) {
                t.registerConfig("ContactData", e);
                t.trigger("contactLoad", e);
            });
            i.on("update", function (e) {
                t.trigger("contactUpdate", e)
            });
        },
        initUserMainData: function (e, t) {
            if(e){
                "8613632599010" == e.UID && (e.UID = "8680000000000");
                this.registerConfig("UserData", e);
                this.trigger("userDataLoad", e);
                t && t(e);
            }
        },
        initMainInfoData: function (e) {
            var t = this;
            this.loadMWGetInfoSet(function (i) {
                if (i.responseData && "S_OK" == i.responseData.code) {
                    var a = i.responseData["var"];
                    if (a.healthyHistory) {
                        t.registerConfig("healthyHistory", a.healthyHistory);
                    } else {
                        t.logger.error("healthyHistory data error", "[info:getInfoSet]", i);
                    }
                    if (a.userMainData) {
                        t.initUserMainData(a.userMainData, e);
                    } else {
                        t.logger.error("userMainData data error", "[info:getInfoSet]", i);
                    }
                    if (a.mealInfo) {
                        t.registerConfig("mealInfo", a.mealInfo);
                    } else {
                        t.logger.error("mealInfo data error", "[info:getInfoSet]", i);
                    }
                    if (a.userMobileSetting) {
                        t.registerConfig("PersonalData", a.userMobileSetting)
                        t.trigger("personalDataLoad", a.userMobileSetting);
                    } else {
                        t.logger.error("userMobileSetting data error", "[info:getInfoSet]", i)
                    }
                    if (a.birthdayRemind) {
                        t.registerConfig("birthdayRemind", a.birthdayRemind);
                    } else {
                        t.logger.error("birthdayRemind data error", "[info:getInfoSet]", i);
                    }
                    t.loadLevel++;
                    t.isInfoSetLoad = !0;
                    t.trigger("infoSetLoad", a);
                    t.checkUserDataComplete();
                } else {
                    t.logger.error("info:getInfoSet", "[info:getInfoSet]", i);
                }
            })
        },
        deepCloneJSON: function (e) {
            if (!e) return e;
            if ("object" != typeof e) return e;
            if (_.isArray(e)) {
                for (var t = [], i = 0, a = e.length; a > i; i++) t.push(arguments.callee.call(this, e[i]));
                return t
            }
            var s = {};
            for (var o in e) e.hasOwnProperty(o) && (s[o] = arguments.callee.call(this, e[o]));
            return s
        },
        isShowWelcomePage: function () {
            var e = document.getElementById("welcome");
            return e && "IFRAME" === e.tagName ? !0 : $User.isChinaMobileUser()
        },
        loadMWGetInfoSet: function (e) {
            M139.RichMail.API.call("info:getInfoSet", null, e);
        },
        loadRMInitDataConfig: function (e) {
            M139.RichMail.API.call("user:getInitDataConfig", { visiblePurgeBoxFlag: 1 }, e);
        },
        getMainData: function (e) {
            var t = this;
            if ($App.getConfig("UserData")) {
                M139.RichMail.API.call("user:getMainData", null, function (i) {
                    if (i.responseData && "S_OK" == i.responseData.code) {
                        var a = i.responseData["var"];
                        t.initUserMainData(a, function () {
                            t.getUserAccountList(), e && e()
                        })
                    } else{
                        t.logger.error("getMainData data error", "[user:getMainData]", i);
                    }
                })
            } else {
                t.initMainInfoData(function () {
                    t.getUserAccountList();
                    e && e();
                })
            }
        },
        getUserAccountList: function () {
            var e = $App.getConfig("UserData");
            if (e && e.uidList) {
                var t = e.uidList;
                if(1 == t.length && "@139.com" == t[0].name || !t.length) { 
                    M139.RichMail.API.call("user:queryUserAliasInfo", null, function (t) {
                        if (t.responseData && "S_OK" == t.responseData.code) {
                            var i = t.responseData["var"], a = i.aliasList || [];
                            a.length && (e.uidList = a), M139.Logger.sendClientLog({
                                level: "ERROR",
                                name: "getUserAccountList",
                                errorMsg: "getUidList Exception",
                                responseText: "queryUserAliasInfo resultList: " + a.length
                            })
                        }
                    })
                }
                
            }
        },
       
       
        getCommConfig: function (e, t) {
            var i = this;
            "function" != typeof t && (t = $.noop), M139.RichMail.API.call("user:getCommConfig", e, function (e) {
                var a = e.responseData || {};
                "S_OK" == a.code ? $App.registerConfig("CommConfig", a["var"]) : i.logger.error("getCommConfig data error", "[user:getCommConfig]", e), t(a)
            })
        },
        setCommConfig: function (e, t) {
            var i = this;
            "function" != typeof t && (t = $.noop), M139.RichMail.API.call("user:updateCommConfig", e, function (e) {
                var a = e.responseData || {};
                "S_OK" == a.code ? $App.registerConfig("CommConfig", a) : i.logger.error("updateCommConfig failed", "[user:updateCommConfig]", e), t(a)
            })
        },
        requireUserData: function (e) {
            $App.getConfig("UserData") ? e($App.getConfig("UserData")) : $App.once("userDataLoad", function (t) {
                e(t)
            })
        },

        loadAttrs1: function (e, t) {
            var i = this;
            this.loadRMInitDataConfig(function (a) {
                if ("S_OK" == a.responseData.code) {
                    var s = a.responseData["var"];
                    if (s.userAttrs) {
                        i.registerConfig("UserAttrs", s.userAttrs);
                    }
                    if (s.messageInfo) {
                        i.registerConfig("MessageInfo", s.messageInfo);
                    }
                    if (s.PopList) {
                        i.registerConfig("PopList", s.PopList);
                        window.PopList = s.PopList;
                    }
                    if (s.SignList) {
                        i.registerConfig("configSignList", top.Array.prototype.slice.call(s.SignList));
                    }
                    M139.Logger.getDefaultLogger().timeStart("user:getSignatures");
                    $RM.getSignatures(function (e) {
                        M139.Logger.getDefaultLogger().timeEnd("user:getSignatures");
                        var t = top.Array.prototype.slice.call(e["var"]);
                        i.registerConfig("SignList", t);
                    });
                    if (s.folderList) {
                        i.registerConfig("FolderList", s.folderList);
                    }
                    if (s.userConfig) {
                        i.registerConfig("UserAttrsAll", s.userConfig);
                    }
                    $App.trigger("userAttrsAllLoaded", { data: s.userConfig });
                    if ($.isFunction(t)) {
                        t(i.getConfig("UserAttrs"));
                    }
                    i.registerConfig("InitData", a.responseData);
                    i.getView("folder").render(!0, function () {
                        $App.trigger("folderLoaded", {});
                    }),
                    e && e(i.getConfig("UserAttrs"))
                }
            })
        },
        loadAttrs2: function (e) {
            var t = this, i = { attrIds: [] };
            $RM.getAttrs(i, function (i) {
                t.registerConfig("UserAttrsAll", i["var"]), e(i["var"])
            })
        },
        getNewUserInfo: function (e) {
            var t = this;
            M2012.Contacts.API.queryNewUserInfo({
                success: function (i) {
                    if (i.code && "S_OK" == i.code && i.data) {
                        t.registerConfig("NewUserInfo", i.data),
                        e && e(i.data);
                    } else {
                        e && e(null);
                    }
                },
                error: function (t) {
                    e && e(null);
                }
            })
        },
        reloadUserAttrs: function (e) {
            function t() {
                a++;
                if (2 == a && "function" == typeof e.callback) {
                    e.callback();
                }
            }

            var i = this,
                a = 0;
            e || (e = {});
            this.loadAttrs1(t, function (t) {
                "undefined" != typeof e.trueName && (t.trueName = e.trueName);
                i.isUserAttrsLoad = !0;
                $App.trigger("userAttrsLoad", i.getConfig("UserAttrsAll"));
            });
            this.getMainData(t);
        },



        setSkin: function (e, t) {
            $Cookie.set({
                name: "SkinPath2" + $Url.queryString("k"),
                value: e,
                domain: "mail." + document.domain
            }), top.$App.changeSkin(e), top.$App.setUserConfigInfo("SkinPath2", e, function (e) {
                var i = e.responseData;
                i && "S_OK" === i.code && t && t()
            }), top.MusicBox.changeSkin()
        },
        changeSkin: function (e) {
            var t = e || $User.getSkinName(),
                i = $("#skinLink"),
                a = i.attr("href");
            isAlternateSkin(t) && (t = chooseAlternateSkin(t)), a = a.replace(/skin_[^_^\.]+/, t), $B.is.firefox ? $('<img src="' + a + '"/>').bind("error", function () {
                setTimeout(function () {
                    i.attr("href", a)
                }, 500)
            }) : i.attr("href", a);
            var s = $("#skinBgImg");
            if (t.indexOf("_clarit") > -1 || t.indexOf("christmas") > -1) {
                var o = "../images/skin/" + t.split("_")[1] + "/skinBody.jpg";
                s.attr("src", o), $("#skinBgSub").show()
            } else s.attr("src", ""), $("#skinBgSub").hide();
            setTimeout(function () {
                function e(t, i) {
                    try {
                        for (var a = t.frames, s = 0; s < a.length; s++) try {
                            i(a[s]), e(a[s], i)
                        } catch (o) {
                        }
                    } catch (o) {
                    }
                }

                e(window, function (e) {
                    e.Utils && e.Utils.loadSkinCss && e.Utils.loadSkinCss("", e.document)
                });
                for (var t = ["#welcome", "#addr", "#calendar", "#diskDev", "#googSubscription", "#groupMail"], i = t.length; i--;) {
                    var a = $(t[i])[0];
                    if (a) try {
                        $App.setModuleSkinCSS(a.contentWindow.document)
                    } catch (s) {
                        console.log(s)
                    }
                }
            }, 100),
            this.addFlash2AnimalSkin(t)
        },
        addFlash2AnimalSkin: function (e) {
            if (M139.Dom.flashChecker().hasFlash) if (e.indexOf("animal") > -1) {
                window.isHideAnimalFlash = !1, $("#animalFlash").removeClass("hide");
                var t = '<embed src="../flash/skin/' + e.split("animal")[1].toLowerCase() + '.swf" width="200" height="200" type=application/x-shockwave-flash; quality="high"wmode="transparent">';
                $("#animalFlash").html(t)
            } else $("#animalFlash").addClass("hide"), $("#animalFlash embed").attr("src", "")
        },
        
        snow: function () {
            function e() {
                a.clearRect(0, 0, s, o), a.fillStyle = "rgba(255, 255, 255, 0.6)", a.shadowBlur = 5, a.shadowColor = "rgba(255, 255, 255, 0.9)", a.beginPath();
                for (var e = 0; n > e; e++) {
                    var i = r[e];
                    a.moveTo(i.x, i.y), a.arc(i.x, i.y, i.r, 0, 2 * Math.PI, !0)
                }
                a.fill(), t()
            }

            function t() {
                c += .01;
                for (var e = 0; n > e; e++) {
                    var t = r[e];
                    t.y += Math.cos(c + t.d) + 1 + t.r / 2, t.x += 2 * Math.sin(c), (t.x > s + 5 || t.x < -5 || t.y > o) && (e % 3 > 0 ? r[e] = {
                        x: Math.random() * s,
                        y: -10,
                        r: t.r,
                        d: t.d
                    } : Math.sin(c) > 0 ? r[e] = { x: -5, y: Math.random() * o, r: t.r, d: t.d } : r[e] = {
                        x: s + 5,
                        y: Math.random() * o,
                        r: t.r,
                        d: t.d
                    })
                }
            }

            if ("Netscape" == navigator.appName && !$("#christmasCanvas").length) {
                $("body").append('<canvas id="christmasCanvas" style="top: 0px; left: 0px; z-index: 5000; position: fixed; pointer-events: none;"></canvas>');
                var i = document.getElementById("christmasCanvas"), a = i.getContext("2d"), s = window.innerWidth, o = window.innerHeight;
                i.width = s, i.height = o;
                for (var n = 70, r = [], l = 0; n > l; l++) r.push({
                    x: Math.random() * s,
                    y: Math.random() * o,
                    r: 4 * Math.random() + 1,
                    d: Math.random() * n
                });
                var c = 0;
                window.intervral4Christmas = setInterval(e, 70)
            }
        },
        setModuleSkinCSS: function (e) {
            if (!e) throw new Error("请传入document对象");
            var t = top.$User.getSkinName();
            isAlternateSkin(t) && (t = chooseAlternateSkin(t));
            var i = $("#moduleSkinCSS", e || document), a = i.attr("href");
            if (i[0]) -1 == a.indexOf(t) && (a = a.replace(/skin_[^.]+/, t), i.attr("href", a)); else {
                a = top.m2012ResourceDomain + top.getRootPath() + "/css/skin/" + t + ".css";
                var s = top.getResourceVersion(t + ".css");
                s && (a += "?v=" + s), $("head:eq(0)", e).append('<link id="moduleSkinCSS" rel="stylesheet" href="' + a + '" type="text/css" />')
            }
        },
        addCalendar: function (e, t) {
            t = t || {};
            var i = t.callName || "addBirthdayCalendar", a = function () {
            }, s = t.fnSuccess || a, o = t.fnFail || a, n = n || a;
            e = $.extend({
                comeFrom: 0,
                calendarType: 10,
                labelId: 6,
                recMySms: 1,
                recMyEmail: 0,
                beforeTime: 15,
                sendInterval: 6,
                enable: 1,
                beforeType: 0,
                startTime: "0800",
                endTime: "2359"
            }, e), top.M139.RichMail.API.call("calendar:" + i, e, function (e) {
                if (!e || "object" != typeof e) return void n();
                var t = e.responseData;
                if (!t || "object" != typeof t) return void n();
                var i = t.code;
                if ("S_OK" == i) {
                    var a = t["var"] || {};
                    s(a, t)
                } else o(i, t)
            })
        },
        initSubViews: function () {
            var e = document.getElementById("div_main");
            this.registerView("tabpage", new TabPageView({ el: e }));
            this.registerView("mailbox", new M2012.Mailbox.View.Main);
            this.registerView("mailbox_other", new M2012.Mailbox.View.Main({ multiInstance: !0 }));
            this.getView("tabpage").render();
            this.registerView("tabmenu", new M2012.TabMenu.View);
            this.registerView("remind", new M2012.Remind.View);
            this.registerView("top", new M2012.Main.View.TopView);
            this.getView("top").render();
            this.createFixedTabs();
            this.registerView("contextmenu", new M2012.Mailbox.View.ContextMenu);
            var t = this.getView("mailbox").model;
            ($B.is.webkit || $B.is.firefox) && setTimeout(function () {
            }, 2e3);
            this.registerView("command", new M2012.Mailbox.View.Command({ model: t }));
            $(window).load(function () {
                setTimeout(function () {
                    if (!($.browser.safari || $.browser.mozilla || $B.is.ie && $B.getVersion() <= 8)) {
                        if ("http:" == window.location.protocol) {
                            $("#div_main").append('<div class="gload" id="div_composeContainer" style="display:none"><iframe src="compose_v3.html?sid=' +
                                top.sid +
                                '" scrolling="auto" class="main-iframe" frameborder="no" width="100%" allowtransparency="true" name="ifbg" id="compose_preload" "></iframe></div>');
                        }
                    }
                }, 500)
            })
        },
        createFixedTabs: function () {
            var e = this,
                t = this.getView("tabpage");
            new FrameView({ parent: t });
            t.createOrignTabs(["mailbox_1"], e.getView("mailbox"));
            top.$App.onUserDataComplete(function () {
                $App.getView("top").preInitSearch();
                t.model.getFixedTabsData();
            })
        },
        initOldTimesAdapter: function () {
            var e = new M2012.MatrixVM;
            e.start()
        },
       
        _defResource: "http://images.139cm.com",
        getResourceHost: function () {
            var e = top.m2012ResourceDomain;
            if (e) return e;
            try {
                e = top.getDomain("rmResourcePath")
            } catch (t) {
            }
            return e = e.match(/^(https?:\/\/)?([^\/]+)/i)[0], e ? e : this._defResource
        },
        getResourcePath: function () {
            try {
                return top.getDomain("rmResourcePath")
            } catch (e) {
                try {
                    return top.rmResourcePath
                } catch (t) {
                }
            }
            return this._defResource + top.getRootPath() + ""
        },
        getSiteConfig: function (e) {
            return SiteConfig[e]
        },
        initApi: function () {
            this.on("beforeRequireLoad", function (e) {
                e && "main_ext" == e.key && (delete M2012.UI.Dialog.ContactsEditor, delete M2012.UI.Dialog.AddressBook)
            });
            M139.namespace("M2012.UI.Dialog.ContactsEditor", function (e) {
                var t = {
                    _callback: {}, on: function (e, t) {
                        this._callback[e] = t
                    }
                };
                return this.render = function () {
                    return t
                }, Package.require("main_ext", function () {
                    setTimeout(function () {
                        var i = new M2012.UI.Dialog.ContactsEditor(e).render();
                        for (elem in t._callback) i.on(elem, t._callback[elem])
                    }, 100)
                }), t
            });
            M139.namespace("M2012.UI.Dialog.AddressBook", {
                create: function (e) {
                    this.render = function () {
                    };
                    var t = {
                        _callback: {}, on: function (e, t) {
                            this._callback[e] = t
                        }
                    };
                    Package.require("main_ext", function () {
                        setTimeout(function () {
                            var i = new M2012.UI.Dialog.AddressBook(e).render();
                            for (elem in t._callback) i.on(elem, t._callback[elem])
                        }, 100)
                    });
                    return t;
                }
            });
            jQuery.extend(this, {
                getSid: function () {
                    return $T.Html.encode(this.query.sid)
                },
                getMailDomain: function () {
                    return SiteConfig.mailDomain || "139.com"
                },
                getAccountWithLocalDomain: function (e) {
                    return e + "@" + $App.getMailDomain()
                },
                getValidateCodeUrl: function (e) {
                    return domainList.global.imgCode + "clientid=" + e + "&r=" + Math.random()
                },
                isLocalDomainAccount: function (e) {
                    return $Email.getDomain(e) === $App.getMailDomain()
                },
                getReplyWithQuote: function () {
                    return $User.getReplyWithQuote()
                },
                getPopList: function () {
                    return $App.getConfig("PopList") ? $App.getConfig("PopList") : []
                },
                getSignList: function () {
                    return $App.getConfig("SignList") ? $App.getConfig("SignList") : []
                },
                isNewWin: function () {
                    return location.search.indexOf("t=newwin") > -1
                },
                isSessionCommand: function (e) {
                    var t = {
                        "delete": !0,
                        move: !0,
                        mark: !0
                    }, i = t[e] && $App.isSessionMode() && $App.isSessionFid($App.getCurrentFid());
                    return "mailbox" == $App.getCurrentTab().group || $App.getCurrentTab().group.indexOf("mailsub_") >= 0 ? i && !$App.getCurrentTab().view.model.get("isSearchMode") : i
                },
                readMail: function (e, t, i, a) {
                    var s = new M2012.ReadMail.View;
                    a || (a = { cguid: "" });
                    var o = s.callReadMail(e, t, i, a);
                    return o ? o : void 0
                },
                addBlackWhite: function (e, t, i) {
                    "undefined" != typeof top.addBlackWhiteView ? top.addBlackWhiteView.addBlackWhite(e, t, i) : (M139.registerJS("M2012.Settings.Spam", "packs/spam.html.pack.js?v=" + Math.random()), M139.requireJS(["M2012.Settings.Spam"], function () {
                        top.addBlackWhiteView = new M2012.Settings.Spam.View, top.addBlackWhiteView.addBlackWhite(e, t, i)
                    }))
                },
                writeContent: function (e, t) {
                    var i = new M2012.ReadMail.View.ReadMailContent;
                    i.writeContent(e, t)
                },
                showBill: function (e) {
                    var t = this.getView("mailbox_other").model;
                    2 == e ? (t.set("billTab", 0), BH("service_mail_load"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        flags: { billFlag: 1 },
                        condictions: [{ field: "logoType", operator: "=", value: 1 }, {
                            field: "logoType2",
                            operator: "GE",
                            value: 110
                        }, { field: "logoType2", operator: "LE", value: 113 }]
                    })) : 1 == e ? (t.set("billTab", 2), BH("my_service_load"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 1,
                        flags: { billFlag: 1 },
                        condictions: [{ field: "logoType2", operator: "=", value: 2 }, {
                            field: "logoType",
                            operator: "=",
                            value: 0
                        }]
                    })) : 4 == e ? (t.set("billTab", 6), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        flags: { billFlag: 1 },
                        condictions: [{ field: "logoType", operator: "=", value: 4 }]
                    })) : 3 == e ? (t.set("billTab", 3), BH("my_notice_load"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 2,
                        logtypeSendidFlag: 1,
                        flags: { billFlag: 0 },
                        condictions: [{ field: "logoType", operator: "=", value: 66 }, {
                            field: "sendId",
                            operator: "GT",
                            value: 1e6
                        }, { field: "sendId", operator: "LT", value: 1000006 }]
                    })) : 5 == e ? (t.set("billTab", 4), BH("my_activation_load"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        flags: { billFlag: 0 },
                        condictions: [{ field: "logoType", operator: "=", value: 67 }]
                    })) : 6 == e ? (t.set("billTab", 5), BH("my_extension_load"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        flags: { billFlag: "" },
                        condictions: [{ field: "logoType", operator: "=", value: 68 }]
                    })) : 7 == e ? (t.set("billTab", 1), this.searchMail({
                        fid: 1, exceptFids: [4], isFullSearch: 0, condictions: [{
                            field: "logoType", operator: "=", value: 3
                        }]
                    })) : 8 == e ? (t.set("billTab", 8), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        condictions: [{ field: "sendId", operator: "=", value: 1000013 }]
                    })) : 13 == e ? (t.set("billTab", 13), BH("left_xingcheng"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        condictions: [{ field: "sendId", operator: "=", value: 1000011 }],
                        from: "left"
                    })) : 14 == e ? (t.set("billTab", 14), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        condictions: [{ field: "sendId", operator: "=", value: 1000010 }, {
                            field: "sendId1",
                            operator: "=",
                            value: 1000006
                        }, { field: "sendId2", operator: "=", value: 1000014 }, {
                            field: "sendId3",
                            operator: "=",
                            value: 1000013
                        }],
                        addSendIdFlag: 3
                    })) : 15 == e ? (t.set("billTab", 15), BH("left_bankbill"), this.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        condictions: [{ field: "sendId", operator: "=", value: 1010101 }],
                        from: "left"
                    })) : 16 == e && (t.set("billTab", 16), this.searchMail({
                        fid: 1,
                        sessionEnable: 2,
                        exceptFids: [4],
                        isFullSearch: 0,
                        condictions: [{ field: "sendId", operator: "GE", value: "1010001" }, {
                            field: "sendId",
                            operator: "LE",
                            value: "1010200"
                        }, { field: "sendId1", operator: "GE", value: "1000100" }, {
                            field: "sendId1",
                            operator: "LE",
                            value: "1000103"
                        }],
                        addSendIdFlag: 1,
                        from: "left"
                    }))
                },
                showSubscribe: function (e, t, i) {
                    var a, s = this;
                    M139.core.utilCreateCssTag("/mpost2014/css/module/cloudMail2.0/rssMailCard.css", document, function () {
                        var o, n = s.getView("sublist");
                        "undefined" == typeof n && s.registerView("sublist", new M2012.Mailbox.View.Sublist), o = $App.getView("mailbox_other"), "boolean" == typeof e ? o.model.set("fid", 1) : o.model.set("fid", $App.getCurrentFid()), a = 1000001 == e && s.isSessionMode() ? 0 : $App.getCurrentFid();
                        var r = s.getView("mailbox_other").model;
                        switch (e) {
                            case 1000006:
                                r.set("billTab", 0)
                        }
                        var l = {
                            fid: a,
                            exceptFids: [4],
                            isFullSearch: 0,
                            sessionEnable: 0,
                            condictions: e && "boolean" != typeof e ? [{
                                field: "sendId",
                                value: e,
                                operator: "EQ"
                            }] : [{ field: "sendId", value: 0, operator: "GT" }, {
                                field: "sendId",
                                value: "9223372036854775807",
                                operator: "LT"
                            }]
                        };
                        i || (l.flags = { subscriptionFlag: 1 }), o.prepareSearch(l), e && "boolean" != typeof e || (e = 0), o.model.set("isVipMode", !1), o.model.set("isTaskMode", !1), o.model.set("isTaskbacklogMode", !1), o.model.set("isTaskdoneMode", !1), o.model.set("isContactsMail", !1);
                        var c = $App.getUserCustomInfo("mailsubstate");
                        e && "boolean" != typeof e && Number(e) > 1e6 ? $App.showPage({
                            name: "mailsub_0",
                            view: o
                        }) : "2" === c ? $App.show("cardMail") : $App.showPage({
                            name: "mailsub_0",
                            view: o
                        }), $App.getView("tabpage").setTitle(t ? t : "订阅邮件")
                    })
                },
                getCurrentView: function () {
                    return this.getMailboxView()
                },
                isMailbox: function () {
                    var e = this.getCurrentTab();
                    return e.name.indexOf("mailsub") >= 0 || e.name.indexOf("mailbox") >= 0
                },
                getMailboxView: function () {
                    var e = this.getCurrentTab();
                    return e && e.name.indexOf("mailsub") >= 0 ? e.view : this.getView("mailbox")
                },
                showMailbox: function (e, t) {
                    var i = this.getView("mailbox");
                    if (e > 1) {
                        i = this.getView("mailbox_other");
                    }
                    if (8 == e) {
                        return void this.showBill(2);
                    }
                    if (9 == e) {
                        return void this.showSubscribe();
                    }
                    if (this.getView("folder").model.isLock(e) && !this.getView("folder").model.get("passwordChecked")) {
                        return void this.showUnlock(e);
                    }
                    i.model.set("pageIndex", 1);
                    i.model.set("isSearchMode", !1);
                    i.model.set("isVipMode", !1);
                    i.model.set("isTaskMode", !1);
                    i.model.set("isContactsMail", !1);
                    i.model.set("IamFromLaiwang", !1);
                    setTimeout(function () {
                        if ("left" == $App.getLayout()) {
                            i.model.set("isReadFirst", !0);
                        }
                    }, 100);
                    this.trigger("showMailbox", { fid: e, view: i });
                    if (1 == e) {
                        this.autoReadBill();
                        var a = $Date.parse($User.getLastLoginDate());
                        if (a) {
                            var s = $Date.getDaysPass(a, new Date);
                            $App.getConfig("UserData");
                            if (s >= 90) {
                                if (!this.WGuideShown) {
                                    this.WGuideShown = !0,
                                    new M139.UI.WGuide;
                                }

                            }
                        }
                    }
                },
                autoReadBill: function () {
                    if (!arguments.callee.isInvoked) {
                        arguments.callee.isInvoked = !0;
                        var e = $User.getProvCode();
                        SiteConfig.autoReadBill && $.inArray(e, SiteConfig.autoReadBill) >= 0 && M139.RichMail.API.call("mbox:searchMessages", {
                            fid: 1,
                            exceptFids: [4],
                            isSearch: 1,
                            isFullSearch: 0,
                            addSendIdFlag: 3,
                            condictions: [{ field: "sendId", operator: "=", value: 1000010 }, {
                                field: "sendId1",
                                operator: "=",
                                value: 1000006
                            }, { field: "sendId2", operator: "=", value: 1000014 }, {
                                field: "sendId3",
                                operator: "=",
                                value: 1000013
                            }]
                        }, function (e) {
                            if (e.responseData["var"].length > 0) {
                                var t = e.responseData["var"][0];
                                1 == t.flags.read ? ($App.readMail(t.mid, null, null, { deactive: !0 }), top.BH({
                                    actionId: 108457,
                                    thingId: 1
                                })) : M139.RichMail.API.call("mbox:readMessage", { mid: t.mid, markRead: 0 })
                            }
                        })
                    }
                },
                doCommand: function (e, t) {
                    t || (t = {}), t.command = e, $App.trigger("mailCommand", t)
                },
                showUnlock: function (e, t) {
                    var i = this;
                    Package.require("main_ext", function () {
                        new M2012.Folder.View.Unlock({
                            fid: e,
                            mid: t || null,
                            model: i.getView("folder").model
                        }).render()
                    })
                },
                getLayout: function () {
                    var e = $App.getMailboxView().model.get("layout");
                    return "left" != e || $App.getMailboxView().isUseNew3list() || (e = "list"), $App.getMailboxView().model.isUseNewMode() && (e = "list"), $App.getCurrentTab().name.indexOf("readmail_") > -1 && (e = "list"), e
                },
                flipPage: function (e, t) {
                    this.getView("mailbox").toolbarView.flipPage(e, t)
                },
                openFullSearch: function (e) {
                    $RM.setAttrs({ attrs: { fts_flag: 1 } }, function (e) {
                        if ("S_OK" == e.code) {
                            BH("open_search_all_succeed");
                            $Msg.confirm("全文检索开通成功，刷新页面生效", function () {
                                location.reload()
                            }, { title: "", dialogTitle: "系统通知", icon: "ok", buttons: ["立即刷新"] })
                        } else top.M139.UI.TipMessage.show("全文检索开通失败", { className: "msgRed", delay: 1e3 })
                    })
                },
                isFullSearch: function () {
                    var e = $App.getConfig("UserAttrs");
                    return 1 == e.fts_flag
                },
                showAdvanceSearch: function () {
                    var e = top.$App.getView("mailbox_other").model;
                    e.set("loadAdvanceSearchForm", "mid");
                    var t = this.isFullSearch() ? 310 : 290;
                    top.window.advanceSearchWin = $Msg.open({
                        dialogTitle: "高级搜索",
                        url: "advance_search_v2.html",
                        width: 408,
                        height: t,
                        onclose: function () {
                            top.window.advanceSearchWin = null
                        }
                    })
                },
                searchMail: function (e) {
                    var t = this.getView("mailbox_other");
                    if (e && _.isArray(e.condictions) && e.condictions[0] && "sendId" == e.condictions[0].field && 1000011 == e.condictions[0].value) {
                        var i = [{ field: "sendId1", operator: "GE", value: 1010001 }, {
                            field: "sendId1",
                            operator: "LE",
                            value: 1010100
                        }];
                        Array.prototype.push.apply(e.condictions, i), e.addSendIdFlag = 1
                    }
                    t.prepareSearch(e),
                    arguments[1] && t.model.setAll("isContactsMailAndTheEmailIs", $T.Html.encode(arguments[1])),
                    e.isVip && BH("vip_mail_load"),
                    e && (t.model.set("isVipMode", !!e.isVip),
                    t.model.set("isTaskMode", !!e.isTaskmail),
                    t.model.set("isTaskbacklogMode", !(!e.isTaskmail || 1 != e.flags.taskFlag)),
                    t.model.set("isTaskdoneMode", !(!e.isTaskmail || 2 != e.flags.taskFlag)),
                    t.model.setAll("isContactsMail", !!arguments[2]),
                    t.model.set("hasClickUnreadLink", e.hasClickUnreadLink)),
                    this.trigger("showMailbox", {
                        fid: 1,
                        isSearch: !0,
                        view: t
                    })
                },
                searchVip: function () {
                    this.getMailboxView().model.searchVip()
                },
                searchTaskmail: function (e) {
                    this.getMailboxView().model.searchTaskmail(e)
                },
                setTaskMessage: function (e) {
                    e = e || {}, BH("mailList_setsms");
                    var t = $App.getView("starView");
                    t && t.popMenu.changeRemind(_.extend({ sms: !0, setSms: !0 }, e))
                },
                searchSingleDayTaskmail: function (e) {
                    this.getMailboxView().model.searchSingleDayTaskmail(e)
                },
                getMailDataByMid: function (e) {
                    var t = this.getMailboxView().model.getMailById(e);
                    return t || (t = this.getView("mailbox").model.getMailById(e) || this.getView("mailbox_other").model.getMailById(e)), t
                },
                getSessionMailDataByMid: function (e) {
                    return $App.getView("readSessionMail") ? $App.getView("readSessionMail").model.get("sessionData")[e] : ""
                },
                getFreshMail: function (e, t, i) {
                    return this.getMailboxView().model.getFreshMail(e, t, i)
                },
                getTagsById: function (e) {
                    return this.getView("folder").model.getTagsById(e)
                },
                getTagColor: function (e) {
                    return this.getView("folder").model.getColor(e)
                },
                checkCustomFolderPopFlag: function () {
                    var e = $App.getFolders("custom")[0];
                    return !(!e || 1 != e.pop3Flag)
                },
                setTitle: function (e, t) {
                    this.getView("tabpage").setTitle(e, t)
                },
                setIcon: function (e) {
                    $App.getView("tabpage").tab.setStateIcon(this.getCurrentTab().name, e)
                },
                setOpacityLayer: function (e, t) {
                    var i = 0;
                    if (t) {
                        var a = t.css("paddingTop");
                        a = a.replace("px", "");
                        var s = t.css("paddingBottom");
                        s = a.replace("px", ""), i = t.height() + parseInt(a) + parseInt(s)
                    }
                    var o = e.height() - i, n = e.css("paddingTop");
                    n = n.replace("px", ""), n = parseInt(n) + parseInt(i);
                    var r = e.find(".blackbanner").length, l = '<div style="top: {0}px; height:{1}px; z-index:10; " class="blackbanner mainIframeBg_noBg"></div>';
                    l = $T.Utils.format(l, [n, o]), 0 == r && e.append(l)
                },
                showChannel: function (e) {
                    this.getView("tabpage").showChannel(e)
                },
                getCurrentTab: function () {
                    return this.getView("tabpage").model.getCurrent()
                },
                getTabByName: function (e) {
                    return this.getView("tabpage").model.getModule(e)
                },
                validateTab: function (e) {
                    var t;
                    t = e ? $App.getTabByName(e) : $App.getCurrentTab(), t && (t.isRendered = !1)
                },
                registerChannel: function (e, t) {
                    this.getView("tabpage").registerChannel(e, t)
                },
                close: function (e) {
                    return this.getView("tabpage").close(e)
                },
                closeTab: function (e) {
                    return this.getView("tabpage").close(e)
                },
                activeTab: function (e) {
                    return this.getView("tabpage").activeTab(e)
                },
                clearTabCache: function (e) {
                    return this.getView("tabpage").clearTabCache(e)
                },
                closeAllTab: function () {
                    return this.getView("tabpage").closeAllTab()
                },
                getCurrentFid: function () {
                    return this.getCurrentView().model.get("fid")
                },
                getFolderById: function (e) {
                    return this.getView("folder").model.getFolderById(e)
                },
                getFolders: function (e) {
                    return this.getView("folder").model.getFolders(e)
                },
                getFolderType: function (e) {
                    return this.getView("folder").model.getFolderType(e)
                },
                getFolderByFolderName: function (e) {
                    return this.getView("folder").model.getFolderByFolderName(e)
                },
                addFolder: function (e, t, i, a) {
                    return this.getView("folder").model.addFolder(e, t, i, a)
                },
                addFolders: function (e, t) {
                    return this.getView("folder").model.addFolders(e, t)
                },
                addTag: function (e, t, i, a) {
                    return this.getView("folder").model.addTag(e, t, i, a)
                },
                checkFolderName: function (e, t) {
                    return this.getView("folder").model.checkFolderName(e, t)
                },
                checkTagName: function (e, t) {
                    return this.getView("folder").model.checkTagName(e, t)
                },
                isPopFolder: function (e) {
                    return this.getView("folder").model.isPopFolder(e)
                },
                isTagFolder: function (e) {
                    return this.getView("folder").model.isTagFolder(e)
                },
                getAddrNameByEmail: function (e) {
                    return $App.getModel("contacts").getAddrNameByEmail(e)
                },
                isSessionMode: function () {
                    var e = $App.getConfig("UserAttrs");
                    return e ? 1 == e.sessionMode : !1
                },
                isSessionFid: function (e) {
                    var t = [2, 3, 4, 5, 7, 10, 11], i = !0;
                    if (($.inArray(e, t) > -1 || !e) && (i = !1), i && $App.getFolders("tag")) {
                        var a = $App.getFolders("tag");
                        $.each($App.getFolders("tag"), function (t, s) {
                            return a[t].fid == e ? (i = !1, !1) : void 0
                        })
                    }
                    return i
                },
                isSessionMid: function (e) {
                    var t = !1;
                    if (e) {
                        var i = $App.getMailDataByMid(e) || null;
                        i && i.mailNum && i.mailNum > 1 && (t = !0)
                    }
                    return t
                },
                openNewWin: function (e) {
                    var t = top.getProtocol() + location.host + top.getRootPath() + "/html/newwinreadmail.html?t=newwin&mid=" + e, i = (document.documentElement, document.createElement("form"));
                    i.target = "_blank", i.method = "get", $(i).append('<input type="hidden" name="t" value="newwin" />'), $(i).append('<input type="hidden" name="mid" value="' + e + '" />'), $(i).append('<input type="hidden" name="sid" value="' + $App.getSid() + '" />'), document.body.appendChild(i), i.action = t, i.submit(), setTimeout(function () {
                        document.body.removeChild(i)
                    }, 100)
                },
                setReadMailMode: function (e, t, i) {
                    var a = { flag: e };
                    M139.RichMail.API.call("mbox:setSessionMode", a, function (a) {
                        if (a.responseData.code && "S_OK" == a.responseData.code) {
                            top.$App.setConfig("UserAttrs", "sessionMode", e);
                            var s = top.$App.getConfig("UserAttrs");
                            s.sessionMode = e, t && t(e)
                        } else i && a.responseData && i(a.responseData.code)
                    })
                },
                reply: function (e, t, i) {
                    var a = {}, s = "reply";
                    1 === e && (s = "replyAll"), a.type = s, a.mid = t, a.withAttach = i, a.lastTabName = $App.getCurrentTab().name, a.userAccount = top.$User.getDefaultSender();
                    var o = $App.getCurrentTab().name;
                    this.show("compose", a), $App.getCurrentTab().name.indexOf("readmail") >= 0 && this.getView("tabpage").replace(o, $App.getCurrentTab().name)
                },
                forward: function (e) {
                    var t = {};
                    t.type = "forward", t.mid = e, t.lastTabName = $App.getCurrentTab().name, t.asAttch = arguments[2].asAttch, arguments[1] && arguments[1].userAccount && (t.userAccount = arguments[1].userAccount);
                    var i = $App.getCurrentTab().name, a = this.isReadMail(), s = this.isReadSessionMail();
                    this.show("compose", t), a && !s && this.getView("tabpage").replace(i, $App.getCurrentTab().name)
                },
                isReadMail: function () {
                    var e = $App.getCurrentTab();
                    return e.name.indexOf("readmail") > -1
                },
                isReadSessionMail: function () {
                    var e = $App.getCurrentTab(), t = $App.getCurrentTab().view, i = t && t.$el && t.$el.find("#covMailSummaryList")[0], a = e.name.indexOf("readmail") > -1 && i, s = $("#readWrap").find("#covMailSummaryList")[0], o = e.name.indexOf("readmail") > -1 && t.model.get("total") > 1, n = e.name.indexOf("viewDiscussInfo") > -1;
                    return !!(a || s || o || n)
                },
                forwardAsAttach: function (e, t) {
                    var i = {};
                    i.type = "forwardAsAttach", i.ids = e, i.subject = t, i.lastTabName = $App.getCurrentTab().name, arguments[2] && arguments[2].userAccount && (i.userAccount = arguments[2].userAccount);
                    var a = $App.getCurrentTab().name, s = this.isReadMail(), o = this.isReadSessionMail();
                    s && !o && setTimeout(function () {
                        $App.closeTab(a)
                    }, 500), this.show("compose", i)
                },
                restoreDraft: function (e) {
                    var t = {};
                    t.type = "draft", t.mid = e;
                    var i = !1, a = $("#divTab ul").children(":visible");
                    a.each(function () {
                        var t = $(this).attr("mid");
                        return t == e && -1 != $(this).attr("tabid").indexOf("compose_") ? (console.warn("The draft has opened, mid: " + e), i = !0, top.$App.activeTab($(this).attr("tabid")), !1) : void 0
                    }), !i && this.show("compose", t)
                },
                editMessage: function (e) {
                    var t = {};
                    t.type = "resend", t.mid = e, this.show("compose", t)
                },
                rewriteMessage: function (e) {
                    var t = {};
                    t.type = "rewrite", this.show("compose", t, { inputData: { rewrite: e } })
                },
                sendVcard: function (e) {
                    var t = {};
                    t.type = "vCard", t.sd = e, this.show("compose", t)
                },
                uploadLargeAttach: function () {
                    var e = {};
                    e.type = "uploadLargeAttach", this.show("compose", e)
                },
                getAttrs: function (e) {
                    var t = $App.getConfig("UserAttrs"), i = $App.getConfig("UserAttrsAll");
                    return t && t[e] ? t[e] : i && i[e] ? i[e] : ""
                },
                setAttrs: function (e, t) {
                    var i = { attrs: e };
                    $RM.setAttrs(i, function (i) {
                        if ("S_OK" == i.code) {
                            var a = $App.getConfig("UserAttrsAll");
                            for (elem in e) a[elem] = e[elem];
                            t && t(i)
                        } else t && t(i)
                    })
                },
                getCustomAttrs: function (e) {
                    var t = this.getAttrs("_custom_" + e);
                    return t ? "string" == typeof t ? t.trim() : t : ""
                },
                setCustomAttrs: function (e, t, i) {
                    var a = "_custom_" + e, s = {};
                    "" == t && (t = " "), s[a] = t, this.setAttrs(s, i)
                },
                showOnceCallbackList: [],
                showOnce: function (e, t, i) {
                    var a = this;
                    this.requireUserData(function () {
                        if (!a.isOnceShowed(e) && $App.getConfig("UserAttrsAll")) {
                            var s = a.getCustomAttrs("showOnceValue");
                            if ("" == s.trim()) var o = []; else o = s.split(",");
                            var n = SiteConfig.showOnceKey[e];
                            if (!n) return void console.error("未定义showOnceKey:", e);
                            if (n = n.toString(), a.isShowOnceInvoking || $.inArray(n, o) >= 0) return void (i && i());
                            o.push(n), a.isShowOnceInvoking = !0, $App.setCustomAttrs("showOnceValue", o.join(","), function () {
                                t && t(), a.isShowOnceInvoking = !1
                            })
                        }
                    })
                },
                showOnceOld: function (e, t, i) {
                    var a = this, s = SiteConfig.showOnceKey || {}, o = s[e];
                    void 0 == o && console.warn(e + "该key未定义，请修改showOnce函数");
                    var n = this.getConfig("UserAttrs");
                    if (null == n || void 0 == n) return void console.error("userAttrs尚未加载");
                    var r = Number(this.getCustomAttrs("showOnce")), l = r.toString(2).split("");
                    if (l.reverse(), o >= l.length) for (var c = l.length - 1; o > c; c++) l.push("0");
                    if ("0" == l[o]) {
                        l[o] = "1", l.reverse();
                        var d = parseInt(l.join(""), 2);
                        $App.getConfig("UserAttrsAll")._custom_showOnce = d.toString(), this.showOnceTimerId && (console.log("取消timer:" + this.showOnceTimerId), clearTimeout(this.showOnceTimerId)), this.showOnceCallbackList.push(t), this.showOnceTimerId = setTimeout(function () {
                            $App.setCustomAttrs("showOnce", d.toString(), function () {
                                $(a.showOnceCallbackList).each(function (e, t) {
                                    t.call()
                                }), a.showOnceCallbackList = []
                            })
                        }, 1500)
                    } else i && i()
                },
                isOnceShowed: function (e) {
                    var t = Number($App.getCustomAttrs("showOnce")).toString(2), i = Number(SiteConfig.showOnceKey[e]);
                    return i < t.length ? t.substr(i, 1) > 0 : !1
                },
                showOrderinfo: function () {
                    BH("show_orderinfo");
                    var e = "http://" + location.host + top.getRootPath() + "/html/set/feature_meal_guide/index.html?sid=" + $App.getSid();
                    window.open(e)
                },
                showReceiveRights: function (e) {
                    function t(e) {
                        top.$Msg.showHTML(['<div class="norTips"><span class="norTipsIco"><i class="i_ok"></i></span>', '<dl class="norTipsContent">', '<dt class="norTipsTitle fz-weight">升级成功！</dt>', '<dd class="norTipsLine fz_14 c_666">有效使用期为31天，请留意使用。</dd>', '<dd class="norTipsLine fz_14 c_666">您还可以<a href="javascript:top.$App.show(\'mobile\');top.$Msg.getCurrent().close();top.$Msg.getCurrent().close();">升级邮箱套餐</a>，', e, "</dd>", "</dl>", "</div>"].join(""), function () {
                            ("diskDev" == $App.getCurrentTab().name || $App.getCurrentTab().name.indexOf("compose") >= 0) && $App.getCurrentTab().view.render()
                        }, { buttons: ["我知道了"] }), top.$App.trigger("userAttrChange", {
                            callback: function () {
                            }
                        })
                    }

                    1 == e ? $User.receiveRights("FILESHARESAVEDAYS,MAXANNEXSIZE", function () {
                        t("永享两大特权。")
                    }) : 2 == e ? $User.receiveRights("FILESHARESAVEDAYS", function () {
                        t("永享30天的暂存柜有效期")
                    }) : 3 == e ? $User.receiveRights("DISKCAPACITY", function () {
                        t("永享139G网盘容量。")
                    }) : 4 == e && $User.receiveRights("MAXANNEXSIZE", function () {
                        t("永享4G超大附件。")
                    })
                },
                setUserConfigInfo: function (e, t, i) {
                    M139.RichMail.API.call("user:setUserConfigInfo", { configTag: e, configValue: t }, function (e) {
                        i && i(e)
                    })
                }
            })
        },
        getUserConfigInfo: function (e, t) {
            e = e.toLowerCase();
            var i = $App.getConfig("UserData").mainUserConfig;
            return i[e] && 2 == i[e].length ? void 0 == t ? i[e][1] : i[e][t] : ""
        },
        setMailTips: function (e) {
            var t = this;
            this.setUserConfigInfo("newmailtips", e, function () {
                t.getMainData()
            })
        },
        getUserCustomInfo: function (e) {
            try {
                var t = top.$App.getUserConfigInfo("usercustominfo")
            } catch (i) {
                return
            }
            if (t) {
                var a = new RegExp("(?:^|&)" + e + "=(\\d+)"), s = t.match(a);
                if (s) return s[1]
            } else;
        },
        setUserCustomInfoNew: function (e, t) {
            var i = $User.getUserConfig(), a = {};
            if (i && i.usercustominfo && i.usercustominfo.length > 1) oldValue = i.usercustominfo[1], 0 == oldValue.indexOf("&") && (oldValue = oldValue.substring(1)), a = $T.Url.getQueryObj("?" + oldValue); else {
                if (!i || i.usercustominfo) return;
                a = {}, M139.Logger.sendClientLog({
                    level: "ERROR",
                    name: "setUserCustomInfoNew",
                    errorMsg: "set exception, the usercustominfo is null"
                })
            }
            var s = $.extend(a, e), o = this;
            this.setUserConfigInfo("usercustominfo", $T.Url.urlEncodeObj(s), function () {
                o.getMainData(t)
            })
        },
        setUserCustomInfo: function (e, t, i) {
            var a = this, s = "", o = !isNaN(e) && !isNaN(t) && e >= 0 && 101 >= e && t >= 0 && 9 >= t, n = "";
            if ($User.getUserConfig() && $User.getUserConfig().usercustominfo && $User.getUserConfig().usercustominfo[1]) {
                if (n = $User.getUserConfig().usercustominfo[1], o) {
                    var r = new RegExp("(?:^|&)" + e + "=\\d+");
                    if (r.test(n)) var s = n.replace(r, "&" + e + "=" + t); else var s = n + "&" + e + "=" + t
                }
                return a.setUserConfigInfo("usercustominfo", s), a.getMainData(), i && i(), t
            }
        },
        onResize: function () {
            var e = $App.getView("folder");
            e && e.resizeSideBar();
            var t = "none" == $("#divTab")[0].style.display ? 106 : 74, i = $App.getBodyHeight(), t = 106;
            $D.getWinHeight() - t, this.getCurrentTab() && this.getCurrentTab().name;
            this.getView("tabpage").resize();
            var a = t || 0, s = $D.getWinWidth() > 1024 ? $D.getWinWidth() : 1024, o = .625 * s;
            o < $D.getWinHeight() && (o = $D.getWinHeight()), $("#skinBgImg").css({
                width: s,
                height: o
            }), $User.getSkinName().indexOf("_clarit") > -1 && $("#skinBgSub").height($D.getWinHeight() - a - 36), $(".skinBody").css({
                width: s,
                height: $D.getWinHeight(),
                overflow: "hidden"
            }), "none" === $("#divTab ul").css("display") ? $("#main").height(i - 76) : $("#main").height(i - 108)
        },
        showPage: function (e) {
            function t() {
                return 0 == s.name.indexOf("readmail") &&
                    s.name == window.READMAIL_PRELOAD &&
                    n &&
                    n.logoType &&
                    n.logoType > 89 &&
                    n.logoType < 97;
            }
            var i = this.getView("tabpage").model,
                a = null;
            if (!i.existModule(e.name) || e.mutiple) {
                this.getView("tabpage").createModule(e);
            }
            else {
                var s = i.getModule(e.name),
                    o = s.name.replace("readmail_", ""),
                    n = top.$App.getMailDataByMid(o);
                s.view = e.view;
                s.isRendered = !1;
                if (0 == s.name.indexOf("readmail") &&
                    s.name == window.READMAIL_PRELOAD &&
                    n &&
                    !n.read_track_enabled) {
                    s.isRendered = !0;
                    setTimeout(function () {
                        M139.RichMail.API.call("mbox:updateMessagesStatus", {
                            ids: [o],
                            type: "read",
                            value: 0
                        }, function () {
                            top.$App.trigger("reloadFolder")
                        })
                    }, 500);
                }
                if (e.name.indexOf("mailsub") >= 0) {
                    this.disposeView(e.name)
                }
                if (t()) {
                    s.isRendered = !1
                }
            }
            if (e.silence) {
                e.view.render();
                e.isRendered = !0;
                e.view.el.style.display = "none";
                window.READMAIL_PRELOAD = e.name;
            }
            else {
                a = i.get("currentModule");
                e.name == a && i.set("currentModule", null);
                i.set("currentModule", e.name, e.group);
                this.trigger("showPage", {
                    name: e.name,
                    prev: a
                });
            }
        },
        disposeView: function (e) {
            view = $App.getTabByName(e).view, view && ($(view.el).off(), view.undelegateEvents())
        },
        showFrame: function (e) {
            var t = new FrameView({ parent: this.getView("tabpage") });
            this.showPage({ name: e, view: t })
        },
        showUrl: function (e, t, i) {
            var a = new FrameView({ parent: this.getView("tabpage"), url: e, title: t });
            this.showPage({ name: "frame_" + Math.random(), view: a, group: i || t })
        },
        showHtml: function (e, t) {
            var i = new FrameView({ parent: this.getView("tabpage"), html: e, title: t });
            this.showPage({ name: "frame_" + t, view: i })
        },
        openThirdParty: function (e) {
            var t = FrameModel.getLinkByKey(e), i = t.url;
            i += i.indexOf("?") > -1 ? "&sid=" : "?sid=", i = SiteConfig.ssoInterface + "/GetUserByKeyEncrypt?url=" + encodeURIComponent(i) + "&comeFrom=" + t.comefrom + "&sid=" + top.sid, window.open(i)
        },
        subscribe: function (e) {
            var t = "/subscribe/inner/bis/subscribe?sid=" + top.sid;
            M139.RichMail.API.call(t, e)
        },
        show: function (e, t, i) {
            var i = i || {},
                 t = t || {},
                 a = FrameModel.getLinkByKey(e),
                 s = null,
                 o = null;
            if ("compose" == e) {
                var n = (new Date).getTime(),
                r = M139.Core.getCGUID(),
                l = ["writemail", r, "", ""];
                top.window.sendUData("webp_writemail_click", l),
                t.startTime = n,
                t.cguid = r
            }
            if ("sendToPhone" == e) {
                if (void 0 != window.$sendToPhoneApp) {
                    $App.trigger("sendToPhone");
                } else {
                    M139.core.utilCreateScriptTag({
                        src: top.getRootPath() + "/js/packs/sendToPhone.html.pack.js"
                    },
                    function () {
                        $App.trigger("sendToPhone")
                    });
                }
            };
            if ("uploadTaskList" == e) {
                if (void 0 != !window.$uploadTaskList) {
                    M139.core.utilCreateScriptTag({
                        src: top.getRootPath() + "/js/packs/uploadTaskList.html.pack.js"
                    }, function () {
                        i.fn && i.fn($uploadTaskList)
                    })
                } else {
                    i.fn && i.fn($uploadTaskList);
                }
            }
            "password" == e && $App.getView("top").changepassword();
            if (a) {
                o = new FrameView({
                    parent: $App.getView("tabpage"),
                    param: t,
                    inputData: i.inputData
                });
                s = {
                    name: e,
                    view: o,
                    title: a.title,
                    group: a.group,
                    channel: a.channel,
                    mutiple: a.mutiple,
                    data: i
                };
                i && i.title && (s.title = i.title);
                "compose" == e && (s.type = t.type);
                this.showPage(s);
                if ("_blank" == a.target) {
                    window.open(a.url);
                }
                else if ("welcome" == e || window.isHideAnimalFlash) {
                    $("#animalFlash").addClass("hide");
                }
                else {
                    var c = $Cookie.get("SkinPath2");
                    $("#animalFlash").hasClass("hide") && this.addFlash2AnimalSkin(c);

                }
            }
        },
        loadSyncguide: function () {
            Package.require("sync_guide_tip", function () {
                var e = new M2012.Product.Syncguide, t = e.loadHtml(), i = $Msg.showHTML(t, {
                    width: "551px",
                    dialogTitle: "手机同步邮箱"
                });
                e.loadEvents(i.$el), console.log("m2012.product.syncguide.js load success...")
            })
        },
        mailToMe: function (e, t) {
            e.subject && e.content && M139.RichMail.API.call("user:mailToMe", e, function (e) {
                t && t(e.responseData.code)
            })
        },
        getDownLoadUrl: function (e) {
            if (e) {
                var t = "/RmWeb/view.do";
                return M139.Text.Url.makeUrl(t, {
                    func: "attach:download",
                    mid: e.mid,
                    offset: e.offset,
                    size: e.size,
                    name: encodeURIComponent(e.name),
                    sid: $App.getSid(),
                    type: e.attachType,
                    encoding: e.encode
                }) + "&name=" + encodeURIComponent(e.name)
            }
            return ""
        },
        jumpTo: function (e, t) {
            var i = ["attachlist", "greetingcard", "postcard", "sms", "mms", "fax", "diskDev", "quicklyShare", "calendar", "groupMail", "dingyuezhongxin", "addrWhoAddMe", "addrWhoWantAddMe", "health"];
            if ($App.getSiteConfig("embedRelease") && $.inArray(e, i) >= 0) {
                if (("sms" == e || "mms" == e) && !$User.checkAvaibleForMobile()) return;
                if ("quicklyShare" === e) {
                    var a = t && t.isOldDisk;
                    return void (top.SiteConfig.isQuicklyShare && "true" != a ? $App.show("quicklyShare", t) : $App.show("quicklyShareOld", t))
                }
                return "diskDev" === e ? void (top.SiteConfig.isDiskDev ? $App.show("diskDev", t) : $App.show("diskDevOld", t)) : void $App.show(e, t)
            }
            if ("voiceMail" == e) {
                var s = $App.getUserCustomInfo("voice");
                return void (s ? this.showBill(4) : ($App.show("voiceSetting"), $App.setUserCustomInfoNew({ voice: 1 }, function () {
                })))
            }
            if (/jpdy/gi.test(e)) return void $App.show(e, t);
            if ("baseData" == e) return void $App.show("account", { anchor: "basePersonalInfo" });
            var o = "/main.htm?func=global:execTemp&sid=" + $App.getSid() + "&id=" + e + "&fromM2012=1", n = $App.getCustomAttrs("jumpFlag");
            if (t && (o = M139.Text.Url.makeUrl(o, t)), "" != n) window.open(o); else {
                $Msg.confirm("标准版2.0尚在Beta阶段，您将进入标准版(旧版)的对应功能页面。确定要进入标准版(旧版)的对应功能页面吗？", function () {
                    return window.open(o), $("#checkJump:checked").length > 0 && $App.setCustomAttrs("jumpFlag", 1), !1
                }, { dialogTitle: "页面跳转", icon: "warn" });
                var r = '<input type="checkbox" id="checkJump" /> <label for="checkJump">不再提示</label>';
                $(".BottomTip").html(r)
            }
        },
        readmailResize: function (e) {
            var t = $("iframe[id=mid_" + e + "]");
            if (t) {
                var i = t.contents().height();
                t.height(i)
            }
        },
        getCurrMailMid: function () {
            var e = null, t = $App.getCurrentTab().name;
            t.indexOf("readmail_") > -1 && (e = t.split("_")[1]);
            var i = $("#readWrap .readMail-left");
            $("#readWrap .mailSectionWrap");
            return ("top" == $App.getLayout() || "left" == $App.getLayout()) && i.length > 0 && i.attr("id") && (e = i.attr("id").split("_")[1]), e
        },
        shortcutKey: function (e, t) {
            var i = { command: "shortcutKey", currEvent: e, win: t };
            $App.trigger("mailCommand", i)
        },
        getAd: function (e, t) {
            return 1 == arguments.length ? window.mwUnifiedPositionContent && mwUnifiedPositionContent["var"] && mwUnifiedPositionContent["var"][e] ? mwUnifiedPositionContent["var"][e][0] : {} : void M139.RichMail.API.call("unified:getUnifiedPositionContent", { positionCodes: e }, function (i) {
                if (i.responseData.code && "S_OK" == i.responseData.code) {
                    var a = i.responseData["var"][e];
                    a && a.length > 0 && t(a[0], i.responseData)
                }
            })
        },
        keyReply: function (e, t) {
            var i = e.target;
            if (!(/input|textarea/i.test(i.tagName) || t && t.location.href.indexOf("blank.htm") > -1)) {
                var a, s = e.keyCode, o = [], n = { attach: !1, command: "reply", mids: o, all: !1 };
                if (e.shiftKey && 65 == s && (a = $App.getCurrMailMid(), a && o.push(a), n.all = !0), e.shiftKey && 82 == s && (a = $App.getCurrMailMid(), a && o.push(a)), o.length > 0 && $App.trigger("mailCommand", n), e.shiftKey && 67 == s && $App.show("compose"), 191 == s) {
                    var r = $("#tb_mailSearch");
                    $B.is.firefox ? (r.focus(), setTimeout(function () {
                        var e = r.val();
                        r.val(e.substring(0, e.length - 1))
                    }, 0)) : setTimeout(function () {
                        r.focus()
                    }, 0)
                }
            }
        },
        openDialog: function (title, className, options) {
            function loadCallback() {
                var view_class = eval(className), view = new view_class(options);
                if (view.button1Click) var button1Click = function () {
                    view.button1Click.call(view)
                };
                options.dialogTitle = title;
                var dialog = $Msg.showHTML(view.render(), button1Click, null, null, options);
                view.dialog = dialog, view.el = dialog.el, view.onRender && view.onRender()
            }

            options || (options = {}), M2012.View || (M2012.View = {}), eval(className) ? loadCallback() : (M139.core.registerJS(className, "richmail/dialog/" + className.toLowerCase() + ".js"), M139.core.requireJS([className], loadCallback))
        },
        isSessionOut: function () {
            return !!this.get("sessionOut")
        },
        checkSessionOut: function () {
            var e = this.isSessionOut();
            return e && this.showSessionOutDialog(), e
        },
        setSessionOut: function () {
            this.showSessionOutDialog()
        },
        showSessionOutDialog: function () {
            function e() {
                $App.get("sessionOutDialogShow") || (new M2012.UI.Dialog.SessionOut).render().on("remove", function () {
                })
            }

            M2012.UI.Dialog.SessionOut ? e() : M139.core.utilCreateScriptTag({ src: top.getRootPath() + "/js/ui/dialog/m2012.ui.dialog.sessionout.js" }, e)
        },
        showOauthDialog: function (e) {
            function t() {
                $App.get("showOauthDialogShow") || ($App.set("showOauthDialogShow", !0), new M2012.UI.Dialog.BindOauth(e).render().on("remove", function () {
                    $App.set("showOauthDialogShow", !1)
                }))
            }

            M2012.UI.Dialog.BindOauth ? t() : M139.core.utilCreateScriptTag({ src: top.getRootPath() + "/js/ui/dialog/m2012.ui.dialog.bindoauth.js" }, t)
        },
        showGroupDialog: function (e, t, i) {
            function a() {
                var i = new M2012.UI.Dialog.AutoGroup;
                i.render(), i.updateGroupInfo(e, t, !0)
            }

            function s() {
                var i = new M2012.GroupMail.List.View;
                i.updateGroupInfo(e, t, !0)
            }

            i ? (BH("group_auto_created"), M139.core.utilCreateScriptTag({ src: top.getRootPath() + "/js/ui/dialog/m2012.ui.dialog.autogroup.js" }, a)) : BH("group_auto_created2"), M139.core.utilCreateScriptTag({ src: top.getRootPath() + "/js/service/groupmail/m2012.groupmail.list.view.js" }, s)
        },
        onHttpClientResponse: function (e, t) {
            var i = t.responseData;
            if (i && "S_OK" != i.code) {
                var a = i.errorCode, s = i.code, o = i.summary;
                if (("2011" == a || "2012" == a || "string" == typeof s && "fa_invalid_session" == s.toLowerCase() || o && o.indexOf("RMKEY") > -1) && this.setSessionOut(), "PML410070001" != s && "PML410070002" != s && "PML410070003" != s || this.trigger("maintaining", i), i.hasOwnProperty("resultCode") && 0 == i.resultCode) return;
                if (i.hasOwnProperty("ResultCode") && 0 == i.ResultCode) return;
                if (e.requestOptions.url.indexOf("pns/poll") >= 0) return;
                M139.Logger.sendClientLog({
                    level: "ERROR",
                    name: "RichMailHttpClient",
                    url: e.requestOptions.url,
                    errorMsg: "Not Response S_OK",
                    responseText: t.responseText
                })
            }
            i && e.requestOptions.url.indexOf("unified:getUnifiedPositionContent") >= 0 && this.replaceAdData(i["var"])
        },
        replaceAdData: function (e) {
            function t(e) {
                e.content = e.content.replace(/\$cid\$/g, e.contentId), e.content = e.content.replace(/\$thingId\$/g, e.thingId), e.content.indexOf("$behaviorUrl$") && (e.content = e.content.replace(/\$behaviorUrl\$/g, top.getDomain("rebuildDomain") + "/weather/weather?func=user:logBehaviorAction&sid=" + top.sid + "&version=m2012")), "https:" == window.location.protocol && e.content.indexOf("https://monitor.cm-analysis.com/") && (e.content = e.content.replace("https://monitor.cm-analysis.com/", "https://monitor.cm-analysis.com:8081/"), e.content = e.content.replace("https://track.cm-analysis.com/", "https://track.cm-analysis.com:8081/"))
            }

            var i = e[0];
            for (elem in e) if (elem.indexOf("web_") >= 0) {
                var i = e[elem][0];
                if (i) if (i.content) t(i); else if (i.contentList) for (var a = 0; a < i.contentList.length; a++) t(i.contentList[a])
            }
        },
        showSysTips: function (e, t) {
            0 == $("#sys_tips").length ? $(".personalInformation").after('<div id="sys_tips" class="sys_tips">' + e + "</div>") : $("#sys_tips").html(e)
        },
        getComposeIframe: function () {
            for (var e = $(".main-iframe"), t = 0; t < e.length; t++) {
                var i = e[t];
                if ($(i).attr("src").indexOf("compose") > -1) return i
            }
        },
        showImgEditor: function (e, t) {
            var i = e.find("img");
            i && i.length > 0 && (window.ImgEditorMenu ? ImgEditorMenu.mouseEvent(e, t) : window.setTimeout(function () {
                M139.core.utilCreateScriptTag({
                    id: "imgeditor",
                    src: top.getRootPath() + "/js/richmail/readmail/m2012.readmail.imgeditormenu.js",
                    charset: "utf-8"
                }, function () {
                    ImgEditorMenu.mouseEvent(e, t)
                })
            }, 1e3))
        },
        showMapEditor: function (e) {
            var t = $(e).find(".mapWrap");
            t.each(function (e, t) {
                var i = $(t), a = i.data("events");
                a && a.click || i.click(function (e) {
                    $(this).find("div.map-icons").toggle()
                })
            }), $(e).find("a[data-map]").click(function (e) {
                var t = $(this), i = t.data("map");
                if ("view" == i) {
                    var a = "http://api.map.baidu.com/marker?location=" + t.attr("location") + "&title=" + encodeURIComponent(t.attr("title")) + "&content=" + encodeURIComponent(t.attr("address")) + "&output=html";
                    window.open(a)
                }
                "edit" == i && (top.mapDialogOptions || (top.mapDialogOptions = {}), top.mapDialogOptions.title = t.attr("poititle"), top.mapDialogOptions.location = t.attr("location"), top.mapDialogOptions.mapid = t.attr("mapid"), top.mapDialogOptions.address = t.attr("address"), top.insertMapDialog = top.$Msg.open({
                    dialogTitle: "插入地图",
                    url: "compose_insertmap.html?sid=" + top.sid,
                    width: 452,
                    height: 400
                }), top.insertMapDialog.on("remove", function () {
                    top.insertMapDialog = null
                })), "delete" == i && (top.mapDialogOptions && (top.mapDialogOptions.mapid = ""), t.parents("table").remove())
            })
        },
        showAddPopAccountDialog: function () {
            top.addPopAccountDialog ? top.addPopAccountDialog.show() : (top.addPopAccountDialog = top.$Msg.open({
                dialogTitle: "添加邮箱帐户",
                url: "set/add_pop_new.html?sid=" + top.sid,
                width: 360,
                height: "193px"
            }), top.addPopAccountDialog.on("remove", function () {
                top.addPopAccountDialog = null
            }))
        },
        showVcardEditView: function (e) {
            function t() {
                new M2012.VcardEdit.View({ afterSubmit: e })
            }

            M2012.VcardEdit ? t() : M139.core.utilCreateScriptTag({
                id: "vcardedit",
                src: "vcardedit.html.pack.js",
                charset: "utf-8"
            }, t)
        },
        getSysAccount: function () {
            return ["subscribe@139.com", "homemail@139.com", "admin@139.com", "postmaster@139.com", "idea@139.com", "antispam@139.com", "ued@139.com", "mail139@139.com", "uec@139.com", "service@139.com", "mail139_holiday@139.com", "kefu@139.com", "administrator@139.com", "hostmaster@139.com", "webmaster@139.com", "club@139.com", "port@139.com", "mail139_vip@139.com", "szlvsechuxing@139.com", "subscribe-topic@139.com", "care@139.com", "139duobao@richinfo.cn", "services@richinfo.cn", "babyhippo@139.com", "jiraadmin@richinfo.cn"]
        },
        getSessionDataContent: function () {
            var e = top.M139.PageApplication.getTopApp().sessionPostData, t = "";
            return e && e.content && (t = e.content), M139.PageApplication.getTopApp().sessionPostData = null, t
        },
        getBodyHeight: function () {
            return $D.getWinHeight()
        },
        closeWriteOkPage: function () {
            var e = $App.getView("tabpage").tab.tabs;
            for (var t in e) t.indexOf("compose_") > -1 && $App.getTabByName(t).data.status && $App.closeTab(t)
        },
        isNewWinCompose: function () {
            var e = top.$T.Url.queryString("t");
            return "win_compose" == e && -1 == top.location.hash.indexOf("newwin_done")
        },
        closeNewWinCompose: function (e) {
            e && this.trigger("closeNewWinCompose"), this.isNewWinCompose() && (top.location.hash = "#newwin_done", setTimeout(function () {
                $("#main").removeClass("main_write").addClass("main"),
                    $("#sub, #divTab, #header").show(), $("#top").children().show(), $("#top>a:first").attr("href", 'javascript:$App.show("welcome");').css("cursor", "pointer")
            }, 100))
        },
        showTaskBubble: function (e) {
            function t(e, t) {
                var i = {
                    fid: 0,
                    mid: e,
                    autoName: 1,
                    markRead: 0,
                    returnHeaders: { Sender: "", "X-RICHINFO": "" },
                    filterStylesheets: 0,
                    filterImages: 0,
                    filterLinks: 0,
                    keepWellFormed: 0,
                    header: 1,
                    supportTNEF: 1,
                    returnAntispamInfo: 1
                };
                $RM.readMail(i, function (e) {
                    t(e["var"])
                })
            }

            function i() {
                var i = e;
                top.$RM.getMessageInfo([i], function (a) {
                    var s = a["var"][0];
                    if (!s) return void top.M139.UI.TipMessage.show("无法查询到邮件，请稍后再试", { delay: 2e3, className: "msgRed" });
                    var o = $T.Html.encode(s.subject), n = "readmailcontent.html?rnd=" + Math.random(), r = ['<div class="dRound shadow indboxview">', '<div class="dRoundBody">', '<h3 id="viewSubject">', o, "</h3>", '<div class="indboxviewC">', '<iframe id="previewContent" scrolling="no" noresize="noresize" src="', n, '" frameborder="0" style="width:100%;height:300px;"> </iframe>', "</div>", "</div>", "</div>"].join("");
                    t(i, function (e) {
                        function t() {
                            var t = $("#previewContent")[0].contentWindow.document;
                            t.open(), t.writeln(e.html.content), i(t), t.close()
                        }

                        function i(e) {
                            var t, i, a = e.body;
                            a.scrollHeight ? (t = a.scrollHeight, i = a.scrollWidth) : (t = a.offsetHeight, i = a.offsetWidth), $("#previewContent").css({
                                height: t,
                                width: i
                            })
                        }

                        0 == $("#previewContent").length ? $("#previewContent").load(function () {
                            t()
                        }) : t()
                    }), M2012.UI.DialogBase.showHTML(r, function () {
                        $App.reply(1, e, !1)
                    }, { buttons: ["回复"], width: 572 }).setDialogTitle("查看邮件")
                })
            }

            i()
        },
        getPrettyNumberData: function () {
            if ($App.getConfig("prettyNumber")) return !0;
            if ($D.storage.exists("prettyNumberStr")) {
                var prettyNumberData = eval(localStorage.getItem("prettyNumberStr"));
                "0.1" != prettyNumberData.version ? ($D.storage.remove("prettyNumberStr"), $App.getPrettyNumberData()) : $App.registerConfig("prettyNumber", prettyNumberData)
            } else $.get(location.protocol + "//" + location.host + "/m2015/js/prod/prettyNumber/m2015.prettyNumberStr.js", function (jsonText) {
                var obj = eval(jsonText);
                $App.registerConfig("prettyNumber", obj),
                $D.storage.save("prettyNumberStr", jsonText),
                $App.trigger("showMailbox", { comefrom: "commandCallback" })
            })
        },
        requestAtRemind: function (e) {
            if ("object" == typeof e) {
                var t = { comeFrom: 0, calendar: [] };
                setTimeout(function () {
                    for (k in e) {
                        var i = e[k];
                        if (!$.isEmptyObject(i) && i.seqNo) {
                            var a = i.remind || {}, s = {
                                seqno: i.seqNo,
                                title: a.content || "",
                                dtStart: a.day + " " + a.hour + ":" + a.min + ":00",
                                specialType: 11,
                                inviteInfo: [{
                                    inviterUin: $T.Html.decode(i.address),
                                    recEmail: $T.Html.decode(i.address)
                                }]
                            };
                            t.calendar.push(s)
                        }
                    }
                    M139.RichMail.API.call("calendar:batchAddCalForMail", t, function (e) {
                        var e = e.responseData;
                        e.code && "S_OK" == e.code && e["var"] ? console.log("m2012.mainapplication.js requestAtRemind success....") : console.log("m2012.mainapplication.js requestAtRemind error......")
                    })
                }, 1500)
            }
        },
        showBillCharge: function () {
            try {
                var e = top.$User.getProvCode(), t = ["1", "17", "26", "4", "16", "19"], i = 39352;
                -1 !== $.inArray(e, t) && (i = 38159), top.$App.show("mpostOnlineService", null, {
                    title: "邮箱营业厅",
                    key: i,
                    inputData: { urlParams: { oct: "ipos", oac: "iposorder" }, columnId: i, columnName: "邮箱营业厅" }
                })
            } catch (a) {
                console.log(a.name + ":" + a.message)
            }
        },
        isclearSkinUser: function () {
            for (var e = "ComplexMailbox", t = top.$App.getConfig("UserData").orderInfoList, i = t.length, a = [], s = [], o = 0; i > o; o++) a.push(t[o].serviceId), s.push(t[o].orderStatus);
            for (var o in a) {
                if ("300" == a[o] && ("0" == s[o] || "4" == s[o])) {
                    e = "CleanMailbox";
                    break
                }
                e = "ComplexMailbox"
            }
            return e
        },
        isYouthMailUser: function (e) {
            var t = top.$T.Url.queryString("v") || "", i = top.$User.getSkinName(), a = ["skin_youthDefault", "skin_youthMiku", "skin_youthExam"];
            return "35" == t ? ($Cookie.set({
                name: "_139_login_version",
                value: "35",
                domain: "mail." + document.domain
            }), -1 == $.inArray(i, a) && $App.setSkin("skin_youthDefault"), !0) : ($.inArray(i, a) > -1 && $App.setSkin("skin_lightblue"), !1)
        },
        getAirlinesShortName: function (e) {
            var t, i = {
                s_bk: "奥凯航空",
                s_jd: "首都航空",
                s_eu: "成都航空",
                s_9c: "春秋航空",
                s_2z: "长安航空",
                s_oq: "重庆航空",
                s_cn: "大新华航空",
                s_ji: "翡翠航空",
                s_hu: "海南航空",
                s_g5: "华夏航空",
                s_ns: "河北航空",
                s_ky: "昆明航空",
                s_qw: "青岛航空",
                s_ho: "吉祥航空",
                s_sc: "山东航空",
                s_fm: "上海航空",
                s_3u: "四川航空",
                s_zh: "深圳航空",
                s_gs: "天津航空",
                s_mf: "厦门航空",
                s_jr: "幸福航空",
                s_tv: "西藏航空",
                s_pn: "西部航空",
                s_y8: "扬子江航空",
                s_8l: "祥鹏航空",
                s_cz: "南方航空",
                s_kn: "中国联行",
                s_ck: "中国货运航空",
                s_ca: "中国国航",
                s_mu: "东方航空",
                s_8y: "中国邮政航空",
                s_fl: "飞龙航空",
                s_qr: "卡塔尔航空",
                s_sq: "新加坡航空",
                s_cx: "国泰航空",
                s_tk: "土耳其航空",
                s_ek: "阿联酋航空",
                s_ey: "阿提哈德航空",
                s_nh: "全日空航空",
                s_ga: "印尼航空",
                s_br: "长荣航空",
                s_qf: "澳洲航空",
                s_oz: "韩亚航空",
                s_lh: "德国汉莎航空",
                s_os: "奥地利航空",
                s_lx: "瑞士国际航空",
                s_af: "法国航空",
                s_dj: "澳洲维珍航空",
                s_nz: "新西兰航空",
                s_tg: "泰国国际航空",
                s_ba: "英国航空"
            }, a = { cname: "未知航空公司", ename: "pl" };
            return _.isString(e) && (t = e.substring(0, 2).toLowerCase(), _.isString(i["s_" + t]) && (a = {
                cname: i["s_" + t],
                ename: t
            })), a
        },
        showQrcode: function (e) {
            var t = this, e = e || {}, i = $.extend({ width: 123, height: 123 }, e.style);
            Package.require("qrcode", function () {
                var a = new QRCode(e.id, i);
                a.makeCode(e.url), e.callback && e.callback(), e.isCopy && t.setCopyContent(e.isCopy)
            })
        },
        setCopyContent: function (e) {
            var e = e || {};
            Package.require("jquery_zclip", function () {
                var t = e;
                e.callback && e.callback(), e.$id.zclip({
                    path: "../js/plugin/ZeroClipboard.swf", copy: function () {
                        return t.bh && top.BH(t.bh), t.content
                    }, afterCopy: function () {
                        top.M139.UI.TipMessage.show("复制成功", { delay: 3e3 })
                    }
                })
            })
        },
        televents: function (e) {
            var t = ["<div>是否将该号码通过短信发送至您的手机？</div>"].join(), i = top.$Msg.confirm(t, function (t) {
                top.BH && top.BH("readmail_sign_dialTelephone"), t.cancel = !0;
                var a = "/mw2/sms/sms?func=sms:sendSysSms&sid=" + top.$App.getSid() + "&rnd=" + Math.random(), s = ["<object>", '<int name="type">2</int>', '<int name="attr">', e.tele, "</int>", "</object>"].join("");
                M139.RichMail.API.call(a, s, function (e) {
                    return e.responseData ? "S_OK" == e.responseData.code ? (top.M139.UI.TipMessage.show("发送成功", { delay: 2e3 }), void (i.close && i.close())) : void ("WAPSEND_LIMIT" == e.responseData.code && (i.close && i.close(), top.$Msg.confirm("操作过于频繁，请稍后再试。", {
                        icon: "i_warn",
                        buttons: ["确定"],
                        dialogTitle: "发送确认"
                    }))) : void 0
                })
            }, { dialogTitle: "发送确认", buttons: ["确定", "取消"], icon: "warn", isHtml: !0 })
        },
        getVipMailCenterUrl: function (e) {
            var t = location.href.split("//")[0], i = t + "//";
            return i += null != location.href.match("mail.10086.cn") ? "vip.mail.10086.cn/" : "rm.mail.10086ts.cn/m2015/vipMailcenter/", e && (i = i + e + location.search.replace(/sid=[^&$]+/, "sid=" + this.getSid())), i
        },
        showQuestionSurvey: function () {
            top.BH("queSurveyMenu");
            var e = $Msg.open({
                dialogTitle: "我的问卷",
                url: "/m2015/html/questionSurvey.html?isShowMyQuestionTab=1",
                width: 743,
                height: 490
            });
            top.BH("queSurveyWindow"), top.$App.off("closeSurveyWin").on("closeSurveyWin", function (t) {
                e.off("close"), e.close()
            })
        },
        showVote: function () {
            var e = $Msg.open({
                dialogTitle: "发起投票",
                url: "/m2015/html/vote/vote.html?isShowMyQuestionTab=1",
                width: 743,
                height: 490
            });
            top.$App.off("closeVote").on("closeVote", function (t) {
                e.off("close"), e.close()
            })
        }
    }))
}(jQuery, Backbone, _, M139),


//M2012.Folder.Model.FolderModel
M139.namespace("M2012.Folder.Model", {
    FolderModel: Backbone.Model.extend({
        setorderObj: {
            remindM: 1,
            vipM: 2,
            starM: 3,
            subscribeM: 4,
            listM: 5,
            lifeM: 6,
            noticeM: 7,
            zuceM: 8,
            adsM: 9,
            meetingM: 10,
            rubM: 11,
            chaoM: 12,
            strokeM: 13,
            bankM: 14,
            voinceM: 15,
            officialM: 16
        },
        SysFolderId: {
            inbox: 1,
            draft: 2,
            sent: 3,
            deleted: 4,
            junk: 5,
            virus: 6,
            delBack: 7,
            bill: 8,
            archive: 10,
            subscribe: 9,
            advertise: 11,
            business: 12
        },
        foldertype: { system: 1, manager: 2, custom: 3, tag: 5, pop: -3 },
        eleLeftbarObj: {
            0: "li_remind",
            1: "li_vip",
            2: "li_star",
            3: "li_subscribe",
            4: "list_maill",
            5: "life_maill",
            6: "notice_maill",
            7: "zuce_maill",
            8: "ads_maill",
            9: "li_meeting",
            10: "rub_maill",
            11: "li_chaoMobile",
            12: "li_stroke",
            13: "bank_bill",
            14: "list_invoice",
            15: "list_official"
        },
        folderObj: {
            billNew1: { name: "移动账单", id: "list_maill", iconCls: "i-account-mail" },
            billNew2: { name: "生活服务", id: "life_maill", iconCls: "i_service_pink" },
            billNew3: { name: "通知动态", id: "notice_maill", iconCls: "i_clock_pink" },
            billNew4: { name: "注册激活", id: "zuce_maill", iconCls: "i_key_green" },
            billNew5: { name: "广告邮件", id: "ads_maill", iconCls: "i_sound_yellow" },
            billNew6: { name: "电子发票", id: "list_invoice", iconCls: "icons i-electronicIn" },
            billNew7: { name: "潮州移动", id: "li_chaoMobile", iconCls: "i-mobile-logo" },
            billNew8: { name: "行程邮件", id: "li_stroke", iconCls: "i-trip" },
            unreadrubbishCount: { name: "垃圾邮件", id: "rub_maill", iconCls: "i-trash-mail" },
            newSubscriptionCount: { name: "订阅邮件", id: "li_subscribe", iconCls: "i_m_rss" }
        },
        specialtagNames: { important: "重要任务", urgent: "紧急任务" },
        callApi: M139.RichMail.API.call,
        logger: new top.M139.Logger({ name: "M2012.Folder.Model.FolderModel" }),
        provincetpl: { tplst: ["<a bh={bh} hidefocus='' title={title}  href='javascript:;' oneSetOrder={oneSetOrder}>", "<i class='i-mobile-logo'></i><span>{mailname}{unread}</span>", "</a>"].join("") },
        initialize: function () {
        },
        getLeftBarId: function (e) {
            return this.eleLeftbarObj[e]
        },
        defaults: {
            unfoldCustom: !1,
            unfoldTag: !1,
            unfoldPop: !1,
            unreadStarCount: 0,
            totalStarCount: 0,
            unreadrubbishCount: 0
        },
        clear: function () {
            this.destroy()
        },
        getTop: function () {
            var e = M139.PageApplication.getTopAppWindow();
            return e
        },
        getStarObj: function () {
            var e = this.get("unreadStarCount"), t = {
                count: e > 0 ? "<var class='fw_b'>(" + e + ")</var>" : "",
                style: "",
                title: e > 0 ? $T.Utils.format("{0}封未读邮件", [e]) : "星标邮件"
            };
            return t
        },
        getTaskObj: function () {
            var e = this.get("todoTaskCount"), t = (this.get("totalTaskCount"), ""), i = {
                count: e > 0 ? "<var>[" + e + "]</var>" : "",
                style: t,
                title: e > 0 ? $T.Utils.format("{0}封待处理邮件", [e]) : "待处理邮件"
            };
            return i
        },
        getBillObj: function () {
            var e = this.get("newBillCount"), t = {
                count: e > 0 ? "<var class='fw_b'>(" + e + ")</var>" : "",
                style: "",
                title: e > 0 ? $T.Utils.format("{0}封未读邮件", [e]) : "服务邮件"
            };
            return t
        },
        getBillNewObj: function (e) {
            var t = this.get(e), i = {
                count: t > 0 ? "<var class='fw_b'>(" + t + ")</var>" : "",
                style: "",
                title: t > 0 ? $T.Utils.format("{0}封未读邮件", [t]) : this.folderObj[e].name
            };
            return i
        },
        getBillNew9Obj: function (e) {
            this.getOneMailCount(function (t) {
                var i = top.$User.getProvText() + "移动", a = {
                    count: t > 0 ? "<var class='fw_b'>(" + t + ")</var>" : "",
                    style: "",
                    title: t > 0 ? $T.Utils.format("{0}封未读邮件", [t]) : i
                };
                e && e(a), $App.getMailboxView().model.isOnemailMode() && $(".td-big:visible").find("#sp_unread").text(t + " 封")
            })
        },
        getOneMailCount: function (e) {
            var t = this, i = {
                fid: 1,
                exceptFids: [4],
                isFullSearch: 0,
                isSearch: 1,
                condictions: [{ field: "sendId", operator: "=", value: 1000010 }, {
                    field: "sendId1",
                    operator: "=",
                    value: 1000006
                }, { field: "sendId2", operator: "=", value: 1000014 }, {
                    field: "sendId3",
                    operator: "=",
                    value: 1000013
                }],
                addSendIdFlag: 3
            };
            t.callApi("mbox:searchMessages&type=webapp", i, function (t) {
                var i = 0;
                "S_OK" == t.responseData.code && t.responseData.stats && (i = t.responseData.stats.unreadMessageCount), e(i)
            })
        },
        setPopFolders: function () {
            function e(e) {
                t.customFolders = $.grep(t.customFolders, function (t, i) {
                    return t.fid != e
                })
            }

            var t = this;
            this.pop = _.filter(this.folders, function (i) {
                var a = t.getPopItem(i.fid);
                return null != a ? (i.encoded || (i.encoded = !0, i.name = $TextUtils.htmlEncode(i.name)), e(i.fid), i.popId = a.popId, i.email = a.email, !0) : void 0
            })
        },
        _resetFolders: function (e) {
            this.folders = e;
            var t = this;
            this.customFolders = _.filter(e, function (e) {
                return e.type === t.foldertype.custom && !t.isPopFolder(e.fid)
            });
            this.customFolders.sort(function (e, t) {
                return e.location - t.location
            });
            this.systemFolders = _.filter(e, function (e) {
                return 7 == e.fid ? !1 : 8 == e.fid ? !1 : 9 == e.fid ? !1 : (12 == e.fid && (e.name = "商讯生活"), e.type === t.foldertype.system || 2 === e.type)
            });
            this.tags = _.filter(e, function (e) {
                return e.type === t.foldertype.tag
            });
            this.setPopFolders();
            this.trigger("change:folders");
        },
        fetchFolderList: function (e, t, i) {
            this.trigger("Process");
            if (!t || !_.isFunction(t)) {
                throw new Error("fetchFolderList 第2个参数必须是函数");
            }
            if (!e || _.isNaN(e)) {
                throw new Error("fetchFolderList 第1个参数必须是number 类型的数字");
            }
            if (!i && this.folders && 0 !== this.folders.length) {
                return void t(this._GetDataByType(e));
            }
            var a = this;
            if (this.get("isFirstLoad")) {
                var s = $App.getConfig("InitData");
                console.log(s["var"].messageInfo.unreadMessageCount);
                var o = {
                    responseData: {
                        code: "S_OK",
                        unreadMessageCount: s["var"].messageInfo.unreadMessageCount,
                        unreadStarCount: s.unreadStarCount,
                        totalStarCount: s.totalStarCount,
                        todoTaskCount: s.todoTaskCount,
                        totalTaskCount: s.totalTaskCount,
                        newBillCount: s.newBillCount,
                        totalSubscriptionCount: s.totalSubscriptionCount,
                        newSubscriptionCount: s.newSubscriptionCount,
                        totalBillCount: s.totalBillCount,
                        billNew1: s.billNew1,
                        billNew2: s.billNew2,
                        billNew3: s.billNew3,
                        billNew4: s.billNew4,
                        billNew5: s.billNew5,
                        billNew6: s.billNew6,
                        billNew7: s.billNew7,
                        billNew8: s.billNew8,
                        unreadrubbishCount: s["var"].folderList[4].stats.unreadMessageCount,
                        "var": s["var"].folderList
                    }
                };
                a.setFoldersData(o);
                a.trigger("ProcessCompleted");
                t(a._GetDataByType(e));
                $App.trigger("InitDataConfig", s);
            } else {
                this.callApi("user:getInitDataConfig", {}, function (i) {
                    var s = i.responseData;
                    setTimeout(function () {
                        var i = s,
                            o = {
                                responseData: {
                                    code: "S_OK",
                                    unreadMessageCount: s["var"].messageInfo.unreadMessageCount,
                                    unreadStarCount: s.unreadStarCount,
                                    totalStarCount: s.totalStarCount,
                                    todoTaskCount: s.todoTaskCount,
                                    totalTaskCount: s.totalTaskCount,
                                    newBillCount: i.newBillCount,
                                    totalSubscriptionCount: s.totalSubscriptionCount,
                                    newSubscriptionCount: s.newSubscriptionCount,
                                    totalBillCount: s.totalBillCount,
                                    billNew1: i.billNew1,
                                    billNew2: i.billNew2,
                                    billNew3: i.billNew3,
                                    billNew4: i.billNew4,
                                    billNew5: i.billNew5,
                                    billNew6: i.billNew6,
                                    billNew7: s.billNew7,
                                    billNew8: s.billNew8,
                                    unreadrubbishCount: s["var"].folderList[4].stats.unreadMessageCount,
                                    "var": s["var"].folderList
                                }
                            };
                        a.setFoldersData(o, i);
                        a.trigger("ProcessCompleted");
                        t(a._GetDataByType(e));
                        $App.trigger("InitDataConfig", s);
                    }, 100)
                })
            }
        },
        setFoldersData: function (e, t) {
            this.set("unreadMessageCount", e.responseData.unreadMessageCount),
            this.set("unreadStarCount", e.responseData.unreadStarCount),
            this.set("totalStarCount", e.responseData.totalStarCount),
            this.set("todoTaskCount", e.responseData.todoTaskCount || 0),
            this.set("totalTaskCount", e.responseData.totalTaskCount || 0);
            if (this.get("isFirstLoad")) {
                this.set("billNew1", e.responseData.billNew1);
                this.set("billNew2", e.responseData.billNew2);
                this.set("billNew3", e.responseData.billNew3);
                this.set("billNew4", e.responseData.billNew4);
                this.set("billNew5", e.responseData.billNew5);
                this.set("billNew6", e.responseData.billNew6);
                this.set("billNew7", e.responseData.billNew7);
                this.set("billNew8", e.responseData.billNew8);
                this.set("totalSubscriptionCount", e.responseData.totalSubscriptionCount);
                this.set("newSubscriptionCount", e.responseData.newSubscriptionCount);
            } else {
                this.set("billNew1", t.billNew1);
                this.set("billNew2", t.billNew2);
                this.set("billNew3", t.billNew3);
                this.set("billNew4", t.billNew4);
                this.set("billNew5", t.billNew5);
                this.set("billNew6", t.billNew6);
                this.set("billNew7", t.billNew7);
                this.set("billNew8", t.billNew8);
                this.set("totalSubscriptionCount", e.responseData.totalSubscriptionCount),
                this.set("newSubscriptionCount", e.responseData.newSubscriptionCount);
            }
            this.set("unreadrubbishCount", e.responseData.unreadrubbishCount);
            this.set("totalBillCount", e.responseData.totalBillCount);
            this.set("newBillCount", e.responseData.newBillCount);
            this.set("passFlag", e.responseData.passFlag || 0);
            this.allFolders = e.responseData["var"];
            this._resetFolders(this.allFolders);
        },
        _GetDataByType: function (e) {
            switch (e) {
                case this.foldertype.system:
                    return this.systemFolders;
                case this.foldertype.tag:
                    return this.tags;
                case this.foldertype.custom:
                    return this.customFolders;
                case this.foldertype.pop:
                    return this.pop;
                default:
                    return this.systemFolders.concat(this.customFolders).concat(this.pop)
            }
        },
        getFolders: function (e) {
            var t = this.foldertype[e];
            return this._GetDataByType(t)
        },
        getFolderType: function (e) {
            var t = this.getFolderById(e);
            if (7 == e || 8 == e || 9 == e || 11 == e || 12 == e) return this.foldertype.system;
            var i = t.type;
            return i == this.foldertype.custom ? this.isPopFolder(e) ? this.foldertype.pop : this.foldertype.custom : i
        },
        getMailCount: function (e) {
            var t = this.getFolders(e), i = {
                messageCount: 0,
                messageSize: 0,
                unreadMessageCount: 0,
                unreadMessageSize: 0,
                attachmentNum: 0
            };
            return $(t).each(function (e, t) {
                i.messageCount += t.stats.messageCount, i.messageSize += t.stats.messageSize, i.unreadMessageCount += t.stats.unreadMessageCount, i.unreadMessageSize += t.stats.unreadMessageSize, i.attachmentNum += t.stats.attachmentNum
            }), i
        },
        isPopFolder: function (e) {
            return null != this.getPopItem(e)
        },
        getPopItem: function (e) {
            var t = null;
            try {
                var i = this.getTop().$App;
                if (i && i.getPopList) {
                    var a = i.getPopList();
                    $(a).each(function (i) {
                        this.fid == e && (t = this)
                    })
                }
            } catch (s) {
            }
            return t
        },
        isTagFolder: function (e) {
            var t = !1;
            return $(this.tags).each(function (i) {
                this.fid == e && (t = !0)
            }), t
        },
        getFolderById: function (e) {
            if (!(e && !_.isNaN(e))) {
                e = 1;
            }
            return _.find(this.folders, function (t) {
                return t.fid === e
            });
        },
        getFolderByFolderName: function (e) {
            if (!e || !_.isString(e)) throw new Error("folderName：传入string类型的参数");
            return _.find(this.folders, function (t) {
                return t.name === e
            })
        },
        getTagByTagName: function (e) {
            if (!e || !_.isString(e)) throw new Error("folderName：传入string类型的参数");
            return _.find(this.tags, function (t) {
                return t.name === e
            })
        },
        messages: {
            forderNameNull: "文件夹名称不能为空",
            forderSpecialStringError: "文件夹中不能包含特殊字符！",
            forderNameOverError: "文件夹名字不能超过16个字母或者8个汉字！",
            folderExist: "文件夹&nbsp;<b>{0}</b>&nbsp;已存在！",
            unvalidRule: "抱歉，您所设置的规则无效，请返回重新设置！",
            clearFolder: "是否清空文件夹?",
            delFolder: "确定要删除该文件夹吗？",
            delTags: "确定要删除该标签吗？",
            folderLocked: '文件夹被加锁，请先<a id="unlockFolder" href="javascript:;" hidefocus="true">解锁</a>',
            notClearFolder: "文件夹不为空，请先清空文件夹",
            mailAddrError: "请输入完整的Email地址，如zhangsan@example.com",
            mailAddrError2: "邮箱地址不正确，邮箱地址如果为多个，请用分号隔开。",
            folderCreateSuccess: "文件夹新建成功",
            folderCreateFail: "文件夹新建失败",
            tagCreateSuccess: "标签新建成功",
            tagCreateFail: "标签新建失败",
            renameFolderSuccess: "文件夹重命名成功",
            renameFolderFail: "文件夹重命名失败",
            renameTagSuccess: "标签重命名成功",
            renameTagFail: "标签重命名失败",
            deleteFolderSuccess: "文件夹删除成功",
            deleteFolderFail: "文件夹删除失败",
            deleteTagSuccess: "标签删除成功",
            deleteTagFail: "标签删除失败",
            moreThan100: "你要创建的收信规则已达到100个的上限，请删除不必要的收信规则后再试",
            clearSuccess: "文件夹清空成功"
        },
        alertWindow: function (e, t) {
            var i = this.getTop().$Msg.alert(e, {
                dialogTitle: "系统提示", icon: "warn", isHtml: !0, onClose: function (e) {
                    t && t.id && t.id.focus(), t && t.status && "rename" == t.status && t.id.select().focus()
                }
            });
            t && t.unlock && i.$el.find("#unlockFolder").click(function (e) {
                top.$App.show("accountLock", { type: "unlock" }), i.close(), e.preventDefault()
            })
        },
        checkTagName: function (e, t) {
            if ("" == e) return "标签名称不能为空";
            var i = /^[^\\\/*$"'<>|\^\&\!\%]+$/;
            if (!e.match(i)) return "标签名称中不能包含特殊字符";
            var a = $T.Utils.getBytes(e);
            if (a > 16) return "标签名称不能超过16个字母或8个汉字";
            if (!t && this.tags.length >= 50) return "最多可以新建50个标签";
            var s = $.grep(this.tags, function (t, i) {
                return t.name.trim() == e.trim()
            });
            return s.length > 0 ? "标签 " + e + " 已存在" : ""
        },
        _checkFolderName: function (e) {
            var t = this, i = /^[^\\\/*$"'<>|\^\&\!\%]+$/, a = $T.Utils.getBytes(e);
            if ("" == e) return t.messages.forderNameNull;
            if (!e.match(i)) return t.messages.forderSpecialStringError;
            if ("我的账单" == e || "我的订阅" == e) return $T.Utils.format(t.messages.folderExist, [e]);
            if (a > 16) return t.messages.forderNameOverError;
            if (this.systemFolders.length + this.customFolders.length >= 100) return "最多可以新建100个文件夹";
            try {
                for (var s = 0; s < t.allFolders.length; s++) if (t.allFolders[s].name.trim() == e.trim() && 5 != t.allFolders[s].type) return $T.Utils.format(t.messages.folderExist, [e])
            } catch (o) {
            }
            return ""
        },
        checkFolderName: function (e, t) {
            var i = this, a = /^[^\\\/*$"'<>|\^\&\!\%]+$/;
            if ("" == e) return this.alertWindow(i.messages.forderNameNull, t), !1;
            if (!e.match(a)) return this.alertWindow(i.messages.forderSpecialStringError, t), !1;
            if ("我的账单" == e || "我的订阅" == e) return this.alertWindow($T.Utils.format(i.messages.folderExist, [e]), t), !1;
            var s = $T.Utils.getBytes(e);
            if (s > 16) return this.alertWindow(i.messages.forderNameOverError, t), !1;
            if (this.systemFolders.length + this.customFolders.length >= 100) return t && "rename" == t.status ? !0 : (this.alertWindow("最多可以新建100个文件夹", t), !1);
            try {
                for (var o = 0; o < i.allFolders.length; o++) if (i.allFolders[o].name.trim() == e.trim() && 5 != i.allFolders[o].type) return this.alertWindow($T.Utils.format(i.messages.folderExist, [e]), t), !1
            } catch (n) {
            }
            return !0
        },
        checkFolderPassword: function (e, t, i) {
            var a = { fid: e, order: "date", desc: 1, start: 1, total: 1, folderPass: t };
            this.callApi("mbox:listMessages", a, function (e) {
                var t = "S_OK" == e.responseData.code;
                i(t);
            })
        },
        isLock: function (e) {
            if (!e || _.isNaN(e)) throw new Error("传入number类型的参数");
            var t = this.getFolderById(e);
            if (t) {
                return !!t.folderPassFlag;
            }
            else {
                return !1;
            }
        },
        _getCurrentOpItem: function (e, t) {
            return _.find(this.allFolders, function (i) {
                return parseInt(e.target.id.replace(t, "")) === i.fid
            })
        },
        _getNewColor: function () {
            var e = [];
            _.each(this.tags, function (t) {
                e.push(t.folderColor)
            });
            var t = _.max(this.tags, function (e) {
                return e.folderColor
            }).folderColor;
            return _.difference(t + 2, e)[0]
        },
        _getMaxFolderLocationId: function () {
            var e = this;
            return _.find(this.customFolders, function (t) {
                return t.type === e.foldertype.custom
            }) ? _.max(this.customFolders, function (e) {
                return e.location
            }).location : 10001
        },
        _getMaxTagLocationId: function () {
            var e = this;
            return _.find(this.tags, function (t) {
                return t.type === e.foldertype.tag
            }) ? _.max(this.tags, function (e) {
                return e.location
            }).location : 30002
        },
        deleteFolder: function (e, t, i) {
            if (!e || _.isNaN(e)) throw new Error("deleteFolder 第1个参数必须是 string 类型的密码");
            var a = this, s = i ? 1 : 4;
            this.trigger("Process"), this.callApi("global:sequential", {
                items: [{
                    func: "mbox:deleteFolders",
                    "var": { fid: e, type: t, moveToFid: s, delete_filter_type: 1 }
                }, { func: "mbox:getAllFolders", "var": { stats: 1, type: 0 } }]
            }, function (t) {
                a.allFolders = t.responseData["var"], a._resetFolders(a.allFolders);
                var i = a.messages.deleteFolderSuccess, s = a.messages.deleteTagSuccess;
                3 == $App.getFolderById(e).type ? top.M139.UI.TipMessage.show(i, { delay: 2e3 }) : top.M139.UI.TipMessage.show(s, { delay: 2e3 }), a.getTop().appView.trigger("reloadFolder", {
                    reload: !0,
                    comefrom: "deleteFolder",
                    fid: e
                })
            })
        },
        addFilterToFolderTag: function (e, t, i, a) {
            void 0 == i && (i = 0);
            var s = this.getFolderType(e), o = {
                opType: "add",
                name: "cx",
                ignoreCase: 1,
                conditionsRelation: 1,
                rulePiority: 1,
                filterId: -1,
                fromType: 1,
                dealType: -1,
                forwardBakup: 1,
                from: t,
                sortId: 1,
                onOff: 0,
                fromRelation: 0,
                folderId: 0
            };
            s == this.foldertype.tag ? (o.dealType = 5, o.attachLabel = e, o.dealHistoryMail = i) : (o.dealType = 2, o.moveToFolder = e, o.dealHistoryMail = i), this.callApi("user:setFilter_139", { items: [o] }, function (e) {
                a(e.responseData)
            })
        },
        addFolder: function (e, t, i, a) {
            var s = this;
            this.maxSortId = "", this.trigger("Process"), this.callApi("global:sequential", {
                items: [{
                    func: "mbox:createUserFolder",
                    "var": {
                        items: [{
                            name: e,
                            type: this.foldertype.custom,
                            parentId: a || 0,
                            pop3Flag: 0,
                            folderPassFlag: 0,
                            location: this._getMaxFolderLocationId() + 1
                        }]
                    }
                }, { func: "mbox:getAllFolders", "var": { stats: 1, type: 0 } }]
            }, function (a) {
                s.allFolders = a.responseData["var"];
                var o = a.responseData.code;
                if ("S_OK" != o) return void s.alertWindow(s.messages.folderCreateFail);
                s._resetFolders(s.allFolders),
                top.appView.trigger("reloadFolder", { reload: !0 }),
                setTimeout(function () {
                    var t = top.$App.checkCustomFolderPopFlag();
                    t = t ? 1 : 0;
                    var i = { pop3Flag: t, type: 4, fid: top.$App.getFolderByFolderName(e).fid };
                    s.callApi("mbox:updateFolders2", i, function (e) {
                        top.appView.trigger("reloadFolder", { reload: !0 })
                    })
                }, 1e3);
                for (var n = s.allFolders.length, r = 0; n > r; r++) if (s.allFolders[r].name == e) {
                    var l = s.allFolders[r].fid;
                    break
                }
                t && s.callApi("user:getFilter_139", { filterFlag: 0, reqFrom: 0 }, function (e) {
                    var i = 0;
                    $.each(e.responseData["var"], function (e, t) {
                        i = Math.max(i, t.sortId)
                    }), s.callApi("user:setFilter_139", {
                        items: [{
                            opType: "add",
                            ignoreCase: 1,
                            forwardBakup: 1,
                            name: "cx",
                            fromType: 1,
                            forwardBakup: 1,
                            dealHistoryMail: 2,
                            conditionsRelation: 1,
                            dealType: 2,
                            moveToFolder: l,
                            from: t,
                            filterId: -1,
                            sortId: i + 1,
                            onOff: 0
                        }]
                    }, function (e) {
                    })
                }), i && i(s.getFolderByFolderName(e))
            })
        },
        addFolders: function (e, t) {
            for (var i = this, a = [], s = 0; s < e.length; s++) a.push({
                func: "mbox:createUserFolder",
                "var": {
                    items: [{
                        name: e[s],
                        type: this.foldertype.custom,
                        parentId: 0,
                        pop3Flag: 0,
                        folderPassFlag: 0,
                        location: this._getMaxFolderLocationId() + (1 + s)
                    }]
                }
            });
            a.push({
                func: "mbox:getAllFolders",
                "var": { stats: 1, type: 0 }
            }), this.callApi("global:sequential", { items: a }, function (e) {
                i.allFolders = e.responseData["var"],
                i._resetFolders(i.allFolders),
                i.getTop().appView.trigger("reloadFolder", { reload: !0 }),
                t && t(e.responseData["var"])
            })
        },
        renameFolder: function (e, t) {
            if (!e || !_.isNumber(e)) throw new Error("renameFolder 第1个参数必须是 number 类型的文件id");
            if (!t || !_.isString(t)) throw new Error("renameFolder 第2个参数必须是 string 类型的文件名称");
            var i = this;
            this.trigger("Process"), this.callApi("global:sequential", {
                items: [{
                    func: "mbox:updateFolders",
                    "var": { items: [{ fid: e, name: t, type: this.foldertype.system, folderPassFlag: 0 }] }
                }, { func: "mbox:getAllFolders", "var": { stats: 1, type: 0 } }]
            }, function (t) {
                i.allFolders = t.responseData["var"];
                var a = t.responseData.code;
                "S_OK" == a ? (i._resetFolders(i.allFolders), top.appView.trigger("reloadFolder", { reload: !0 }), 3 == $App.getFolderById(e).type ? top.M139.UI.TipMessage.show(i.messages.renameFolderSuccess, { delay: 2e3 }) : top.M139.UI.TipMessage.show(i.messages.renameTagSuccess, { delay: 2e3 })) : 3 == $App.getFolderById(e).type ? i.alertWindow(i.messages.renameFolderFail) : i.alertWindow(i.messages.renameTagFail)
            })
        },
        getUnfoldStatus: function (e) {
            var t = $App.getCustomAttrs("unfold");
            if ("" == t) return 0;
            var i = { custom: 0, tag: 1, pop: 2 };
            return Number(t.substr(i[e], 1))
        },
        setUnfoldStatus: function (e, t, i) {
            var a = $App.getCustomAttrs("unfold").split("");
            0 == a.length && (a = [1, 1, 1]);
            var s = { custom: 0, tag: 1, pop: 2 };
            a[s[e]] = t, $App.setCustomAttrs("unfold", a.join(""), i)
        },
        changeFolderStatus: function (e, t) {
            if (!e || !_.isNumber(e)) throw new Error("folderId 第1个参数必须是 number 类型的文件id");
            var i = this;
            this.trigger("Process"), this.callApi("global:sequential", {
                items: [{
                    func: "mbox:updateFolders",
                    "var": { items: [{ fid: e, hideFlag: t, type: 7 }] }
                }, { func: "mbox:getAllFolders", "var": { stats: 1, type: 0 } }]
            }, function (e) {
                i.allFolders = e.responseData["var"], i._resetFolders(i.allFolders), i.getTop().appView.trigger("reloadFolder", { reload: !0 })
            })
        },
        clearFolder: function (e, t) {
            if (!e || !_.isNumber(e)) throw new Error("clearFolder 第1个参数必须是 number 类型的文件id");
            var i = this;
            this.trigger("Process");
            var a = { func: "mbox:updateMessagesAll", "var": { fid: e, newFid: 4, type: "move" } };
            4 == e && (a = {
                func: "mbox:updateMessagesAll",
                "var": { fid: e, type: "delete" }
            }), this.callApi("global:sequential", {
                items: [a, {
                    func: "mbox:getAllFolders",
                    "var": { stats: 1, type: 0 }
                }]
            }, function (e) {
                i.allFolders = e.responseData["var"], i._resetFolders(i.allFolders), i.getTop().appView.trigger("reloadFolder", { reload: !0 }), top.M139.UI.TipMessage.show(i.messages.clearSuccess, { delay: 2e3 }), t && t()
            })
        },
        filterFolder: function (e, t) {
            var i = this;
            this.trigger("Process"), i.callApi("user:getFilter_139", { filterFlag: 0, reqFrom: 0 }, function (a) {
                var s = 0, o = a.responseData["var"];
                return $.each(o, function (e, t) {
                    s = Math.max(s, t.sortId)
                }), e[0].sortId = s + 1, t && t(o) ? void i.callApi("global:sequential2", {
                    items: [{
                        func: "user:setFilter_139",
                        "var": { items: e }
                    }]
                }, function (e) {
                    i.callApi("mbox:getAllFolders", { stats: 1, type: 0 }, function (e) {
                        i.allFolders = e.responseData["var"], i._resetFolders(i.allFolders), i.getTop().appView.trigger("reloadFolder", { reload: !0 })
                    })
                }) : !1
            })
        },
        resetPosition: function (e, t, i) {
            var a = this, s = [];
            $(this.customFolders).each(function (e, t) {
                s.push(t.fid)
            }), console.log("原始fidList:" + s), console.log(e + "---" + t);
            var o = s.splice(e, 1);
            e > t && (t += 1), s.splice(t, 0, o[0]), console.log("排序后fidList：" + s);
            var n = [], r = 10001;
            $(s).each(function (e, t) {
                n.push({ func: "mbox:updateFolders", "var": { items: { fid: t, type: 2, location: r + 10 * e } } })
            }), n.push({
                func: "mbox:getAllFolders",
                "var": { stats: 1, type: 0 }
            }), console.log(n), this.callApi("global:sequential", { items: n }, function (e) {
                a.allFolders = e.responseData["var"], a._resetFolders(a.allFolders), a.getTop().appView.trigger("reloadFolder", { reload: !0 }), i && i(e.responseData["var"])
            })
        },
        resetPosition2: function (e, t, i) {
            var a = this, s = [];
            $(this.tags).each(function (e, t) {
                s.push(t.fid)
            });
            var o = s.splice(e, 1);
            e > t && (t += 1), s.splice(t, 0, o[0]);
            var n = [], r = 30001;
            $(s).each(function (e, t) {
                n.push({ func: "mbox:updateFolders", "var": { items: { fid: t, type: 2, location: r + 10 * e } } })
            }), n.push({
                func: "mbox:getAllFolders",
                "var": { stats: 1, type: 0 }
            }), console.log(n), this.callApi("global:sequential", { items: n }, function (e) {
                a.allFolders = e.responseData["var"], a._resetFolders(a.allFolders), a.getTop().appView.trigger("reloadFolder", { reload: !0 }), i && i(e.responseData["var"])
            })
        },
        getInboxSub: function () {
            var e = $App.getCustomAttrs("inboxSub");
            return e ? (this.set("inboxSub", e.split(",")), this.get("inboxSub")) : []
        },
        setInboxSub: function (e, t) {
            var i = this.get("inboxSub");
            i || (i = []), t ? (i.push(e), BH("show_inboxSub_on")) : ($(i).each(function (t, a) {
                a == e && i.splice(t, 1)
            }), BH("show_inboxSub_off")), $App.setCustomAttrs("inboxSub", i.join(","), function () {
                $App.trigger("reloadFolder", { reload: !0 })
            })
        },
        getAllColor: function () {
            return ["#FF0000", "#FF9900", "#C19A00", "#00A301", "#009898", "#CCCC99", "#FF6633", "#CC6666", "#AD33AD", "#9900FF", "#99CC66", "#66CCCC", "#3399FF", "#2B8787", "#855C85", "#6699FF", "#3385D6", "#335CAD", "#5F27B3", "#262ED7", "#D5D2C0", "#B5BFCA", "#999999", "#666666", "#333333", "#729C3B", "#58A8B4", "#5883BF", "#6D72BA", "#E3A325", "#DA8A22", "#B34731", "#BB4C91", "#995AAE", "#CC0000", "#FCD468", "#FF9966", "#CC99CC", "#CC9999", "#AD855C"]
        },
        getColor: function (e) {
            var t = this.getAllColor();
            return "undefined" != typeof e ? (e %= t.length, 0 > e ? e = 0 : e >= t.length && (e = t.length - 1), t[e]) : t
        },
        changeFolderColor: function (e, t) {
            if (!e || !_.isNumber(e)) throw new Error("changeFolderColor 第1个参数必须是 number 类型的文件id");
            var i = this;
            this.trigger("Process"), this.callApi("global:sequential", {
                items: [{
                    func: "mbox:updateFolders",
                    "var": { items: [{ fid: e, type: this.foldertype.tag, folderColor: t }] }
                }, { func: "mbox:getAllFolders", "var": { stats: 1, type: 0 } }]
            }, function (e) {
                i.allFolders = e.responseData["var"], i._resetFolders(i.allFolders), i.getTop().appView.trigger("reloadFolder", { reload: !0 })
            })
        },
        createSpecialTag: function () {
            var e = $App.getCustomAttrs("specialTag");
            if (!e && ($App.setCustomAttrs("specialTag", 1), this.tags.length < 50)) for (var t = [{
                    name: this.specialtagNames.important,
                    color: 12
            }, {
                name: this.specialtagNames.urgent,
                color: 0
            }], i = 0; i < t.length; i++) this.getTagByTagName(t[i].name) || this.addTag(t[i].name, t[i].color)
        },
        addTag: function (e, t, i, a) {
            if (!e || !_.isString(e)) throw new Error("addTag 第2个参数必须是 number 类型的颜色id");
            var s = this;
            this.trigger("Process"), void 0 == t && (t = this._getNewColor());
            var o = this._getMaxTagLocationId() + 50;
            e == this.specialtagNames.important ? o = 3e4 : e == this.specialtagNames.urgent && (o = 30001), this.callApi("global:sequential", {
                items: [{
                    func: "mbox:createUserFolder",
                    "var": {
                        items: [{
                            location: o,
                            name: e,
                            parentId: 0,
                            pop3Flag: 0,
                            folderPassFlag: 0,
                            folderColor: t,
                            type: 5
                        }]
                    }
                }, { func: "mbox:getAllFolders", "var": { stats: 1, type: 0 } }]
            }, function (t) {
                if (s.allFolders = t.responseData["var"], s._resetFolders(s.allFolders), i) {
                    var o = s.getTagByTagName(e);
                    if (o) {
                        var n = o.fid;
                        s.callApi("user:getFilter_139", { filterFlag: 0, reqFrom: 0 }, function (e) {
                            var t = 0;
                            $.each(e.responseData["var"], function (e, i) {
                                t = Math.max(t, i.sortId)
                            }), s.callApi("user:setFilter_139", {
                                items: [{
                                    opType: "add",
                                    ignoreCase: 1,
                                    forwardBakup: 1,
                                    name: "cx",
                                    fromType: 1,
                                    dealType: 5,
                                    attachLabel: n,
                                    conditionsRelation: 1,
                                    dealHistoryMail: 2,
                                    from: i,
                                    filterId: -1,
                                    sortId: t + 1,
                                    onOff: 0
                                }]
                            }, function (e) {
                            })
                        })
                    }
                }
                var r = s.messages.tagCreateSuccess;
                M139.UI.TipMessage.show(r, { delay: 3e3 }), s.getTop().appView.trigger("reloadFolder", { reload: !0 }), a && a(s.getTagByTagName(e))
            })
        },
        getTagsById: function (e) {
            for (var t = [], i = 0; i < e.length; i++) {
                var a = e[i], s = $.grep(this.tags, function (e, t) {
                    return e.fid == a
                });
                s.length > 0 && t.push(s[0])
            }
            return t
        },
        getFolderDropItems: function (e) {
            function t(e) {
                var t = $App.getFolders(e), i = [];
                return $(t).each(function (e, t) {
                    var a = t.name, s = t.folderPassFlag, o = { text: a, data: t.fid, lock: s };
                    s && 1 == s && (a += '<i class="i_lock ml_5 mb_5"></i>', o = {
                        html: a,
                        data: t.fid,
                        lock: s
                    }), i.push(o)
                }), i
            }

            var i = [];
            e && e.showAll && (i = [{ text: "全部文件夹", data: 0 }, { isLine: !0 }]);
            var a = i.concat(t("system")), s = t("custom"), o = t("pop");
            return s[0] && a.push({ isLine: !0 }), a = a.concat(s), o[0] && a.push({ isLine: !0 }), a = a.concat(o), e && e.showAdd && (a = a.concat([{ isLine: !0 }, {
                text: "添加文件夹...",
                data: -2
            }])), a
        },
        getTagItem: function (e) {
            var t = $App.getFolders("tag"), i = [];
            return e && e.showNoLimit && (i = [{ html: "不限", labelId: -1 }]), $(t).each(function (e, t) {
                var a = "重要任务" == t.name, s = $App.getTagColor(t.folderColor), o = ['<span class="text"><span class="tagMin', a ? " tagJJ" : "", '" style="border-color:', s, '"><span class="tagBody" style="background-color:', s, ";border-color:", s, , '">', a ? ' <i class="i_jj"></i>' : "", '</span></span><span class="tagText">', t.name, "</span></span>"].join("");
                i.push({ html: o, command: "tag", labelId: t.fid })
            }), e && e.showAdd && (i = i.concat([{ html: "新建标签...", labelId: -2 }])), i
        },
        renderFunctions: {
            getMailCount: function () {
                var e = this.DataRow.stats.unreadMessageCount;
                return e > 0 ? "<var class='fw_b'>(" + e + ")</var>" : ""
            },
            getTitle: function () {
                var e = this.DataRow;
                return e.stats.unreadMessageCount > 0 ? $T.Utils.format("{0}封未读邮件", [e.stats.unreadMessageCount]) : $T.Utils.format("{0}", [$T.Html.encode(e.name)])
            },
            getStyle: function () {
                return this.DataRow.stats.unreadMessageCount > 0, ""
            },
            getSpecialTag: function (e) {
                var t = "重要任务" == this.DataRow.name;
                return t ? 1 == e ? " tagJJ" : '<i class="i_jj"></i>' : ""
            },
            getEmail: function () {
                var e = this.DataRow, t = e.fid, i = $App.getPopList(), a = $.grep(i, function (i, a) {
                    return i.fid == t ? (e.email = i.email, !0) : !1
                });
                return a && a.length > 0 ? a[0].email : e.name
            },
            getLock: function () {
                return this.DataRow.folderPassFlag ? '<i class="i_lock mr_5"></i>' : ""
            },
            getColor: function () {
                var e = Number(this.DataRow.folderColor);
                return this.model.getColor(e)
            },
            maxLength: function (e, t) {
                return $T.Html.encode($T.Utils.getTextOverFlow2(e, Number(t), !0))
            }
        }
    })
}),

//M2012.Folder.View.SetMore
M139.namespace("M2012.Folder.View", {
    SetMore: M139.View.ViewBase.extend({
        el: "body",
        events: { "click #barmorelink": "finalLeftBarsetting" },
        updateTemplate: ["<object>", '<array name="mailnotify">', "<object>", '<int name="fromType">1</int>',
            '<boolean name="enable">{enable}</boolean>', '<int name="notifytype">1</int>',
            '<boolean name="msgConverge">{msgConverge}</boolean>', '<boolean name="syncDy">{currentsyncDy}</boolean>',
            '<array name="timerange">{timerange}</array>', '<boolean name="supply">false</boolean>',
            '<string name="notifystyle">{notifystyle}</string>', '<array name="updateEmaillist"></array>',
            "</object>", "</array>", "</object>"].join(""),
        setTextinfo: {
            theme: ["稍后处理", "VIP邮件", "星标邮件", "订阅邮件", "移动账单", "生活服务", "通知动态", "注册激活",
                "广告邮件", "我的邀请", "垃圾邮件", "潮州移动", "行程邮件", "银行账单", "电子发票", "企业服务号"],
            des: ["包含用户自主设置稍后处理的任务邮件,可在邮件列表中点稍后处理按钮设置该类标签。",
                "包含用户自主设置的VIP联系人发来的邮件，可在通讯录中将重要联系人添加至VIP分组。",
                "包含用户自主设置的标签邮件，可在邮件列表中点击星标设置该标签。", "包含云邮局订阅的杂志、报刊等最新的资讯和新闻内。",
                "包含中国移动下发的话费账单、积分账单、流量账单和趣味账单邮件。",
                "包含和生活相关的水费账单、电费账单、燃气账单、交通违章信息、账单生活以及民生政企（如：社区服务，便民服务）的邮件。",
                "包含系日历提醒，网盘提醒、生日提醒、密码变更提醒、用户积分、新用户提醒等系统邮件。", "包含中各门户网站的密码邮件、注册邮件、激活邮件等，如：139邮箱忘记密码邮件提醒。", "包含移动业务相关（内域）的查询、推广、优惠、活动以及外域的关于促销、推广、优惠等营销电子邮件。", "包含通过写信页发起邀请功能发送的邮件。", "包含系统判别为对用户骚扰的未经主动请求的邮件，如虚假广告、钓鱼网站、成人广告、赚钱信息等不良和恶意信息。", "包含潮州移动下发的话费账单、运营活动等邮件。", "中汇聚航班确认、酒店预订、车票预订等旅行相关的电子邮件。", "包含汇聚各银行账单邮件信息，如信用卡账单、消费提醒等邮件。", "足不出户，查收电子发票，支持打印报销，方便快捷。", "中聚合了机票、酒店、火车票、银行等行业各企业邮件信息。"]
        },
        setDialog: {
            nosmstpl: ['<div class="boxIframeMain">', '<div class="boxIframeText MB_Content wTipCont personal-set-box">', '<div class="norTips">', '<dl class="norTipsContent mb_3">', '<dt class="norTipsLine personal-set-title"><strong>{0}</strong><span class="c_999 fz_12">{1}</span></dt>', '<dd class="norTipsLine mt_15"><p>在左侧导航栏始终显示入口</p><a href="javascript:" class="fr"><label class="" depshow="" style=""></label></a></dd>', "</dl>", "</div>", "</div>", "</div>"].join(""),
            hassmstpl: ['<div class="boxIframeMain">', '<div class="boxIframeText MB_Content wTipCont personal-set-box">', '<div class="norTips">', '<dl class="norTipsContent mb_3">', '<dt class="norTipsLine personal-set-title"><strong>{0}</strong><span class="c_999 fz_12">{1}</span></dt>', '<dd class="norTipsLine mt_15"><p>在左侧导航栏始终显示入口</p><a href="javascript:" class="fr"><label class="" depshow="" style=""></label></a></dd>', '<dd class="norTipsLine mt_8"><p>邮件到达短信通知<span class="fz_12 c_999">{2}</span></p><a href="javascript:" class="fr"><label class="closingbtn" smstip_{3}="" order="{3}"  style=""></label></a></dd>', "</dl>", "</div>", "</div>", "</div>"].join(""),
            booksmstpl: ['<div class="boxIframeMain">', '<div class="boxIframeText MB_Content wTipCont personal-set-box">', '<div class="norTips">', '<dl class="norTipsContent mb_3">', '<dt class="norTipsLine personal-set-title"><strong>{0}</strong><span class="c_999 fz_12">{1}</span></dt>', '<dd class="norTipsLine mt_15"><p>在左侧导航栏始终显示入口</p><a href="javascript:" class="fr"><label class="" depshow="" style=""></label></a></dd>', '<dd class="norTipsLine mt_8"><p>邮件到达短信通知<span class="fz_12 c_999"></span></p><a href="javascript:" class="fr"><label class="closingbtn" syncDy="" style=""></label></a></dd>', "</dl>", "</div>", "</div>", "</div>"].join("")
        },
        setmoreTpl: ['<div class="boxIframeText MB_Content wTipCont personal-set-box" style="height:275px; overflow:auto">', '<div class="norTips">', '<dl class="norTipsContent" id="swtichList">', '<dt class="norTipsLine personal-set-title"><span class="c_999 fz_12">在左侧导航栏始终显示邮件入口</span></dt>', '<dd class="norTipsLine mt_3"><p>稍后处理</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>VIP邮件</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>星标邮件</p><a href="javascript:" class="fr" ><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>订阅邮件</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>移动账单</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>生活服务</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>通知动态</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>注册激活</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>广告邮件</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>我的邀请</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>垃圾邮件</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>潮州移动</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>行程邮件</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>银行账单</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>电子发票</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', '<dd class="norTipsLine mt_3"><p>企业服务号</p><a href="javascript:" class="fr"><label class="" style=""></label></a></dd>', "</dl>", "</div>", "</div>"].join(""),
        initialize: function (e) {
            this.model = e.model;
            this.view = e.view;
        },
        renderEach: function (e) {
            var t = this;
            t.getNotifyRender();
            var i = $.extend({
                buttons: ["确定", "取消"],
                dialogTitle: "个性化设置",
                width: "435px"
            }, {}), a = t.setDialog.nosmstpl, s = ["left_inbox", "remindM_set", "vipM_set", "starM_set", "subscribeM_set", "listM_set", "lifeM_set", "noticeM_set", "adsM_set", "meetingM_set", "rubM_set", "left_chaoMobile", "back_xingcheng", "back_bankbill", "invoice_myapp", "Official_home"];
            switch (top.BH(s[e]), e) {
                case "2":
                    a = t.setDialog.hassmstpl, a = $T.Utils.format(a, [t.setTextinfo.theme[1], t.setTextinfo.des[1], "", ""]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachSave(e, 2, !0)
                    }, function () {
                    }, i);
                    break;
                case "4":
                    a = t.setDialog.booksmstpl, a = $T.Utils.format(a, [t.setTextinfo.theme[3], t.setTextinfo.des[3]]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachBookSave(e, 4, !0)
                    }, function () {
                    }, i);
                    break;
                case "5":
                    a = t.setDialog.hassmstpl, a = $T.Utils.format(a, [t.setTextinfo.theme[4], t.setTextinfo.des[4], "", 31]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachSave(e, 5, !0)
                    }, function () {
                    }, i);
                    break;
                case "6":
                    a = t.setDialog.hassmstpl, a = $T.Utils.format(a, [t.setTextinfo.theme[5], t.setTextinfo.des[5], "", 32]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachSave(e, 6, !0)
                    }, function () {
                    }, i);
                    break;
                case "7":
                    var a = t.setDialog.hassmstpl;
                    a = $T.Utils.format(a, [t.setTextinfo.theme[6], t.setTextinfo.des[6], "", 33]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachSave(e, 7, !0)
                    }, function () {
                    }, i);
                    break;
                case "9":
                    var a = t.setDialog.hassmstpl;
                    a = $T.Utils.format(a, [t.setTextinfo.theme[8], t.setTextinfo.des[8], "（仅支持内域广告邮件的短信通知的控制）", 34]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachSave(e, 9, !0)
                    }, function () {
                    }, i);
                    break;
                case "15":
                    var a = t.setDialog.hassmstpl;
                    a = $T.Utils.format(a, [t.setTextinfo.theme[14], t.setTextinfo.des[14], "", 35]), t.setEachDiag = top.$Msg.showHTML(a, function (e) {
                        t.clickEachSave(e, 15, !0)
                    }, function () {
                    }, i);
                    break;
                default:
                    a = $T.Utils.format(a, [t.setTextinfo.theme[e - 1], t.setTextinfo.des[e - 1]]), t.setEachDiag = top.$Msg.showHTML(a, function (i) {
                        t.clickEachSave(i, e, !1)
                    }, function () {
                    }, i)
            }
            t.setEachDiag.setBottomTip("<a href='javascript:void(0)' class='ml_15 fz_14 bibText' id='setmore' title=''>设置更多</a>"), t.setEachDiag.$el.find("#setmore").click(function () {
                top.BH("moreshow_set"), t.setEachDiag.close(), t.rendersetMore()
            }), t.depshowInit(e), t.swtichIndependBtn()
        },
        getNotifyRender: function () {
            var e = this;
            top.M139.RichMail.API.call("user:getMailNotify", {}, function (t) {
                var i = t.responseData;
                if (!i || "S_OK" != i.code) {
                    top.M139.UI.TipMessage.error("获取邮件到达短信提醒失败", { delay: 1500 });
                    return !1;
                }
                var a = i["var"][0],
                    s = a.enable,
                    o = a.syncDy,
                    n = a.notifystyle,
                    r = n.split(","),
                    l = r.length;
                e.timerange = "";
                for (var c = 0; c < a.timerange.length; c++) {
                    e.timerange += '<object><int name="begin">' + a.timerange[c].begin + '</int><int name="end">'
                        + a.timerange[c].end + '</int><string name="weekday">' + a.timerange[c].weekday + "</string></object>";
                }
                e.mailnotifyopions = { msgConverge: a.msgConverge };
                e.model.set("enable", a.enable);
                e.model.set("notifystyle", a.notifystyle);
                e.model.set("syncDy", a.syncDy);
                if (s) {
                    o ? e.setEachDiag.$el.find("label[syncDy]").removeClass("closingbtn").addClass("openingbtn").attr("syncDy", !0) : e.setEachDiag.$el.find("label[syncDy]").removeClass("openingbtn").addClass("closingbtn").attr("syncDy", !1);
                    for (var c = 0; l > c; c++) {
                        var d = e.setEachDiag.$el.find("label[smstip_" + r[c] + "]").length;
                        if (d > 0) {
                            e.setEachDiag.$el.find("label[smstip_" + r[c] + "]").removeClass("closingbtn").addClass("openingbtn").attr("smstip_" + r[c], r[c]);
                            break
                        }
                    }
                } else e.setEachDiag.$el.find("label[order],label[syncDy]").removeClass("openingbtn").addClass("closingbtn")
            })
        },
        clickEachSave: function (e, t, i) {
            var a = this, i = i, s = $App.getCustomAttrs("folderSet"), o = $(e.event.currentTarget).parents(".boxIframe"), n = $(o.find("label[depshow]")).attr("depshow"), r = s.split("");
            r.splice(t - 1, 1, n);
            var l = r.join("");
            i ? (a.saveMailNotifyDate(e), $App.setCustomAttrs("folderSet", l, function (e) {
                if ("S_OK" == e.code) {
                    $App.trigger("reloadFolder", { reload: !0 });
                    var t = $App.getCurrentTab().element;
                    $(t).find("#inboxHeader").is(":hidden") && $(t).find("#toolbar_div").hide()
                } else top.M139.UI.TipMessage.error("设置失败", { delay: 1500 })
            })) : $App.setCustomAttrs("folderSet", l, function (e) {
                if ("S_OK" == e.code) {
                    top.M139.UI.TipMessage.show("设置成功", { delay: 1500 }), $App.trigger("reloadFolder", { reload: !0 });
                    var t = $App.getCurrentTab().element;
                    $(t).find("#inboxHeader").is(":hidden") && $(t).find("#toolbar_div").hide()
                } else top.M139.UI.TipMessage.error("设置失败", { delay: 1500 })
            })
        },
        rendersetMore: function () {
            function e(e) {
                "1" == a[e] ? t.setMoreDiag.$el.find("label").eq(Number(e)).removeClass("closingbtn").addClass("openingbtn").attr("on_off", "1") : t.setMoreDiag.$el.find("label").eq(Number(e)).removeClass("openingbtn").addClass("closingbtn").attr("on_off", "0"), 11 != e && 12 != e && 13 != e || t.setMoreDiag.$el.find("dd").eq(Number(e)).hide(), 4 == e && $User.isChinaMobileUser() && t.setMoreDiag.$el.find("dd").eq(Number(e)).hide()
            }

            var t = this, i = $App.getCustomAttrs("folderSet"), a = i.split("");
            t.setMoreDiag = top.$Msg.showHTML(t.setmoreTpl, t.clickSave, function () {
            }, { dialogTitle: "导航栏入口设置", buttons: ["确定", "取消"], width: "435px" });
            for (var s = a.length, o = 0; s >= o; o++) e(o);
            t.swtichBtn()
        },
        depshowInit: function (e) {
            var t = this, i = $App.getCustomAttrs("folderSet"), a = i.split("");
            "1" == a[e - 1] ? t.setEachDiag.$el.find("label[depshow]").removeClass("closingbtn").addClass("openingbtn").attr("depshow", "1") : t.setEachDiag.$el.find("label[depshow]").removeClass("openingbtn").addClass("closingbtn").attr("depshow", "0")
        },
        swtichBtn: function () {
            var e = this;
            e.setMoreDiag.$el.find("label").css("cursor", "pointer"), e.setMoreDiag.$el.find("label").click(function () {
                $(this).hasClass("openingbtn") ? ($(this).removeClass("openingbtn").addClass("closingbtn"), $(this).attr("on_off", "0")) : ($(this).removeClass("closingbtn").addClass("openingbtn"), $(this).attr("on_off", "1"))
            })
        },
        swtichIndependBtn: function () {
            var e = this;
            e.setEachDiag.$el.find("label").css("cursor", "pointer"), e.setEachDiag.$el.find("label[order]").click(function () {
                var e = $(this).attr("order"), t = Number(e);
                $(this).hasClass("openingbtn") ? $(this).removeClass("openingbtn").addClass("closingbtn").attr("smstip_" + e, "") : $(this).removeClass("closingbtn").addClass("openingbtn").attr("smstip_" + e, t)
            }), e.setEachDiag.$el.find("label[syncDy]").click(function (e) {
                $(this).hasClass("openingbtn") ? $(this).removeClass("openingbtn").addClass("closingbtn").attr("syncDy", !1) : $(this).removeClass("closingbtn").addClass("openingbtn").attr("syncDy", !0)
            }), e.setEachDiag.$el.find("label[depshow]").click(function () {
                $(this).hasClass("openingbtn") ? ($(this).removeClass("openingbtn").addClass("closingbtn"), $(this).attr("depshow", "0")) : ($(this).removeClass("closingbtn").addClass("openingbtn"), $(this).attr("depshow", "1"))
            })
        },
        clickSave: function (e) {
            for (var t = [], i = $(e.event.currentTarget).parents(".boxIframe"), a = i.find("label[on_off]").length, s = 0; a > s; s++) t.push(Number($(i.find("label[on_off]")[s]).attr("on_off")));
            folderSet = t.join(""), $App.setCustomAttrs("folderSet", folderSet, function (e) {
                "S_OK" == e.code ? (top.M139.UI.TipMessage.show("左侧显示入口设置成功", { delay: 1500 }), $App.trigger("reloadFolder")) : top.M139.UI.TipMessage.error("左侧显示入口设置失败", { delay: 1500 })
            })
        },
        saveBookNotifyDate: function (e) {
            var t = this, i = $(e.event.currentTarget).parents(".boxIframe"), a = $(i.find("label[syncDy]")).attr("syncDy"), s = t.model.get("enable");
            "false" == a && (a = !1), "true" == a && (a = !0), !s && a && (t.model.set("enable", !0), t.model.set("syncDy", !0), t.model.set("notifystyle", null));
            var o = t.model.get("notifystyle");
            "7" == o && 0 == a && 1 == t.model.get("enable") && (a = !0);
            var n = top.M139.Text.Utils.format(t.updateTemplate, {
                enable: t.model.get("enable"),
                currentsyncDy: a,
                notifystyle: t.model.get("notifystyle"),
                timerange: t.timerange,
                msgConverge: t.mailnotifyopions.msgConverge
            });
            top.M139.RichMail.API.call("user:updateMailNotify", n, function (e) {
                var i = e.responseData;
                i && "S_OK" == i.code ? "7" == o && 1 == t.model.get("enable") ? (top.$App.trigger("notifySettingChange"), top.M139.UI.TipMessage.show("至少选择一种邮件到达短信通知 , 左侧显示入口设置成功", { delay: 3e3 })) : (top.$App.trigger("notifySettingChange"), top.M139.UI.TipMessage.show("设置成功", { delay: 1500 })) : top.M139.UI.TipMessage.error("设置失败", { delay: 1500 })
            })
        },
        clickEachBookSave: function (e, t, i) {
            var a = this, i = i, s = $App.getCustomAttrs("folderSet"), o = $(e.event.currentTarget).parents(".boxIframe"), n = $(o.find("label[depshow]")).attr("depshow"), r = s.split("");
            r.splice(t - 1, 1, n);
            var l = r.join("");
            i && (a.saveBookNotifyDate(e), $App.setCustomAttrs("folderSet", l, function (e) {
                if ("S_OK" == e.code) {
                    $App.trigger("reloadFolder");
                    var t = $App.getCurrentTab().element;
                    $(t).find("#inboxHeader").is(":hidden") && $(t).find("#toolbar_div").hide()
                } else top.M139.UI.TipMessage.error("设置失败", { delay: 1500 })
            }))
        },
        saveMailNotifyDate: function (e) {
            var t = this, i = t.model.get("enable"),
                a = $(e.event.currentTarget).parents(".boxIframe"),
                s = $(a.find("label[order]")).attr("order"),
                o = $(a.find("label[order]")).attr("smstip_" + s),
                n = 0 !== o.length;
            if (!i && n) {
                t.model.set("enable", !0);
                t.model.set("notifystyle", o);
                t.model.set("syncDy", !1);
            }
            for (var r = o.split(","), l = t.model.get("notifystyle"), c = l.split(","), d = c.concat(r), p = _.uniq(d), m = p.join(","), u = c.length, h = 0; u > h; h++) {
                var f = c[h] == s;
                if (f) {
                    if (n) {
                        r = o.split(",");
                        l = t.model.get("notifystyle");
                        c = l.split(",");
                        d = c.concat(r);
                        p = _.uniq(d);
                        m = p.join(",");
                    } else {
                        r = o.split(",");
                        l = t.model.get("notifystyle");
                        c = l.split(",");
                        d = c.concat(r);
                        p = _.without(d, s, "");
                        m = p.join(",");
                    }
                    break
                }
                f || (n ? (r = o.split(","), l = t.model.get("notifystyle"), c = l.split(","), d = c.concat(r), p = _.uniq(d), m = p.join(",")) : (r = o.split(","), l = t.model.get("notifystyle"), m = l))
            }
            var g = top.M139.Text.Utils.format(t.updateTemplate, {
                enable: t.model.get("enable"),
                currentsyncDy: t.model.get("syncDy"),
                notifystyle: m || t.model.get("notifystyle"),
                timerange: t.timerange,
                msgConverge: t.mailnotifyopions.msgConverge
            });
            top.M139.RichMail.API.call("user:updateMailNotify", g, function (e) {
                var i = e.responseData;
                if (i && "S_OK" == i.code) {
                    top.$App.trigger("notifySettingChange");
                    top.$App.initMainInfoData();
                    if (0 == m.length && 0 == t.model.get("syncDy") && 1 == t.model.get("enable")) {
                        m = t.model.get("notifystyle");
                        top.M139.UI.TipMessage.show("至少选择一种邮件到达短信通知 , 左侧显示入口设置成功", { delay: 3e3 });
                    } else {
                        top.M139.UI.TipMessage.show("设置成功", { delay: 1500 });
                    }
                } else {
                    top.M139.UI.TipMessage.error("设置失败", { delay: 1500 });
                }
            })
        },
        finalLeftBarsetting: function () {
            var e = this;
            top.BH("barmorelink_set"), e.rendersetMore()
        }
    })
}),

//M2012.Folder.View.FolderCustom
M139.namespace("M2012.Folder.View", {
    FolderCustom: Backbone.View.extend({
        el: "#customfolder_list",
        template: ['<a bh="left_foldermanager" hidefocus id="folder_inbox" href="javascript:;"  >', '<i name="i_unfold" class="triangle t_blackRight" bh="left_unfoldInbox"></i>', "<span>文件夹</span>", '<i class="i_add" id="btn_addfolder" style="display:none" bh="left_createFolder" title="添加文件夹"></i>', '<i class="i_set" id="btn_setCustom" style="display:none" bh="left_inboxSetting" onClick="return false" title="文件夹个性化设置"></i>', "</a>", '<div id="folder_custom" style="display:none">', '<ul class="small" style="display:block;">', "<!--item start-->", '<li fid="$fid"><a hidefocus href="javascript:void(0)" fid="$fid" title="@getTitle()" @getStyle() >@getLock() @maxLength(name,10)', "@getMailCount()</a></li>", "<!--item end-->", "</ul>", "</div>"].join(""),
        events: {
            "click #folder_custom li[fid]": "folderClick",
            "click #btn_addfolder": "addFolder",
            "click #btn_setCustom": "openSetting",
            "mouseover #folder_inbox": "showSetbtn",
            "mouseout #folder_inbox": "hideSetbtn",
            "click #folder_inbox": "unfold"
        },
        initialize: function (e) {
            var t = this;
            this.model = e.model,
            this.model.on("folderDataChange", function () {
                M139.Timing.waitForReady('$App.getConfig("PopList")', function () {
                    setTimeout(function () {
                        t.el = "#customfolder_list";
                        t.render()
                    }, 10)
                })
            })
        },
        render: function () {
            var e = this;
            this.getDataSource(function (t) {
                var i = new Repeater(e.template);
                i.Functions = e.model.renderFunctions;
                var a = i.DataBind(t);
                $(e.el).html(a);
                var s = e.model.getInboxSub(),
                    o = $("#li_sendedbox");
                $("#folder_main").find("li[isCustom]").remove(),
                $(s).each(function (e, t) {
                    var i = $("#folder_custom").find("li[fid=" + t + "]");
                    i.attr("isCustom", 1), i.find("a").addClass("pl_34"), o.before(i)
                });
                var n = e.model.getMailCount("custom"),
                    r = n.unreadMessageCount > 0 ? $T.Utils.format("{0}封未读邮件", [n.unreadMessageCount]) : "文件夹", l = $("#folder_inbox");
                if (l.attr("title", r), n.unreadMessageCount > 0) {
                    var c = '<var class="fw_b">(' + n.unreadMessageCount + ")</var>";
                    l.find("span").html(String.format("文件夹{0}", [c]))
                }
                var d = $("#folder_inbox").find("[name=i_unfold]");
                0 == t.length ? d.remove() : e.model.get("unfoldCustom") && d.hasClass("t_blackRight") && e.unfold(!0),
                e.renderFileMail()
            })
        },
        showSetbtn: function () {
            $("#btn_addfolder, #btn_setCustom").show()
        },
        hideSetbtn: function () {
            $("#btn_addfolder, #btn_setCustom").hide()
        },
        renderFileMail: function () {
            var e = 0, t = null, i = _.filter(top.$App.getFolders(), function (e) {
                return 10 === e.parentId
            }), a = '<li fid="10" class="return-indent"><a hidefocus fid="10" href="javascript:;"><i class="triangle t_blackDown"></i>归档邮件</a><ul class="return-indent-small"></ul></li>';
            i.length > 0 && ($("#folder_custom>ul").prepend(a), _.each(i, function (i) {
                e += i.stats.unreadMessageCount, t = $("#folder_custom").find("li[fid=" + i.fid + "]"), $("#folder_custom .return-indent-small").append(t)
            }), $("#folder_custom a[fid='10']").attr("title", String.format("{0}封未读邮件", [e])))
        },
        renderCustomTips: function (e) {
            var t = e.concat();
            if (t = $.grep(t, function (e) {
                return e.stats.unreadMessageCount > 0
            }), 0 != t.length) {
                t.sort(function (e, t) {
                    return t.stats.unreadMessageCount - e.stats.unreadMessageCount
                });
                var i = !1;
                t.length > 4 && (t = t.slice(0, 4), i = !0);
                var a = ['<div id="tip_inbox" style="width:170px;"><!--item start-->', '<div><a fid="$fid" href="javascript:appView.showMailbox($fid)">@getName(name)($stats.unreadMessageCount)</a>', "</div><!--item end-->", i ? "......" : "", "</div>"].join(""), s = new Repeater(a);
                s.Functions = {
                    getName: function (e) {
                        return $T.Utils.getTextOverFlow2(e, Number(12), !0)
                    }
                };
                var o = s.DataBind(t);
                return o
            }
        },
        pushOtherFolder: function (e) {
            function t(t) {
                var i = !1;
                return $.grep(e, function (e, a) {
                    return t == e.fid ? void (i = !0) : void 0
                }), i
            }

            for (var i = this.model.getFolders("system"), a = [6, 10, 12, 11], s = 0; s < i.length; s++) {
                var o = i[s];
                $.inArray(o.fid, a) >= 0 && !t(o.fid) && (e.push(o), i.splice(s, 1), s--)
            }
        },
        getDataSource: function (e) {
            var t = this;
            this.model.fetchFolderList(this.model.foldertype.custom, function (i) {
                t.pushOtherFolder(i), e(i)
            })
        },
        folderClick: function (e) {
            var t = e.srcElement || e.target, i = $(t).parents("li[fid]").attr("fid");
            return "" != i && "10" === i ? void this.unfoldFileMail(t) : void ("" != i && (top.$App.registerConfig("lastClickFolder", {
                fid: i,
                id: null
            }), top.$App.getMailboxView().model.set("hasClickUnreadLink", !1), $App.showMailbox(Number(i))))
        },
        addFolder: function () {
            $App.trigger("mailCommand", { command: "addFolder" })
        },
        openSetting: function () {
            $App.openDialog("个性化设置", "M2012.View.UnfoldSetting", {
                type: "custom",
                width: 383,
                height: 120,
                buttons: ["确定", "取消"]
            })
        },
        showFolderManage: function () {
            $App.show("tags")
        },
        unfoldFileMail: function (e) {
            var t = $('a[fid="10"]').find("i"), i = $(".return-indent-small"), a = t.hasClass("t_blackRight");
            "boolean" == typeof e && e && !a || (t.removeClass(), a ? (i.show(), t.addClass("triangle t_blackDown mr_5")) : (i.hide(), t.addClass("triangle t_blackRight mr_5")))
        },
        unfold: function (e) {
            var t, i = this, a = e;
            if ("boolean" != typeof a && (t = a.srcElement || a.target), t && t.id) {
                var s = t.id;
                if ("btn_addfolder" === s || "btn_setCustom" === s) return
            }
            var o = $("#folder_inbox").find("[name=i_unfold]");
            1 == e && o.hasClass("t_blackDown") || 0 == e && o.hasClass("t_blackRight") || (o.toggleClass(function (e, t) {
                return o.removeClass(), t.indexOf("t_blackRight") > -1 ? "triangle t_blackDown" : "triangle t_blackRight"
            }), i.model.set("unfoldCustom", o.hasClass("t_blackDown")), $("#folder_custom ul").children().length > 0 ? $("#folder_custom").toggle() : $("#folder_custom").hide(), $App.getView("folder").resizeSideBar())
        }
    })
}),

//M2012.Folder.View.FolderPop
M139.namespace("M2012.Folder.View", {
    FolderPop: Backbone.View.extend({
        el: "#pop_list",
        template: ['<a bh="left_pop" hidefocus id="fd_popStat" href="javascript:void(0)"><i name="i_unfold" class="triangle t_blackRight" bh="left_unfoldPop"></i><span>其他邮箱</span><i id="btn_addpop" style="display:none" title="添加其他邮箱" name="addpop" class="i_add" bh="left_createPop"></i><i class="i_set" title="其他邮箱文件夹个性化设置" onClick="return false" id="btn_setPop" style="display:none" bh="left_popSetting"></i></a>', '<ul class="small" style="display:none;" id="folder_pop">', "<!--item start-->", '<li  fid="$fid"><a href="javascript:" title="@getTitle()" @getStyle()>@getLock()<span class="otheMail">@maxLength(name,10)', '</span><span class="otheMailNum">@getMailCount()</span></a></li>', "<!--item end-->"].join(""),
        events: {
            "click li[fid]": "folderClick",
            "click #btn_addpop": "addPop",
            "click #btn_setPop": "openSetting",
            "click #fd_popStat": "unfold",
            "mouseover #fd_popStat": "showSetbtn",
            "mouseout #fd_popStat": "hideSetbtn"
        },
        initialize: function (e) {
            var t = this;
            this.model = e.model, this.model.on("folderDataChange", function () {
                M139.Timing.waitForReady('$App.getConfig("PopList")', function () {
                    t.model.setPopFolders(), t.render()
                })
            })
        },
        render: function () {
            var e = this;
            this.getDataSource(function (t) {
                var i = new Repeater(e.template);
                i.Functions = e.model.renderFunctions;
                var a = i.DataBind(t);
                $(e.el).html(a);
                var s = e.model.getMailCount("pop");
                if (s.unreadMessageCount > 0) {
                    var o = '<var class="fw_b">(' + s.unreadMessageCount + ")</var>";
                    $("#fd_popStat span").html($T.Utils.format("其他邮箱{0}", [o]))
                }
                var n = s.unreadMessageCount > 0 ? $T.Utils.format("{0}封未读邮件", [s.unreadMessageCount]) : "其他邮箱";
                $("#fd_popStat").attr("title", n);
                var r = $("#pop_list").find("[name=i_unfold]");
                0 == t.length ? r.remove() : e.model.get("unfoldPop") && r.hasClass("t_blackRight") && e.unfold({ target: r })
            })
        },
        showSetbtn: function () {
            $("#btn_setPop,#btn_addpop").show()
        },
        hideSetbtn: function () {
            $("#btn_setPop,#btn_addpop").hide()
        },
        renderCustomTips: function (e) {
            var t = e.concat();
            if (t = $.grep(t, function (e) {
                return e.stats.unreadMessageCount > 0
            }), 0 != t.length) {
                var i = !1;
                t.length > 4 && (t = t.slice(0, 4), i = !0);
                var a = ['<div id="tip_inbox" style="width:230px;"><!--item start-->', '<div><a fid="$fid" href="javascript:appView.showMailbox($fid)">$name($stats.unreadMessageCount)</a>', "</div><!--item end-->", i ? "......" : "", "</div>"].join(""), s = new Repeater(a), o = s.DataBind(t);
                return o
            }
        },
        getDataSource: function (e) {
            this.model.fetchFolderList(this.model.foldertype.pop, function (t) {
                e(t)
            })
        },
        folderClick: function (e) {
            var t = e.srcElement || e.target, i = $(t).parents("li[fid]").attr("fid");
            "" != i && (top.$App.registerConfig("lastClickFolder", {
                fid: i,
                id: null
            }), top.$App.getMailboxView().model.set("hasClickUnreadLink", !1), $App.showMailbox(Number(i)))
        },
        popClick: function () {
            return $App.show("popmail"), !1
        },
        addPop: function (e) {
            top.$App.showAddPopAccountDialog()
        },
        openSetting: function (e) {
            e.stopPropagation(), $App.openDialog("个性化设置", "M2012.View.UnfoldSetting", {
                type: "pop",
                width: 430,
                buttons: ["确定", "取消"]
            })
        },
        unfold: function (e) {
            var t = this;
            if (!top.$App.getPopList().length && "boolean" != typeof e) return void top.$App.showAddPopAccountDialog();
            var i, a = e;
            if ("boolean" != typeof a && (i = a.srcElement || a.target), i && i.id) {
                var s = i.id;
                if ("btn_addpop" === s || "btn_setPop" === s) return
            }
            var o = $(this.el).find("[name=i_unfold]");
            1 == e && o.hasClass("t_blackDown") || 0 == e && o.hasClass("t_blackRight") || (o.toggleClass(function (e, t) {
                return o.removeClass(), t.indexOf("t_blackRight") > -1 ? "triangle t_blackDown" : "triangle t_blackRight"
            }), t.model.set("unfoldPop", o.hasClass("t_blackDown")), o.parent().next().toggle(), $App.getView("folder").resizeSideBar())
        }
    })
}),

//M2012.Folder.View.FolderTag
M139.namespace("M2012.Folder.View", {
    FolderTag: Backbone.View.extend({
        el: "#tag_list",
        template: ['<a bh="left_tag" hidefocus id="fd_tagStat" href="javascript:">', '<i name="i_unfold" class="triangle t_blackRight" bh="left_unfoldTag"></i>', "<span>标签邮件</span>", '<i class="i_add" title="添加标签" id="btn_addtag" style="display:none" bh="left_createTag"></i>', '<i title="标签个性化设置" class="i_set" id="btn_setTag" style="display:none" onClick="return false"></i></a>', '<ul class="small" style="display:none;" id="folder_tag">', "<!--item start-->", '<li fid="$fid"><a href="javascript:" title="@getTitle()" @getStyle()><span class="tagMin@getSpecialTag(1)" style="border-color:@getColor()"><span class="tagBody" style="border-color:@getColor();background-color:@getColor();">@getSpecialTag(2)</span></span>', '<span class="tagText">@maxLength(name,10)@getMailCount() </span></a></li>', "<!--item end-->", "</ul>"].join(""),
        events: {
            "click li[fid]": "folderClick",
            "click #btn_addtag": "addTag",
            "mouseover #fd_tagStat": "showSetbtn",
            "mouseout #fd_tagStat": "hideSetbtn",
            "click #btn_setTag": "openSetting",
            "click #fd_tagStat": "unfold"
        },
        initialize: function (e) {
            var t = this;
            this.model = e.model, this.isFirstLoad = !0, this.model.on("folderDataChange", function () {
                t.render()
            })
        },
        renderStarMail: function () {
            var e = this.model.getStarObj();
            $("#li_star").attr({ style: e.style }), $("#li_star a").attr("title", e.title), $("#li_star span").html(e.count)
        },
        render: function () {
            var e = this;
            this.getDataSource(function (t) {
                var i = new Repeater(e.template);
                i.model = e.model, i.Functions = e.model.renderFunctions;
                var a = i.DataBind(t);
                $(e.el).html(a);
                var s = e.model.getMailCount("tag"), o = s.unreadMessageCount > 0 ? $T.Utils.format("{0}封未读邮件", [s.unreadMessageCount]) : "标签邮件";
                if ($("#fd_tagStat").attr("title", o), s.unreadMessageCount > 0) {
                    var n = '<var class="fw_b">(' + s.unreadMessageCount + ")</var>";
                    $("#fd_tagStat span").html($T.Utils.format("标签邮件{0}", [n]))
                }
                var r = $("#tag_list").find("[name=i_unfold]");
                0 == t.length || e.model.get("unfoldTag") && r.hasClass("t_blackRight") && e.unfold({ target: r }), e.isFirstLoad && M139.Timing.waitForReady("$App.getConfig('UserAttrsAll')", function (t) {
                    e.model.createSpecialTag()
                })
            }), this.isFirstLoad = !1
        },
        showSetbtn: function () {
            $("#btn_setTag,#btn_addtag").show()
        },
        hideSetbtn: function () {
            $("#btn_setTag,#btn_addtag").hide()
        },
        getDataSource: function (e) {
            this.model.fetchFolderList(this.model.foldertype.tag, function (t) {
                e(t)
            })
        },
        addTag: function () {
            $App.trigger("mailCommand", { command: "addTag" })
        },
        folderClick: function (e) {
            var t = e.srcElement || e.target, i = $(t).parents("li[fid]").attr("fid");
            "" != i && (top.$App.registerConfig("lastClickFolder", {
                fid: i,
                id: null
            }), top.$App.getMailboxView().model.set("hasClickUnreadLink", !1), $App.showMailbox(Number(i)))
        },
        myTagClick: function (e) {
            return $App.show("tags"), !1
        },
        openSetting: function () {
            $App.openDialog("个性化设置", "M2012.View.UnfoldSetting", {
                type: "tag",
                width: 383,
                height: 120,
                buttons: ["确定", "取消"]
            })
        },
        unfold: function (e) {
            var t, i = this, a = e;
            if ("boolean" != typeof a && (t = a.srcElement || a.target), t && t.id) {
                var s = t.id;
                if ("btn_addtag" === s || "btn_setTag" === s) return
            }
            var o = $(this.el).find("[name=i_unfold]");
            1 == e && o.hasClass("t_blackDown") || 0 == e && o.hasClass("t_blackRight") || (o.toggleClass(function (e, t) {
                return o.removeClass(), t.indexOf("t_blackRight") > -1 ? "triangle t_blackDown" : "triangle t_blackRight"
            }), i.model.set("unfoldTag", o.hasClass("t_blackDown")), o.parent().next().toggle(), $App.getView("folder").resizeSideBar())
        }
    })
}),

//M2012.Folder.View.FolderMain
M139.namespace("M2012.Folder.View", {
    FolderMain: Backbone.View.extend({
        el: "#sb_h",
        template: "",
        events: {
            "click #folder_main li a[fid]": "folderClick",
            "click #list_folder_other li a[fid]": "folderClick",
            "click #folder_main a[setorder]": "showListInfo",
            "click #folder_main a[oneSetOrder]": "openOneStand",
            "click #btn_addFolder": "addFolder",
            "click #btn_clear": "clearFolder",
            "click #btn_clearJunk": "clearFolder",
            "mouseover #subListcon a": "showSetBtn",
            "mouseleave #subListcon a": "hideSetBtn",
            "click #subListcon .i_set": "clickSettings"
        },
        initialize: function () {
            var e = this;
            this.model = new M2012.Folder.Model.FolderModel;
            this.setmoreView = new M2012.Folder.View.SetMore({ model: this.model, view: this });
            var t = new M2012.Folder.View.FolderCustom({ model: this.model }),
                i = new M2012.Folder.View.FolderPop({ model: this.model }),
                a = new M2012.Folder.View.FolderTag({ model: this.model });
            this.folderTagView = a;
            this.model.set("isFirstLoad", !0);
            this.Initdisplay();
            appView.on("change:star", function () {
                e.render()
            });
            appView.on("reloadFolder", function (t) {
                var i = e.lastScrollTop;
                if (t && t.callback ? (e.render(!0, t.callback), setTimeout(function () {
                    $("#sidebar").find(".subListScrollCon")[0].scrollTop = i
                }, 500)) : e.render(!0, function () {
                    $App.trigger("refreshCount"), $("#sidebar").find(".subListScrollCon")[0].scrollTop = i
                }), e.validateMailCount(t), e.resizeSideBar(), t && "deleteFolder" == t.comefrom) {
                    var a = $App.getTabByName("mailbox_" + t.fid);
                    a && $App.close(a.name)
                }
            });
            $("#sidebar").find(".subListScrollCon").scroll(function () {
                e.lastScrollTop = this.scrollTop, this.scrollTop > 0 ? $(".subListScrollTop").show() : $(".subListScrollTop").hide()
            });
            appView.on("reduceFolderMail", function (a) {
                var s = a.fid, o = e.model.getFolderById(s);
                if (o.stats.unreadMessageCount > 0 && (o.stats.unreadMessageCount -= 1), messageTotal = $User.getMessageInfo(), messageTotal.unreadMessageCount) {
                    var n = 0;
                    messageTotal.unreadMessageCount--, $($App.getFolders()).each(function (e, t) {
                        $App.getView("folder").model.isLock(t.fid) && (n += $App.getFolderById(t.fid).stats.unreadMessageCount)
                    }), messageTotal.unreadMessageCount <= n && $Evocation.msgBoxHot.hide()
                } else $Evocation.msgBoxHot.hide();
                var r;
                if (a.mailInfo && (r = a.mailInfo.subscriptionFlag, (a.mailInfo.sendId > 0 || a.mailInfo.logoType > 0 || 1 == a.mailInfo.subscriptionFlag || 1 == a.mailInfo.billFlag) && setTimeout(function () {
                    top.$App.trigger("reloadFolder", { reload: !0 })
                }, 1e3)), e.reduceBillSub1(a.comefrom, a.billFlag, r, a.mailInfo), $App.getMailboxView().model.get("isSearchMode")) {
                    var l = a && a.isStar;
                    e.reduceStarSearchMail(l)
                }
                var c = e.model.getFolderType(s);
                if (c == e.model.foldertype.system ? (e.render(), t.render()) : c == e.model.foldertype.custom ? t.render() : c == e.model.foldertype.pop && i.render(), e.validateMailCount(), a && a.isVip) {
                    var d = e.model.get("vipMailStats");
                    d.unreadMessageCount > 0 && (d.unreadMessageCount -= 1), 1 != c && e.render()
                }
            });
            appView.on("reduceTagMail", function (t) {
                var i = t.label, s = e.model.getTagsById(i);
                $(s).each(function (e, t) {
                    t.stats.unreadMessageCount > 0 && (t.stats.unreadMessageCount -= 1)
                }), a.render(), e.validateMailCount()
            });
            appView.on("unfoldCommand", function (s) {
                var o = !0;
                void 0 != s.flag && (o = s.flag), "folder" == s.type || "custom" == s.type ? t.unfold(o) : "tag" == s.type ? a.unfold(o) : "pop" == s.type ? i.unfold(o) : "other" == s.type ? e.unfold(o) : "file" == s.type && t.unfoldFileMail(o)
            });
            $App.on("change:contact_maindata", function () {
                e.renderVipMailCount(!0)
            });
            $App.once("userDataLoad", function () {
                function e() {
                }

                $("#folder_main").is(":visible") ? e() : $App.on("showTab", function (t) {
                    "mailbox_1" == t.name && ($App.off("showTab", arguments.callee), e())
                })
            });
            this.autoReceive();
        },
        render: function (e, t) {
            function i(i) {
                var s = new Repeater($("#template_folderMain").val()),
                    o = s.DataBind(i);
                $("#folder_main").html(o);
                a.renderBillSub();
                a.setAttrOrder();
                a.showbarSet();
                a.showMaillTip();
                a.renderByFolderSet();
                if (e) {
                    a.model.trigger("folderDataChange");
                }
                appView.trigger("folderRendered");
                if (t) {
                    t();
                }
                a.setButtonVisible();
                if (a.model.get("isFirstLoad")) {
                    a.loadUnfoldStatus();
                }
                a.model.set("isFirstLoad", !1)
            }
            var a = this;
            this.getDataSource(i, e)
        },
        getDataSource: function (e, t) {
            function i(t) {
                var i = t,
                    s = a.model.SysFolderId,
                    t = {
                        star: a.model.getStarObj(),
                        task: a.model.getTaskObj(),
                        vip: { title: "VIP邮件" }
                    };
                for (elem in s) {
                    if (elem) {
                        var o = $.grep(i, function (e, t) {
                            return e.fid == s[elem]
                        });
                        if (o && o.length > 0) {
                            t[elem] = {};
                            if (o[0].stats.unreadMessageCount > 0) {
                                t[elem].count = "<var class='fw_b'>(" + o[0].stats.unreadMessageCount + ")</var>"
                            } else {
                                2 == o[0].fid && o[0].stats.messageCount ? t[elem].count = "<var>[" + o[0].stats.messageCount + "]</var>" :
                                (t[elem].count = "", t[elem].style = "")
                            }
                            t[elem].style = t[elem].style + a.getDisplay(o[0]);
                            t[elem].title = (o[0].stats.unreadMessageCount > 0 ? $T.Utils.format("{0}封未读邮件", [o[0].stats.unreadMessageCount]) : $T.Utils.format("{0}", [o[0].name]));
                            if (o[0].fid && 2 == o[0].fid) {
                                t[elem].title = o[0].stats.messageCount ? $T.Utils.format("{0}封草稿邮件", [o[0].stats.messageCount]) : $T.Utils.format("{0}", [o[0].name]);
                            }
                        } else {
                            t[elem] = {};
                            t[elem].style = a.getDisplay({
                                fid: s[elem],
                                stats: { messageCount: 0 }
                            });
                        }
                    }
                }
                $App.getModel("contacts").requireData(function () {
                    var e = a.model.get("isFirstLoad") ? 2e3 : 0;
                    setTimeout(function () {
                        M139.Timing.waitForReady("top.Contacts.getVipInfo()", function () {
                            a.renderVipMailCount()
                        })
                    }, e)
                });
                e(t);
            }

            var a = this;
            if (t) {
                this.model.fetchFolderList(this.model.foldertype.system, i, !0);
            } else {
                i(this.model.systemFolders);
            }
        },
        Initdisplay: function () {
            $App.on("infoSetLoad", function (e) {
                function t(e) {
                    top.$User.isChinaMobileUser() && (e[4] = 0, $("#list_maill").hide())
                }

                var i = e.userMainData.mainUserConfig.shownewuserguide && e.userMainData.mainUserConfig.shownewuserguide[0];
                M139.Timing.waitForReady('top.$App.getConfig("UserAttrsAll")', function () {
                    var e = $App.getCustomAttrs("folderSet").split("");
                    12 == e.length && (e[12] = "1", $App.setCustomAttrs("folderSet", e.join(""))), 13 == e.length && (e[13] = "1", $App.setCustomAttrs("folderSet", e.join(""))), 14 == e.length && (e[14] = "1", $App.setCustomAttrs("folderSet", e.join(""))), 15 == e.length && (e[15] = "1", $App.setCustomAttrs("folderSet", e.join(""))), 16 == e.length && (e[11] = "0", e[12] = "0", e[13] = "0", $App.setCustomAttrs("folderSet", e.join(""))), 0 == e.length && ("1" == i ? (e = [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], t(e), $App.setCustomAttrs("folderSet", e.join("")), $("#notice_maill,#zuce_maill,#li_chaoMobile").hide(), $("#li_remind").show()) : (e = [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], t(e), $App.setCustomAttrs("folderSet", e.join("")), $("#notice_maill,#zuce_maill,#ads_maill,#li_chaoMobile").hide(), $("#li_remind").show()))
                })
            })
        },
        reduceBillSub1: function (e, t, i, a) {
            var s = this, o = $App.getMailboxView().model, n = s.model;
            if (a && 1000013 == a.sendId) {
                var r = o.get("InitDataConfig").billNew7;
                r--, r >= 0 && (o.get("InitDataConfig").billNew7 = r, n.set("billNew7", r))
            }
            if (3 == a.logoType) {
                var l = o.get("InitDataConfig").billNew6;
                l--, l >= 0 && (o.get("InitDataConfig").billNew6 = l, n.set("billNew6", l))
            }
            if (68 == a.logoType) {
                var c = o.get("InitDataConfig").billNew5;
                c--, c > 0 && (o.get("InitDataConfig").billNew5 = c, n.set("billNew5", c))
            }
            if (67 == a.logoType) {
                var d = o.attributes.UnreadRegisteCounts;
                d > 0 && n.set("billNew4", d - 1)
            }
            if ((1 == a.logoType || a.logoType >= 110 && a.logoType <= 113) && 1 == t) {
                var p = o.get("InitDataConfig").billNew1;
                p--, p >= 0 && (o.get("InitDataConfig").billNew1 = p, n.set("billNew1", p))
            }
            if ((2 == a.logoType || 0 == a.logoType) && 1 == t) {
                var m = o.attributes.UnreadLifeserviceCounts;
                m > 0 && n.set("billNew2", m - 1)
            }
            if (o.isSubscribeMode() || "subscribeSession" == e || i) {
                var u = n.attributes.newSubscriptionCount;
                n.set("newSubscriptionCount", u - 1)
            }
            if ((66 == a.logoType || 0 == a.logoType) && 1 != t) {
                var h = o.attributes.UnreadNoticeCounts;
                h > 0 && n.set("billNew3", h - 1)
            }
        },
        showListInfo: function (e) {
            var t = e.currentTarget, i = $(t).attr("setorder");
            switch (i && (top.$App.registerConfig("lastClickFolder", {
                id: $(t).closest("li").attr("id"),
                fid: null
            }), top.$App.getMailboxView().model.set("hasClickUnreadLink", !1)), i) {
                case "1":
                    appView.searchTaskmail();
                    break;
                case "2":
                    appView.searchVip();
                    break;
                case "3":
                    appView.searchMail({ flags: { starFlag: 1 } });
                    break;
                case "4":
                    appView.showSubscribe(!0);
                    break;
                case "5":
                    appView.showBill(2);
                    break;
                case "6":
                    appView.showBill(1);
                    break;
                case "7":
                    appView.showBill(3);
                    break;
                case "8":
                    appView.showBill(5);
                    break;
                case "9":
                    appView.showBill(6);
                    break;
                case "10":
                    appView.show("meetingManage");
                    break;
                case "11":
                    $App.showMailbox(5);
                    break;
                case "12":
                    appView.showBill(8);
                    break;
                case "13":
                    appView.showBill(13);
                    break;
                case "14":
                    appView.showBill(15);
                    break;
                case "15":
                    appView.showBill(7);
                    break;
                case "16":
                    appView.showBill(16)
            }
        },
        openOneStand: function (e) {
            var t = e.currentTarget, i = $(t).attr("oneSetOrder");
            i && (top.$App.registerConfig("lastClickFolder", {
                id: $(t).closest("li").attr("id"),
                fid: null
            }), top.$App.getMailboxView().model.set("hasClickUnreadLink", !1)), appView.showBill(14)
        },
        setAttrOrder: function () {
            var e = this, t = e.model.setorderObj;
            $("#li_remind a").attr({ setorder: t.remindM }), $("#li_vip a").attr({ setorder: t.vipM }), $("#li_star a").attr({ setorder: t.starM }), $("#li_subscribe a").attr({ setorder: t.subscribeM }), $("#list_maill a").attr({ setorder: t.listM }), $("#life_maill a").attr({ setorder: t.lifeM }), $("#notice_maill a").attr({ setorder: t.noticeM }), $("#zuce_maill a").attr({ setorder: t.zuceM }), $("#ads_maill a").attr({ setorder: t.adsM }), $("#li_meeting a").attr({ setorder: t.meetingM }), $("#rub_maill a").attr({ setorder: t.rubM }), $("#li_chaoMobile a").attr({ setorder: t.chaoM }), $("#li_stroke a").attr({ setorder: t.strokeM }), $("#bank_bill a").attr({ setorder: t.bankM }), $("#list_invoice a").attr({ setorder: t.voinceM }), $("#list_official a").attr({ setorder: t.officialM })
        },
        clickSettings: function (e) {
            var t = this;
            e.stopPropagation();
            var i = e.currentTarget, a = $(i).parent("a"), s = a.attr("setorder");
            t.setmoreView.renderEach(s)
        },
        showSetBtn: function (e) {
            var t = e.currentTarget;
            $(t).find(".i_set").show()
        },
        hideSetBtn: function (e) {
            var t = e.currentTarget;
            $(t).find(".i_set").hide()
        },
        showMaillTip: function () {
            var e = this;
            e.$el.find("a[setorder]").on("hover", ".i_set", function (t) {
                t.preventDefault();
                var i = t.currentTarget, a = $(i).offset(), s = ($(i).parent("a[setorder]").attr("setorder"), "maillSetGuide"), o = "maillSetGuide";
                e.maillSetFloatingTpl({ key: s, element: i, pop: a, id: o })
            })
        },
        maillSetFloatingTpl: function (e) {
            var t = "<ul><li>1.设置入口是否常驻显示;</li><li>2.设置该邮件是否邮件到达短信通知 ;</li></ul>";
            $App.showOnce(e.key, function () {
                if (0 == $("#" + e.id).length) {
                    var i = M2012.UI.Tip.DockTips.create({
                        el: $(e.element),
                        id: e.id,
                        title: "",
                        icon: "none",
                        text: t
                    });
                    $("#" + e.id).css({
                        left: e.pop.left - 6,
                        width: "260px"
                    }), i.$el.on("click", ".closeTipsLayerBtn", function () {
                        i.$el.remove()
                    })
                }
            })
        },
        showbarSet: function () {
            var e = $App.getCustomAttrs("folderSet"), t = e.slice(3, 9), i = e.substr(11, 4), a = "0000000000000000";
            if (top.$User.isChinaMobileUser()) {
                var s = "0000100000000000";
                e == s && ($App.setCustomAttrs("folderSet", a), e = a)
            }
            e == a ? ($("#barmorelink").show(), $("#folder_main").find("#bottomLi-nd").hide()) : $("#barmorelink").hide(), "000000" === t && "0000" == i && $("#folder_main").find("#bottomLi-nd").hide(), "0" == e[9] && "0" == e[10] ? $("#folder_main").find("#bottomLi-td").hide() : $("#folder_main").find("#bottomLi-td").show(), this.resizeSideBar()
        },
        renderByFolderSet: function () {
            var e = this;
            M139.Timing.waitForReady('top.$App.getConfig("UserAttrsAll")', function () {
                function t(t) {
                    !top.$User.isChinaMobileUser() || 4 != t && 11 != t || (i[t] = "0"), 12 != t && 13 != t || (i[t] = "0"), "1" == i[t] ? $("#" + e.model.getLeftBarId(t)).show() : $("#" + e.model.getLeftBarId(t)).hide()
                }

                for (var i = top.$App.getCustomAttrs("folderSet").split(""), a = i.length, s = 0; a > s; s++) t(s)
            })
        },
        loadUnfoldStatus: function () {
            var e = this;
            M139.Timing.waitForReady('$App.getConfig("PopList")', function (t) {
                setTimeout(function () {
                    function t(t) {
                        var i = e.model.getUnfoldStatus(t),
                            a = !1;
                        if (2 == i) {
                            a = !0;
                        } else if (1 == i) {
                            var s = e.model.getMailCount(t);
                            if (s.unreadMessageCount > 0) {
                                a = !0;
                            }
                        }
                        $App.trigger("unfoldCommand", { type: t, flag: a });
                    }

                    t("custom");
                    t("pop");
                    t("tag");
                }, 500)
            })
        },
        reduceBillSub: function (e, t, i, a) {
            var s = $App.getMailboxView().model, o = self.model;
            s.isBillMode() || t ? o.set("newBillCount", o.get("newBillCount") - 1) : s.isSubscribeMode() || "subscribeSession" == e || i ? o.set("newSubscriptionCount", o.get("newSubscriptionCount") - 1) : !a || 66 != a.logoType && 67 != a.logoType && 68 != a.logoType && 3 != a.logoType || o.set("newBillCount", o.get("newBillCount") - 1)
        },
        reduceStarSearchMail: function (e) {
            var t = this, i = $App.getMailboxView().model;
            if (e) {
                var a = t.model.get("unreadStarCount");
                a > 0 && t.model.set("unreadStarCount", a - 1)
            }
            if (i.get("isSearchMode")) {
                var s = i.get("searchStats");
                s.unreadMessageCount > 0 && (s.unreadMessageCount -= 1)
            }
        },
        refreshTaskCount: function (e, t) {
            e = this.model.get("todoTaskCount") + e, t = this.model.get("totalTaskCount") + t, e = e > 0 ? e : 0, t = t > 0 ? t : 0, this.model.set({ todoTaskCount: e }), this.model.set({ totalTaskCount: t }), this.renderTaskMail()
        },
        renderBillSub: function () {
            var e = this, t = this.model.folderObj, i = function (t, i) {
                var a = e.model.getBillNewObj(i);
                $("#" + t.id).attr({ style: a.style }), $("#" + t.id + " a").attr({ title: a.title }).html('<i class="' + t.iconCls + '"></i><span>' + t.name + a.count + '</span><i class="i_set" style="display:none" onclick="return false" title="' + t.name + '设置入口"></i>')
            };
            if (_.each(t, function (e, t) {
                e.id && i(e, t)
            }), top.$User.isChinaMobileUser()) {
                var a = top.$User.getProvText() + "移动", s = e.model.provincetpl.tplst;
                e.model.getBillNew9Obj(function (e) {
                    s = top.$T.Utils.format(s, {
                        bh: "onestand_leftside",
                        title: e.title,
                        oneSetOrder: "1",
                        unread: e.count,
                        mailname: a
                    }), $("#oneStop_mail").html(s)
                })
            } else $("#oneStop_mail").remove()
        },
        renderTaskMail: function () {
            var e = this.model.getTaskObj();
            $("#li_remind").attr({ style: e.style }), $("#li_remind a").attr("title", e.title).html('<i class="i_cDon"></i><span>稍后处理 ' + e.count + '</span><i class="i_set" style="display:none"  id="btn_setCustom_task" onclick="return false" title="待办任务设置入口"></i>'), this.validateMailCount(), this.renderByFolderSet()
        },
        validateMailCount: function (e) {
            if (!e || "welcome" != e.comefrom) {
                var t = $App.getTabByName("welcome");
                t && (t.isRendered = !1, t.data = { reload: !0 })
            }
        },
        setButtonVisible: function () {
            var e = this.model.getFolderById(4);
            0 == e.stats.messageCount && $("#btn_clear").hide()
        },
        autoReceive: function () {
            var e = this;
            try {
                e.autoReceiveTimer && clearTimeout(e.autoReceiveTimer), e.autoReceiveTimer = setTimeout(function () {
                    (new M2012.Model.Pns.PnsModel).startRequestPns()
                }, 5e3)
            } catch (t) {
            }
        },
        resizeSideBar: function () {
            setTimeout(function () {
                var e = $("#sidebar .subListScrollCon"), t = 151, i = $App.getBodyHeight() - t - $("#viewSession").height();
                $("#sb_h").height($App.getBodyHeight() - t - 7), e[0].scrollHeight > i ? e.height(i) : e[0].scrollHeight <= i && (e.css("height", ""), $(".subListScrollTop").hide())
            }, 10)
        },
        getDisplay: function (e) {
            if (0 == e.stats.messageCount) {
                var t = this.model.SysFolderId;
                if (e.fid == t.advertise || e.fid == t.business || e.fid == t.virus || e.fid == t.junk || e.fid == t.archive) return "display:none"
            }
            return ""
        },
        showGroupMail: function () {
            $App.jumpTo("groupMail")
        },
        renderVipMailCount: function (e) {
            function t(e) {
                if (e) {
                    i.model.set("vipMailStats", e);
                    var t = $("#li_vip span");
                    if (e.unreadMessageCount > 0) {
                        var a = (e.unreadMessageCount > 0 ? "(" + e.unreadMessageCount + ")" : "", $T.Utils.format("{0}封未读邮件", [e.unreadMessageCount]));
                        t.attr("title", a), t.html("VIP邮件<var class='fw_b'>(" + e.unreadMessageCount + ")</var>").attr("title", a)
                    } else {
                        var a = "VIP邮件";
                        t.attr("title", a), t.html("VIP邮件")
                    }
                }
            }

            var i = this;
            if (this.model.get("vipMailStats") && !e) t(this.model.get("vipMailStats")); else {
                if ($App.getCurrentTab().name.match(/mailsub_[^0]/)) return;
                var a = $App.getView("mailbox").model;
                if ("welcome" == $App.getCurrentTab().name) return void top.$App.on("showTab", function (e) {
                    "mailbox_1" == e.name && (a.getVipMailCount(t), top.$App.off("showTab", arguments.callee))
                });
                a.getVipMailCount(t)
            }
        },
        folderClick: function (e) {
            var t = e.currentTarget;
            i = $(t).parents("li[fid]").attr("fid");
            if ("" != i && "I" != t.tagName) {
                top.$App.registerConfig("lastClickFolder", {
                    fid: i,
                    id: null
                });
                top.$App.getMailboxView().model.set("hasClickUnreadLink", !1), $App.showMailbox(Number(i));
            }
        },
        clearFolder: function (e) {
            var t = e.currentTarget, i = $(t).parents("[fid]").attr("fid");
            $App.trigger("mailCommand", { command: "clear", fid: Number(i) })
        },
        openSetting: function () {
            $App.openDialog("个性化设置", "M2012.View.UnfoldSetting", {
                type: "custom",
                width: 383,
                height: 120,
                buttons: ["确定", "取消"]
            })
        },
        addFolder: function () {
            $App.trigger("mailCommand", { command: "addFolder" })
        }
    })
}),


//M2015.Mailnotify.Model
function (e, t, i, a) {
    a.namespace("M2015.Mailnotify.Model", i.Model.extend({
        defaults: {
            enable: void 0,
            notifytype: 1,
            msgConverge: !0,
            syncDy: !0,
            timerange: [],
            supply: !1,
            notifystyle: [],
            emaillist: [],
            automaticreply: null,
            readreceipt: null,
            mailsystem: null,
            themekeywords: "",
            oldlist: []
        }, isReady: { notifydata: !1, Undisturbdata: !1 }, initialize: function (e) {
            e.notifydata && this.initData(e.notifydata), e.Undisturbdata && this.initUndisturbData(e.Undisturbdata), this.initEvents()
        }, initUndisturbData: function (e, t) {
            var i = this;
            if (e.undisturbType > 0 ? i.set("nodisturbEnable", !0) : i.set("nodisturbEnable", !1), i.set("nodisturbType", Math.abs(e.undisturbType) || 1), e.undisturbTime) var a = {
                begin: e.undisturbTime.split("-")[0],
                end: e.undisturbTime.split("-")[1]
            }; else var a = { begin: 12, end: 14 };
            i.set("nodisturbtimeObj", a), i.set("allowVip", e.undisturbExcludeType || 0), i.set("nodisturbEmaillist", e.fromMail), t && i.trigger("reRender")
        }, initData: function (e, t) {
            var i = this;
            i.set("enable", e[0].enable), i.set("notifytype", 1 != e[0].notifytype && 4 != e[0].notifytype ? 1 : e[0].notifytype), i.set("msgConverge", e[0].msgConverge), i.set("syncDy", e[0].syncDy), i.set("supply", e[0].supply), i.set("automaticreply", e[0].automaticreply || 0), i.set("readreceipt", e[0].readreceipt || 0), i.set("mailsystem", e[0].mailsystem || 0), i.set("themekeywords", e[0].themekeywords || "");
            for (var a = [], s = 0; s < e.length; s++) a = a.concat(e[s].timerange);
            for (var s = 0; s < a.length; s++) a[s].discription = i.discription(a[s].weekday.split(",")) + " " + a[s].begin + ":00 到 " + a[s].end + ":00";
            i.set("timerange", a);
            for (var o = [], s = 0; s < e.length; s++) o = o.concat(e[s].emaillist);
            if (i.set("emaillist", o), i.set("oldlist", o), e[0].notifystyle) i.set("notifystyle", e[0].notifystyle.split(",")); else {
                i.set("firstLoad", !0);
                var n = [];
                e[0] && e[0].notifytype && n.push(1), e[0] && e[0].notifytype && n.push(2), e[1] && e[1].notifytype && n.push(5), top.$App.getCustomAttrs("SmsNotify") && n.push(4), i.set("notifystyle", n)
            }
            t && i.trigger("reRender")
        }, initEvents: function () {
            var e = this;
            top.$App.on("notifySettingChange", function () {
                e.getData()
            }), top.$App.on("nodisturbDataChangeBySetting", function () {
                e.getNodisturbData()
            }), e.on("change:enable", function (e, t) {
                top.window.mailnotify[0].enable = t
            }), e.on("change:notifystyle", function (e, t) {
                top.window.mailnotify[0].notifystyle = t.join(",")
            })
        }, setData: function (e) {
            e.notifydata && this.initData(e.notifydata), e.Undisturbdata && this.initUndisturbData(e.Undisturbdata), this.initEvents()
        }, getData: function () {
            var e = this;
            a.RichMail.API.call("user:getMailNotify", {}, function (t) {
                t && t.responseData && "S_OK" == t.responseData.code && (e.initData(t.responseData["var"], !0), e.trigger("dataChange"))
            })
        }, getNodisturbData: function () {
            var e = this;
            a.RichMail.API.call("user:getUndisturb", {}, function (t) {
                t && t.responseData && "S_OK" == t.responseData.code && (e.initUndisturbData(t.responseData["var"], !0), e.trigger("dataChange"))
            })
        }, findTimeByTid: function (e) {
            for (var t = this.get("timerange"), i = 0; i < t.length; i++) if (t[i].tid == e) return t[i]
        }, ArrayIndexOf: function (e, t) {
            if (!e.length) return -1;
            if ("object" == typeof t) {
                for (var i = 0; i < e.length; i++) if (this.isSameObject(e[i], t)) return i
            } else for (var i = 0; i < e.length; i++) if (e[i] == t) return i;
            return -1
        }, isSameObject: function (e, t) {
            if ("object" != typeof e || "object" != typeof t) return !1;
            for (var i in e) {
                if (!e[i] || !t[i]) return !1;
                if (e[i] != t[i]) return !1
            }
            return !0
        }, discription: function (e) {
            var t = ["", "一", "二", "三", "四", "五", "六", "日"], i = !1, a = [];
            if (a.length = 0, a.push(t[e[0]]), e.length > 1) {
                for (var s = 1; s < e.length; s++) e[s] - e[s - 1] != 1 && (i = !0), a.push(t[e[s]]);
                if (i) var o = "周" + a.join("、"); else var o = "周" + a[0] + "至周" + a[a.length - 1]
            } else var o = "周" + a[0];
            return "周一至周日" == o && (o = "每天"), "周一至周五" == o && (o = "工作日"), "周六至周日" == o && (o = "周末"), o
        }, saveNodisturbData: function (e) {
            var t = this, i = {}, s = t.get("nodisturbtimeObj");
            t.get("nodisturbEnable") ? i.undisturbType = t.get("nodisturbType") : i.undisturbType = 0 - t.get("nodisturbType"), i.undisturbExcludeType = t.get("allowVip"), i.fromMail = t.get("nodisturbEmaillist"), i.undisturbTime = s.begin + "-" + s.end, i.fromMail = t.get("nodisturbEmaillist"), a.RichMail.API.call("user:updateUndisturb", i, function (i) {
                i && i.responseData && "S_OK" == i.responseData.code && (top.$App.trigger("nodisturbDataChangeByTip"), t.trigger("dataChange")), e && e(i)
            })
        }, saveData: function (e) {
            var i = this, s = [];
            i.DataSaving = !0, s[0] = { fromType: 1 }, i.get("notifytype") || i.set("notifytype", "0010" == top.$User.getUserLevel() || "0015" == top.$User.getUserLevel() ? 1 : 4);
            for (var o = ["enable", "notifytype", "msgConverge", "syncDy", "timerange", "supply", "automaticreply", "readreceipt", "mailsystem", "themekeywords"], n = 0; n < o.length; n++) s[0][o[n]] = i.get(o[n]);
            if (0 == i.get("notifystyle").length) i.set("notifystyle", [7]); else if (i.ArrayIndexOf(i.get("notifystyle"), 4) > -1) {
                var r = { attrs: { _custom_SmsNotify: 1 } };
                $RM.setAttrs(r, function (e) {
                    e && "S_OK" == e.code && top.$App.loadAttrs2(function () {
                    })
                })
            } else {
                var r = { attrs: { _custom_SmsNotify: 0 } };
                $RM.setAttrs(r, function (e) {
                    e && "S_OK" == e.code && top.$App.loadAttrs2(function () {
                    })
                })
            }
            for (var l = [], n = i.get("notifystyle").length - 1; n >= 0; n--) "syncDy" != i.get("notifystyle")[n] && l.push(i.get("notifystyle")[n]);
            s[0].notifystyle = l.join(",");
            var c = t.difference(i.get("emaillist"), i.get("oldlist")), d = t.difference(i.get("oldlist"), i.get("emaillist"));
            i.set("oldlist", i.get("emaillist")), s[0].updateEmaillist = c.concat(d);
            var r = {};
            r.mailnotify = s, a.RichMail.API.call("user:updateMailNotify", r, function (t) {
                t && t.responseData && (e && e(t), i.trigger("dataChange"))
            })
        }
    }))
}(jQuery, _, Backbone, M139),

//M2015.Mailnotify.View
function (e, t, i, a) {
    var s = e, o = a.View.ViewBase;
    a.namespace("M2015.Mailnotify.View", o.extend({
        el: "body",
        template: ['<div id="mailnotify" class="tips dominanceTips" style="position:absolute;top:74px;left:180px;z-index:1203;width:248px;display:block;">', '<div class="tips-text">', '<div class="TipsTop clearfix">', '<span class="fr ta_r"><input type="checkbox" id="enable" /></span>', '<h2 class="fl ta_l">短信提醒</h2>', "</div>", '<div class="norTips clearfix cover" style="display:none">', '<div class="norTipsContent">', '<div class="drop-more clearfix"><a href="javascript:;"><i class="icon-drop"></i></a></div>', "</div>", "</div>", '<div class="norTips clearfix disEnable">', '<div class="norTipsContent">', '<div class="noopentips gray">开启短信提醒，接收邮件到达短信提醒</div>', "</div>", "</div>", '<div class="norTips clearfix isEnable isCover">', '<div class="norTipsContent">', '<div class="drop-open clearfix">', '<div class="allowed-text gray">', '<p class="black" id="iconText">允许接收以下邮件短信提醒</p>', '<p class="black" style="display:none" id="iconTitleParent">点击<span id="iconTitle">开启／关闭邮件</span>短信提醒</p>', "</div>", '<div class="allowed-list clearfix">', '<ul id="allowed-list" ></ul>', "</div>", '<div class="dividing-line clearfix"></div>', '<div class="remind-list clearfix" ><ul id="notifyTimelist"></ul></div>', "</div>", "</div>", "</div>", '<div class="TipsTop borTop clearfix isEnable">', '<span class="fr ta_r"><input type="checkbox" id="nodisturbEnable" ></span>', '<h2 class="fl ta_l">勿扰模式</h2>', "</div>", '<div class="norTips clearfix isEnable nodisturbDisEnable">', '<div class="norTipsContent">', '<p class="noopentips gray">开启勿扰模式，不接收邮件到达短信提醒</p>', "</div>", "</div>", '<div class="norTips clearfix isEnable nodisturbIsEnable">', '<div class="norTipsContent">', '<div class="remind-list clearfix">', "<ul>", '<li id="nodisturbType"><a href="javascript:;"><i class="icon-triangle"></i><span>当天勿扰</span></a></li>', '<li class="dividing-line"></li>', '<li id="nodisturbVip"><a href="javascript:;" ><i class="icon-triangle"></i><span class="orange">允许VIP联系人</span>短信提醒</a></li>', "</ul>", "</div>", "</div>", "</div>", '<div class="TipsBtn clearfix">', '<span class="fr ta_r"><a href="javascript:;" bh="mailnotify_tip_cancel_click" id="hideNotifyTip"><span>关闭</span></a></span>', '<span class="fl ta_l"><a href="javascript:;" bh="mailnotify_tip_details_click" id="toDetailed"><span>详细设置</span></a></span>', "</div>", "</div>", '<div class="diamond tipsTop" name="popup_arrow"></div>', "</div>"].join(""),
        timeMenu: ['<div id="notifyTimeMenu" class="tips dominanceTips menuAutoHide"  style="position:absolute;top:289px;left:429px;z-index:1203;width:218px;display:none;">', '<div class="tips-text">', '<div class="norTips clearfix">', '<div class="norTipsContent">', '<div class="remind-list-more clearfix">', "<ul>", '<li data-timetype="0"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>每天 8:00 到 20:00 提醒</a></li>', '<li data-timetype="1"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>工作日 8:00 到 18:00 提醒</a></li>', '<li data-timetype="2"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>周末 10:00 到 20:00 提醒 </a></li>', "</ul>", "</div>", "</div>", "</div>", "</div>", "</div>"].join(""),
        contactsMenu: ['<div id="mailnotifyContact" class="tips dominanceTips menuAutoHide" style="position:absolute;top:250px;left:429px;z-index:1203;width:218px;display:block;">', '<div class="tips-text">', '<div class="norTips clearfix">', '<div class="norTipsContent">', '<div class="remind-list-assign clearfix">', '<h2 class="rt">指定以下联系人提醒</h2>', '<ul id="contactsMenu" style="overflow-y: auto;max-height: 260px;"></ul>', "</div>", "</div>", "</div>", "</div>", "</div>"].join(""),
        nodisturbTypeMenu: ['<div id="nodisturbTypeMenu" class="tips dominanceTips menuAutoHide" style="position:absolute;top:195px;left:429px;z-index:1203;width:218px;display:block;">', '<div class="tips-text">', '<div class="norTips clearfix">', '<div class="norTipsContent">', '<div class="remind-list-more clearfix">', "<ul>", '<li date-type="1"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>当天勿扰</a></li>', '<li date-type="2"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>每天 {begin}:00 到 {end}:00 勿扰</a></li>', "</ul>", "</div>", "</div>", "</div>", "</div>", "</div>"].join(""),
        nodisturbVipMenu: ['<div id="nodisturbVipMenu" class="tips dominanceTips menuAutoHide" style="position:absolute;top:235px;left:429px;z-index:1203;width:218px;display:block;">', '<div class="tips-text">', '<div class="norTips clearfix">', '<div class="norTipsContent">', '<div class="remind-list-more clearfix">', "<ul>", '<li date-type="1"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>允许</a></li>', '<li date-type="0"><a href="javascript:;"><i class="icon-right"><!--显示加display:block;--></i>不允许</a></li>', "</ul>", "</div>", "</div>", "</div>", "</div>", "</div>"].join(""),
        iconItems: ['<li><span class="icon" title="{tips}"><input type="checkbox" id="allowedType_{styleId}"></span><div class="text">{title}</div></li>'].join(""),
        timeItems: '<li title="{text}" data-tid="{tid}"><a href="javascript:;" ><i class="icon-triangle" style="display:none"></i><i class="icon-closed" style="display:none"></i><span class="text">{text}</span></a></li>',
        contactItems: '<li data-email="{email}"><a href="javascript:;" ><i class="icon-closed"></i>{email}</a></li>',
        events: {
            "click #mailNotifyIcon": "show",
            "click #mailnotify #enable": "switchEnable",
            "click #mailnotify #toDetailed": "toDetailed",
            "click #mailnotify #nodisturbEnable": "switchDisturbEnable",
            "click #mailnotify #hideNotifyTip": "hideElement",
            "click #mailnotify #showMoreContacts": "showContactsMenu",
            "click #mailnotify .cover": "coverHide",
            "click #notifyTimelist .icon-closed": "deleteTime",
            "click #mailnotifyContact .icon-closed": "deleteContacts",
            "click #notifyTimeMenu li": "chooseTime"
        },
        styleList: ["1", "2", "5", "4", "syncDy", "31", "32", "33", "34", "35"],
        styleIcon: {
            selected: {
                1: "vip-mail-icon",
                2: "normal-mail-icon",
                5: "stranger-mail-icon",
                4: "parcel-mail-icon",
                syncDy: "subscribe-mail-icon",
                31: "mobile-bill-icon",
                32: "domestic-services-icon",
                33: "notifications-icon",
                34: "promotion-mail-icon",
                35: "electronic-invoice-icon"
            },
            unselected: {
                1: "vip-mail-gicon",
                2: "normal-mail-gicon",
                5: "stranger-mail-gicon",
                4: "parcel-mail-gicon",
                syncDy: "subscribe-mail-gicon",
                31: "mobile-bill-gicon",
                32: "domestic-services-gicon",
                33: "notifications-gicon",
                34: "promotion-mail-gicon",
                35: "electronic-invoice-gicon"
            }
        },
        iconTitle: {
            1: "VIP",
            2: "联系人",
            5: "陌生人",
            4: "代收",
            syncDy: "订阅",
            31: "账单",
            32: "服务",
            33: "动态",
            34: "推广",
            35: "发票"
        },
        styleTitle: {
            1: "VIP邮件",
            2: "联系人邮件",
            5: "陌生人邮件",
            4: "代收邮件",
            syncDy: "订阅邮件",
            31: "移动账单",
            32: "生活服务",
            33: "通知动态",
            34: "推广邮件",
            35: "电子发票"
        },
        styleText: {
            1: "来自VIP联系人的邮件",
            2: "发件人在通讯录中的邮件",
            5: "发件人不在通讯录中的邮件",
            4: "设置代收其他邮箱的邮件",
            syncDy: "订阅云邮局内容下发的邮件",
            31: "移动话费账单邮件",
            32: "水电燃气等生活费用账单邮件",
            33: "日历、网盘、生日提醒",
            34: "运营活动推广类邮件",
            35: "电子发票"
        },
        timerange: [{ begin: 8, end: 20, weekday: "1,2,3,4,5,6,7" }, {
            begin: 8,
            end: 18,
            weekday: "1,2,3,4,5"
        }, { begin: 10, end: 20, weekday: "6,7" }],
        initialize: function (e) {
            var t = this;
            this.model = e.model,
            this.onReLoad();
            var i = a.Timing.setInterval("notifyTipRender", function () {
                if(void 0 != t.model.get("enable") && void 0 != t.model.get("nodisturbEnable")){
                    t.renderIcon();
                    t.render();
                    a.Timing.clearInterval(i);
                }
            }, 100);
            return o.prototype.initialize.apply(this, arguments)
        },
        render: function () {
            var e = this;
            e.html = e.template,
            e.element = s(e.html),
            e.showAllowStyle(),
            e.showTimers(),
            e.showContacts(),
            e.showUndisturb(),
            e.initEvents()
        },
        renderIcon: function () {
            var e = this;
            e.icon = s("#mailNotifyIcon i");
            var t = e.model.get("enable"),
                i = e.model.get("nodisturbEnable"),
                a = e.model.get("nodisturbtimeObj"),
                o = e.model.get("nodisturbType"),
                n = !1,
                r = (new Date).getHours();
            if (i && 2 == o && r >= a.begin) {
                if (r < a.end) {
                    n = !0
                } else {
                    i && 1 == o && (n = !0);
                }
            }
            if (t) {
                if (t && !n) {
                    e.icon[0].className = "closing opening"
                } else {
                    t && n && (e.icon[0].className = "closing night")
                }
            } else {
                e.icon[0].className = "closing";
            }
            e.icon.parents("li").show();
        },
        show: function () {
            var e = this;
            top.BH("mailnotify_tip_icon_click");
            if (s("#mailnotify").length) {
                if (e.element.is(":visible")) {
                    this.hideElement();
                    this.menusHide();
                } else {
                    $App.getView("top") && $App.getView("top").resetTopFixTabsCssAndDropdown();
                    e.element.show();
                }
            } else {
                s("body").append(e.element);
                $D.dockElement(
                    s("#mailNotifyIcon a")[0],
                    e.element[0], {
                        direction: "auto",
                        dx: -24,
                        dy: 12
                    });
            }


            s("#undisturbtip").remove();
            $D.bindAutoHide({
                action: "click",
                element: e.element[0],
                stopEvent: !0,
                callback: function () {
                    e.hideElement(), e.element.attr("bindautohide", "0")
                }
            });
            e.switchEnable();
            e.menusHide();
            e.stopPropagation();
            this.bindMouseEvent();
        },
        bindMouseEvent: function () {
            var e = this;
            s("#mailnotify #nodisturbType").unbind("hover").hover(function () {
                e.showUndisturbMenu.call(e)
            }), s("#mailnotify #nodisturbVip").unbind("hover").hover(function () {
                e.showUndisturbVipMenu.call(e)
            }), s("#mailnotify #nodisturbType").unbind("mouseleave").mouseleave(function () {
                e.setTimemenuHide.call(e)
            }), s("#mailnotify #nodisturbVip").unbind("mouseleave").mouseleave(function () {
                e.setTimemenuHide.call(e)
            }), s(".menuAutoHide").unbind("mouseleave").mouseleave(function () {
                e.menusHide.call(e)
            })
        },
        toDetailed: function () {
            $App.show("message_control"), this.hideElement()
        },
        hideElement: function () {
            this.element.is(":visible") && (this.element.hide(), this.menusHide())
        },
        showAllowStyle: function () {
            var e, t = this, i = t.model.get("notifystyle"), a = t.model.get("syncDy"), s = t.model.ArrayIndexOf(i, 3) > -1, o = t.element.find("#allowed-list");
            a && i.push("syncDy"), s && (i.push(31), i.push(32), i.push(33), i.push(34));
            for (var n = 0; n < t.styleList.length; n++) e = t.model.ArrayIndexOf(i, t.styleList[n]) > -1, o.append(t.styleItems(t.styleList[n], e));
            o.append('<li class="more" id="showMoreContacts" style="display:none"><span class="icon">&nbsp;</span><div class="text"><a href="javascript:;">更多</a></div></li>')
        },
        styleItems: function (e, t) {
            var i = this, a = $T.format(i.iconItems, {
                title: i.iconTitle[e],
                tips: i.styleText[e],
                styleId: e
            }), o = s(a);
            return o.find("input").m139Check({
                labelClass: i.styleIcon.unselected[e],
                labeledClass: i.styleIcon.selected[e]
            }), t && o.find("input").attr("checked", !0).change(), i.addEvents2styleItem(o, e), o
        },
        addEvents2styleItem: function (e, t) {
            var i = this;
            e.hover(function () {
                e.find("input").is(":checked") ? i.element.find("#iconTitle").html("<span class='orange'>关闭" + i.styleTitle[t] + "</span>") : i.element.find("#iconTitle").html("<span class='green'>开启" + i.styleTitle[t] + "</span>"), i.element.find("#iconTitleParent").show(), i.element.find("#iconText").hide()
            }, function () {
                i.element.find("#iconTitle").text("开启／关闭邮件"), i.element.find("#iconTitleParent").hide(), i.element.find("#iconText").show()
            }), e.find("input").click(function () {
                top.BH("mailnotify_tip_styleicon_click"), e.find("input").is(":checked") ? i.element.find("#iconTitle").html("关闭<span class='orange'>" + i.styleTitle[t] + "</span>") : i.element.find("#iconTitle").html("开启<span class='green'>" + i.styleTitle[t] + "</span>"), i.menusHide();
                for (var a = i.element.find("[id^=allowedType_]"), o = [], n = 0; n < a.length; n++) {
                    var r = s(a[n]), l = r.attr("id").split("_")[1];
                    if ("syncDy" != l && r.is(":checked")) o.push(l); else if ("syncDy" == l) var c = r.is(":checked")
                }
                0 != o.length || c || i.model.get("emaillist").length ? (i.model.set({
                    notifystyle: o,
                    syncDy: c
                }), i.model.saveData()) : (top.M139.UI.TipMessage.warn("至少选择或者添加一种短信提醒类型", {
                    className: "",
                    delay: 1e3
                }), s(this).attr("checked", !0).change())
            })
        },
        saveStyle: function () {
            for (var e = this, t = e.element.find("[id^=allowedType_]"), i = [], a = 0; a < t.length; a++) {
                var o = s(t[a]), n = o.attr("id").split("_")[1];
                if ("syncDy" != n && o.is(":checked")) i.push(n); else if ("syncDy" == n) var r = o.is(":checked")
            }
            this.model.set({ notifystyle: i, syncDy: r })
        },
        showTimers: function () {
            var e = this, t = e.model.get("timerange"), i = e.element.find("#notifyTimelist"), a = e.isShowTimeMenu(t[0]);
            if (1 == t.length && a > -1) i.append(e.getTimeItems(t[0], 1, a)); else if (1 == t.length) i.append(e.getTimeItems(t[0], 2)); else for (var s = 0; s < t.length; s++) i.append(e.getTimeItems(t[s], 0))
        },
        getTimeItems: function (e, t, i) {
            var a = this, o = a.timeItems, n = Math.ceil(1e4 * Math.random());
            e.tid = n;
            var r = e.discription, l = $T.format(o, { text: r + " 提醒", tid: n }), c = s(l);
            return a.addEvents2timeItem(c, t, i), c
        },
        isShowTimeMenu: function (e) {
            for (var t = this, i = 0; i < t.timerange.length; i++) if (t.timerange[i].begin == e.begin && t.timerange[i].end == e.end && t.timerange[i].weekday == e.weekday) return i;
            return -1
        },
        addEvents2timeItem: function (e, t, i) {
            var a = this;
            0 == t ? e.hover(function () {
                e.find(".icon-closed").show()
            }, function () {
                e.find(".icon-closed").hide()
            }) : 1 == t ? (e.find(".icon-triangle").show(), e.hover(function () {
                a.menusHide("time"), s("#notifyTimeMenu").length || (s("body").append(a.getTimeMenu(i)), $D.dockElement(e[0], a.timeMenuEl[0], {
                    direction: "right",
                    dy: -5
                }), a.timeMenuEl.show()), a.timeMenuEl.hover(function () {
                    a.timeoutid && clearTimeout(a.timeoutid)
                })
            }, function () {
                a.setTimemenuHide()
            })) : (e.addClass("no"), e.find("a").addClass("c-default"))
        },
        getTimeMenu: function (e) {
            var t = this;
            return e = t.isShowTimeMenu(t.model.get("timerange")[0]), t.timeMenuEl = s(t.timeMenu), t.timeMenuEl.find("li[data-timetype=" + e + "] .icon-right").show(), t.timeMenuEl
        },
        chooseTime: function (e) {
            var t = this, i = s(e.target).parents("li");
            i.parent().find(".icon-right").hide(), i.find(".icon-right").show(), t.element.find("#notifyTimelist span").text(i.find("a").text());
            var a = i.attr("data-timetype");
            t.model.set("timerange", [t.timerange[a]]), t.saveStyle(), t.model.saveData(), t.menusHide(), top.BH("mailnotify_tip_choosetime_click"), t.stopPropagation(e)
        },
        stopPropagation: function (e) {
            var t = window.event || e;
            t.stopPropagation ? t.stopPropagation() : window.event && (window.event.cancelBubble = !0)
        },
        deleteTime: function (e) {
            var i = this, a = s(e.target).parents("li[data-tid]"), o = a.attr("data-tid"), n = i.model.findTimeByTid(o), r = i.model.get("timerange");
            top.BH("mailnotify_tip_deltime_click"), i.model.set("timerange", t.without(r, n)), a.remove(), i.onTimedelete(), i.saveStyle(), i.model.saveData(), i.stopPropagation(e)
        },
        onTimedelete: function () {
            var e = this, t = e.element.find("li[data-tid]");
            1 == t.length && (t.find(".icon-closed").remove(), t.addClass("no"), t.find("a").addClass("c-default"))
        },
        showContacts: function () {
            var e = this;
            e.model.get("emaillist").length > 0 ? e.element.find("#showMoreContacts").show() : (e.element.find("#showMoreContacts").hide(), s("#mailnotifyContact").remove())
        },
        showContactsMenu: function () {
            var e = this;
            this.menusHide("contact"), top.BH("mailnotify_tip_morecontact_click"), s("#mailnotifyContact").is(":visible") ? s("#mailnotifyContact").remove() : (s("body").append(e.getContactsMenu()), $D.dockElement(s("#showMoreContacts")[0], s("#mailnotifyContact"), {
                direction: "right",
                dx: 15
            }))
        },
        getContactsMenu: function () {
            for (var e, t = this, i = s(t.contactsMenu), a = t.contactItems, o = t.model.get("emaillist"), n = 0; n < o.length; n++) i.find("#contactsMenu").append($T.format(a, { email: o[n].email }));
            return i.hover(function () {
                e && clearTimeout(e)
            }, function () {
                e = setTimeout(function () {
                    i.remove()
                }, 4e3)
            }), i
        },
        menusHide: function (e) {
            "contact" != e && s("#mailnotifyContact").remove(), "time" != e && s("#notifyTimeMenu").remove(), "nodisturbType" != e && s("#nodisturbTypeMenu").remove(), "vip" != e && s("#nodisturbVipMenu").remove()
        },
        setTimemenuHide: function () {
            var e = this;
            e.timeoutid = setTimeout(function () {
                e.menusHide()
            }, 0)
        },
        deleteContacts: function (e) {
            var i = this;
            top.BH("mailnotify_tip_delcontact_click");
            var a = s(e.target).parents("li[data-email]"), o = a.attr("data-email"), n = i.model.get("emaillist");
            i.saveStyle();
            var r = i.model.get("notifystyle");
            if (1 == n.length && !t.without(r, 7).length && !i.model.get("syncDy")) return top.M139.UI.TipMessage.warn("至少选择或者添加一种短信提醒类型", {
                className: "",
                delay: 1e3
            }), void i.stopPropagation(e);
            for (var l = 0; l < n.length; l++) n[l].email == o && (i.model.set("emaillist", t.without(n, n[l])), a.remove());
            i.showContacts(), i.stopPropagation(e), i.model.saveData(!0)
        },
        switchEnable: function (e) {
            var t = this, i = t.element.find("#enable").is(":checked");
            this.menusHide(), i ? (e && t.element.find("[id^=allowedType_]").attr("checked", !0).change(), t.element.find(".isEnable").show(), t.element.find(".disEnable").hide()) : (t.element.find(".isEnable").hide(), t.element.find(".disEnable").show(), t.element.find(".cover").hide()), t.isBaseEnable = i, e && (t.model.set("enable", i), t.saveStyle(), i ? top.BH("mailnotify_tip_open_click") : top.BH("mailnotify_tip_close_click"), t.model.saveData(function (e) {
                e && e.responseData && "S_OK" == e.responseData.code ? a.UI.TipMessage.show((i ? "已开启" : "已关闭") + "短信提醒", { delay: 1e3 }) : (a.UI.TipMessage.error("短信提醒" + (i ? "开启" : "关闭") + "失败", { delay: 1e3 }), top.$App.trigger("notifySettingChange"))
            })), t.switchDisturbEnable()
        },
        switchDisturbEnable: function (e) {
            var t = this, i = t.element.find("#nodisturbEnable").is(":checked");
            t.menusHide(), i && t.isBaseEnable ? (t.element.find(".nodisturbIsEnable").show(), t.element.find(".nodisturbDisEnable").hide()) : t.isBaseEnable ? (t.element.find(".nodisturbIsEnable").hide(), t.element.find(".nodisturbDisEnable").show()) : (t.element.find(".nodisturbIsEnable").hide(), t.element.find(".nodisturbDisEnable").hide()), e && (t.model.set("nodisturbEnable", i), i ? top.BH("mailnodisturb_tip_open_click") : top.BH("mailnodisturb_tip_close_click"), t.model.saveNodisturbData(function (e) {
                e && e.responseData && "S_OK" == e.responseData.code ? a.UI.TipMessage.show((i ? "已开启" : "已关闭") + "勿扰模式", { delay: 1e3 }) : (a.UI.TipMessage.error("勿扰模式" + (i ? "开启" : "关闭") + "失败", { delay: 1e3 }), top.$App.trigger("notifySettingChange"))
            })), t.isNodisturbEnable = i
        },
        showUndisturb: function () {
            var e = this, t = e.model.get("nodisturbEnable"), i = e.model.get("nodisturbType"), a = e.model.get("nodisturbtimeObj"), s = e.model.get("allowVip"), o = e.element.find("#nodisturbType"), n = e.element.find("#nodisturbVip"), r = [{
                text: "不允许VIP联系人",
                style: "orange"
            }, { text: "允许VIP联系人", style: "green" }];
            if (e.element.find("#nodisturbEnable").attr("checked", t).change(), e.switchDisturbEnable(), 1 == i) o.find("span").text("当天勿扰"); else {
                var l = "每天 " + a.begin + ":00 至 " + a.end + ":00 勿扰";
                o.find("span").text(l)
            }
            n.find("span")[0].className = r[s].style, n.find("span").text(r[s].text)
        },
        showUndisturbMenu: function () {
            var e = this, t = e.model.get("nodisturbType"), i = e.model.get("nodisturbtimeObj"), a = e.element.find("#nodisturbType"), o = s($T.format(e.nodisturbTypeMenu, {
                begin: i.begin,
                end: i.end
            }));
            o.find("li[date-type=" + t + "] .icon-right").show(), o.find("li[date-type]").click(function (t) {
                e.model.set("nodisturbType", s(this).attr("date-type")), o.find(".icon-right").hide(), s(this).find(".icon-right").show(), a.find("span").text(s(this).text()), e.model.saveNodisturbData(), e.menusHide(), e.stopPropagation(t)
            }), o.find("li[date-type]").hover(function () {
                e.timeoutid && clearTimeout(e.timeoutid)
            }), e.menusHide("nodisturbType"), s("#nodisturbTypeMenu").length || (s("body").append(o), $D.dockElement(a[0], o[0], {
                direction: "right",
                dy: -5
            }))
        },
        showUndisturbVipMenu: function () {
            var e = this, t = e.model.get("allowVip"), i = e.element.find("#nodisturbVip"), a = s(e.nodisturbVipMenu), o = [{
                text: "不允许VIP联系人",
                style: "orange"
            }, { text: "允许VIP联系人", style: "green" }];
            a.find("li[date-type=" + t + "] .icon-right").show(), a.find("li[date-type]").click(function (n) {
                t = parseInt(s(this).attr("date-type")), e.model.set("allowVip", t), a.find(".icon-right").hide(), s(this).find(".icon-right").show(), i.find("span")[0].className = o[t].style, i.find("span").text(o[t].text), e.model.saveNodisturbData(), e.menusHide(), e.stopPropagation(n)
            }), a.hover(function () {
                e.timeoutid && clearTimeout(e.timeoutid)
            }), e.menusHide("vip"), s("#nodisturbVipMenu").length || (s("body").append(a), $D.dockElement(i[0], a[0], {
                direction: "right",
                dy: -5
            }))
        },
        initEvents: function () {
            var e = this;
            e.element.find("#enable,#nodisturbEnable").m139Check({
                labelClass: "closingbtn",
                labeledClass: "openingbtn"
            }), e.model.get("enable") ? e.element.find("#enable").attr("checked", !0).change() : e.element.find("#enable").attr("checked", !1).change()
        },
        onReLoad: function () {
            var e = this;
            e.model.on("reRender", function () {
                e.menusHide();
                e.element.remove();
                e.element = {};
                e.render();
            }),
            e.model.on("dataChange", function () {
                e.renderIcon()
            })
        }
    })),
    M2015.Mailnotify.View.create = function (e) {
        var t = new M2015.Mailnotify.Model(e),
            i = new M2015.Mailnotify.View({ model: t, type: e.type });
        return $App.registerConfig("mailnotifyTip", i), i
    }, M2015.Mailnotify.View.setData = function (e) {
        var t = $App.getConfig("mailnotifyTip");
        t.model.setData(e)
    }
}(jQuery, _, Backbone, M139),

//M2012.Remark.Model
function (e, t, i) {
    i.namespace("M2012.Remark.Model", Backbone.Model.extend({
        defaults: {
            max: 50,
            subject: "",
            opType: null,
            mid: null,
            memo: null
        }, remarkDataSource: function (e) {
            var t = this, a = { opType: this.get("opType"), mid: this.get("mid") };
            "get" != a.opType && "delete" != a.opType && (a.memo = this.get("memo")), i.RichMail.API.call("mbox:mailMemo", a, function (s) {
                s.responseData.code && "S_OK" == s.responseData.code ? (e(s.responseData["var"]), "delete" == t.get("opType") && t.get("isDelTask") ? (t.set("memo", ""), t.deleteRemarkFromCalendar()) : "update" != t.get("opType") && "add" != t.get("opType") || !t.get("isTask") || t.setRemarkToCalendar()) : "get" != a.opType && i.UI.TipMessage.show("备注内容添加失败，请稍后再试", {
                    delay: 3e3,
                    className: "msgRed"
                })
            })
        }, setRemarkToCalendar: function () {
            var e = this, t = { comeFrom: 0 };
            t.content = e.get("memo"), t.mid = e.get("mid"), i.RichMail.API.call("calendar:updateNoteCalendar", t, function () {
            })
        }, deleteRemarkFromCalendar: function () {
            var e = this, t = { comeFrom: 0 };
            t.mid = e.get("mid"), i.RichMail.API.call("calendar:delMailCalendar", t, function () {
                requestData = {
                    type: "taskFlag",
                    value: 0,
                    time: 0,
                    ids: [e.get("mid")]
                }, i.RichMail.API.call("mbox:setTaskMessages", requestData, function (t) {
                    var i = t.responseData;
                    if (i && "S_OK" == i.code) {
                        i["var"];
                        $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView"), $App.clearTabCache("readmail_" + e.get("mid")), "list" != e.get("showtype") && $("#readmail_" + e.get("mid")).find("a[name=mailtask]").length && $("#readmail_" + e.get("mid")).find("a[name=mailtask] i").removeClass("i-Clicked").removeClass("i-true").addClass("i-Clicked").attr("status", "add")
                    }
                })
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Remark.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Remark.View", s.extend({
        filterNull: function (e) {
            return e.replace(/^\s+|\s+$/g, "")
        },
        initEvents: function () {
            var e = this, t = (e.model.get("mid"), a(e.el)), i = function () {
                var i = t.find(".nulltips"), s = this, o = a(s).val();
                o = o.replace(/\$/gi, "");
                var n = o.length > e.max ? o.substr(0, e.max) : o, r = e.max - n.length;
                n.length > 0 ? i.hide() : i.show(), a(this).val(n), t.find(".yel").html(r)
            };
            if (t.find("a[name=remark_edit],a[name=remark_editlist]").live("click", function (t) {
                var t = t ? t : window.event, i = t.target || t.srcElement;
                e.isHaveTask(function () {
                    e.editRemark(i)
            })
            }), t.find("a[name=remark_delete]").unbind("click").live("click", function () {
                e.isHaveTask(e.deleteConfirm)
            }), t.find("a[name=remark_edit_cancel]").live("click", function () {
                e.editCancel()
            }), t.find("a[name=remark_edit_save]").live("click", function () {
                e.editSave()
            }), t.find("a[name=remark_add]").live("click", function (t) {
                var t = t ? t : window.event, i = t.target || t.srcElement;
                a(i).parent().hasClass("i-Noted") || a(i).hasClass("i-Noted") ? e.isHaveTask(e.deleteConfirm) : e.isHaveTask(function () {
                    e.addRemark()
            })
            }), t.find("textarea.remarkcontent").live("keyup", i).live("focus", i), "list" == e.model.get("showtype")) {
                a(".dayAreaTable a.i_note_y").live("mouseover", function () {
                    var t = a(this).attr("mid"), i = a(this).prev().text().trim();
                    e.model.set({ mid: t, subject: i, showtype: "list" }), e.showTips(), a("#listremark").remove()
                }).live("mouseleave", function () {
                    e.hideTips()
                }), a("#listtips").live("mouseover", function () {
                    e.onTips()
                }).live("mouseleave", function () {
                    console.log("leave"), e.hideTips()
                });
                var s;
                a("#listremark").live("mouseleave", function () {
                    s = setTimeout(function () {
                        a("#listremark").remove()
                    }, 500)
                }).live("mouseover", function () {
                    clearTimeout(s)
                })
            }
        },
        template: {
            tips: ['<div  class="remarkTips shadow" style="position:absolute;width:310px;{1}" id="{2}">', '<div class="remarkTips-title clearfix">', '<span class="fl fw_b">备注:</span>', '<span class="fr"><a href="javascript:;" name="remark_editlist">编辑</a> <a href="javascript:;" name="remark_delete">删除</a></span>', "</div>", '<p style="text-align:left;word-break:break-all">{0}</p>', "</div>"],
            show: ["<span class='rMl'>备&#12288;注：</span>", "<div class='rMr' name='remarksContainer'>", "<div class='remarkTips shadow' style=''>", "<p>{0}</p>", "<div class='remarkTips-title clearfix p_relative'>", "<span class='fr'>", "<a href='javascript:;' name='remark_edit' >编辑</a>&nbsp;&nbsp;", "<a href='javascript:;' name='remark_delete'>删除</a>", "</span>", "</div>", "</div>", "</div>"],
            edit: ['<fieldset class="p_relative">', '<legend class="hide"></legend>', '<textarea class="remidText inShadow remarkcontent" name="remarktext" style="margin:3px 0 0 10px;" placeholder="请输入备注内容"></textarea>', '<p style="padding:5px 10px;"><span class="bibText">还可输入<strong class="yel">50</strong> 字</span></p>', '<div class="sTipsBtn boxIframeBtn" style=""><span class="bibBtn">', '<a class="btnSure" href="javascript:void(0)" name="remark_edit_save"rel="{0}"><span>确 定</span></a>&nbsp;', '<a class="btnNormal" href="javascript:void(0)" name="remark_edit_cancel"><span>取 消</span></a></span>', "</div>", "</fieldset>"],
            readEdit: ['<span class="rMl">备　注：</span>', '<div class="rMr" name="remarksContainer">', '<div class="remarkTips shadow show-texts" style="">', '<textarea class="remarkcontent"></textarea>', "</div>", '<span id="view43_opt_button" class="bibBtn"><a href="javascript:;" class="btnG" hidefocus="" role="button" id="view43_save_button"><span>保 存</span></a> <a href="javascript:;" class="btnTb" hidefocus="" role="button" id="view43_cancel_button"><span>取 消</span></a><span class="maxenter">最多可输入50字</span></span>', "</div>"]
        },
        initialize: function () {
            var e = this;
            return this.model = new M2012.Remark.Model, this.showtemp = e.template.show.join(""), this.edittemp = e.template.edit.join(""), this.tipstemp = e.template.tips.join(""), this.readEdit = e.template.readEdit.join(""), this.max = this.model.get("max"), s.prototype.initialize.apply(this, arguments)
        },
        getPosition: function () {
            var e = this, t = e.model.get("mid");
            if ("list" == e.model.get("showtype")) {
                var i = a($App.getMailboxView().el).find("#div_maillist tr[mid=" + t + "]").find(".i_note_y").offset(), s = i.left + 11, o = i.top - 62;
                return $T.Utils.format("left:{0}px;top:{1}px;z-index:999", [s, o])
            }
            return ""
        },
        showTips: function () {
            var e = this;
            if (0 == a("#listtips").length) {
                e.model.get("mid");
                e.model.set({ opType: "get" }), e.model.remarkDataSource(function (t) {
                    if (null != t.memo) {
                        var i = $T.Utils.format(e.tipstemp, [$T.Utils.htmlEncode(t.memo), e.getPosition(), "listtips"]);
                        a("#remarkContainer").append(i)
                    }
                })
            }
            clearTimeout(e.timer), a(".dayAreaTable").find(".sTips").remove()
        },
        onTips: function (e) {
            var t = this;
            clearTimeout(t.timer), a("#listtips").show()
        },
        hideTips: function (e) {
            var t = this;
            t.timer = setTimeout(function () {
                a("#listtips").remove()
            }, 500)
        },
        isHaveTask: function (e) {
            var t = this, a = t.model.get("mid"), s = $App.getMailDataByMid(a) ? $App.getMailDataByMid(a).fid : 0;
            i.RichMail.API.call("mbox:readMessage", { mid: a, fid: s, returnHeaders: ["flag"] }, function (i) {
                var a = i.responseData;
                if (a && "S_OK" == a.code) {
                    var s = a["var"].flag.taskFlag;
                    t.model.set("isTask", s), e(s, t)
                } else t.model.set("isTask", !1), e(!1, t)
            })
        },
        deleteConfirm: function (e, t) {
            t.model.get("mid");
            if (!t.isShowDel) {
                if (t.isShowDel = !0, e) var i = '确定要删除备注内容吗？<dd class="norTipsLine"><input type="checkbox" value="" id="chk_20" class="mr_5"><label for="chk_20">同步删除待办任务</label></dd>'; else var i = "确定要删除备注内容吗？";
                var a = $Msg.confirm(i, function () {
                    a.$el.find("input").prop("checked") ? t.model.set("isDelTask", !0) : t.model.set("isDelTask", !1), t.deleteRemark(), BH("del_remark_sure")
                }, {
                    icon: "warn", isHtml: !0, onClose: function () {
                        t.isShowDel = !1
                    }
                })
            }
        },
        deleteRemark: function () {
            var e = this, t = e.model.get("mid"), s = a(e.el).find(".remarkTips p").html();
            e.model.set({ opType: "delete", mid: t, memo: s }), e.model.remarkDataSource(function (s) {
                e.editCancel(), i.UI.TipMessage.show("备注删除成功", { delay: 3e3 }), "list" == e.model.get("showtype") ? (a(e.el).find(".remarkTips").remove(), $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.validateTab("readmail_" + t)) : (a(e.el).find("#readremark_" + t).html("").hide(), appView.trigger("mailboxDataChange"), $App.clearTabCache("readmail_" + t)), a(e.el).find("a[name=remark_add] i").removeClass("i-Noted").addClass("i-Note")
            })
        },
        addRemark: function () {
            var e = this;
            if (a(".sTipsRemind").length > 0) return void e.repeatTips();
            if (!a(e.el).find("i.i_notebig").hasClass("i_remark_y") && 0 == a(e.el).find(".remarkcontent").length) {
                var t = (e.model.get("mid"), a(e.el).find("p").html());
                e.showEditWin("add", t)
            }
        },
        repeatTips: function () {
            i.UI.TipMessage.show("如须编辑其他备注，请关闭正在编辑的备注 ", { delay: 3e3 }), a(".sTipsRemind")[0].focus()
        },
        editRemark: function (e) {
            var t = this;
            if (a(".sTipsRemind").length > 0) return void t.repeatTips();
            t.model.get("mid");
            if ("list" == t.model.get("showtype")) {
                var i = a(e).parents(".remarkTips").find("p").html();
                "position:absolute;" + t.getPosition();
                t.showEditWin("update", i)
            } else {
                var i = a(e).parents(".remarkTips").find("p").html();
                t.showEditLocal(i)
            }
            $T.Utils.textFocusEnd(a(t.el).find(".remarkcontent")[0])
        },
        showTopTips: function (e) {
            "add" == e ? i.UI.TipMessage.show("备注添加成功", { delay: 3e3 }) : i.UI.TipMessage.show("备注修改成功", { delay: 3e3 })
        },
        showEditWin: function (e, t) {
            var i = this;
            i.model.get("mid");
            if (!i.isShow) {
                var s = $Msg.showHTML($T.Utils.format(i.edittemp, [e]), {
                    width: "485px",
                    dialogTitle: "添加备注",
                    onClose: function () {
                        i.isShow = !1, i.win = void 0
                    }
                }), o = function () {
                    var e = this, t = a(e).val();
                    t = t.replace(/\$/gi, "");
                    var s = t.length > i.max ? t.substr(0, i.max) : t, o = i.max - s.length;
                    a(this).val(s), i.win.find(".yel").html(o)
                };
                i.win = s.$el, i.isShow = !0, i.editWin = s, i.win.find("textarea.remarkcontent").val($T.Html.decode(t)), i.win.find(".btnSure").click(function (e) {
                    i.editSave(e)
                }), i.win.find(".btnNormal").click(function (e) {
                    i.editWin.close()
                }), i.win.find("textarea.remarkcontent").on("keyup", o).on("focus", o).trigger("focus")
            }
        },
        showEditLocal: function (e) {
            var t = this, i = t.model.get("mid"), s = e;
            a(t.el).find("#readremark_" + i).html(t.readEdit).show(), a(t.el).find("#readremark_" + i).find("textarea").val($T.Html.decode(e)), a(t.el).find("#readremark_" + i).find("a.btnG").click(function (e) {
                t.editSave(e)
            }), a(t.el).find("#readremark_" + i).find("a.btnTb").click(function () {
                a(t.el).find("#readremark_" + i).html($T.Utils.format(t.showtemp, [s])).show(), a(t.el).find("#readremark_" + i + " .remarkTips p").html(s)
            })
        },
        editCancel: function () {
            var e = this;
            a(e.el).find(".sTips").remove()
        },
        editSave: function (e) {
            var t = this, s = "", o = t.model.get("mid"), n = t.win ? t.win.find(".remarkcontent") : a(t.el).find("#readremark_" + o).find("textarea"), r = t.filterNull(n.val()), l = t.win ? t.win.find("a[name=remark_edit_save]").attr("rel") : "update";
            return 0 == r.length ? void i.UI.TipMessage.show("备注内容不能为空", { delay: 3e3 }) : r.length > this.max ? void $Msg.alert("备注最多输入" + this.max + "字") : (s = $T.Utils.htmlEncode(r), t.model.set({
                opType: l,
                mid: o,
                memo: r
            }), void t.model.remarkDataSource(function (e) {
                if (t.editCancel(), t.showTopTips(l), t.editWin ? t.editWin.close() : "", t.win = void 0, "add" == l && BH("readmail_addremarkok"), "list" == t.model.get("showtype")) {
                    if ("add" == l) {
                        var i = $T.Utils.format(t.tipstemp, [$T.Utils.htmlEncode(e.memo)], "tipstemp");
                        a(t.el).append(i)
                    } else a(t.el).find(".remarkTips p").html(s);
                    $App.validateTab("readmail_" + o)
                } else "sessionmail" == t.model.get("showtype") ? (a(t.el).find("#readremark_" + o).html($T.Utils.format(t.showtemp, [s])).show(), a(t.el).find("#readremark_" + o + " .remarkTips p").html(s), appView.trigger("mailboxDataChange")) : (a(t.el).find("#readremark_" + o).html($T.Utils.format(t.showtemp, [s])).show(), a(t.el).find("#readremark_" + o + " .remarkTips p").html(s), appView.trigger("mailboxDataChange"), a(t.el).find("a[name=remark_add] i").addClass("i-Noted").removeClass("i-Note"))
            }))
        },
        refreshSplit: function () {
            /mailbox_|mailsub_/i.test($App.getCurrentTab().name) && ("left" != $App.getLayout() && "top" != $App.getLayout() || ($App.trigger("showMailbox"), $App.trigger("refreshSplitView")))
        },
        render: function () {
            var e = this,
                t = e.model.get("mid");
            e.model.remarkDataSource(function (i) {
                if (null != i.memo) {
                    var s = $T.Utils.format(e.showtemp, [$T.Utils.htmlEncode(i.memo)]);
                    a(e.el).find("#readremark_" + t).html(s).show(),
                    location.search.indexOf("t=newwin") > -1 && a(".remarkTips-title .fr").v
                }
            })
        }
    })), $D.appendHTML(document.body, '<div id="remarkContainer"></div>');
    var o = new M2012.Remark.View({ el: "#remarkContainer", showtype: "list" });
    o.model.set({ mid: null, showtype: "list" }), o.initEvents()
}(jQuery, _, M139),

//M2012.Model.Pns.PnsModel
M139.namespace("M2012.Model.Pns", {
    PnsModel: Backbone.Model.extend({
        callApi: M139.RichMail.API.call,
        get_pnsUrl: function () {
            return "/pns/poll?sid=" + top.sid + "&comeFrom=1003"
        },
        get_updateMsgStatusUrl: function () {
            return "/subscribe/inner/bis/updateTipsMemcKey?sid=" + top.sid
        },
        pnsErrorInterval: 12e4,
        pnsTimer: null,
        defaults: { subFlag: 0 },
        msgTypes: {
            imgUploadMsg: 255,
            mailMsg: 70,
            calendarMsg: 100,
            superiorNum: 300,
            operateMsg: 1012,
            msgBox: 500,
            ReceiveFile: 601,
            groupMailMsg: 201,
            billTip: 301,
            postTip: 106,
            boutiqueTips: 304,
            billBackupToPdf: 602,
            wechatNotice: 668
        },
        logger: new top.M139.Logger({ name: "M2012.Folder.Model.FolderModel" }),
        initialize: function () {
            $App.registerModel("pnsModel", this)
        },
        startRequestPns: function () {
            var e = this, t = {};
            t.method = "get", t.timeout = e.pnsErrorInterval, t.error = function () {
                e.callPns(), e.logger.error("newMailArrival callPns error")
            }, t.ontimeout = function () {
                e.callPns(), e.logger.error("newMailArrival callPns timeout")
            }, t.isSendClientLog = !1, M139.RichMail.API.call(e.get_pnsUrl(), null, function (t) {
                var i = t.responseData;
                i ? i.errorCode ? (e.callPns(), e.logger.error("newMailArrival returndata error", "[pns/poll]", i)) : (e.pnsResultHandle(i), $App.trigger("pnsNewArrival", i), e.callPns(500)) : (e.callPns(), e.logger.error("newMailArrival returndata error", "[pns/poll]", i))
            }, t), e.noticeSendMsgTimer && clearTimeout(e.noticeSendMsgTimer), e.noticeSendMsgTimer = setTimeout(function () {
                top.SiteConfig.loginOnlineTip && M139.UI.TipLoginRemind.show()
            }, 2e3)
        },
        callPns: function (e) {
            var t = this;
            return top.$App.isSessionOut() ? void console.log("登录超时！不再请求PNS") : (t.pnsTimer && clearTimeout(t.pnsTimer), void (t.pnsTimer = setTimeout(function () {
                t.startRequestPns()
            }, e || t.pnsErrorInterval)))
        },
        pnsResultHandle: function (e) {
            var t = this;
            if (e.c > 0) for (var i = e.msg, a = 0, s = i.length; s > a; a++) i[a].type && i[a].type == this.msgTypes.mailMsg ? this.showNewMail(i) : i[a].type && i[a].type == this.msgTypes.calendarMsg ? this.showCalendarTip(i) : i[a].type == this.msgTypes.operateMsg ? this.showOperateTipMsg(i) : i[a].type == this.msgTypes.superiorNum ? this.showSuperiorNum(i) : i[a].type == this.msgTypes.msgBox ? this.showMsgBoxHot(i) : i[a].type == this.msgTypes.groupMailMsg ? this.showGroupMailMsg(i) : i[a].type == this.msgTypes.ReceiveFile ? this.showReceiveFile(i) : i[a].type == this.msgTypes.imgUploadMsg ? this.showImgUploadMsg(i) : i[a].type == this.msgTypes.billTip ? this.showBillTip(i) : i[a].type == this.msgTypes.postTip ? 0 == this.get("subFlag") && (this.showPostTip(i), this.set("subFlag", 1)) : i[a].type == this.msgTypes.boutiqueTips ? this.showBoutiqueTips(i) : "13465" == i[a].type ? this.showCheckSoutTips(i) : i[a].type == this.msgTypes.billBackupToPdf ? this.showBillBackupSuccNotice(i) : i[a].type == this.msgTypes.wechatNotice && this.showWechatNotice(i); else 0 == e.c && t.logger.debug("超时返回！autoReceiveMail")
        },
        showNewMail: function (e) {
            var t = e[0].ctx.mailMsgId, i = { ids: [t] };
            this.callApi("mbox:getMessageInfo", i, function (e) {
                if (e.responseData && e.responseData["var"]) {
                    var t = e.responseData["var"];
                    1 == window.PreloadMailState && "list" == $App.getLayout() && !$App.isSessionMode() && t.length > 0 && setTimeout(function () {
                        $App.readMail(t[0].mid, !1, t[0].fid, { silence: !0 }), window.PreloadMailState = 2
                    }, 0);
                    $App.getView("folder").model.set("vipMailStats", null);
                    $App.getView("mailbox").model.set("freshMailList", t);
                    $App.trigger("reloadFolder");
                    $App.getCurrentTab().name.indexOf("mailbox") >= 0 && $App.trigger("mailboxDataChange", { render: !0 });
                    $App.trigger("newMailArrival", t);
                    $App.trigger("msgBoxMailArrival", t);
                }
            })
        },
        showMsgBoxHot: function (e) {
            var t = 0, i = {
                groupmail_gin: "addrGroupinvite",
                addr_mkpn: "addrMaykown",
                calendar_cain: "calendarInvite",
                calendar_cen: "calendarActive",
                netdisk_tsen: "cabinet",
                cpo_cpopu: "myMagazine",
                cpo_cponm: "magazineHome"
            };
            M139.RichMail.API.call("msg:getRemindMsg", {}, function (e) {
                var a = e.responseData;
                if ("S_OK" == a.code) for (var s = 0; s < a["var"].length; s++) {
                    var o = a["var"][s];
                    i[o.msgType] && o.msgContent > 0 && t++
                }
                t && top.$Evocation.msgBoxHot.show()
            })
        },
        showReceiveFile: function (e) {
            $App.trigger("newFileArrival", e)
        },
        msgBoxHasNewMail: function () {
            return "undefined" == typeof $Evocation.hasNewMail ? $User.getUnreadMessageCount() : $Evocation.hasNewMail ? 1 : 0
        },
        showOperateTipMsg: function (msgArr) {
            for (var i = 0, l = msgArr.length; l > i; i++) {
                var strContent = msgArr[i].ctx, objContent = !1;
                try {
                    objContent = JSON.parse(strContent)
                } catch (e) {
                }
                if (!objContent) try {
                    objContent = eval("(" + strContent + ")")
                } catch (e) {
                }
                objContent ? top.operatetipsview && top.operatetipsview.showTips([objContent]) : top.M139.Logger.getDefaultLogger().error("智能运营与PNS对接报文异常", strContent)
            }
        },
        updateMpostMsgStatus: function () {
            function e() {
                var e = top.$App.pushMpostMsg;
                e && (e.msg.status = i.status)
            }

            var t = this, i = { status: 2 };
            M139.RichMail.API.call(t.get_updateMsgStatusUrl(), i, function (e) {
                var i = e.responseData;
                i && 0 == i.resultCode ? console.log("Function[updateMpostMsgStatus] update pushMsg.status suc!") : (console.log(e), t.logger.error("Function[updateMpostMsgStatus] update pushMsg.status error!"))
            }, { requestDataType: "Object2JSON" }), e()
        },
        showSuperiorNum: function (e) {
            var t = this;
            if (e[0]) {
                var i = M139.JSON.tryEval(e[0].ctx), a = i && i.msg.status;
                4 != a && (top.$App.pushMpostMsg = i, top.$App.trigger("renderNewMagazineIcon")), 1 == a && top.$App.once("updateMpostMsgStatus", function () {
                    t.updateMpostMsgStatus()
                })
            }
        },
        showBillTip: function (e) {
            try {
                M139.UI.TipLoginRemind.showBillTip(M139.JSON.tryEval(e[0]))
            } catch (t) {
            }
        },
        showPostTip: function (e) {
            try {
                M139.UI.TipLoginRemind.showPostTip(M139.JSON.tryEval(e[0].ctx))
            } catch (t) {
            }
        },
        showCheckSoutTips: function (e) {
        },
        showCalendarTip: function (msgArr) {
            var strContent = msgArr[0].ctx.msgContent, objContent = JSON.parse(strContent) || eval("(" + strContent + ")");
            if (objContent) {
                objContent.fromName = msgArr[0].ctx.mailFrom;
                try {
                    var calTipsObj = new M139.Ui.Tip.View.Calendar({ msgDatas: objContent });
                    calTipsObj && calTipsObj.render();
                } catch (e) {
                    console.log("M139.Ui.Tip.View.Calendar error"), console.log(e)
                }
            } else top.M139.Logger.getDefaultLogger().error("日历通知tip报文异常", strContent)
        },
        showGroupMailMsg: function (msgArr) {
            if (this.lastMsgId == msgArr[0].msgId) return void (console.warn && console.warn("the same msgid"));
            this.lastMsgId = msgArr[0].msgId;
            var content = "";
            try {
                content = JSON.parse(msgArr[0].ctx)
            } catch (e) {
                if (!content) try {
                    content = eval("(" + msgArr[0].ctx + ")")
                } catch (e) {
                }
                console.warn && console.warn("json parse exception...")
            }
            2 == Number(content.type) && (console.log && console.log(content), top.$App && top.$App.trigger("changeGroupMsgSum", content))
        },
        showImgUploadMsg: function (e) {
            "IMAGE_UPLOAD" == e[0].topic && (console.log("msgArr[0]['ctx']", e[0].ctx), top.$App && top.$App.trigger("imageUploadStatus", window.JSON.parse(e[0].ctx)))
        },
        showBoutiqueTips: function (e) {
            try {
                var t = M139.JSON.tryEval(e[0].ctx);
                t && "S_OK" == t.code && M139.UI.TipLoginRemind.showBoutiqueTips(t["var"] && t["var"].web_125)
            } catch (i) {
            }
        },
        showBillBackupSuccNotice: function (e) {
            if (e && 0 !== e.length) {
                var t = decodeURI(e[0].ctx), i = $T.Url.queryString("directoryId", t);
                i && top.M139.UI.TipMessage.show('账单邮件备份成功，请到<a href="javascript:;" onclick=\'top.Links.show("diskDev","&id=' + i + "\",true);return false;'>彩云网盘</a>中查看", { delay: 3e3 })
            }
        },
        showWechatNotice: function (e) {
            if (this.lastMsgId == e[0].msgId) return void (console.warn && console.warn("the same msgid"));
            if (this.lastMsgId = e[0].msgId, $("#message_control")[0]) {
                var t = $("#message_control")[0].contentWindow.document.getElementById("wechatNoticeSuccess");
                $(t).show().siblings().hide()
            }
        }
    })
}),

//M2012.Mailbox.Model.Mailbox
M139.namespace("M2012.Mailbox.Model", {
    Mailbox: Backbone.Model.extend({
        defaults: {
            fid: 1,
            layout: "list",
            pageIndex: 1,
            pageSize: 20,
            pageStyle: 1,
            flipType: "common",
            showSummary: !0,
            showSize: !0,
            isSearchMode: !1,
            isNewSearch: !0,
            isFullSearch: !1,
            order: "receiveDate",
            desc: "1",
            fromType: "addr",
            scrollFlipEnable: 0,
            scrollFlipMax: 3,
            firstPageUnreadCount: null,
            mid: null,
            billtype: null,
            specialFolderId: { adFolder: 11, myBill: 8, mySubscription: 9 },
            preloadData: null,
            mailListData: [],
            userIsLayout: "",
            list_layout_old: "",
            hasClickUnreadLink: !1,
            ServiceNumbersLoaded: !1,
            ServiceNumbers: []
        },
        modelTitle: {
            1000001: { sendId: 1000001, name: "通知动态", iconCls: "i_clock_pink", iconClsed: "i_clock_pinked" },
            1000006: {
                sendId: 1000006,
                name: "移动账单",
                iconCls: "i_money_blue",
                iconClsed: "i_money_blueed",
                inboxBh: "telbillClick_cluster"
            },
            1000007: { sendId: 1000007, name: "生活服务", iconCls: "i_service_pink", iconClsed: "i_service_pinked" },
            1000008: { sendId: 1000008, name: "广告邮件", iconCls: "i_sound_yellow", iconClsed: "i_sound_yellowed" },
            1000009: { sendId: 1000009, name: "注册激活", iconCls: "i_key_green", iconClsed: "i_key_greened" },
            1000010: { sendId: 1000010, name: "电子发票", iconCls: "i-blueinvoicing", iconClsed: "i-grayinvoicing" },
            1000011: {
                sendId: 1000011,
                name: "行程邮件",
                iconCls: "i-trip",
                iconClsed: "i-trip",
                inboxBh: "inbox_xiecheng",
                middlelogo: "i-trip"
            },
            1000013: { sendId: 1000013, name: "潮州移动", iconCls: "i-mobile-logo", iconClsed: "i-mobile-logo" },
            1000014: {
                sendId: 1000014,
                name: top.$User.getProvText() + "移动",
                iconCls: "i-mobile-logo",
                iconClsed: "i-mobile-logo"
            },
            1010001: {
                sendId: 1010001,
                name: "携程",
                iconCls: "i-xiec-14",
                iconClsed: "i-xiec-14",
                inboxBh: "inbox_xiecheng",
                officialBH: "Official_xiecheng",
                middlelogo: "i-xiec-18"
            },
            1010002: {
                sendId: 1010002,
                name: "12306",
                iconCls: "i-ch12306-14",
                iconClsed: "i-ch12306-14",
                inboxBh: "inbox_12306",
                officialBH: "Official_12306",
                middlelogo: "i-ch12306-18"
            },
            1010003: {
                sendId: 1010003,
                name: "中国国际航空",
                iconCls: "i-ca-14",
                iconClsed: "i-ca-14",
                inboxBh: "inbox_guojihangkong",
                officialBH: "Official_guojihangkong",
                middlelogo: "i-ca-18"
            },
            1010004: {
                sendId: 1010004,
                name: "中国南方航空",
                iconCls: "i-cz-14",
                iconClsed: "i-cz-14",
                inboxBh: "inbox_nanfanghangkong",
                officialBH: "Official_nanfanghangkong",
                middlelogo: "i-cz-18"
            },
            1010005: {
                sendId: 1010005,
                name: "艺龙",
                iconCls: "i-yil-14",
                iconClsed: "i-yil-14",
                inboxBh: "inbox_yilong",
                officialBH: "Official_yilong",
                middlelogo: "i-yil-18"
            },
            1010006: {
                sendId: 1010006,
                name: "去哪儿网",
                iconCls: "i-gow-14",
                iconClsed: "i-gow-14",
                inboxBh: "inbox_qunaer",
                officialBH: "Official_qunaer",
                middlelogo: "i-gow-18"
            },
            1010007: {
                sendId: 1010007,
                name: "商旅100",
                iconCls: "i-sl-14",
                iconClsed: "i-sl-14",
                inboxBh: "inbox_shang100",
                officialBH: "Official_shang100",
                middlelogo: "i-sl-18"
            },
            1000100: {
                sendId: 1000100,
                name: "浙江宁波水务公司",
                iconCls: "i-zjsw-14",
                iconClsed: "i-zjsw-14",
                inboxBh: "inbox_ningbo_water",
                officialBH: "Official_ningbo_water",
                middlelogo: "i-zjsw-18",
                alllistBh: "ningbo_shuiwu_all"
            },
            1000101: {
                sendId: 1000101,
                name: "浙江台州黄岩自来水",
                iconCls: "i-zjzls-14",
                iconClsed: "i-zjzls-14",
                inboxBh: "inbox_huangyan_water",
                officialBH: "Official_huangyan_water",
                middlelogo: "i-zjzls-18",
                alllistBh: "huangyan_water_all"
            },
            1000102: {
                sendId: 1000102,
                name: "浙江温州燃气",
                iconCls: "i-zjgas-14",
                iconClsed: "i-zjgas-14",
                inboxBh: "inbox_wenzhou_gas",
                officialBH: "Official_wenzhou_gas",
                middlelogo: "i-zjgas-18",
                alllistBh: "wenzhou_gas_all"
            },
            1000103: {
                sendId: 1000103,
                name: "浙江电力",
                iconCls: "i-zjdl-14",
                iconClsed: "i-zjdl-14",
                inboxBh: "inbox_zhejiang_dianli",
                officialBH: "Official_zhejiang_dianli",
                middlelogo: "i-zjdl-18",
                alllistBh: "zhejiang_dianli_all"
            },
            1010101: {
                sendId: 1010101,
                name: "招商银行",
                iconCls: "i-bankzh-14",
                iconClsed: "i-bankzh-14",
                inboxBh: "inbox_zhaoshang",
                officialBH: "Official_zhaoshang",
                middlelogo: "i-bankzh-18",
                alllistBh: "zhaoshang_all"
            },
            1010102: {
                sendId: 1010102,
                name: "建设银行",
                iconCls: "i-bankjs-14",
                iconClsed: "i-bankjs-14",
                inboxBh: "inbox_jianshe",
                officialBH: "Official_jianshe",
                middlelogo: "i-bankjs-18",
                alllistBh: "jianshe_all"
            },
            1010103: {
                sendId: 1010103,
                name: "交通银行",
                iconCls: "i-bankjt-14",
                iconClsed: "i-bankjt-14",
                inboxBh: "inbox_jiaotong",
                officialBH: "Official_jiaotong",
                middlelogo: "i-bankjt-18",
                alllistBh: "jiaotong_all"
            },
            1010104: {
                sendId: 1010104,
                name: "广发银行",
                iconCls: "i-bankgf-14",
                iconClsed: "i-bankgf-14",
                inboxBh: "inbox_guangfa",
                officialBH: "Official_guangfa",
                middlelogo: "i-bankgf-18",
                alllistBh: "guangfa_all"
            },
            1010105: {
                sendId: 1010105,
                name: "农业银行",
                iconCls: "i-bankny-14",
                iconClsed: "i-bankny-14",
                inboxBh: "inbox_nongye",
                officialBH: "Official_nongye",
                middlelogo: "i-bankny-18",
                alllistBh: "nongye_all"
            },
            1010106: {
                sendId: 1010106,
                name: "兴业银行",
                iconCls: "i-bankxy-14",
                iconClsed: "i-bankxy-14",
                inboxBh: "inbox_xingye",
                officialBH: "Official_xingye",
                middlelogo: "i-bankxy-18",
                alllistBh: "xingye_all"
            },
            1010107: {
                sendId: 1010107,
                name: "光大银行",
                iconCls: "i-bankgd-14",
                iconClsed: "i-bankgd-14",
                inboxBh: "inbox_guangda",
                officialBH: "Official_guangda",
                middlelogo: "i-bankgd-18",
                alllistBh: "guangda_all"
            },
            1010108: {
                sendId: 1010108,
                name: "中国邮政储蓄银行",
                iconCls: "i-bankyz-14",
                iconClsed: "i-bankyz-14",
                inboxBh: "inbox_youzheng",
                officialBH: "Official_youzheng",
                middlelogo: "i-bankyz-18",
                alllistBh: "youzheng_all"
            },
            1010109: {
                sendId: 1010109,
                name: "华夏银行",
                iconCls: "i-bankhs-14",
                iconClsed: "i-bankhs-14",
                inboxBh: "inbox_huaxia",
                officialBH: "Official_huaxia",
                middlelogo: "i-bankhs-18",
                alllistBh: "huaxia_all"
            }
        },
        isFirstLoad: !0,
        setAll: function (e, t) {
            var i = $App.getView("mailbox").model, a = $App.getView("mailbox_other").model;
            i.set(e, t), a.set(e, t)
        },
        getLayoutStr: function (e) {
            var t = { 0: "list", 1: "top", 2: "left" };
            return t[e]
        },
        initialize: function (e) {
            var t = this;
            $App.on("userAttrsLoad", function (e) {
                null != e.list_layout && "1" != $App.getCustomAttrs("userIsLayout") && $(document).width() >= 1440 && 2 != e.list_layout ? (t.set("layout", "left"), t.set("list_layout_old", t.getLayoutStr(e.list_layout))) : null != e.list_layout && t.set("layout", t.getLayoutStr(e.list_layout));
                var i = $App.getConfig("UserAttrs");
                t.set("pageSize", i.defaultPageSize || 20), t.set("pageStyle", $App.getCustomAttrs("pageStyle") || 1), t.set("showSize", 1 == i.isShowSize), t.set("showSummary", 1 == i.isShowContent), t.set("isFullSearch", 1 == i.fts_flag), t.set("needReload", !0), t.set("fromType", $App.getCustomAttrs("from") || "addr"), t.set("scrollFlipEnable", Number($App.getCustomAttrs("flip")) ? 1 : 0)
            }), $App.on("InitDataConfig", function (e) {
                t.setAll("InitDataConfig", e)
            })
        },
        nextPage: function () {
            this.set("pageIndex", this.get("pageIndex") + 1)
        },
        resetPages: function (e) {
            var t = this.get("pageIndex");
            if (t && e.responseData && !isNaN(e.responseData["var"])) {
                var i = Number(e.responseData["var"]), a = this.getFolderInfo(this.get("fid")), s = (this.get("pageIndex") - 1) * this.get("pageSize") + 1, o = a.stats.messageCount - i;
                o > 0 && s > o && this.set("pageIndex", Math.ceil(o / this.get("pageSize")))
            }
        },
        getPageCount: function (e) {
            var t = 0, i = this.get("fid");
            if (this.get("isSearchMode")) {
                var a = this.get("searchStats"), s = this.get("searchOptions") && this.get("searchOptions").sessionEnable;
                t = 2 == s && this.underClusterFolder() ? a.sessionCount : a.messageCount
            } else if ($App.isSessionMode() && $App.isSessionFid(i)) t = this.get("sessionCount"); else if (this.underClusterFolder()) t = this.get("sessionCount"); else {
                var o = this.getFolderInfo(i);
                if (!o) return 1;
                t = o.stats.messageCount
            }
            var n = Math.ceil(t / this.get("pageSize"));
            return 0 >= n && (n = 1), n
        },
        getFolderInfo: function () {
            var e = {}, t = this.get("fid"), i = this.get("searchStats");
            return this.get("isSearchMode") || 7 == t ? (e = {
                name: this.isUnreadMode() ? "未读邮件" : this.isSubscribeMode() || this.isClusterColumn() || this.isClusterList() ? "订阅邮件" : "搜索结果",
                stats: { messageCount: i ? i.messageCount : 0, unreadMessageCount: i ? i.unreadMessageCount : 0 }
            }, this.get("isContactsMail") && (e.name = "与 " + top.$App.getAddrNameByEmail(this.get("isContactsMailAndTheEmailIs")) + " 的往来邮件"), 7 == t && (e.name = "误删除恢复")) : (e = $App.getFolderById(t), e || (7 == t ? e = {
                fid: 7,
                type: 1,
                name: "误删除恢复",
                stats: { messageCount: 0, unreadMessageCount: 0 }
            } : 8 == t ? e = {
                fid: 8,
                type: 1,
                name: "账单中心",
                stats: { messageCount: 0, unreadMessageCount: 0 }
            } : 9 == t ? e = {
                fid: 9,
                type: 1,
                name: "精品订阅",
                stats: { messageCount: 0, unreadMessageCount: 0 }
            } : 11 == t ? e = {
                fid: 11,
                type: 1,
                name: "广告文件",
                stats: { messageCount: 0, unreadMessageCount: 0 }
            } : 12 == t && (e = { fid: 12, type: 1, name: "商讯生活", stats: { messageCount: 0, unreadMessageCount: 0 } }))), e
        },
        callApi: M139.RichMail.API.call,
        getDataSource: function (e) {
            if (0 == this.get("showSize") && "size" == this.get("order")) {
                this.set("order", "receiveDate");
                this.set("desc", 1);
            }
            if (3 == this.get("fid") && "from" == this.get("order")) {
                this.set("order", "to");
            }
            if (this.get("isSearchMode") && this.get("isContactsMail")) {
                this.searchContactsMail(e)
            } else {
                if (this.get("isSearchMode")) {
                    this.searchMail(e)
                } else {
                    if (this.isFirstLoad && 1 == this.get("fid") && this.get("preloadData")) {
                        this.isFirstLoad = !1;
                        e(this.get("preloadData"));
                    } else {
                        if (7 == this.get("fid")) {
                            this.searchDelBackMail(e);
                        } else {
                            this.getMailList(e);
                        }
                    }
                }
            }
        },
        clearPreloadData: function () {
            this.set("preloadData", null)
        },
        fillPreloadData: function () {
            var e = this;
            this.isPreload() && this.getMailList(function (t) {
                e.set("preloadData", t)
            })
        },
        isPreload: function () {
            return window.isPreloadUser && isPreloadUser()
        },
        readMeetingStatus: function (e, t) {
            this.callApi("calendar:getInviterStatus", e, function (e) {
                var i = $.parseJSON(e.responseText);
                i && "S_OK" == i.code && t(i["var"].status)
            })
        },
        reMetting: function (e, t) {
            this.callApi("calendar:updateInviteStatus", e, function (e) {
                var i = $.parseJSON(e.responseText);
                i && "S_OK" == i.code && t("S_OK")
            })
        },
        getStrokeList: function (e, t) {
            var i = t;
            M139.HttpRouter.addRouter("webapp", ["mbox:getMailOders"]), this.callApi("mbox:getMailOders", e, function (e) {
                e.responseData && "S_OK" == e.responseData.code && i(e.responseData["var"].orderConten)
            })
        },
        preloadMail: function (e) {
            if (1 == window.PreloadMailState) for (var t = 0; t < e.length; t++) {
                var i = e[t];
                if (0 == t) {
                    "list" != $App.getLayout() || $App.isSessionMode() || setTimeout(function () {
                        $App.readMail(i.mid, !1, i.fid, { silence: !0 }), window.PreloadMailState = 2
                    }, 0);
                    break
                }
            }
        },
        dealMailList: function (e) {
            "19" == $User.getAreaCode() && $.each(e, function (t, i) {
                1000013 == i.sendId && (i.flags.top = 1, e.unshift(e.splice(t, 1)[0]))
            })
        },
        getMailList: function (e) {
            var t = this, i = this.getPageCount();
            this.get("pageIndex") > i && this.set("pageIndex", i);
            var a = (this.get("pageIndex") - 1) * this.get("pageSize") + 1, s = {
                fid: this.get("fid"),
                order: this.get("order"),
                desc: this.get("desc"),
                start: a,
                total: this.get("pageSize"),
                topFlag: "curr_task"
            };
            if ($App.isSessionMode() ? s.sessionEnable = 1 : s.sessionEnable = 2, 1 == s.fid) {
                var o = M139.Core.getCGUID(), n = (new Date).getTime(), r = ["maillist", o, "", ""];
                top.window.sendUData("webp_maillist_click", r)
            }
            var l = arguments;
            $RM.getMailList(s, function (i) {
                if (($App.isSessionMode() || t.underClusterFolder()) && t.set("sessionCount", i.sessionCount), 1 == t.get("fid") && t.clusterSubscription(i["var"]), i && "S_OK" == i.code) {
                    if (t.preloadMail(i["var"]), t.dealMailList(i["var"]), e(i["var"]), o && n) {
                        var a = (new Date).getTime() - n, s = ["maillist", o, "S_OK", a];
                        top.window.sendUData("webp_maillist_loaded", s)
                    }
                } else {
                    M139.UI.TipMessage.hide();
                    if (i && "2351011" == i.errorCode) {
                        $App.showUnlock(t.get("fid"));
                        $App.close();
                    } else {
                        M139.UI.TipMessage.showRetry(l.callee, t, l);
                    }
                }
            })
        },
        getUnreadBillCounts: function (e) {
            var t = this;
            t.callApi("user:getInitDataConfig", { type: 0, dataType: 1 }, function (i) {
                top.$App.registerConfig("InitData", i.responseData);
                if (i.responseData && "S_OK" == i.responseData.code) {
                    t.set({
                        UnreadMobilebillCounts: i.responseData.billNew1 || 0,
                        UnreadLifeserviceCounts: i.responseData.billNew2 || 0,
                        UnreadNoticeCounts: i.responseData.billNew3 || 0,
                        UnreadRegisteCounts: i.responseData.billNew4 || 0,
                        UnreadExtensionCounts: i.responseData.billNew5 || 0,
                        UnreadInvoiceCounts: i.responseData.billNew6 || 0,
                        UnreadChaoMessageCounts: i.responseData.billNew7 || 0
                    });
                    e && e();
                }
            })
        },
        clusterSubscription: function (e) {
            for (var t, i = 0, a = [], s = 0; s < e.length; s++) {
                var o = e[s];
                1 == o.subscriptionFlag && (0 == i ? t = o : (1 == o.flags.read, e.splice(s, 1), s--), a.push(i + 1 + "." + o.subject), i++)
            }
            i > 1 && (t.clusterCount = i, t.summary = a.join(""))
        },
        billCityList: {
            1: "10086@gd.chinamobile.com",
            2: "10086@yn.chinamobile.com",
            3: "10086@gx.chinamobile.com",
            4: "account@139.com",
            5: "10086@sd.chinamobile.com",
            6: "beijing10086@bj.chinamobile.com",
            7: "10086@ln.chinamobile.com",
            8: "fj10086@139.com",
            9: "10086@hl.chinamobile.com",
            10: "10086@gz.chinamobile.com",
            11: "ydkf@10086.ah.chinamobile.com",
            12: "10086@gs.chinamobile.com",
            13: "chinamobile@hi.chinamobile.com",
            14: "hebei10086@139.com",
            15: "10086@ha.chinamobile.com",
            16: "hbmc10086@139.com",
            17: "hnmcc.com@139.com",
            18: "10086@jl.chinamobile.com",
            19: "10086@js.chinamobile.com",
            20: "10086@jx.chinamobile.com",
            21: "10086@nm.chinamobile.com",
            22: "10086@nx.chinamobile.com",
            23: "10086@qh.chinamobile.com",
            24: "10086@sx.chinamobile.com",
            25: "10086@sn.chinamobile.com",
            26: "10086@sc.chinamobile.com",
            27: "10086@tj.chinamobile.com",
            28: "10086@xz.chinamobile.com",
            29: "10086@xj.chinamobile.com",
            30: "10086@zj.chinamobile.com",
            31: "10086@cq.chinamobile.com"
        },
        getBillTypeName: function (e) {
            var t = { 10: "移动账单", 11: "生活账单", 12: "金融账单", 13: "其他账单" };
            return t[e]
        },
        updateBillType: function (e) {
            var t = this, i = {
                fid: 0,
                recursive: 0,
                isSearch: 1,
                ignoreCase: 0,
                condictions: [{ field: "from", operator: "contains", value: t.billCityList[$User.getProvCode()] }]
            };
            M139.RichMail.API.call("mbox:updateBillType", i, function (t) {
                t.responseData.code && "S_OK" == t.responseData.code && e && e({
                    "var": t.responseData["var"],
                    stats: t.responseData.stats
                })
            });
            var a = {
                fid: 0,
                recursive: 0,
                isSearch: 1,
                ignoreCase: 0,
                condictions: [{ field: "from", operator: "contains", value: "cmpay_bill@139.com" }]
            };
            M139.RichMail.API.call("mbox:updateBillType", a, function (e) {
            })
        },
        getBillTypeList: function (e) {
            M139.HttpRouter.serverList.bill.path != SiteConfig.billPath && (M139.HttpRouter.serverList.bill.path = SiteConfig.billPath), M139.RichMail.API.call("bill:getTypeList", {}, function (t) {
                e && e(t.responseData)
            })
        },
        setBill: function (e, t, i) {
            M139.RichMail.API.call(e, t, function (e) {
                i && i(e.responseData)
            })
        },
        checkUnreadChange: function () {
            if (!this.get("isSearchMode")) {
                var e = !1, t = this.get("mailListData"), i = $.grep(t, function (e, t) {
                    return !(!e.flags || 1 != e.flags.read)
                }), a = this.get("firstPageUnreadCount");
                return null != a && a < i.length && (e = !0, $App.trigger("reloadFolder", {
                    callback: function () {
                        $App.trigger("refreshCount")
                    }
                })), this.set("firstPageUnreadCount", i.length), e
            }
        },
        getFreshUnread: function (e) {
            this.callApi("mbox:searchMessages", {
                fid: 0,
                isSearch: 1,
                start: 1,
                total: 5,
                order: "receiveDate",
                desc: 1,
                flags: { read: 1 }
            }, function (t) {
                if (t.responseData["var"] && t.responseData["var"].length > 0) {
                    var i = t.responseData["var"][0].mid;
                    console.log(t.responseData["var"][0].subject), console.log(i), e(i)
                }
            }), this.invalidateSearch()
        },
        getFreshUnreadBill: function (e) {
            this.callApi("mbox:searchMessages", {
                fid: 0,
                isSearch: 1,
                start: 1,
                total: 5,
                order: "receiveDate",
                desc: 1,
                flags: { read: 1, billFlag: 1 }
            }, function (t) {
                if (t.responseData["var"] && t.responseData["var"].length > 0) {
                    var i = t.responseData["var"][0];
                    e && e(i)
                }
            }), this.invalidateSearch()
        },
        getMailSubscribeStatus: function (e) {
            var t = this;
            t.callApi("user:mailSubscribeStatus", "", function (t) {
                e(t && t.responseData && "S_OK" == t.responseData.code ? t.responseData["var"] : [])
            }, { method: "get" })
        },
        getMailNotify: function (e) {
            if ($App.getConfig("mailnotifyTip")) {
                var t = $App.getConfig("mailnotifyTip").model, i = {};
                i.enable = t.get("enable"), i.notifystyle = t.get("notifystyle").join(","), e(i)
            } else this.callApi("user:getMailNotify", {}, function (t) {
                t && t.responseData && "S_OK" == t.responseData.code && e(t.responseData["var"][0])
            })
        },
        setMailSubscribe: function (e, t) {
            var i = this, a = [1, "", 2, 3, "", 4, "", "", "", "", "", "", "", "", 1][e], s = ["", "移动账单", "生活服务", "通知动态", "推广邮件", "潮州移动"], o = ["", "logoType:1 or logoType:110 and billFlag:1", "logoType:0 and billflag:1", "logoType:66 or sendId:1000001", "logoType:68", "orlogoType:0 or sendId:1000013"], n = {};
            n.businessType = a, n.operationType = t ? 1 : 0;
            var r = top.$App.getCustomAttrs("reject_mail_off");
            r ? str = r.split(",") : str = [], t ? (str = _.without(str, o[a]), 2 == a && (str = _.without(str, "logoType:2 and billflag:1"))) : (str = _.without(str, o[a]), 2 == a && (str = _.without(str, "logoType:2 and billflag:1")), str.push(o[a]), 2 == a && str.push("logoType:2 and billflag:1"));
            var l = "";
            for (var c in n) l = l + "&" + c + "=" + n[c];
            top.$App.setCustomAttrs("reject_mail_off", str.join(","), function () {
                i.callApi("user:mailSubscribe", "", function (e) {
                    e && e.responseData && "S_OK" == e.responseData.code ? M139.UI.TipMessage.show((t ? "已开启" : "已关闭") + s[a] + "邮件接收", { delay: 1e3 }) : (M139.UI.TipMessage.error(s[a] + "邮件接收" + (t ? "开启" : "关闭") + "失败", { delay: 1e3 }), i.trigger("rejectMailOffFail", !t))
                }, { method: "get", urlParam: l })
            })
        },
        setBillMailNotify: function (e, t, i) {
            function a(i) {
                M139.RichMail.API.call("user:updateMailNotify", { mailnotify: [i] }, function (i) {
                    i && i.responseData && "S_OK" == i.responseData.code ? M139.UI.TipMessage.show((t ? "已开启" : "已关闭") + o[e] + "短信提醒", { delay: 1e3 }) : M139.UI.TipMessage.error(o[e] + "短信提醒" + (t ? "开启" : "关闭") + "失败", { delay: 1e3 })
                })
            }

            var s = this, o = { 31: "移动账单", 32: "生活服务", 33: "通知动态", 34: "推广邮件", 35: "潮州移动" };
            if ($App.getConfig("mailnotifyTip")) {
                var n = ($App.getConfig("mailnotifyTip"), $App.getConfig("mailnotifyTip").model), r = n.get("notifystyle");
                if (r = _.uniq(r), !_.without(r, e).length) return top.M139.UI.TipMessage.warn("至少选择或者添加一种短信提醒类型", {
                    className: "",
                    delay: 1e3
                }), void $("#receiveBillSms_" + i).attr("checked", !t).change();
                t ? (r.push(e), n.set("notifystyle", r), n.saveData(function (a) {
                    a && a.responseData && "S_OK" == a.responseData.code ? (M139.UI.TipMessage.show((t ? "已开启" : "已关闭") + o[e] + "短信提醒", { delay: 1e3 }), top.$App.trigger("notifySettingChange")) : (M139.UI.TipMessage.error(o[e] + "短信提醒" + (t ? "开启" : "关闭") + "失败", { delay: 1e3 }), $("#receiveBillSms_" + i).attr("checked", !t).change())
                })) : (r = _.without(r, e), n.set("notifystyle", r), n.saveData(function (a) {
                    a && a.responseData && "S_OK" == a.responseData.code ? (M139.UI.TipMessage.show((t ? "已开启" : "已关闭") + o[e] + "短信提醒", { delay: 1e3 }), top.$App.trigger("notifySettingChange")) : (M139.UI.TipMessage.error(o[e] + "短信提醒" + (t ? "开启" : "关闭") + "失败", { delay: 1e3 }), $("#receiveBillSms_" + i).attr("checked", !t).change())
                }))
            } else s.callApi("user:getMailNotify", {}, function (i) {
                if (i && i.responseData && "S_OK" == i.responseData.code) {
                    var s = i.responseData["var"][0], o = s.notifystyle.split(",");
                    t ? (o.push(e), s.notifystyle = o.join(","), a(s)) : (o = _.without(o, e), s.notifystyle = o.join(","), a(s)), top.$App.trigger("notifySettingChange")
                }
            })
        },
        getFreshMail: function (e, t, i) {
            var a = { fid: 1, order: "receiveDate", desc: "1", start: 1, total: e };
            if (i) for (elem in i) a[elem] = i[elem];
            $RM.getMailList(a, function (e) {
                t && t(e["var"])
            })
        },
        addLoadBehavior: function () {
            var e = this.get("fid"), t = {
                1: "mailbox_inbox_load",
                2: "mailbox_draft_load",
                3: "mailbox_sent_load",
                4: "mailbox_deleted_load",
                5: "mailbox_junk_load",
                6: "mailbox_virus_load",
                7: "mailbox_7_load",
                8: "mailbox_bill_load",
                9: "mailbox_subscribe_load",
                11: "mailbox_ad_load"
            };
            if (this.isStarMode()) BH("mailbox_star_load"); else if (this.isSubscribeMode()) BH("mailbox_subscribe_load"); else if (t[e]) BH(t[e]); else {
                var i = $App.getFolderType(e);
                3 == i ? BH("mailbox_custom_load") : 5 == i ? BH("mailbox_tag_load") : -3 == i && BH("mailbox_pop_load")
            }
        },
        isApproachMode: function () {
            if (this.get("isSearchMode")) {
                if (this.isStarMode() || this.isVipMode() || this.isBillMode() || this.isSubscribeMode() || this.isTaskMode() || this.isUnreadMode()) return !1;
                var e = this.get("searchOptions");
                if (e && e.condictions) for (var t = 0; t < e.condictions.length; t++) if ("sendId" == e.condictions[t].field || "logoType" == e.condictions[t].field) return !1;
                return !0
            }
            return !1
        },
        isStarMode: function () {
            return !!(this.get("isSearchMode") && (options = this.get("searchOptions"), options && options.flags && 1 == options.flags.starFlag))
        },
        isVipMode: function () {
            return !!this.get("isVipMode")
        },
        isBillMode: function () {
            if (this.get("isSearchMode")) {
                if (options = this.get("searchOptions"), options && options.flags && 1 == options.flags.billFlag) return !0;
                if (options && options.condictions && options.condictions[0] && "logoType" == options.condictions[0].field && 4 != options.condictions[0].value) return !0;
                if (options && options.condictions && options.condictions[0] && "sendId" == options.condictions[0].field && 1000006 === options.condictions[0].value) return !0
            }
            return !1
        },
        isOnlyBillMode: function () {
            if (this.get("isSearchMode")) {
                options = this.get("searchOptions") || {};
                var e = options.flags && 1 == options.flags.billFlag, t = options.condictions && options.condictions[0] && "logoType" == options.condictions[0].field && (1 === options.condictions[0].value || 110 === options.condictions[0].value), i = options.condictions && options.condictions[0] && "sendId" == options.condictions[0].field && 1000006 === options.condictions[0].value;
                if (e && (t || i)) return !0
            }
            return !1
        },
        isOnemailMode: function () {
            return !!(this.get("isSearchMode") && top.$User.isChinaMobileUser() && (options = this.get("searchOptions"), options && 3 == options.addSendIdFlag && 4 == options.condictions.length && 1000010 == options.condictions[0].value && 1000006 == options.condictions[1].value && 1000014 == options.condictions[2].value && 1000013 == options.condictions[3].value))
        },
        isVoiceMode: function () {
            return !!(this.get("isSearchMode") && (options = this.get("searchOptions"), options && options.condictions && options.condictions[0] && "logoType" == options.condictions[0].field && 4 == options.condictions[0].value))
        },
        isSubscribeMode: function () {
            return !!(this.get("isSearchMode") && (options = this.get("searchOptions"), options && options.flags && 1 == options.flags.subscriptionFlag))
        },
        isClusterList: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            for (var t = e.get("searchOptions"), i = t && t.condictions || [], a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && o.value && "EQ" == o.operator) return !0
            }
            return !1
        },
        isClusterColumn: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            for (var t = e.get("searchOptions"), i = t && t.condictions || [], a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && 0 == o.value && "GT" == o.operator) return !0
            }
            return !1
        },
        isUnreadMode: function () {
            var e = this.get("searchOptions");
            return this.get("isSearchMode") && e && e.flags && e.flags.read
        },
        isRepliedMode: function () {
            var e = this.get("searchOptions");
            return this.get("isSearchMode") && e && e.flags && e.flags.replied
        },
        isForwardedMode: function () {
            var e = this.get("searchOptions");
            return this.get("isSearchMode") && e && e.flags && e.flags.forwarded
        },
        isReadMode: function () {
            var e = this.get("searchOptions");
            return this.get("isSearchMode") && e && e.flags && 0 == e.flags.read
        },
        isPriorityMode: function () {
            var e = this.get("searchOptions");
            return this.get("isSearchMode") && e && e.condictions && e.condictions[0] && e.condictions[0].field && "priority" == e.condictions[0].field
        },
        isTaskMode: function () {
            return !(!this.get("isSearchMode") || !this.get("isTaskMode"))
        },
        isPopMode: function () {
            var e = this.get("fid");
            return -3 === $App.getFolderType(e)
        },
        isTaskFlagMode: function () {
            if (this.get("isSearchMode")) {
                var e = this.get("searchOptions");
                if (e && e.flags && e.flags.taskFlag) return !0
            }
            return !1
        },
        isStrokeMode: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            if (e.isEofficialMode()) return !1;
            for (var t = e.get("searchOptions"), i = t && t.condictions || [], a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && (1000011 == o.value || o.value >= 1010001 && o.value <= 1010100)) return !0
            }
            return !1
        },
        isUtilityBillMode: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            if (e.isEofficialMode()) return !1;
            for (var t = e.get("searchOptions"), i = t && t.condictions || [], a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && o.value >= 1000100 && o.value <= 1000103) return !0
            }
            return !1
        },
        isEofficialMode: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            var t = e.get("searchOptions"), i = t && t.condictions || [];
            if ("2" == t.sessionEnable) for (var a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && o.value >= 1010001 && o.value < 1010200) return !0;
                if ("sendId" == o.field && o.value >= 1000100 && o.value < 1000104) return !0
            }
            return !1
        },
        isBankMode: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            if (e.isEofficialMode()) return !1;
            for (var t = e.get("searchOptions"), i = t && t.condictions || [], a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && 1010100 < o.value && o.value < 1010200) return !0
            }
            return !1
        },
        isUseNewMode: function () {
            var e = $App.getCurrentTab().view.model;
            if (!e.get("isSearchMode")) return !1;
            for (var t = e.get("searchOptions"), i = t && t.condictions || [], a = 0, s = i.length; s > a; a++) {
                var o = i[a];
                if ("sendId" == o.field && o.value && (1000011 == o.value || o.value >= 1010001 && o.value <= 102e4)) {
                    var n = this.modelTitle[o.value], r = n ? n.name : "";
                    return this.set({ modelTitle: r, modelType: o.value }), o.value
                }
                if ("sendId" == o.field && o.value && o.value >= 1000100 && o.value <= 1000103) {
                    var n = this.modelTitle[o.value], r = n ? n.name : "";
                    return this.set({ modelTitle: r, modelType: o.value }), o.value
                }
            }
            return !1
        },
        isVipMail: function (e) {
            var t = this.getVipEmails();
            return e = $Email.getEmailQuick(e), t ? $.inArray(e, t) >= 0 : !1
        },
        regTellBillCardSummery: function (e) {
            function t(e) {
                var t = e.match(/计费周期:([^;]*);/) || ["", ""], i = t[1];
                return i.indexOf(":") > 0 && (i = i.replace(/\s?\d{2}:\d{2}(:\d{2})?/, "")), i
            }

            function i(e) {
                if (!e) return "";
                if (e.indexOf("/") > 0) {
                    var t = e.match(/\d*.?(\d*)/) || ["", ""];
                    return t[1]
                }
                if (e.indexOf("月") > 0) {
                    var i = e.indexOf("月");
                    return e[i - 2] + e[i - 1]
                }
                if (e.indexOf("-") > 0 || e.indexOf("至") > 0 || e.indexOf("|") > 0) {
                    var a = e.split(/[-|至]/)[0].trim();
                    return 8 === a.length ? a[4] + a[5] : ""
                }
                return ""
            }

            var a = this;
            e = e.replace(/(计费周期:\s*[^\s]*)\s*([至|-])\s*([^\s]*)/, "$1$2$3");
            for (var s = ["客户姓名", "手机号码", "计费周期", "本期消费", "本期余额", "积分余额"], o = 0; o < s.length; o++) if (e.indexOf(s[o]) < 0) return !1;
            var n = e.match(/客户姓名:\s*([^:;]*).*;/) || ["", ""], r = e.match(/手机号码:\s*([^:;]*).*;/) || ["", ""], l = e.match(/本期消费:\s*([^:;]*).*;/) || ["", ""], c = e.match(/本期余额:\s*([^:;]*).*;/) || ["", ""], d = e.match(/积分余额:\s*([^:;]*).*;/) || ["", ""], p = t(e), m = i(p);
            return {
                user: n[1],
                tel: r[1],
                costCycle: p,
                cost: l[1],
                balance: c[1],
                membersPoint: d[1],
                month: m,
                styleDetail: a.isOnemailMode() ? "style='display:none'" : ""
            }
        },
        getVipEmails: function () {
            var e;
            return top.Contacts.getVipInfo && (e = top.Contacts.getVipInfo()), e && e.vipEmails && e.vipEmails.length > 0 ? e.vipEmails : null
        },
        getVipMailCount: function (e) {
            var t = this.getVipEmails();
            if (t) {
                var i = {
                    fid: 0,
                    recursive: 0,
                    ignoreCase: 0,
                    isSearch: 1,
                    start: 1,
                    total: 20,
                    limit: 1e3,
                    isFullSearch: 2,
                    exceptFids: [4],
                    condictions: [{ field: "from", operator: "contains", value: t.join(";") }]
                };
                this.callApi("mbox:searchMessages&type=webapp", i, function (t) {
                    e(t.responseData.stats)
                }), this.invalidateSearch()
            } else e({ unreadMessageCount: 0 })
        },
        addVipContact: function (e) {
            for (var t = top.Contacts.getVipInfo(), i = t.vipGroupId, a = [], s = 0; s < e.length; s++) a.push(e[s].serialId);
            var o = a.join(","), n = { GroupId: i, GroupType: 1, SerialId: o }, r = M2012.Contacts.getModel();
            r.modifyGroup(n, function () {
                $Msg.alert("所选联系人已加为VIP联系人，其邮件已自动标记为“VIP邮件”。"), $App.trigger("vipContactsOnChange", { data: e })
            })
        },
        searchVip: function () {
            var e = this.getVipEmails();
            if (e) {
                var t = {
                    isVip: !0,
                    isFullSearch: 2,
                    exceptFids: [4],
                    condictions: [{ field: "from", operator: "contains", value: e.join(";") }]
                };
                $App.searchMail(t)
            } else $App.show("vipEmpty"), $App.close("mailsub_0")
        },
        clearVipCache: function () {
            var e = $App.getView("folder").model;
            e.set("vipMailStats", null)
        },
        detectLockMail: function (e, t) {
            var i = $App.getView("folder").model;
            this.isStarMode() ? t.messageCount < i.get("totalStarCount") && $App.trigger("folderLocked") : this.isTaskMode() && t.messageCount < i.get("todoTaskCount") && $App.trigger("folderLocked")
        },
        searchTaskmail: function (e) {
            var t = {
                order: "taskDate",
                desc: 0,
                isTaskmail: !0,
                condictions: [{ field: "taskDate", operator: ">", value: 0 }, {
                    field: "taskDate",
                    operator: "<",
                    value: new Date(2030, 0, 1).getTime() / 1e3 - 1
                }],
                flags: { taskFlag: 1 }
            };
            e = $.extend(t, e), $App.searchMail(e)
        },
        searchSingleDayTaskmail: function (e) {
            var t = {
                order: "taskDate",
                desc: 0,
                isTaskmail: !0,
                flags: { taskFlag: 1 },
                condictions: [{ field: "taskDate", operator: ">", value: e.milSecond / 1e3 }, {
                    field: "taskDate",
                    operator: "<",
                    value: (e.milSecond + 864e5) / 1e3 - 1
                }]
            };
            e = $.extend(t, e), $App.searchMail(e)
        },
        searchMail: function (e) {
            var t = this;
            if (this.get("searchStats")) {
                var i = this.getPageCount();
                this.get("pageIndex") > i && this.set("pageIndex", i)
            }
            var a = (this.get("pageIndex") - 1) * this.get("pageSize") + 1, s = {
                fid: 0,
                recursive: 0,
                ignoreCase: 0,
                isSearch: this.get("isNewSearch") ? 1 : 0,
                isFullSearch: 2,
                start: a,
                total: this.get("pageSize"),
                limit: 1e3,
                order: this.get("order"),
                desc: this.get("desc")
            }, o = this.get("searchOptions");
            if (s = $.extend(s, o), 1 == this.get("isFullSearch") && s.condictions) {
                var n;
                $(s.condictions).each(function (e, t) {
                    "content" == t.field && (n = !0)
                }), n && 3 != s.isFullSearch && (s.isFullSearch = 1)
            }
            s.billType && (s.billType = parseInt(s.billType), s.isFullSearch = !1, delete s.ignoreCase, delete s.statType, delete s.title), this.set("lastSearchOptions", s), M139.Logger.getDefaultLogger().timeStart("mbox:searchMessages"), this.callApi("mbox:searchMessages", s, function (i) {
                return M139.Logger.getDefaultLogger().timeEnd("mbox:searchMessages"), i.responseData && "S_OK" == i.responseData.code ? (t.set("searchStats", i.responseData.stats), e(i.responseData["var"], i.responseData.stats), t.detectLockMail(i.responseData["var"], i.responseData.stats), void BH("global_search_ok")) : !1
            }), this.set("bill_type", "0")
        },
        searchDelBackMail: function (e) {
            var t = this;
            start = (this.get("pageIndex") - 1) * this.get("pageSize") + 1, userData = top.$App.getConfig("UserData") || {}, userMainData = userData.orderInfoList, a = "", orderstatus = "", serviceIdArr = [];
            for (var i in userMainData) {
                var a = userMainData[i].serviceId;
                "232" == a && (orderstatus = userMainData[i].orderStatus), serviceIdArr.push(a)
            }
            serviceIdArr.join(",").indexOf("232") > -1 && (4 == orderstatus || 0 == orderstatus) ? day = 30 : day = 0;
            var s = (top.$User.getServiceItem(), top.M139.Date.getServerTime());
            startDate = Math.round((s.getTime() - 24 * day * 60 * 60 * 1e3) / 1e3), endDate = Math.round(Number(s.getTime()) / 1e3);
            var o = {
                fid: 7,
                recursive: 1,
                isSearch: 1,
                isBackup: 1,
                start: start,
                desc: this.get("desc"),
                order: "modifyDate",
                total: this.get("pageSize"),
                isFullSearch: 0,
                condictions: [{ field: "receiveDate", operator: ">", value: startDate }, {
                    field: "receiveDate",
                    operator: "<",
                    value: endDate
                }]
            };
            this.callApi("mbox:searchMessages", o, function (i) {
                var a = i.responseData["var"], s = i.responseData.stats;
                t.set("searchStats", s), e(a, s)
            })
        },
        searchContactsMail: function (e) {
            var t = this;
            if (this.get("earchStats")) {
                var i = this.getPageCount();
                this.get("pageIndex") > i && this.set("pageIndex", i)
            }
            var a = (this.get("pageIndex") - 1) * this.get("pageSize") + 1, s = this.get("searchOptions").condictions[0].value, o = $User.getAccountListArray().join(";"), n = {
                isSearch: 1,
                isTogether: 1,
                start: a,
                total: this.get("pageSize"),
                condictions: [{ field: "from", operator: "contains", value: o }, {
                    field: "to",
                    operator: "contains",
                    value: s
                }]
            };
            this.callApi("mbox:queryContactMessages", n, function (i) {
                t.set("searchStats", i.responseData.stats), e(i.responseData["var"], i.responseData.stats)
            })
        },
        getMailById: function (e) {
            var t = this.get("mailListData"), i = this.get("freshMailList");
            if (t && i && i.length > 0 && (t = t.concat(i)), t) {
                var a = $.grep(t, function (t, i) {
                    return t.mid == e
                });
                return a.length > 0 ? a[0] : null
            }
            return null
        },
        markAllRead: function (e, t, i) {
            var a = this, s = 0;
            if (this.clearVipCache(), t) if ("star" == t) {
                if (s = $App.getView("folder").model.get("unreadStarCount"), !(s > 0)) return !1;
                var o = { fid: 0, recursive: 0, ignoreCase: 0, isSearch: 1, start: 1, total: 20, flags: { starFlag: 1 } };
                this.callApi("global:sequential", {
                    items: [{
                        func: "mbox:searchMessages",
                        "var": o
                    }, { func: "mbox:getSearchResult", "var": {} }]
                }, function (e) {
                    var t = e.responseData["var"].mid, s = { type: "read", value: 0 };
                    a.markMail(t, s, function (e) {
                        i(e.responseData["var"]), a.clearVipCache()
                    })
                }), this.invalidateSearch()
            } else if ("custom" == t || "pop" == t || "tag" == t) {
                var n = $App.getFolders(t), r = [];
                if ($(n).each(function (e, t) {
                    t.stats && (s += t.stats.unreadMessageCount), r.push({
                    func: "mbox:updateMessagesAll",
                        "var": { fid: t.fid, flags: { read: 2 }, type: "read", value: "0" }
                })
                }), !s) return !1;
                this.callApi("global:sequential", { items: r }, function (e) {
                    e.responseData["var"];
                    i(1), a.clearVipCache()
                })
            } else "search" == t && this.callApi("mbox:searchMessages", this.get("lastSearchOptions"), function (e) {
                a.callApi("mbox:getSearchResult", {}, function (e) {
                    var t = e.responseData["var"].mid, s = { type: "read", value: 0 };
                    a.markMail(t, s, function (e) {
                        i(e.responseData["var"]), a.clearVipCache()
                    })
                })
            }); else {
                var l = { fid: e, flags: { read: 2 }, type: "read", value: "0" }, c = $App.getFolderById(e);
                if (c && c.stats && (s = c.stats.unreadMessageCount), !(s > 0)) return i && i(), !1;
                this.updateMessageAll(l, i)
            }
            return !0
        },
        deleteAllUnread: function (e, t) {
            var i = { fid: e, flags: { read: 2 }, type: "move", newFid: 4 };
            this.updateMessageAll(i, t)
        },
        deleteAllOrdinary: function () {
            var e = this;
            this.callApi("mbox:searchMessages", this.get("lastSearchOptions"), function (t) {
                e.callApi("mbox:getSearchResult", {}, function (t) {
                    var i = t.responseData["var"], a = {};
                    $.each(i.mid, function (e, t) {
                        a[t] = null
                    }), e.superSelectResult = a, $App.trigger("mailCommand", {
                        command: "move",
                        mids: i.mid,
                        fid: 4
                    }), M139.Logger.getDefaultLogger().info("Delete search result,count=" + i.mid.length, !0)
                })
            })
        },
        updateMessageAll: function (e, t) {
            this.callApi("mbox:updateMessagesAll", e, function (e) {
                t(e.responseData["var"])
            })
        },
        superSelectAll: function (e, t) {
            var i = this.get("fid"), a = {
                recursive: 0,
                ignoreCase: 0,
                isSearch: 1,
                isFullSearch: 0,
                start: 1,
                total: 1,
                limit: 1e4
            }, s = this.getFolderInfo(i);
            5 == s.type ? a.label = [i] : a.fid = i, "unread" == e ? a.flags = { read: 1 } : "read" == e && (a.flags = { read: 0 }), this.get("isSearchMode") || 7 == i ? this.callApi("mbox:getSearchResult", {}, function (e) {
                t(e.responseData["var"])
            }) : (this.callApi("global:sequential", {
                items: [{
                    func: "mbox:searchMessages",
                    "var": a
                }, { func: "mbox:getSearchResult", "var": {} }]
            }, function (e) {
                t(e.responseData["var"])
            }), this.invalidateSearch())
        },
        setAll: function (e, t) {
            for (var i = ["mailbox", "mailbox_other"], a = 0; a < i.length; a++) {
                var s = $App.getView(i[a]);
                s && s.model && s.model.set(e, t)
            }
        },
        invalidateSearch: function () {
            this.setAll("isNewSearch", !0)
        },
        clearSuperSelect: function () {
            this.superSelectResult = {}
        },
        getSelectedRow: function (e) {
            var t = $App.getMailboxView().model.superSelectResult, i = [], a = [];
            for (var s in t) if (t.hasOwnProperty(s)) {
                var o = t[s];
                o ? (i.push(o.mid), a.push(o.mailSession)) : i.push(s)
            }
            return e && 0 == i.length && $(e).find(".dayAreaTable input[type=checkbox]:checked").each(function (e) {
                var t = $(this).parents("tr").attr("sessionid") || "";
                i.push($(this).parents("tr").attr("mid")), t && a.push(+t)
            }), { mids: i, sids: a }
        },
        getPOPAccounts: function (e, t) {
            $RM.getPOPAccounts(e, function (e) {
                t(e)
            })
        },
        syncPOPAccount: function (e, t) {
            e && e.id ? $RM.syncPOPAccount(e, function (e) {
                t(e)
            }) : this.callApi("user:syncPOPAccountAll", {}, function (e) {
                t(e)
            })
        },
        modPOPAccount: function (e, t) {
            $RM.setPOPAccount(e, function (e) {
                t(e)
            })
        },
        refuseMail: function (e, t) {
            function i() {
                $RM.setWhiteBlackList(a, function (e) {
                    t("2029" == e.errorCode ? !1 : !0)
                })
            }

            var a = { opType: "add", type: 0, member: e };
            $RM.getWhiteBlackList({ type: 1 }, function (t) {
                if (t && t["var"]) {
                    var a = t["var"], s = $.grep(a, function (t, i) {
                        return t == e
                    });
                    s.length > 0 ? $RM.setWhiteBlackList({ opType: "delete", type: 1, member: e }, function () {
                        i()
                    }) : i()
                }
            })
        },
        reduceSessionCount: function (e) {
            var t = this.get("sessionCount");
            if (t && e.responseData && !isNaN(e.responseData["var"])) this.set("sessionCount", t - Number(e.responseData["var"])); else {
                var i = this.get("searchStats"), a = this.get("searchOptions") && this.get("searchOptions").sessionEnable, s = 0;
                i ? (s = 2 == a && this.underClusterFolder() ? i.sessionCount : i.messageCount, i.sessionCount ? this.attributes.searchStats.sessionCount = i.sessionCount - Number(e.responseData["var"]) : this.attributes.searchStats.messageCount = i.messageCount - Number(e.responseData["var"])) : s = 0
            }
        },
        moveMail: function (e, t, i) {
            var a, s = this, o = [], n = "";
            "object" == typeof e ? (a = e.mids, o = e.sendIds, n = e.sendFlag) : a = e, this.callApi("mbox:moveMessages", {
                ids: a,
                sendIds: o,
                newFid: t,
                sendFlag: n
            }, function (e) {
                4 == t ? s.callApi("mbox:updateMessagesStatus", { ids: a, type: "read", value: 0 }, function () {
                    i(e)
                }) : i(e), 7 == top.$App.getCurrentFid() && s.resetPages(e), s.clearVipCache(), s.reduceSessionCount(e)
            })
        },
        moveSessionMail: function (e, t, i) {
            this.callApi("mbox:moveMessages", { sessionIds: e, newFid: t }, function (e) {
                i(e), 7 == top.$App.getCurrentFid() && self.resetPages(e)
            })
        },
        backupMail: function (e, t, i) {
            var t = t || "";
            M139.UI.TipMessage.show("邮件备份中..."), this.callApi("disk:backupMail", {
                mailIds: e.join(","),
                backupType: t
            }, function (e) {
                M139.UI.TipMessage.hide(), i(e)
            })
        },
        backupMailPDF: function (e, t) {
            var i = {};
            e && (i.mailIds = e), this.callApi("disk:backupAllBillMail", i, function (e) {
                t(e)
            })
        },
        savetoNote: function (e, t) {
            M139.UI.TipMessage.show("邮件备份中..."), this.callApi("mnote:mailsToNote", { mids: e.join(",") }, function (e) {
                M139.UI.TipMessage.hide(), t(e)
            })
        },
        deleteMail: function (e, t) {
            var i, a = this, s = [], o = "", n = 0;
            "object" == typeof e ? (i = e.mids, s = e.sendIds, o = e.sendFlag, n = e.delBackup) : i = e, this.callApi("mbox:deleteMessages", {
                ids: i,
                sendIds: s,
                sendFlag: o,
                delBackup: n
            }, function (e) {
                t(e), a.clearVipCache(), a.reduceSessionCount(e)
            })
        },
        deleteSessionMail: function (e, t) {
            var i = this;
            this.callApi("mbox:deleteMessages", {
                sessionIds: e.sessionIds,
                ids: e.mids,
                sendIds: e.sendIds,
                delBackup: e.delBackup
            }, function (e) {
                t(e), i.clearVipCache()
            })
        },
        physicallyDelete: function (e, t) {
            var i = this, a = e.mids || [], s = e.sessionIds || [], o = e.sendIds || [];
            e.value || 0;
            this.callApi("mbox:updateMessagesStatus", {
                ids: a,
                type: "removeIsSave",
                value: 1,
                sessionIds: s,
                sendIds: o
            }, function (e) {
                t(e), i.clearVipCache(), 7 == top.$App.getCurrentFid() && i.resetPages(e)
            })
        },
        markMail: function (e, t, i) {
            var a = this;
            this.callApi("mbox:updateMessagesStatus", { ids: e, type: t.type, value: t.value }, function (s) {
                $.each(e, function (e, i) {
                    var s = a.getMailById(i);
                    s && (s.flags || $.extend(s, { flags: {} }), s.flags[t.type] = t.value)
                }), i && i(s), a.clearVipCache()
            })
        },
        markUseNewModeMail: function (e, t) {
            var i = this;
            this.callApi("mbox:updateMessagesStatus", e, function (e) {
                t && t(e), i.clearVipCache()
            })
        },
        markSessionMail: function (e, t, i) {
            var a = this;
            "object" == typeof e ? (mids = e.mids, e = e.sessionIds) : e = e, this.callApi("mbox:updateMessagesStatus", {
                ids: mids,
                sessionIds: e,
                type: t.type,
                value: t.value
            }, function (e) {
                $.each(mids, function (e, i) {
                    var s = a.getMailById(i);
                    s && (s.flags || $.extend(s, { flags: {} }), s.flags[t.type] = t.value)
                }), i(e), a.clearVipCache()
            })
        },
        addSpecialTagBehavior: function (e, t) {
            var i = $App.getTagsById([e]);
            "重要任务" != i && "紧急任务" != i || BH(t)
        },
        addTagForMail: function (e, t, i) {
            var a = this, s = !1;
            return $.each(e, function (i, o) {
                var n = a.getMailById(o);
                if (n && n.label && _.uniq(n.label).length >= 10 && (s = !0), n) for (var i = 0; i < n.label.length; i++) n.label[i] == t && (e = _.without(e, o))
            }), s ? ($Msg.alert("单封邮件的标签数量已超出系统上限，不能继续添加标签"), void M139.UI.TipMessage.hide()) : void this.callApi("mbox:updateMessagesLabel", {
                type: "add",
                ids: e,
                labelId: t
            }, function (s) {
                $(e).each(function (e, i) {
                    var s = a.getMailById(i);
                    s && $.isArray(s.label) && s.label.push(Number(t))
                }), i(s)
            })
        },
        removeTagForMail: function (e, t, i) {
            var a = this;
            this.callApi("mbox:updateMessagesLabel", { type: "delete", ids: e, labelId: t }, function (s) {
                $(e).each(function (e, i) {
                    var s = a.getMailById(i);
                    s && s.label && (s.label = _.without(s.label, Number(t)))
                }), i(s)
            })
        },
        emptyTagForMail: function (e, t) {
            var i = this;
            this.callApi("mbox:updateMessagesLabel", { type: "empty", ids: e }, function (a) {
                $(e).each(function (e, t) {
                    var a = i.getMailById(t);
                    a && a.label && (a.label = []);
                    var s = top.$App.getMailDataByMid(t);
                    s && s.label && (s.label = [])
                }), t(a)
            })
        },
        getTagMenuItems: function (e) {
            var t = $App.getFolders("tag"), i = [];
            return $(t).each(function (e, t) {
                var a = $App.getTagColor(t.folderColor), s = "重要任务" == t.name, o = ['<span class="text"><span class="tagMin', s ? " tagJJ" : "", '" style="border-color:', a, '"><span class="tagBody" style="background-color:', a, ";border-color:", a, , '">', s ? ' <i class="i_jj"></i>' : "", '</span></span><span class="tagText">', t.name, "</span></span>"].join("");
                i.push({
                    html: o,
                    command: "tag",
                    args: $App.isReadSessionMail() ? { labelId: t.fid, bh: "cMail_toolbar_mark_label" } : { labelId: t.fid }
                })
            }), i.push({ isLine: !0 }), i.push({
                html: "新建标签并标记",
                command: "tag",
                args: { labelId: -1, bh: $App.isReadSessionMail() ? "cMail_tab_createTag" : "" }
            }), e || i.push({ html: "取消标签", command: "emptyTag", args: { bh: "context_remove_tag" } }), i
        },
        getMailBoxTagMenuItems: function (e, t) {
            var i = t || $App.getMailDataByMid(e), a = i.label, s = $App.getFolders("tag"), o = [];
            return $(s).each(function (e, t) {
                for (var i = $App.getTagColor(t.folderColor), s = "重要任务" == t.name, n = "", r = a.length - 1; r >= 0; r--) a[r] == t.fid && (n = "i-checkbox-selected");
                n || (n = "i-checkbox-unselected");
                var l = ['<i class="' + n + ' mr_12" style=""></i><span><span class="tagMin', s ? " tagJJ" : "", '" style="border-color:', i, '"><span class="tagBody" style="background-color:', i, ";border-color:", i, , '">', s ? ' <i class="i_jj"></i>' : "", '</span></span><span class="tagText">', t.name, "</span></span>"].join("");
                o.push({
                    html: l,
                    command: "tag",
                    args: $App.isReadSessionMail() ? { labelId: t.fid, bh: "cMail_toolbar_mark_label" } : { labelId: t.fid }
                })
            }), a && a.length > 0 && (o.push({ isLine: !0 }), o.push({
                html: "<span style='padding-left:27px'>取消所有标签</span>",
                command: "emptyTag",
                args: {}
            })), o.push({ isLine: !0 }), o.push({
                html: "<span style='padding-left:27px'>新建标签并标记</span>",
                command: "tag",
                args: { labelId: -1, bh: $App.isReadSessionMail() ? "cMail_tab_createTag" : "" }
            }), o.push({
                html: "<span style='padding-left:27px'>管理标签</span>",
                command: "show",
                args: { key: "tags", bh: $App.isReadSessionMail() ? "cMail_tab_manageTag" : "" }
            }), o
        },
        getMarkMenuItems: function (e, t, i) {
            var a = [{
                text: "已读",
                command: "mark",
                args: { type: "read", value: 0, bh: "toolbar_markunread" }
            }, { text: "未读", command: "mark", args: { type: "read", value: 1, bh: "toolbar_markread" } }, {
                text: "全部标为已读",
                command: "markAll",
                args: { fid: t, type: "", value: "" }
            }];
            if (($App.isTagFolder(t) || 2 == t || $App.isSessionMode() || i && i.mid) && a.pop(), this.isSubscriptionMail() || this.isSubscribeMode()) return a;
            a.push({ isLine: !0, args: { type: "taskLine", value: "" } }, {
                text: "稍后处理",
                command: "mark",
                args: { type: "taskFlag", value: 1, bh: "toolbar_star" }
            }, {
                text: "标为处理完毕",
                command: "mark",
                args: { type: "taskFlag", value: 0, bh: "toolbar_unstar" }
            }), this.isTaskFlagMode() && this.removeMenu(a, "taskFlag", 1), a.push({
                isLine: !0,
                args: { type: "starLine", value: "" }
            }, { text: "星标", command: "mark", args: { type: "starFlag", value: 1, bh: "toolbar_star" } }, {
                text: "取消星标",
                command: "mark",
                args: { type: "starFlag", value: 0, bh: "toolbar_unstar" }
            }), this.isTaskMode() || a.push({ isLine: !0 }, {
                text: "置顶",
                command: "mark",
                args: { type: "top", value: 1, bh: "toolbar_sticky" }
            }, {
                text: "取消置顶",
                command: "mark",
                args: { type: "top", value: 0, bh: "toolbar_unsticky" }
            }), this.isStarMode() && this.removeMenu(a, "starFlag", 1);
            var s = $App.getMailboxView().model.get("searchOptions");
            if ((2 === t || s && 2 === s.fid || 7 === t) && (this.removeMenu(a, "read", 0), this.removeMenu(a, "read", 1), this.removeMenu(a, "", ""), this.removeMenu(a, "taskLine", "")), e && (a.push({ isLine: !0 }), a = a.concat(this.getTagMenuItems())), i && i.mail && i.mail.flags && !i.isSessionMail) for (var o = ["starFlag", "taskFlag", "top", "read"], n = i.mail.flags, r = 0; r < o.length; r++) {
                var l = o[r];
                this.removeMenu(a, l, n[l] || 0)
            }
            return a
        },
        removeMenu: function (e, t, i) {
            for (var a = 0; a < e.length; a++) {
                var s = e[a], o = s.args;
                o && o.type == t && o.value == i && e.splice(a, 1)
            }
        },
        getFolderMenuItems: function (e, t) {
            var i = this;
            t || (t = {});
            var a = $App.getFolders(e), s = [], o = t.command || "move", n = "", r = $App.getCurrentView().model.get("fid");
            return t && t.fid && (r = t.fid), $(a).each(function (t, a) {
                if (n = a.fid, (i.get("isSearchMode") || "move" != o || r != n) && (!i.isNotAllowMove(n) || "system" != e)) {
                    var l = { text: a.name, command: o, args: { fid: n } };
                    $App.isReadSessionMail() && (3 == n ? l.args.bh = "cMail_toolbar_move_send" : "custom" == e ? l.args.bh = "cMail_toolbar_move_custom" : 11 == n && (l.args.bh = "cMail_toolbar_move_add")), s.push(l)
                }
            }), e && "custom" != e || "move" == o && 0 != t.showCreate && (s.length > 0 && s.push({ isLine: !0 }), s.push({
                html: "新建并移入…",
                command: "move",
                args: { fid: -1, bh: $App.isReadSessionMail() ? "cMail_toolbar_createFolder" : "" }
            })), s
        },
        getResumeDelMenuItems: function (e) {
            if (!e || 7 != e.fid) return [];
            var t = $App.getFolders("system").concat(), i = $App.getFolders("custom").concat(), a = e.command || "move", s = [], o = [2, 5, 11];
            return t = $.grep(t, function (e, t) {
                return $.inArray(e.fid, o) < 0
            }), i = $.grep(i, function (e, t) {
                return $.inArray(e.fid, o) < 0
            }), i.length > 0 && t.push({ isLine: !0 }), t = t.concat(i), $(t).each(function (e, t) {
                if (t.isLine) s.push(t); else {
                    var i = { text: t.name, command: a, args: { fid: t.fid } };
                    s.push(i)
                }
            }), s
        },
        isNotAllowMove: function (e) {
            var t = [2, 4, 5, 7, 6, 8, 9, 11];
            return $.inArray(e, t) > -1
        },
        underClusterFolder: function () {
            var e = $App.getCurrentFid();
            return 1 == e || 3 == $App.getFolderType(e)
        },
        getMailNum: function (e) {
            var t = $App.getCurrentTab().view.model, i = "";
            return e ? i = $App.isSessionMode() ? t.get("isSearchMode") ? e.sendTotalNum : e.mailNum : e.sendTotalNum : i
        },
        isClusterMail: function (e) {
            var t, i, a = this.getMailById(e);
            return a ? (i = a.sendId, t = this.getMailNum(a), i > 0 && t > 1 && this.underClusterFolder() && !this.isClusterList() && -1 == $App.getCurrentTab().name.indexOf("readmail_") ? !(i > 11e6) : !1) : !1
        },
        isSubscriptionMail: function (e) {
            if ($App.getCurrentTab().name.indexOf("readmail_") > -1) {
                var t = M139.PageApplication.getTopApp().print[$App.getCurrMailMid()];
                if (t && t.headers && 1 == t.headers.subscriptionFlag) return !0
            }
            return !(!e || 1 != e.subscriptionFlag)
        },
        getKeyWord: function (e) {
            function t(e, t) {
                for (var i = [], a = _.indexOf(e, t) ; -1 != a;) i.push(a), a = _.indexOf(e, t, a + 1);
                return i
            }

            var i = !1;
            _.isArray(e) && (i = !0);
            var a = this.get("searchOptions");
            if (!a) return !1;
            var s = a.condictions, o = _.map(s, function (e) {
                return e.field
            });
            if (i) {
                for (var n = [], r = 0; r < e.length; r++) -1 != _.indexOf(o, e[r]) && n.push(r);
                return n.length && n.length == e.length ? _.map(n, function (e) {
                    return s[e].value
                }) : !1
            }
            var l = t(o, e);
            return l.length ? 1 == l.length ? s[l[0]].value : _.map(l, function (e) {
                return s[e].value
            }) : a[e] ? a[e] : !1
        },
        getSearchNameType: function () {
            return this.getKeyWord(["to", "from"]) ? 3 : this.getKeyWord("from") ? 2 : this.getKeyWord("to") ? 1 : 0
        },
        getQrcodeUrl: function (e, t) {
            M139.HttpRouter.addRouter("bmail", ["mail:getShareUrl"]), M139.RichMail.API.call("mail:getShareUrl", e, function (e) {
                e && e.responseData && t(e.responseData)
            })
        },
        setTask: function (e, t, i) {
            var a = this, s = { type: t.type, value: t.value, time: 0, ids: e };
            t.sessionIds && $.extend(s, { sessionIds: t.sessionIds }), this.callApi("mbox:setTaskMessages", s, function (s) {
                var o = s.responseData;
                o && "S_OK" == o.code && ($.each(e, function (e, i) {
                    var s = a.getMailById(i);
                    s && (s.flags || $.extend(s, { flags: {} }), s.flags[t.type] = t.value)
                }), i && i(), a.clearVipCache())
            })
        }
    })
}),

//M2012.Mailbox.Model.Eofficial
M139.namespace("M2012.Mailbox.Model", {
    Eofficial: Backbone.Model.extend({
        initialize: function (e) {
            this.model = $App.getMailboxView().model
        },
        timeMap: { 0: "今天", 1: "昨天", 2: "前天", defaultDate: "yyyy年MM月" },
        officeCon: ['<ul id="officeCon" class="travel-list mt_20"></ul>'].join(""),
        detailItem: ['<li class="travel-listItem travel-listItem-bank" mid={mid} sendId={sendId}  timerAllTitle={timerAllTitle}>', '<table class="travelTable">', "<tbody>", '<tr class="listItem">', '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<i class="fl mr_10 icon_spl {getcompanyLogo}"></i>', '<h4 class="fl airLine-name">{getEPName} {StrokeVIcon} {getsendTotalNum}</h4>', '<i class="fr icons i-triangle-sq" name="btnclick"></i>', "</div>", '<div class="clearfix p_relative">', "{getSubject}", '<span class="mail_service_time">{getDate}</span>', "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join(""),
        emptyOutline: ['<div class="mail_service_noData ">', '<img src="../images/global/icon_service.png" alt="企业服务号">', '<p class="mt_10">暂无服务号信息</p>', "</div>"].join(""),
        pageBar: ['<div class="downPagenumBox clearfix" id="maillist_pager_bottom" style="width:860px"></div>'].join(""),
        failDetailItem: ['<li class="travel-listItem travel-listItem-bank" mid={mid} sendId={sendId}  timerAllTitle={timerAllTitle}>', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid={mid} sendId={sendId}>', "<td></td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH" style="cursor:pointer">', '<i class="fl mr_10 icon_spl {getcompanyLogo}"></i>', '<h4 class="fl airLine-name" style="cursor:pointer">{getEPName}</h4>', '<i class="fr icons i-triangle-sq" sendId={sendId} name="noclickzineng" type="normal"></i>', "</div>", '<div class="clearfix p_relative">', "{getSubject}", '<span class="mail_service_time">{getDate}</span>', "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join(""),
        deleText: { context: "选择的邮件中包含多封邮件，是否删除？", succeeddel: "所选邮件已删除", falldel: "所选邮件删除失败", deling: "正在删除邮件..." },
        checkListBh: function (e) {
            var t = this, i = e.sendId, a = t.model.modelTitle, s = a[i];
            s && s.hasOwnProperty("alllistBh") ? top.BH(s.alllistBh) : ""
        },
        getFailDetailItem: function (e) {
            var t = this, i = "", a = this.failDetailItem, s = top.$T.Utils.format(a, {
                mid: e.mid,
                sendId: e.sendId,
                getcompanyLogo: t.getcompanyLogo(e),
                getEPName: t.getEPName(e),
                getDate: t.getDate(e),
                getSubject: t.getFailSubject(e),
                timerAllTitle: t.getRetime({ type: "YearMonthDay", item: e })
            });
            return i = s
        },
        getEPName: function (e) {
            var t = this, i = e.sendId, a = t.model.modelTitle, s = a[i], o = M139.Text.Email.getName(e.from);
            return s && s.hasOwnProperty("name") ? s.name : o
        },
        getSummary: function (e) {
            var t = e.summary;
            return t = t.replace(/\s+/g, " "), t = t.replace(/[\u3000]+/g, " "), t = $T.Html.encode(t), t ? '<p class="mail_service_text" name="summary">你的最新一封邮件：' + t.replace(/\$/g, "") + "</p>" : '<p class="mail_service_text" name="summary">&nbsp;</p>'
        },
        getSubject: function (e) {
            var t = $T.Html.encode(e.subject) || "(无)";
            return '<p class="mail_service_text">你的最新一封邮件：' + t.replace(/\$/g, "") + "</p>"
        },
        getFailSubject: function (e) {
            var t = $T.Html.encode(e.subject) || "(无)";
            return '<p class="mail_service_text">' + t.replace(/\$/g, "") + "</p>"
        },
        getsendNewNum: function (e) {
            var t = e.sendNewNum || 0;
            return 0 == t ? "" : "<i>{0}</i>".format(["(" + t + ")"])
        },
        getsendTotalNum: function (e) {
            var t = e.sendTotalNum || 0;
            return 0 == t ? "" : "<i>{0}</i>".format(["(" + t + ")"])
        },
        getRetime: function (e) {
            var t = e.item, i = new Date(1e3 * Number(t.receiveDate)) || new Date, a = i.format("yyyy年M月");
            switch (e.type) {
                case "YearMonth":
                    a = i.format("yyyy年M月");
                    break;
                case "MonthDay":
                    a = i.format("M月dd日");
                    break;
                case "AllTime":
                    a = i.format("yyyy年M月dd日 hh:mm");
                    break;
                case "YearMonthDay":
                    a = i.format("yyyy年M月dd日");
                    break;
                case "Year":
                    a = i.format("yyyy年");
                    break;
                case "HourMin":
                    a = i.format("hh:mm");
                    break;
                default:
                    a = i.format("yyyy年M月")
            }
            return a
        },
        getDate: function (e) {
            var t = new Date;
            M139._ClientDiffTime_ && (t = new Date(new Date - M139._ClientDiffTime_));
            var i = {
                times: t.getTime(),
                years: t.getFullYear(),
                month: t.getMonth(),
                date: t.getDate(),
                hour: t.getHours(),
                minutes: t.getMinutes()
            };
            t = i;
            var a, s = new Date(1e3 * Number(e.receiveDate)), o = t.times - s.getTime();
            if (0 > o) a = o > -6e4 ? "刚刚" : s.format("M月dd日"); else if (s.getFullYear() == t.years && s.getMonth() == t.month && s.getDate() == t.date) {
                var n = Math.round(o / 1e3 / 60);
                a = 1 > n ? "刚刚" : n >= 1 && 60 > n ? n + "分钟前" : s.format("hh:mm")
            } else a = s.getFullYear() == t.years ? s.format("M月dd日") : s.format("yyyy-M-dd");
            return "<span title='" + $Date.format("yyyy年M月dd日 hh:mm", s) + "'>" + a + "</span>"
        },
        getStrokeVIcon: function (e) {
            var t = [1010001, 1010002, 1010003, 1010004, 1010005, 1010006, 1010007, 1000011], i = e.sendId;
            if ($.inArray(i, t) > -1) {
                var a = e.mid;
                return $T.Utils.format('<i class="icons i-security_smler" mid={0}></i>', [a])
            }
            return ""
        },
        getDateFormat: function (e) {
            var t = new Date, i = new Date(e), a = $Date.getDaysPass(i, t);
            return this.timeMap[a] ? this.timeMap[a] : $Date.format(this.timeMap.defaultDate, i)
        },
        getcompanyLogo: function (e) {
            var t = this, i = e.sendId, a = t.model.modelTitle, s = a[i];
            return s && s.hasOwnProperty("middlelogo") ? s.middlelogo : ""
        }
    })
}),

//M2012.Mailbox.View.Main
M139.namespace("M2012.Mailbox.View", {
    Main: Backbone.View.extend({
        template: {
            listHeader: ['<div class="mailing-lists-head">', "<div>", '<table class="tableTitle" id="list_header">', "<tbody>", "<tr>", '<td class="td1">', '<input type="checkbox" id="chk_mailist_all_{0}"/><i class="i_triangle_d c-pointer" id="btn_checkMenu" bh="mailbox_selectAllDrop"></i>', "</td>", '<td class="td7"></td>', '<td class="td2">', '<a id="th_from" field="from" href="javascript:" hidefocus="true" style="cursor: default;"><span>发件人</span><i class=""></i></a>', "</td>", '<td class="tdtitle">', '<a id="th_subject" field="subject" href="javascript:" hidefocus="true" style="cursor: default;"><span>主题</span><i class=""></i></a>', "</td>", '<td class="td3">', '<a id="th_date" field="receiveDate" href="javascript:"  hidefocus="true" style="cursor: default;"><span >日期</span><i class=""></i></a>', "</td>", '<td class="td4">', '<a id="th_size" field="size" href="javascript:" hidefocus="true" style="cursor: default;"><span>大小</span><i class=""></i></a>', "</td>", "</tr>", "</tbody>", "</table>", "</div>", "</div>"].join(""),
            listHeaderLeft: '<div class="bgPadding"><table class="tableTitle" id="list_header">    <tbody>      <tr>        <td class="td1"><div class="tdsel"><!-- 选中时加上 class="tdselOn" --><input type="checkbox" id="chk_mailist_all"/><i bh="mailbox_selectAllDrop" class="i_triangle_d" id="btn_checkMenu"></i> </div></td>        <td class="tdtitle"></td>        <td class="td6"><div class="tdsel"><!-- 选中时加上 class="tdselOn" -->           <a href="javascript:" id="btn_sortMenu"><span>时间由新到旧</span><i class="i_triangle_d" ></i></a> </div></td>      </tr>    </tbody>  </table></div>',
            new3ListStr: ['<div class="p_absolute new-main-left" id="main_left">', '<div class="p_relative horizon_full">', "<div class='new-main-topbar'>", '<div class="p_relative ptblr_s2 manage-topbar clearfix" id="topbarManage">', '<div class="fr manage-fit">', '<a class="mtb_3 c-pointer i-fits" id="btn_setting_new" href="javascript:;"></a>', "</div>", '<span class="fl manage-sel">', '<input type="checkbox" id="chk_mailist_all_{0}">', '<a class="i-sel" href="javascript:;" id="new_three_type_div"><span class="i-sel-triangle"><i class="i_triangle_d c-pointer"></i></span></a>', "</span>", '<i class="fl text-static" id="new_three_count_div"></i>', "</div>", "</div>", "<div class='new-main-inner'>", '<div class="p_relative new-main-data horizon_full">', '<div class="background-layout">', '<div class="p_relative new-main-left-list mailing-lists-left inbox-wrap-left" style="overflow-y:auto;" id="div_maillist">', "</div>", "</div>", "</div>", "</div>", "</div>", "</div>", '<div class="p_absolute new-main-right" id="main_right" style="left:371px;">', '<div class="p_relative new-main-right-inner horizon_full">', '<div class="new-main-topbar" id="toolbar_div"></div>', "</div>", "</div>"].join(""),
            Mailclassification: ['<div class="account-tips" id="mailClassife" style="display:none">', '<span class="mr_10 fl height28"><i class={classicon}></i></span><p style="color:#fff"><strong>{mailName}</strong>{mailIntroduce}</p>', '<a class="i_u_close" id="closemailClassif" href="javascript:;"></a>', "</div>"].join("")
        },
        initialize: function (e) {
            function t() {
                var e = $App.getCurrentView();
                e.model.set("needReload", !0);
                e = $App.getView("mailbox");
                e.model.set("needReload", !0);
                e = $App.getView("mailbox_other");
                e.model.set("needReload", !0);
            }

            var i = this;
            this.options = e || {};
            if (e && e.multiInstance) {
                this.model = $App.getView("mailbox").model.clone();
                this.model.set("multiInstance", !0);
                this.model.set("searchIsComeformDefault", !1);
                this.model.set("isTaskMode", !1);
                this.model.set("subscribeName", e.subscribeName);
                return void (e.isSearch && this.model.set("isSearchMode", !0));
            } else {
                this.model = new M2012.Mailbox.Model.Mailbox;
                appView.on("showMailbox", function (e) {
                    function a() {
                        $App.trigger("reloadFolder", { reload: !0 })
                    }

                    if (e && !isNaN(e.fid)) {
                        var s = i.model;
                        if (2 === e.fid) {
                            s.markAllRead(e.fid, !1, a);
                        }
                        if (e.view) {
                            s = e.view.model;
                        }
                        s.clearSuperSelect();
                        if (e.fid != s.get("fid")) {
                            s.set("pageIndex", 1);
                            s.set("firstPageUnreadCount", null);
                        }
                        if (!(e && "commandCallback" == e.comefrom)) {
                            s.set("mid", null);
                        }
                        s.set("fid", e.fid);
                        s.set("needReload", !0);
                        if (e.fid > 1 || e.isSearch) {
                            var o = { name: "mailsub_0", view: $App.getView("mailbox_other") };
                            $App.showPage(o);
                            var n = e.view.model.get("lastSearchOptions");
                            M2012.History.modifyCurrent(function () {
                                e.isSearch ? $App.searchMail(n) : $App.showMailbox(e.fid)
                            })
                        } else {
                            $App.showPage({ name: "mailbox_" + e.fid, view: i, group: "mailbox" });
                        }
                    } else if ("mailbox" == $App.getCurrentTab().group) {
                        i.render(!1, { comefrom: e && e.comefrom });
                    } else {
                        if (e && "commandCallback" == e.comefrom) {
                            t();
                            if ($App.getCurrentTab().name.indexOf("mailsub_") >= 0) {
                                var r = $App.getMailboxView();
                                r.model.set("needReload", !0);
                                r.render(!0);
                            }
                            return;
                        }
                        if ($App.getCurrentView().model.get("fid") > 1 || $App.getCurrentView().model.get("isSearchMode")) {
                            $App.getMailboxView().render(!1, { comefrom: e && e.comefrom });
                        } else {
                            $App.showPage({
                                name: "mailbox_" + i.model.get("fid"),
                                view: i,
                                group: "mailbox"
                            });
                        }
                    }
                });
                $App.on("showTab", function (e) {
                    i.onResize()
                });
                appView.on("mailboxDataChange", function (e) {
                    t();
                    var i = $App.getCurrentView();
                    e && e.render && $App.isMailbox() && i.render(!1, e, function () {
                        i.model.get("mid") && "list" != $App.getLayout() && i.listView.readMailSplitView(i.model.get("mid")), e.callback && e.callback()
                    })
                });
                appView.on("reloadFolder", function () {
                    var e = $App.getCurrentView(), a = e.model;
                    t(), e.toolbarView && (e.toolbarView.render(), a.trigger("mabilbox_render", i.model.get("mailList")))
                });
                appView.on("changeStar", function () {
                    var e = $App.getCurrentView().model;
                    e.isStarMode() && $App.trigger("showMailbox")
                });
                return void appView.on("reduceFolderMail", function (e) {
                    var t = $App.getCurrentView();
                    if (t.toolbarView) {
                        t.toolbarView.refreshCount();
                        t.listView.createSuperSelectMenu();
                    }
                });
            }
        },
        getMailListWrap: function (e) {
            var t = this,
                i = (t.model.get("fid"),
                t.model.get("billtype"), ""),
                a = {
                    0: "<div class='mailing-lists-content'><div id='div_maillist' class='MaillistDiv p_relative mailing-lists-inner' style='height:600px;overflow:hidden; overflow-y:auto;'></div></div>",
                    1: "<div id='div_maillist' class='MaillistDiv p_relative bgPadding' ></div>"
                },
            s = ['<div class="billleft" >', '<div class="billleftDiv"  style="margin:0px;" >', "{0}", "</div>", "</div>"].join("");
            return i = t.model.isBillMode() && "left" != $App.getLayout() && 0 == t.model.get("billTab") ? $T.Utils.format(s, [a[e]]) : a[e]
        },
        getListHeader: function () {
            var e = this.model.get("fid");
            if ("left" == $App.getLayout()) return "";
            var t = this.template.listHeader;
            return t = $T.format(t, [Math.random()]), this.model.isBillMode() && 0 == this.model.get("billTab") && (t = "<div class=\"billleftDiv\" style='margin:0px;'>" + t + "</div>"), this.model.isTaskMode() && (t = t.replace(/<td class="td4"><a id="th_size".+?<\/td>/gi, "").replace(/日期/, "计划时间").replace(/<i class=""><\/i>/gi, "")), 7 == e && (t = t.replace(/th_size/gi, "th_deltype").replace(/日期/, "删信日期").replace(/大小/, "删信方式").replace(/td3/gi, "td3 td3-new").replace(/td4/gi, "td4 td4-new")), t
        },
        isUseNew3list: function () {
            var e = this,
                t = e.model.get("fid");
            return 2 == t || 4 == t || 7 == t ? !1 : e.model.isBillMode() ? !1 : e.model.isOnemailMode() ? !1 : -3 != $App.getFolderType(t)
        },
        createNew3ListType: function () {
            for (var e = this, t = $(e.el), i = t.find("#new_three_type_div span"), a = (e.model.get("fid"), [{
                html: '<span class="icon16 mr_6"><i class="i-read-v3"></i></span>已读邮件',
                command: "viewMail",
                flags: { read: 0 }
            }, {
                html: '<span class="icon16 mr_6"><i class="i-unread-v3"></i></span>未读邮件',
                command: "viewMail",
                flags: { read: 1 }
            }, {
                html: '<span class="icon16 mr_6"><i class="i_m_yhf"></i></span>已回复邮件',
                command: "viewMail",
                flags: { replied: 1 }
            }, {
                html: '<span class="icon16 mr_6"><i class="i_m_o2h"></i></span>已转发邮件',
                command: "viewMail",
                flags: { forwarded: 1 }
            }, { isLine: !0 }, {
                html: '<span class="icon16 mr_6"><i class="tag-new" style="background-color:red;"><em class="i_jj"></em></i></span>紧急邮件',
                command: "viewMail",
                flags: "important"
            }, {
                html: '<span class="icon16 mr_6"><i class="i_star_y"></i></span>星标邮件',
                command: "viewMail",
                flags: { starFlag: 1 }
            }, { isLine: !0 }, {
                text: "清除所有筛选",
                command: "viewMail",
                flags: "all"
            }]), s = [{
                html: "<span class='text-i'><i class='{class}'></i>时间由新到旧</span>",
                order: "receiveDate",
                desc: 1,
                bh: "mailbox_sortDate",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>时间由旧到新</span>",
                order: "receiveDate",
                desc: 0,
                bh: "mailbox_sortDate",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>发件人升序</span>",
                order: "from",
                desc: 0,
                bh: "mailbox_sortFrom",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>发件人降序</span>",
                order: "from",
                desc: 1,
                bh: "mailbox_sortFrom",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>主题升序</span>",
                order: "subject",
                desc: 0,
                bh: "mailbox_sortSubject",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>主题降序</span>",
                order: "subject",
                desc: 1,
                bh: "mailbox_sortSubject",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>邮件大小升序</span>",
                order: "size",
                desc: 0,
                bh: "mailbox_sortSize",
                type: "sort"
            }, {
                html: "<span class='text-i'><i class='{class}'></i>邮件大小降序</span>",
                order: "size",
                desc: 1,
                bh: "mailbox_sortSize",
                type: "sort"
            }], o = e.model.get("order"), n = e.model.get("desc"), r = 0; r < s.length; r++) s[r].order == o && s[r].desc == n ? s[r].html = s[r].html.replace("{class}", "i_b_right") : s[r].html = s[r].html.replace("{class}", "");
            var l = [{ text: "选择全部邮件", type: "all" }, { text: "选择未读邮件", type: "unread" }, {
                text: "选择已读邮件",
                type: "read"
            }, { text: "筛选邮件", type: "", items: a }, { text: "排序", type: "", items: s }];
            e.model.get("isSearchMode") && (l.pop(), l.pop(), l.pop(), l.push({
                text: "筛选邮件",
                type: "",
                items: a
            }), l.push({
                text: "排序",
                type: "sort",
                items: s
            })), $App.isSessionMode() && (l.pop(), l.pop(), l.pop(), l.pop(), l.push({
                text: "筛选邮件",
                type: "",
                items: a
            }), l.push({ text: "排序", type: "sort", items: s })), M2012.UI.PopMenu.createWhenClick({
                target: i,
                width: "140px",
                dy: 10,
                items: l,
                onItemClick: function (t) {
                    if ("sort" == t.type && t.order) {
                        var i = t.html.replace(/\<.+?\>/gi, "");
                        e.model.set("orderText", i), $App.trigger("mailCommand", {
                            command: "sort",
                            order: t.order,
                            desc: t.desc
                        }), BH(t.bh)
                    } else t.type ? e.listView.superSelectAll(t.type) : (t.fid = e.model.get("fid"), t.command && $App.trigger("mailCommand", t))
                }
            })
        },
        render: function (e, t, i) {
            var a = this,
                s = $D.getHTMLElement(this.el),
                o = $(this.el);
            if (this.model.get("isSearchMode")) {
                var n = $App.getView("mailbox_other"),
                    r = n.model.get("isVipMode"),
                    l = n.model.get("isTaskMode"),
                    c = n.model.get("isTaskbacklogMode"),
                    d = n.model.get("isTaskdoneMode"),
                    p = n.model.get("isContactsMail"),
                    m = !!this.model.get("searchOptions").flags,
                    u = a.model.isOnemailMode(),
                    h = a.model.isBillMode(),
                    f = a.model.isUseNewMode(),
                    g = r || l || c || d || p || m || u || h || f;
                if (!g) {
                    var v = $App.getView("mailbox_other").model.get("userLayout") || $App.getLayout();
                    this.model.setAll("userLayout", v),
                    this.model.setAll("layout", "list")
                }
            } else {
                var b = $App.getView("mailbox_other").model.get("userLayout");
                if (b) {
                    this.model.setAll("layout", b);
                    this.model.setAll("userLayout", "");
                }
            }
            if (!e || this.model.get("needReload")) {
                this.model.set("needReload", !1)
                if ("left" == $App.getLayout() && a.isUseNew3list()) {
                    s.innerHTML = $T.format(this.template.new3ListStr, [Math.random()]), a.createNew3ListType();
                } else if (!this.model.isApproachMode() || this.model.isBillMode() || this.model.isOnemailMode()) {
                    s.innerHTML = "<div class='p_absolute new-main-right two-column-structure' style='left:0;height:1000px;'><div class='p_relative horizon_full'><div id='toolbar_div' class='width_full'></div><div class='new-main-inner' style=''><div class='p_relative new-main-data horizon_full'><div class='mailing-lists-wrap'><div class='p_relative mailing-lists-inner'>" + this.getListHeader() + a.getMailListWrap(0) + "</div></div></div></div></div></div>";
                } else {
                    var y = " searchFilter-off";
                    "1" == top.$App.getCustomAttrs("openSearchclassify") && (y = ""),
                    s.innerHTML = "<div class='p_absolute new-main-right two-column-structure' style='left:0;height:1000px;'><div class='p_relative horizon_full'><div id='toolbar_div' class='width_full'></div><div class=' new-main-inner' style='top:80px;'><div id='div_mail' class='p_relative new-main-data horizon_full' style=''><div class='mailing-lists-wrap'><div class='p_relative mailing-lists-inner'><div class='p_relative' style=''><!--[if lt ie 8]><div class='p_relative' style='+zoom:1;'><![endif]-->" + this.getListHeader() + "<div class='mailing-lists-content'><div id='div_maillist' class='MaillistDiv p_relative mailing-lists-inner'></div></div></div><div id='div_searchclassify' style='display:none;' class='searchFilter searchFlanking" + y + "'></div><!--[if lt ie 8]></div><![endif]--></div></div></div>"
                }
                setTimeout(function () {
                    if ($B.is.ie || $B.is.ie11 || $B.is.firefox) var e = "mr_16"; else var e = "mr_8";
                    o.find("#div_maillist")[0].scrollHeight > o.find("#div_maillist").height() ? o.find("#list_header").parent().addClass(e) : o.find("#list_header").parent().removeClass(e)
                }, 500),
                this.initSplitView();
                var w = o.find("#toolbar_div");
                o.find("#div_maillist");
                this.toolbarView ? this.toolbarView.setElement(w) : this.toolbarView = new M2012.Mailbox.View.Toolbar({
                    model: this.model,
                    el: w
                }),
                this.options.multiInstance ? (this.listView && $(this.listView.el).off(), this.listView = new M2012.Mailbox.View.ListView({
                    model: this.model,
                    el: this.el
                })) : this.listView = new M2012.Mailbox.View.ListView.prototype.createInstance({
                    model: this.model,
                    el: this.el
                });
                try {
                    if (this.model.isApproachMode()) {
                        var _ = o.find("#div_searchclassify");
                        this.searchClassify = new M2012.Mailbox.View.SearchClassify.prototype.createInstance({
                            model: this.model,
                            el: _
                        })
                    }
                } catch (M) {
                }
                top.$App.getView("mailbox").model.get("IamFromLaiwang") && ($("#div_searchclassify").hide(), $("#div_mail").addClass("searchListoff"));
                top.$App.getView("mailbox_other").model.get("showSearchclassify") || ($("#div_searchclassify").hide(), $("#div_mail").addClass("searchListoff"));
                this.toolbarView.parentView = this;
                this.toolbarView.render();
                this.listView.toolbarView = this.toolbarView;
                this.listView.render(!1, t, i);
                $("input:checkbox").m139Check && $("input:checkbox").m139Check();
                this.initEvent();
            }
        },
        showMailIntroduce: function () {
            var e = this, t = ($D.getHTMLElement(this.el), $(this.el));
            if ("left" == $App.getLayout()) {
                var i = t.find("#div_maillist"), a = null;
                e.model.isStarMode() && (a = top.M139.Text.Utils.format(e.template.Mailclassification, {
                    classicon: "i-star-white",
                    mailName: "星标邮件",
                    mailIntroduce: " &nbsp包含用户自主设置的标签邮件,可在邮件列表中点击星标设置该标签。"
                }), i.before(a), e.showMailOnce("mailTipstar")), e.model.isVipMode() && (a = top.M139.Text.Utils.format(e.template.Mailclassification, {
                    classicon: "i-vip-white",
                    mailName: "VIP邮件",
                    mailIntroduce: " &nbsp包含用户自主设置的VIP联系人发来的邮件，可在通讯录中将重要联系人添加至VIP分组。"
                }), i.before(a), e.showMailOnce("mailTipvip")), e.model.isSubscribeMode() && (a = top.M139.Text.Utils.format(e.template.Mailclassification, {
                    classicon: "i-rss-white",
                    mailName: "订阅邮件",
                    mailIntroduce: " &nbsp包含云邮局订阅的杂志、报刊等最新的资讯和新闻内容。"
                }), i.before(a), e.showMailOnce("mailTipsubscribe")), e.model.isTaskMode() && (a = top.M139.Text.Utils.format(e.template.Mailclassification, {
                    classicon: "i-task-white",
                    mailName: "稍后处理",
                    mailIntroduce: " &nbsp包含用户自主设置稍后处理的任务邮件，可在邮件列表中点待办按钮设置该类标签。"
                }), i.before(a), e.showMailOnce("mailTiptask")), 5 == top.$App.getCurrentFid() && (a = top.M139.Text.Utils.format(e.template.Mailclassification, {
                    classicon: "i-trash-white",
                    mailName: "垃圾邮件",
                    mailIntroduce: " &nbsp包含系统判别为对用户骚扰的未经主动请求的邮件，如虚假广告、钓鱼网站、成人广告、赚钱信息等不良和恶意信息。"
                }), i.before(a), e.showMailOnce("mailTipjunk"))
            }
        },
        showMailOnce: function (e) {
            var t = ($D.getHTMLElement(this.el), $(this.el));
            $App.showOnce(e, function () {
                var e = t.find("#mailClassife");
                e.show(), e.on("click", "#closemailClassif", function (t) {
                    top.BH("closedesc_descbox"), e.remove()
                })
            })
        },
        initEvent: function () {
            var e = this;
            $(window).resize(function () {
                e.onResize()
            }),
            e.model.on("mailboxReady", function () {
                e.model.get("listViewScollTop") && ($(e.el).find(".MaillistDiv")[0].scrollTop = e.model.get("listViewScollTop"), e.model.set("listViewScollTop", 0))
            }),
            $(e.el).find(".MaillistDiv").scroll(function () {
                var t = $(this).scrollTop();
                e.model.set("listViewScollTop", t)
            })
        },
        initSplitView: function () {
            var e = this, t = $(this.el).find("#div_maillist"), i = $App.getLayout(), a = "<div id='dragmask' onclick='$(this).remove()' style='background-color: #fff; opacity: 0; z-index:9;filter: alpha(opacity=0);position: absolute;left: 0; top: 0; width: 100%; height: 100%;'></div>";
            if ("top" == i) {
                var s = (document.body.clientHeight - 100) / 2;
                t.addClass("inboxWrap").after(["<div id='mailbox_split' style='z-index:9;position:absolute;top:" + s + "px;left:0px;right:0px;' class='wrapMiddle'>", "<span class='i_updown'></span></div>", "<div id='readWrap' style='overflow:hidden' class='readWrap p_relative'></div>"].join(""));
                var o = $(this.el).find("#mailbox_split"), n = $(this.el).find("#div_searchclassify"), r = $(this.el).find("#div_mail");
                n.height(1e3), r.css({ "overflow-y": "auto" });
                var l = { x: 0, y: -188 };
                e.model.isApproachMode() && (l = { x: 0, y: -151 }), e.model.get("messageCount") || (l = { x: 0, y: -151 });
                var c = [$("#div_main").offset().left, $("#div_main").offset().top + 100, $D.getWinWidth(), $D.getWinHeight() - 100];
                o.length > 0 && $D.setDragAble(o[0], {
                    bounds: c, orignOffset: l, lockX: !0, onDragStart: function (e) {
                        $(document.body).append(a)
                    }, onDragMove: function (t) {
                        e.listView.onResize()
                    }, onDragEnd: function (e) {
                        $("#dragmask").remove()
                    }
                })
            } else if ("left" == i) {
                var d = 357, p = ['<div class="p_absolute wrapMiddleMiddle" id="mailbox_split" style="z-index:9;height:700px;left:371px">', '<div class="slHvalign">', '<div class="slHvalignCnt">', '<div class="slHvalignCntInner"> <span class="i_leftr"></span> </div>', "</div></div></div>"];
                if (t.css({ "overflow-y": "auto" }), $D.getWinWidth() <= 1024) $(e.el).find("#main_left").css({ width: d + "px" }), $(e.el).find("#main_right").css({ left: d + 1 + "px" }), $(e.el).find("#div_maillist").css({ width: d + "px" }); else if ($App.getCustomAttrs("threeColLeftVal")) {
                    var m = Number($App.getCustomAttrs("threeColLeftVal"));
                    $D.getWinWidth() - m <= 800 && (m = $D.getWinWidth() - 800), m = Math.max(m, d), $(e.el).find("#main_left").css({ width: m + "px" }), $(e.el).find("#main_right").css({ left: m + 1 + "px" }), $(e.el).find("#div_maillist").css({ width: m + "px" })
                } else {
                    var m = 450;
                    $D.getWinWidth() - m <= 800 && (m = $D.getWinWidth() - 800), m = Math.max(m, d), $(e.el).find("#main_left").css({ width: m + "px" }), $(e.el).find("#main_right").css({ left: m + 1 + "px" }), $(e.el).find("#div_maillist").css({ width: m + "px" })
                }
                $(e.el).find("#main_left").after(p.join(""));
                var u = $App.getBodyHeight() - 160;
                if (this.model.isApproachMode()) {
                    var h = ['<div id="div_mail" class="p_relative">', '<!--[if lt ie 8]><div style="+zoom:1;position: relative;"><![endif]-->', '<div class="searchList"><div class="searchListdiv">', '<div class="readWrapRight" id="readWrap" style="width:100%;margin-left:0;height:' + u + 'px;position:relative;"></div>', "</div></div>", '<div id="div_searchclassify" class="searchFilter searchFlanking"></div>', "<!--[if lt ie 8]></div><![endif]-->", "</div>"].join("");
                    $(e.el).find("#toolbar_div").after(h)
                } else $(e.el).find("#toolbar_div").after('<div class="new-main-inner three-column-mode" id="readWrap"></div>');
                var o = $(this.el).find("#mailbox_split");
                o.css({ left: t.width() + "px", position: "absolute" });
                var c = [421, $("#div_main").offset().top, $D.getWinWidth() - 600, $D.getWinHeight() - 50];
                o.length > 0 && $D.setDragAble(o[0], {
                    bounds: c, lockY: !0, onDragStart: function (e) {
                        $(document.body).append(a)
                    }, onDragMove: function (t) {
                        e.listView.onResize();
                        var i = o.position().left;
                        i = Math.max(i, d), $(e.el).find("#main_left").css({ width: i + "px" }), $(e.el).find("#main_right").css({ left: i + 1 + "px" }), $(e.el).find("#div_maillist").css({ width: i + "px" })
                    }, onDragEnd: function (e) {
                        $("#dragmask").remove();
                        var t = Math.max(Number(o.position().left), d);
                        $App.setCustomAttrs("threeColLeftVal", t + ""), o.css({ left: t + "px", position: "absolute" })
                    }
                })
            }
        },
        prepareSearch: function (e) {
            var t = this.model.get("isFullSearch");
            if ("string" == typeof e) {
                var i = e;
                e = {
                    condictions: [{ field: "subject", operator: "contains", value: i }, {
                        field: "from",
                        operator: "contains",
                        value: i
                    }, { field: "to", operator: "contains", value: i }]
                }, t && e.condictions.push({ field: "content", operator: "contains", value: i }, {
                    field: "attachName",
                    operator: "contains",
                    value: i
                })
            }
            e.statType = 1;
            var a = null;
            e.fid == this.model.get("specialFolderId").myBill && (a = e.billType), this.model.set({ billtype: a }), this.model.set("pageIndex", 1), this.model.set("isSearchMode", !0), this.model.set("searchOptions", e), e.approachSearch || this.model.set("selected", null)
        },
        onResize: function () {
            var e = 357, t = this, i = $App.getBodyHeight() - 160;
            if ($("#readWrap").length > 0 && $("#readWrap:visible").height(i), "left" == $App.getLayout() && ("mailsub_0" == $App.getCurrentTab().group || "mailbox" == $App.getCurrentTab().group)) if ($D.getWinWidth() <= 1024) $(t.el).find("#main_left").css({ width: e + "px" }), $(t.el).find("#main_right").css({ left: e + 1 + "px" }), $(t.el).find("#div_maillist").css({ width: e + "px" }); else if ($App.getCustomAttrs("threeColLeftVal")) {
                var a = Number($App.getCustomAttrs("threeColLeftVal"));
                $D.getWinWidth() - a <= 800 && (a = $D.getWinWidth() - 800), a = Math.max(a, e), $(t.el).find("#main_left").css({ width: a + "px" }), $(t.el).find("#main_right").css({ left: a + 1 + "px" }), $(t.el).find("#div_maillist").css({ width: a + "px" })
            } else if ($D.getWinWidth() <= 1024) $(t.el).find("#main_left").css({ width: e + "px" }), $(t.el).find("#main_right").css({ left: e + 1 + "px" }), $(t.el).find("#div_maillist").css({ width: e + "px" }); else {
                var a = 450;
                $D.getWinWidth() - a <= 800 && (a = $D.getWinWidth() - 800), a = Math.max(a, e), $(t.el).find("#main_left").css({ width: a + "px" }), $(t.el).find("#main_right").css({ left: a + 1 + "px" }), $(t.el).find("#div_maillist").css({ width: a + "px" })
            }
        },
        getListHeaderHtml: function () {
        }
    })
}),

//M2012.Mailbox.View.Toolbar
function () {
    function e() {
        var e = new Date, t = e.getFullYear(), i = e.getMonth() + 1, a = e.getDate(), s = [], o = [];
        o = [t, t, t], s = 20 > a ? [i - 4, i - 3, i - 2] : [i - 3, i - 2, i - 1];
        for (var n = 0; 3 > n; n++) s[n] < 1 && (s[n] = s[n] + 12, o[n] = o[n] - 1);
        return { year: o, months: s }
    }

    function t(e) {
        return 10 > e ? "0" + e : "" + e
    }

    function i(e) {
        $RM.call("bill:getBatterypitcherBill", null, function (t) {
            "S_OK" == t.responseData.code ? e && e(t.responseData.billDates) : e && e([])
        })
    }

    function a(a) {
        var s = e(), o = s.year, n = s.months, r = "";
        i(function (e) {
            for (var i = n.length - 1, s = i; s >= 0; s--) {
                var l = "";
                2 == s && (l = "checked='checked'");
                var c = "", d = o[s] + t(n[s]);
                $.inArray(d, e) > -1 && (c = "disabled='disabled' checked='checked'"), r += '<span class="mr_10"><input type="checkbox" value=' + d + ' name="month" id="month' + s + '" ' + l + c + ' class="mr_5"  /><label for="month' + s + '">' + o[s] + "年" + n[s] + "月</label></span>\n"
            }
            a && a(r)
        })
    }

    function s() {
        a(function (e) {
            var t = "<div id='htmlAlter' style='padding: 18px;'><p style='font-size: 14px;'>请选择需要补投话费账单的月份：</p><div style='padding: 10px 0px'>" + e + "</div></div>";
            top.$Msg.showHTML(t, function (e) {
                for (var t = top.$("#htmlAlter input[name='month']:checked:not(':disabled')"), i = [], a = 0; a < t.length; a++) i.push(t.eq(a).val());
                return 0 == i.length ? (top.$Msg.alert("请至少选择一个补投月份。"), e.cancel = !0, !1) : void top.$RM.call("bill:batterypitcherBill", { billDate: i.join(",") }, function (e) {
                    "S_OK" == e.responseData.code ? top.$Msg.alert("您的话费账单补投申请已受理。我们会尽快为您安排补投，届时请留意“我的账单”新邮件。") : top.$Msg.alert("补投申请提交失败，请稍候再试。")
                })
            }, function () {
            }, { dialogTitle: "话费账单补投申请", buttons: ["确定", "取消"], width: 400, height: 80 })
        })
    }

    var o;
    M139.namespace("M2012.Mailbox.View", {
        Toolbar: Backbone.View.extend({
            events: {
                "click a#btn_unread": "onUnreadBtnClick",
                "click #popWriteMail": "onPopWriteMailClick",
                "click #syncPOPAccount": "onSyncPopAccountClick",
                "click #file_mail": "onFileMailClick",
                "click #classify_mail": "onClassifyMailClick",
                "click #classify_mail2": "onClassifyMailClick",
                "click #clean_mail": "onCleanMailClick",
                "click #btn_markUnread": "onMarkUnreadClick",
                "click #btn_deleteUnread": "onDeleteUnreadClick",
                "click #btn_deleteAllOrdinary": "onDeleteAllOrdinaryClick",
                "click a#btn_setting": "onMailBoxSettingClick",
                "click a#btn_contactMailsTotal": "onContactMailsTotalClick",
                "click a[data-ask]": "onAskClick",
                "click a#btn_emailaddr": "onEmailaddrClick"
            },
            tipTemplate: ['<div id="filterTip" class="tipsLayer filterTip" style="top:100px;left:450px;z-index:150;">', '<div class="tipsLayerMain">', '<div class="tipsLayerMainInner tipsLayerMainInner-singleLineTxt">', '邮件太多？ <a href="javascript:" onClick="return false" class="classify_mail toclassify_mail" bh="mailbox_history"><span id="toclassify_mail" >试试创建收信规则</span></a>吧!', "</div>", "</div>", '<i class="i-tipsLayerArrow tipsBottomArrow"></i>', '<a href="javascript:" id="closetip2" class="closeTipsLayerBtn closetip" title="关闭"><i class="i-closeTipsLayer"></i></a>', "</div>"].join(""),
            bawangyouTemplate: ['<div style="overflow-y: auto;" class="p_relative bgPadding" id="div_adMaillist">', "<!--[if IE 8]><div style='+zoom:1;position: relative;'><![endif]-->", "<!--[if IE 8]></div><![endif]-->", "<!--section start-->", '<div class="dayArea">          ', "<!--[if lt ie 8]><div style='+zoom:1;position: relative;'><![endif]-->", '<table class="dayAreaTable">', "<tbody>", "<tr>", '<td class="td1" >', '<div class="p_relative">', '<input style="visibility:hidden;" type="checkbox" ><i class="i_exc"></i><i title="{iconTitle}" class="{iconClass}"></i><i class=""></i>', "</div>", "</td>", '<td class="td2">', '<div class="mailForm">                           ', '<span class="{readStatus}">ad@139.com</span>', "</div>", "</td>", '<td class="tdtitle" name="td_sub">', '<div class="maillist-starwarp" style="visibility:hidden;"><i class="i_starM"></i></div>', '<div class="mTitle">', '<h3 class="{readStatus}">', '<a name="subject" style="" title="{subject}" onclick="return false;" href="javascript:;">', "{subject} ", "</a>", "</h3>", '<div class="TagDiv"></div>', "</div>", "</td>", '<td class="td3">{receiveTime}</td>', "{size}", '<td class="td5">', '<div style="_zoom:1;  visibility: hidden;">', '<a  class="i_tx_nb" href="javascript:;"><span></span></a>', '<a class="i_tagfor_n" href="javascript:;"></a>', "</div>", "</td>", "</tr>              ", "</tbody>", "</table>", "<!--[if lt ie 8]></div><![endif]-->", "</div>             ", "<!--section end-->     ", "</div>"].join(""),
            bawangyouNewTemplate: ['<div class="newdayArea" id="div_adMaillist">', '<table class="dayAreaTable overlordTable">', "<tbody>", "<tr>", '<td class="td1"><span class="soundIcon"><i class="{iconClass}" title="{iconTitle}"></i></span></td>', '<td class="td7"></td>', '<td class="td2"><div class="mailForm"><a name="from" style="color:black" href="javascript:" class="{readStatus}">{mailForm}</a></div></td>', '<td name="td_sub" class="tdtitle" style="cursor:default">', '<div class="maillist-starwarp">&nbsp;</div>', '<div class="mTitle">', '<h3 class="{readStatus}"><a name="subject" href="javascript:" style="padding-left:5px;" title="{subject}">{subject}</a></h3>', '<div class="TagDiv"></div>', "</div>", "</td>", '<td class="td5">&nbsp;</td>', '<td class="td3"><a id="div_adMaillist_send" href="{sendUrl}" target="_blank">往期推送</a></td>', '<td class="td4"><span class="pr_5"><a id="div_adMaillist_close" class="i-delete1" href="javascript:"></a></span></td>', "</tr>", "</tbody>", "</table>", "</div>"].join(""),
            subscribeYellowTip: ['<div class="yellowTips mb_10" style="" id="div_subscribeYellowTip">', '<p style="height:24px; line-height:24px;_padding-top:4px;_height:20px;">', '<i class="i_m_rss mr_5" title="订阅邮件" style="vertical-align:0;*vertical-align:3px;"></i>', "{subject}", '<a href="javascript:;" class="ml_10 fw_b">看一看<img src="../images/global/viewlink.gif" class="ml_5" style="vertical-align:0" />', "</a></p>", '<a class="yellowTips_close" id="closeTip" href="javascript:">×</a>', "</div>"].join(""),
            Mailclassification: ['<div class="account-tips" id="mailClassife" >', '<span class="mr_10 fl height28"><i class={classicon}></i></span><p style="color:#fff"><strong>{mailName}</strong>{mailIntroduce}</p>', '<a class="i_u_close" id="closemailClassif" href="javascript:;"></a>', "</div>"].join(""),
            initialize: function (e) {
                var t = this;
                this.setElement(e.el), this.model = e.model, this.model.on("mabilbox_render", function (e) {
                    var i = $App.getCurrentView().toolbarView;
                    i.renderHeader(), "mailbox_1" == top.$App.getCurrentTab().name && $App.getCurrentFid() && $App.getFolderById($App.getCurrentFid()) && $App.getFolderById($App.getCurrentFid()).stats.messageCount > 0 && t.showAdTips(), t.model.isSubscribeMode() && t.showSubscribeYellowTip(), 5 == $App.getCurrentFid() && t.showSpamFolderTip(), 11 == $App.getCurrentFid() && t.showAdFolderTip(), e || (e = i.model.get("mailListData")), i.createPager(e);
                    var a = t.model.get("scrollFlipMax");
                    if (t.model.get("scrollFlipEnable") && t.model.get("pageIndex") < a) 1 == t.model.get("pageIndex") && t.model.set("showManualPager", !1), t.$el.find("#maillist_pager").hide(); else if (t.model.get("pageIndex") == a) {
                        var s = $($App.getCurrentTab().element).find("#maillist_pager_bottom");
                        t.model.get("showManualPager") || (s.find(".up").hide(), t.$el.find("#maillist_pager").find(".up").hide()), s.show(), t.model.set("showManualPager", !0), t.$el.find("#maillist_pager").show()
                    } else t.$el.find("#maillist_pager").find(".up").show(), t.model.set("showManualPager", !0), t.$el.find("#maillist_pager").show();
                    t.model.get("showManualPager") && t.$el.find("#maillist_pager").show()
                }), $App.on("refreshCount", function () {
                    t.refreshCount()
                }), $App.on("folderLocked", function () {
                    t.showLockTips(!0)
                }), $("#queryDelMessage").on("click", function () {
                    BH({ key: "set_pop_delquery" }), top.$App.show("selfSearch", { type: 2 })
                }), $("#daishoujiluchaxun").live("click", function () {
                    BH({ key: "set_pop_querylist" }), top.$App.show("selfSearch", { type: 2 })
                }), top.UserData && 2 != top.UserData.vipType && t.showFilter(), t.showBillTips()
            },
            showBillTips: function () {
                this.model.isBillMode() && !this.showBillTipsFlag && (this.showBillTipsFlag = !0, this.model.getBillTypeList(function (e) {
                    if (e["var"]) for (var t = e["var"], i = 0, a = t.length; a > i; i++) {
                        var s = (t[i].status, parseInt(t[i].businessType, 10));
                        10 === s && (o = 10, $("#ask_wrapper").show())
                    }
                }))
            },
            onAskClick: function () {
                s()
            },
            renderSubscribeListIco: function () {
                var e = this.model.get("fid");
                if (9 === e && !$(this.el).find("span.changeIco")[0]) {
                    var t = ["", '<span class="fl changeIco" style="margin:2px 20px 0 0">', '<a href="javascript:$App.show(\'myCloudSubscribe\');" class="readModel mr_10" title="在线阅读模式"></a>', '<a href="javascript:;" class="listModel listModelBlue" title="邮件列表模式"></a>', "</span>"].join("");
                    $(this.el).find("div.toolBararray").prepend(t)
                }
            },
            setTitle: function () {
                var e = this.model.get("fid"), t = !0, i = this.model.get("billTab");
                if (0 == $App.getCurrentTab().name.indexOf("mail")) if (this.model.get("subscribeName")) {
                    if (this.model.get("multiInstance")) {
                        var a = this.model.get("subscribeName");
                        a = a ? $Email.getName(a) : "订阅邮件", $App.setTitle(a)
                    }
                } else if (this.model.get("isSearchMode")) if (this.model.isStarMode()) $App.setTitle("星标邮件"); else if (this.model.isVipMode()) $App.setTitle("VIP邮件"); else if (this.model.isOnemailMode()) {
                    var s = top.$User.getProvText() + "移动";
                    $App.setTitle(s)
                } else if (this.model.isEofficialMode()) $App.setTitle("企业服务号"); else if (this.model.isBillMode()) $App.setTitle("服务邮件"), this.model.isVoiceMode() && $App.setTitle("和留言"), "0" == i && $App.setTitle("移动账单"), "1" == i && $App.setTitle("电子发票"), "2" == i && $App.setTitle("生活服务"), "3" == i && $App.setTitle("通知动态"), "4" == i && $App.setTitle("注册激活"), "5" == i && $App.setTitle("广告邮件"), "8" == i && $App.setTitle("潮州移动"); else if (this.model.isSubscribeMode()) {
                    this.model.isClusterList() && (t = !1);
                    var a = this.model.get("from");
                    a = a ? $Email.getName(a) : "订阅邮件", $App.setTitle(a)
                } else if (this.model.isTaskMode()) $App.setTitle("稍后处理"); else if (this.model.get("isContactsMail")) $App.setTitle("往来邮件"); else if (this.model.isUnreadMode()) $App.setTitle("未读邮件"); else if (this.model.isReadMode()) $App.setTitle("已读邮件"); else if (this.model.isPriorityMode()) $App.setTitle("紧急邮件"); else if (this.model.isRepliedMode()) $App.setTitle("已回复邮件"); else if (this.model.isForwardedMode()) $App.setTitle("已转发邮件"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && "1000006" == this.model.attributes.searchOptions.condictions[0].value) $App.setTitle("移动账单"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && "1000007" == this.model.attributes.searchOptions.condictions[0].value) $App.setTitle("生活服务"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && "1000001" == this.model.attributes.searchOptions.condictions[0].value) $App.setTitle("通知动态"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && "1000008" == this.model.attributes.searchOptions.condictions[0].value) $App.setTitle("广告邮件"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && "1000009" == this.model.attributes.searchOptions.condictions[0].value) $App.setTitle("注册激活"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && "1000010" == this.model.attributes.searchOptions.condictions[0].value) $App.setTitle("电子发票"); else if (this.model.attributes && this.model.attributes.searchOptions && this.model.attributes.searchOptions.condictions.length > 0 && "sendId" == this.model.attributes.searchOptions.condictions[0].field && ("1000013" == this.model.attributes.searchOptions.condictions[0].value || "1000014" == this.model.attributes.searchOptions.condictions[0].value)) {
                    var s = top.$User.getProvText() + "移动";
                    $App.setTitle(s)
                } else this.model.isUseNewMode() ? $App.setTitle(this.model.get("modelTitle")) : $App.setTitle("邮件搜索"); else {
                    var o = this.model.getFolderInfo(e);
                    o && (this.model.set("messageCount", o.stats.messageCount), $App.setTitle(o.name))
                }
            },
            setMenuTitle: function () {
                if ("left" == $App.getLayout() && "mailbox_1" !== $App.getCurrentTab().name) {
                    if (this.model.isStarMode()) var e = "星标", t = 37; else if (this.model.isVipMode()) var e = "VIP", t = 32; else if (this.model.isUnreadMode()) var e = "未读", t = 37; else if (this.model.isReadMode()) var e = "已读", t = 37; else if (this.model.isPriorityMode()) var e = "紧急", t = 37; else if (this.model.isRepliedMode()) var e = "已回复", t = 52; else if (this.model.isForwardedMode()) var e = "已转发", t = 52; else var e = "全部", t = 37;
                    var i = $("#main").find(".new-main-left:visible #new_three_type_div");
                    i.find("em").html(e);
                    var a = i.find(".i-sel-triangle");
                    a.css("margin-left", 0 - t + "px"), a.css("padding-left", t + 3 + "px")
                }
            },
            showLockTips: function (e) {
                if (e) {
                    this.$el.parent().find("#lockTips").remove();
                    var t = '<div id="lockTips" style="text-align:center;display:" class="yellowTips mb_10"><p style="height:24px; line-height:24px">您有部分邮件已加锁，<a href="javascript:$App.showUnlock()">输入加锁密码</a>即可访问。</p><a href="javascript:" onclick="$(this).parent().remove()" class="yellowTips_close">×</a></div>';
                    this.$el.after(t)
                } else this.$el.parent().find("#lockTips").hide()
            },
            getBillCharge: function () {
                return ""
            },
            render: function () {
                var e = this,
                    t = this.model.get("fid"),
                    i = (this.model.getFolderInfo(this.model.get("fid")), $App.getMailboxView().model.get("list_layout_old")),
                    a = "";
                this.setTitle(),
                "1" != $App.getCustomAttrs("userIsLayout") && $(document).width() >= 1440 && i && (a = ['<div id="popLayoutLeft" class="tips delmailTips adapterTips" style="top:37px;left:-20px;z-index:5001;width:375px;display:block">', '<a href="javascript:" class="delmailTipsClose" style="display:none;"><i class="i_u_close"></i></a>', '<div class="tips-text">', '<div class="norTips-news" style="padding:20px;font-size:14px;">', '<span class="norTipsIco"><i class="i_ok"></i></span>', '<div class="norTipsContent" style="padding:5px 0 0;"><p>根据你浏览器的分辨率，系统已经自动适配<br/>左右分栏视图，帮助你更高效率的浏览邮件。</p><p style="padding:10px 0 0;">你可以在这里调整视图设置。</p></div>', "</div>", '<div name="buttons" class="delmailTipsBtn"><a href="javascript:void(0)" class="btnSure icoG icoG-s"><span>我知道了</span></a><a href="javascript:void(0)" class="btnNormal icoTb icoTb-s"><span>恢复原状</span></a></div>', "</div>", '<div class="diamond tipsTop" name="popup_arrow" style="left:26px;"></div>', "</div>"].join(""), $App.showOnce("layout_left", function () {
                    function e(e) {
                        $App.setCustomAttrs("userIsLayout", e.userIsLayout), $App.setAttrs({ list_layout: e.list_layout }), e.list_layout_old && ($App.getMailboxView().model.setAll("layout", e.list_layout_old), $App.showMailbox(1)), $(".tips.delmailTips.adapterTips").remove(), $(document).off("click.layout_left")
                    }

                    var t = { list: 0, top: 1, left: 2 };
                    $(".manage-topbar").find(".fr.manage-fit").css("position", "relative"), $(".manage-topbar").find(".fr.manage-fit").append(a), BH("list_layout_old1"), $(".delmailTipsBtn").find(".btnSure.icoG.icoG-s").on("click", function (t) {
                        e({ userIsLayout: "1", list_layout: 2 }), BH("list_layout_old2"), t.stopPropagation()
                    }), $(".delmailTipsBtn").find(".btnNormal.icoTb.icoTb-s").on("click", function (a) {
                        e({
                            userIsLayout: "1",
                            list_layout: t[i],
                            list_layout_old: i
                        }), BH("list_layout_old3"), a.stopPropagation()
                    }), $("#popLayoutLeft").on("click", function (e) {
                        e.stopPropagation()
                    }), $(document).on("click.layout_left", function (e) {
                        $("#popLayoutLeft").length && ($("#popLayoutLeft").remove(), $App.setCustomAttrs("userIsLayout", "0"), $App.setAttrs({ list_layout: 2 }), $(document).off("click.layout_left"))
                    })
                }));
                var s = ['<div class="new-main-topbar">', '<div class=" p_relative ' + ("left" == $App.getLayout() ? "ptblr_s6" : "ptblr_s2") + ' receiver-topbar clearfix" id="mailbox_toolbar_' + t + '">', '<ul class="toolBarUl_v3">', "</ul>", '<div id="maillist_pager"></div>', '<div class="toolBararray p_relative fr manage-fit"> <a href="javascript:" class="one on" id="btn_more" style="display:none"></a><a href="javascript:" id="btn_setting"><i class="i-fits c-pointer"></i></a> </div>', '<div id="maillist_text" class="toolBararray fr mr_5 p_relative"></div>', "</div>", "</div>"].join(""), o = this.getBillCharge();
                s += o;
                var n = !1;
                this.model.isSubscribeMode() && (n = !0, s += ['<div style="height:24px;display:none" class="yellowTips mb_10" style="" id="cloudMailApp">', '<p style="height:24px; line-height:24px"></p>', '<a class="yellowTips_close" id="CloseloudMailApp" href="javascript:">×</a>', "</div>"].join(""));
                var r = !1;
                if (this.model.isBillMode() && (r = !0), r) {
                    var l = ["", "", "", "", "", ""], c = this.model.get("billTab");
                    c = c ? c : 0, l[c] = 'class="on"';
                    SiteConfig.voiceMail;
                    var d = ['<div class="frame-tab-nav mlr_10 clearfix" style="display:none">', '<div class="topbar-tab-nav" id="billTab">', "<a " + l[0] + ' href="javascript:" tab="2" onclick="$App.showBill(2)">移动账单</a>', "<a " + l[1] + ' href="javascript:" tab="7" onclick="$App.showBill(7)" bh="invoice_tab">电子发票</a>', "<a " + l[2] + ' href="javascript:" tab="1" onclick="$App.showBill(1)">生活服务</a>', "<a " + l[3] + 'href="javascript:" tab="3" onclick="$App.showBill(3)">通知动态</a>', "<a " + l[4] + 'href="javascript:" tab="5" onclick="$App.showBill(5)">注册激活</a>', "<a " + l[5] + 'href="javascript:" tab="6" onclick="$App.showBill(6)">推广邮件</a>', "</div>", "</div>"].join("");
                    s = (6 == c ? "" : d) + s
                }
                var p = !1;
                if (this.model.isTaskMode() && (p = !0), p) {
                    var m = "on", u = "";
                    this.model.get("isTaskbacklogMode") || (m = "", u = "on")
                }
                if ("left" != $App.getLayout()) {
                    var h = [{ title: "VIP邮件", word: "&nbsp包含用户自主设置的VIP联系人发来的邮件，可在通讯录中将重要联系人添加至VIP分组。" }, {
                        title: "星标邮件",
                        word: "&nbsp包含用户自主设置的标签邮件，可在邮件列表中点击星标设置该标签。"
                    }, { title: "稍后处理", word: "&nbsp包含用户自主设置稍后处理的任务邮件，可在邮件列表中点待办按钮 设置该类标签。" }, {
                        title: "移动账单",
                        word: "&nbsp包含中国移动下发的话费账单、积分账单、流量账单和趣味账单邮件"
                    }, {
                        title: "生活服务",
                        word: "&nbsp包含和生活相关的水费账单、电费账单、燃气账单、交通违章信息、账单生活以及民生政企（如：社区服务，便民服务）的邮件。"
                    }, { title: "通知动态", word: "&nbsp包含系日历提醒，网盘提醒、生日提醒、密码变更提醒、用户积分、新用户提醒等系统邮件。" }, {
                        title: "注册激活",
                        word: "&nbsp包含中各门户网站的密码邮件、注册邮件、激活邮件等，如：139邮箱忘记密码邮件提醒。"
                    }, { title: "广告邮件", word: "&nbsp包含移动业务相关（内域）的查询、推广、优惠、活动以及外域的关于促销、推广、优惠等营销电子邮件。" }, {
                        title: "订阅邮件",
                        word: "&nbsp包含云邮局订阅的杂志、报刊等最新的资讯和新闻内容。"
                    }, {
                        title: "垃圾邮件",
                        word: "&nbsp包含系统判别为对用户骚扰的未经主动请求的邮件，如虚假广告、钓鱼网站、成人广告、赚钱信息等不良和恶意信息。"
                    }], f = this.model.get("billTab");
                    $App.getCurrentTab().title;
                    s += ['<div class="width_full" style="left:0;top:45px;">', '<div class="mailing-lists-count clearfix">', '<span id="inboxHeader" class="fl countInfo"></span>', "</div>", "</div>"].join(""), this.model.isStarMode() && e.showMailOnce("i-star-white", "mailTipstar", h[1].title, h[1].word), this.model.isSubscribeMode() && e.showMailOnce("i-rss-white", "mailTipsubscribe", h[8].title, h[8].word), this.model.isVipMode() && e.showMailOnce("i-vip-white", "mailTipvip", h[0].title, h[0].word), this.model.isTaskMode() && e.showMailOnce("i-task-white", "mailTiptask", h[2].title, h[2].word), this.model.isBillMode() && "0" == f && e.showMailOnce("i-account-white", "mailTiplist", h[3].title, h[3].word), this.model.isBillMode() && "2" == f && e.showMailOnce("i-service-white", "mailTiplife", h[4].title, h[4].word), this.model.isBillMode() && "3" == f && e.showMailOnce("i-clock-white", "mailTipnotice", h[5].title, h[5].word), this.model.isBillMode() && "4" == f && e.showMailOnce("i-key-white", "mailTipzuce", h[6].title, h[6].word), this.model.isBillMode() && "5" == f && e.showMailOnce("i-push-white", "mailTipads", h[7].title, h[7].word), 5 == top.$App.getCurrentFid() && e.showMailOnce("i-trash-white", "mailTiprub", h[9].title, h[9].word), this.model.isBillMode() && "6" == f && e.showMailOnce("i-account-white", "mailTiplist", h[8].title, h[8].word)
                }
                var g = $(s);
                "left" == $App.getLayout() && g.find("#btn_setting").parent().remove(), this.el.innerHTML = "", this.$el.append(g), this.model.isBillMode() && this.refreshBillCount(), o && top.M139.Timing.waitForReady("top.$App.getConfig('UserData')", function () {
                    var t = top.$App.getConfig("UserData");
                    if (t && t.mainUserConfig && t.mainUserConfig.usercustominfo) {
                        var i = top.$App.getUserCustomInfo("billCharge");
                        if ("undefined" == typeof i) e.showBillCharge(); else if (8 == i.length) {
                            var a = top.M139.Date.getServerTime();
                            a.setDate(a.getDate() - 1), a = $Date.format("yyyyMMdd", a), a > i && e.showBillCharge()
                        }
                    }
                }), n && this.isShowMailApp(), this.$el.attr("style", "*position: relative;*z-index: 2;zoom:1;"), $("#maillist_text").html();
                var e = this, g = g.find("ul.toolBarUl_v3"), v = null;
                "list" != $App.getLayout() && (v = {
                    mid: null,
                    mail: e.model.get("mailListData")
                }), this.menu = new M2012.Mailbox.View.MailMenu({
                    el: g,
                    model: this.model,
                    readmail: v
                }), this.menu.render(), "9" == t ? (this.$el.find("#subscribeTab a[tabid!='']").click(function () {
                    var e = $(this).attr("tabid");
                    e && ($App.close("mailbox_9"), $App.show(e))
                }), this.$el.find("#subscribefreeback").attr("href", "http://uec.mail.10086.cn/jumpFeedbackRedirect.do?isdirect=1&nav=3&isfirst=1&sid=" + $App.getSid())) : "7" == t && this.$el.find("#btn_setting").hide()
            },
            showMailOnce: function (e, t, i, a) {
                var s = this;
                top.$App.showOnce(t, function () {
                    var t = top.M139.Text.Utils.format(s.Mailclassification, {
                        classicon: e,
                        mailName: i,
                        mailIntroduce: a
                    });
                    s.$el.find(".width_full").before(t), s.$el.find("#mailClassife").on("click", "#closemailClassif", function () {
                        top.BH("closedesc_descbox"), $(s.el).find("#mailClassife").remove()
                    })
                })
            },
            showBillCharge: function () {
                var e = this;
                e.$el.find("#billChargeBar").find("a.yellowTips_close").click(function () {
                    e.$el.find("#billChargeBar").hide(), now = $Date.format("yyyyMMdd", top.M139.Date.getServerTime()), top.$App.setUserCustomInfoNew({ billCharge: now }, function (e) {
                        console.log(e)
                    })
                });
                var t = $App.get("billCharge");
                t ? e._showBillCharge(t) : $App.on("billChargeLoad", function (t) {
                    e._showBillCharge(t)
                })
            },
            _showBillCharge: function (e) {
                var t = this;
                if (e) {
                    var i = t.$el.find("#billChargeBar"), a = ["<p>" + e.tipsMsg, '<a class="ml_5" href="' + e.tipsUrl + '">' + e.tipsName + "</a>", '<a hidefocus="1" class="btnG ml_5" href="' + e.packageUrl + '"><span>' + e.packageName + "</span></a></p>", '<a href="javascript:" class="yellowTips_close">×</a>'].join("");
                    i.find("p").replaceWith(a)
                }
            },
            createPager: function (e) {
                function t(e) {
                    i.model.set("flipType", "common"), i.model.set("pageIndex", e), i.model.set("listPosition", 0);
                    var t = i.parentView.listView;
                    t.render(!0, { isScrollTop: !0 }, function () {
                        t.$el.find("[id^=id]:checked").length == Math.min($App.getMailboxView().listView && t.$el.find("[id^=id_]:checkbox").length, $App.getConfig("UserAttrs").defaultPageSize) ? i.parentView.listView.$el.find("[id^=chk_mailist_all]").attr("checked", !0).change() : i.parentView.listView.$el.find("[id^=chk_mailist_all]").attr("checked", !1).change()
                    }), 7 == i.model.get("fid") ? BH("del_pagechange") : BH("mailbox_pager")
                }

                var i = this;
                this.$el.find("#maillist_pager").html("");
                var a = $($App.getCurrentTab().element).find("#maillist_pager_bottom"), s = $($App.getCurrentTab().element).find("#maillist_pager_top");
                a.html(""), s.html("");
                var o = this.model.getPageCount(e);
                if ("left" != $App.getLayout() && (this.pager = M2012.UI.PageTurning.create({
                    styleTemplate: 3,
                    container: this.$el.find("#maillist_pager"),
                    pageIndex: this.model.get("pageIndex"),
                    maxPageButtonShow: 5,
                    pageCount: o
                })), this.pager2 = M2012.UI.PageTurning.create({
                    styleTemplate: 3,
                    container: a,
                    pageIndex: this.model.get("pageIndex"),
                    maxPageButtonShow: 5,
                    pageCount: o
                }), this.pager3 = M2012.UI.PageTurning.create({
                    styleTemplate: 3,
                    container: s,
                    pageIndex: this.model.get("pageIndex"),
                    maxPageButtonShow: 5,
                    pageCount: o
                }), this.pager && this.pager.on("pagechange", t), this.pager2.on("pagechange", t), this.pager3.on("pagechange", t), this.model.isSubscribeMode()) {
                    var n = '<a style="" class="i-listshow  ml_6" href="javascript:$App.close(\'cardMail\');$App.showMailbox(9);$App.setUserCustomInfoNew({\'mailsubstate\': \'1\'});" title="列表展示" bh="mpost_subscribemail_ordinary_list_logo" rel="next"></a><a class="i-cardshow  ml_6" href="javascript:$App.close(\'mailsub_0\');$App.show(\'cardMail\');$App.setUserCustomInfoNew({\'mailsubstate\': \'2\'});" title="卡片展示" bh="mpost_subscribemail_card_list_logo" rel="next"></a>';
                    0 == this.$el.find("#div_cardMail").length && this.$el.find("#maillist_pager,#maillist_pager_bottom").after("<div id='div_cardMail' style='float: right;padding-top:5px'>" + n + "</div>")
                }
            },
            showMailApp: function () {
                var e = this, t = $App.get("cloudMailAppContent"), i = e.$el.find("#cloudMailApp");
                t ? (i.show().find("p").replaceWith(t).show(), $(window).trigger("resize")) : $App.on("showCloudMailApp", function (e) {
                    i.show().find("p").replaceWith(e.content), $(window).trigger("resize")
                }), i.find("a#CloseloudMailApp").click(function () {
                    i.hide(), top.$App.setUserCustomInfo(47, 2), $(window).trigger("resize")
                });
                var a = top.M139.Date.getServerTime();
                $Cookie.set({
                    name: "listCloudApp_" + top.UserData.UID,
                    value: "1",
                    expires: top.$Date.getDateByDays(a, 1)
                })
            },
            showDelBackTip: function () {
                $("#delBackYTip").length > 0 && $("#delBackYTip").remove();
                var e = this.model.getFolderInfo(), t = "mb_10";
                if (len = e.stats.messageCount, len <= 0 && (t = "ml_10 mr_10 mt_10"), e.keepPeriod > 0) var i = ['<div id="delBackYTip" class="yellowTips ' + t + '" style="text-align:center">', "系统将自动清理7天以上的已删除邮件&nbsp;|&nbsp;<a href=\"javascript:top.$App.show('selfSearch', { type: 1 });BH({ key: 'set_pop_delquery' });\">删信记录查询</a>&nbsp;|&nbsp;<a href=\"javascript:$App.showMailbox(7);BH('find_del_mail1');\" id=\"queryDelBack\">查看备份的彻底删除邮件</a>", "</div>"].join(""); else var i = ['<div id="delBackYTip" class="yellowTips ' + t + '" style="text-align:center">', "系统将自动清理7天以上的已删除邮件&nbsp;|&nbsp;<a href=\"javascript:top.$App.show('selfSearch', { type: 1 });BH({ key: 'set_pop_delquery' });\">删信记录查询</a>&nbsp;|&nbsp;<a href=\"javascript:$App.showMailbox(7);BH('find_del_mail1');\" id=\"queryDelBack\">查看备份的彻底删除邮件</a>", "</div>"].join("");
                $("#mailbox_toolbar_4").parents("#toolbar_div").is(":visible") ? $("#mailbox_toolbar_4").parent().after(i) : $("#mailbox_toolbar_4").parents("#toolbar_div").after(i)
            },
            showSpamFolderTip: function () {
                $("#delBackYTip").length > 0 && $("#delBackYTip").remove();
                var e = ['<div id="delBackYTip" class="yellowTips" style="text-align:center">', "“垃圾邮件”将自动清理30天以上的邮件&nbsp;|&nbsp;<a href=\"javascript:top.$App.show('selfSearch', { type: 2 });BH({ key: 'set_spam_delquery' });\">删信记录查询</a>", "</div>"].join("");
                "left" != $App.getLayout() && $("#mailbox_toolbar_5").parent().after(e)
            },
            showAdFolderTip: function () {
                $("#delBackYTip").length > 0 && $("#delBackYTip").remove();
                var e = top.$App.getFolderById(11);
                if (e && e.keepPeriod > 0) {
                    var t = ['<div id="delBackYTip" class="yellowTips mb_10" style="text-align:center">', "“广告文件夹”将自动清理" + e.keepPeriod + "天以上的邮件&nbsp;|&nbsp;<a href=\"javascript:top.$App.show('selfSearch', { type: 1 });BH({ key: 'set_ads_delquery' });\">删信记录查询</a>", "</div>"].join("");
                    $("#mailbox_toolbar_11").after(t)
                }
            },
            parseStr2Obj: function (e, t) {
                for (var i = {}, a = t || "|", s = e.split(a), o = 0; o < s.length; o++) {
                    var a = s[o].match(/([\w]+)=(.+)/);
                    a && (i[a[1]] = a[2].trim().replace(/＝/g, "="))
                }
                return i
            },
            getAdMailDate: function (e) {
                var t, i = new Date, a = {
                    times: i.getTime(),
                    years: i.getFullYear(),
                    month: i.getMonth(),
                    date: i.getDate(),
                    hour: i.getHours(),
                    minutes: i.getMinutes()
                }, i = a, s = $Date.parse(e) || new Date, o = i.times - s.getTime();
                if (0 > o) t = o > -6e4 ? "刚刚" : $Date.format("yyyy-M-dd(w) hh:mm", s); else if (s.getFullYear() == i.years && s.getMonth() == i.month && s.getDate() == i.date) {
                    var n = Math.round(o / 1e3 / 60);
                    t = 1 > n ? "刚刚" : n >= 1 && 60 > n ? n + "分钟前" : Math.floor(n / 60) + "小时前"
                } else t = s.getFullYear() == i.years ? s.format("M-dd(w) hh:mm") : s.format("yyyy-M-dd(w)");
                return "<span title='" + $Date.format("yyyy年M月dd日 hh:mm", s) + "'>" + t + "</span>"
            },
            showAdTips: function () {
                function e(i) {
                    var a = i && i["var"] && i["var"].web_031 && i["var"].web_031.length > 0 && i["var"].web_031[0];
                    if (a) {
                        var s = t.bawangyouNewTemplate, o = window.bawangyouData && window.bawangyouData[a.contentId] || Number(a.readStatus);
                        a.content = a.content.replace(/v[=＝]\d+/g, "v=99" + Math.random().toString().slice(2));
                        var n = t.parseStr2Obj(a.content);
                        if (n && n.version && "2.3" == n.version) return;
                        var r = $T.format(s, {
                            iconTitle: "推广",
                            iconClass: o ? "i_sound_yellowed" : "i_sound_yellow",
                            readStatus: o ? "" : "fw_b",
                            subject: n.subject,
                            mailForm: n.from,
                            sendUrl: "http://zone.mail.10086.cn/api/sso/ssoformail.ashx?to=CN201504C1&sid=" + $App.getSid()
                        }), l = $("#div_maillist");
                        0 != l.length && ($("#div_adMaillist").remove(), top.$App.getCommConfig({ configId: 610 }, function (e) {
                            var t = { configId: 610, configValue1: 0, configValue2: "" };
                            "S_OK" == e.code && (0 == e["var"].length && (e["var"][0] = t), 0 == e["var"][0].configValue1 && "CleanMailbox" == top.$App.isclearSkinUser() && $("#div_adMaillist").remove())
                        }), l.prepend(r), "1" == n.target && $("#div_adMaillist a[name=from],#div_adMaillist a[name=subject]").attr({
                            target: "_blank",
                            href: n.url
                        })), n.url = decodeURIComponent(n.url), n.url.match(/sid=/) && (n.url = n.url + $App.getSid()), n.tagId && n.buyerId && "CleanMailbox" !== top.$App.isclearSkinUser() && (t.model.set("advertisingId", a.contentId), t.model.set("tagId", n.tagId), t.model.set("buyerId", n.buyerId)), $("#div_adMaillist").click(function (s) {
                            var o = s.target || s.srcElement;
                            if ("div_adMaillist_send" != o.id) {
                                if ("div_adMaillist_close" != o.id) {
                                    if (window.bawangyouData || (window.bawangyouData = {}), window.bawangyouData[a.contentId] = 1, "2" == n.target) {
                                        if (n.url = top.$T.Html.decode(n.url), n.url.indexOf("javascript:") > -1) {
                                            var r = new Function(n.url.replace("javascript:", ""));
                                            r()
                                        }
                                    } else window.LinkConfig.adMail = {
                                        url: n.url,
                                        title: n.subject
                                    }, "1" != n.target && $App.show("adMail");
                                    e(i)
                                } else $("#div_adMaillist").remove(), i["var"].web_031 = [];
                                var l = {
                                    positionCodes: "web_031",
                                    contentId: a.contentId.toString()
                                }, c = {
                                    actionId: n.actionId || "8000",
                                    thingId: n.thingId,
                                    module: "25",
                                    pageId: "24",
                                    actionType: "20",
                                    desc: n.subject
                                };
                                "from" != o.name && "subject" != o.name || (BH(c), top.M139.RichMail.API.call("unified:updatePositionContent", l), t.unifiedLogRepot(2))
                            }
                        })
                    }
                }

                if ("left" != $App.getLayout()) {
                    var t = this, i = {};
                    document.getElementById("welcome") && (i = document.getElementById("welcome").contentWindow.inlineUnifiedPositionContent || top.mwUnifiedPositionContent, e(i)), t.unifiedLogRepot(1)
                }
            },
            unifiedLogRepot: function (e) {
                var t = this, i = t.model.get("tagId") || "", a = t.model.get("buyerId") || "", s = t.model.get("advertisingId") || "";
                if ("" !== a) {
                    var o = {
                        positionCode: s,
                        eventType: e,
                        comeFrom: "2",
                        ads: [{ tagId: i, buyerId: a }],
                        version: "1.0"
                    };
                    top.M139.RichMail.API.call("unified:logreport", o, function (e) {
                        e.responseData.code && "S_OK" == e.responseData.code && console.log("统一位置行为日志上报成功")
                    })
                }
            },
            showSubscribeYellowTip: function () {
                function e(e) {
                    var i = e && e["var"] && e["var"].web_119.length > 0 && e["var"].web_119[0];
                    if (i) {
                        var a = t.subscribeYellowTip, s = window.bawangyouData && window.bawangyouData[i.contentId], o = t.parseStr2Obj(i.content), n = $T.format(a, { subject: o.subject });
                        if (0 == $(".bgPadding").length || 0 != $("#div_subscribeYellowTip").length || s) return;
                        $($App.getCurrentTab().view.el).find("#mailbox_toolbar_1").after(n);
                        var r = {
                            actionId: "106613",
                            thingId: o.thingId,
                            module: "25",
                            pageId: "24",
                            actionType: "20",
                            desc: o.subject
                        };
                        BH(r), o.url = decodeURIComponent(o.url), o.url.match(/sid=$/) && (o.url = o.url + $App.getSid()), $("#div_subscribeYellowTip").click(function (e) {
                            window.bawangyouData || (window.bawangyouData = {}), window.bawangyouData[i.contentId] = 1;
                            var t = { positionCodes: "web_119", contentId: i.contentId.toString() };
                            if ("closeTip" == $(e.target).attr("id")) {
                                ({
                                    actionId: "106614",
                                    thingId: o.thingId,
                                    module: "25",
                                    pageId: "24",
                                    actionType: "20",
                                    desc: o.subject
                                });
                                return BH(close), $("#div_subscribeYellowTip").remove(), void top.M139.RichMail.API.call("unified:updatePositionContent", t)
                            }
                            if ("2" == o.target) {
                                if (o.url = top.$T.Html.decode(o.url), o.url.indexOf("javascript:") > -1) {
                                    var a = new Function(o.url.replace("javascript:", ""));
                                    a()
                                }
                            } else window.LinkConfig.adMail = {
                                url: o.url,
                                title: o.subject
                            }, "1" == o.target && (window.LinkConfig.adMail.target = "_blank"), $App.show("adMail");
                            $("#div_subscribeYellowTip").remove();
                            var s = {
                                actionId: "106615",
                                thingId: o.thingId,
                                module: "25",
                                pageId: "24",
                                actionType: "20",
                                desc: o.subject
                            };
                            BH(s), top.M139.RichMail.API.call("unified:updatePositionContent", t)
                        })
                    }
                }

                var t = this;
                document.getElementById("welcome") && (welcomeContent = document.getElementById("welcome").contentWindow.inlineUnifiedPositionContent || top.mwUnifiedPositionContent, welcomeContent && welcomeContent["var"] && welcomeContent["var"].web_119 && welcomeContent["var"].web_119.length && e(welcomeContent))
            },
            isShowMailApp: function () {
                var e = this;
                top.M139.Timing.waitForReady("top.$App.getConfig('UserData')", function () {
                    var t = top.$App.getConfig("UserData");
                    if (t && t.mainUserConfig && t.mainUserConfig.usercustominfo) {
                        var i = top.$App.getUserCustomInfo(47);
                        if ("2" != i) {
                            var a = $Cookie.get("listCloudApp_" + top.UserData.UID);
                            a || e.showMailApp()
                        }
                    }
                })
            },
            flipPage: function (e, t) {
                function i(e) {
                    a.model.off("mabilbox_render", i), t && t(e)
                }

                var a = this, s = this.model.get("pageIndex");
                "next" == e ? s += 1 : "prev" == e && (s -= 1), this.pager.trigger("pagechange", s), this.model.on("mabilbox_render", i)
            },
            addSelectFolderMenu: function (e) {
                var t = this;
                M2012.UI.PopMenu.createWhenClick({
                    target: t.$el.find("#folderName"),
                    items: this.model.getFolderMenuItems("all", { command: "open" }),
                    onItemClick: function (e) {
                        $App.showMailbox(parseInt(e.args.fid))
                    }
                })
            },
            unreadBillCountDom: function (e) {
                var t = this, i = t.model.get(e);
                return i ? i > 99 ? '<em class="service-total service-more">99<b>+</b></em>' : '<em class="service-total service-more">' + i + "</em>" : ""
            },
            refreshBillCount: function (e) {
                var t = this, i = t.$el.find(".on[tab]").index(), a = ["UnreadMobilebillCounts", "UnreadInvoiceCounts", "UnreadLifeserviceCounts", "UnreadNoticeCounts", "UnreadRegisteCounts", "UnreadExtensionCounts", "UnreadChaoMessageCounts"];
                t.model.getUnreadBillCounts(function () {
                    $("#billTab").find("em").remove(), $("#billTab a").each(function (e, i) {
                        var s = t.unreadBillCountDom(a[e]);
                        $(i).prepend(s)
                    });
                    var s = t.model.get(a[i]);
                    t.changeUnreadSuffix(s), _.isFunction(e) && e(s)
                })
            },
            refreshCount: function () {
                var e = this;
                if (this.model.get("isSearchMode") && this.model.get("searchStats")) {
                    var t = this.model.get("searchStats");
                    if (this.model.isStarMode()) var i = $App.getView("folder").model.get("unreadStarCount"), a = $App.getView("folder").model.get("totalStarCount"); else if (this.model.isVipMode()) {
                        M139.Timing.waitForReady("$App.getView('folder').model.get('vipMailStats')", function () {
                            var t = $App.getView("folder").model.get("vipMailStats").unreadMessageCount, i = $App.getView("folder").model.get("vipMailStats").messageCount;
                            e.changeUnreadSuffix(t), e.replaceLink({ unreadCount: t, messageCount: i })
                        });
                        var i = t.unreadMessageCount, a = t.messageCount
                    } else if (this.model.isBillMode()) {
                        e.refreshBillCount(function (i) {
                            e.replaceLink({ unreadCount: i, messageCount: t.messageCount })
                        });
                        var i = t.unreadMessageCount, a = t.messageCount;
                        e.renderHeader()
                    } else if (this.model.isSubscribeMode()) var i = $App.getView("folder").model.get("newSubscriptionCount"), a = $App.getView("folder").model.get("totalSubscriptionCount"); else {
                        var i = t.unreadMessageCount, a = t.messageCount;
                        e.renderHeader()
                    }
                    e.changeUnreadSuffix(i), e.replaceLink({ unreadCount: i, messageCount: a })
                } else {
                    var s = this.model.getFolderInfo(this.model.get("fid"));
                    e.changeUnreadSuffix(s.stats.unreadMessageCount);
                    var o = this.model.get("isContactsMail") ? "与" + this.model.get("contactsEmail") + "的往来邮件&nbsp;" : "";
                    e.replaceLink({
                        unreadCount: s.stats.unreadMessageCount,
                        messageCount: s.stats.messageCount,
                        prefix: o
                    })
                }
            },
            changeUnreadSuffix: function (e) {
                var t = e ? "" : " ";
                this.$el.find("#sp_unread").html(t + e + " 封")
            },
            replaceLink: function (e) {
                var t = e.unreadCount, i = e.messageCount, a = e.prefix ? e.prefix : "", s = this.$el.find("#btn_unread"), o = this.$el.find("#sp_total"), n = s.attr("showbacklink");
                Number(n) ? o.html(a + "共 " + t + " 封，") : (t ? s.replaceWith('<a showbacklink="0" href="javascript:;" id="btn_unread">未读邮件</a>') : s.replaceWith('<span showbacklink="0" style="cursor:default;" id="btn_unread">未读邮件</span>'), o.html(a + "共 " + i + " 封，"))
            },
            onUnreadBtnClick: function (e) {
                var t = $(e.target).attr("showBackLink");
                if (Number(t)) {
                    top.BH("mailbox_unread_back");
                    var i = top.$App.getConfig("lastClickFolder");
                    return void (i ? ($(e.target).text("未读邮件"), $(e.target).attr("showBackLink", "0"), i.fid ? top.$("#sidebar").find("li[fid='" + i.fid + "'] a").click() : i.id && top.$("#sidebar").find("li[id='" + i.id + "'] a").click()) : top.$App.showMailbox(1))
                }
                top.BH("mailbox_unread");
                var a = this.model.get("fid");
                folderType = this.getFolderType();
                var s = { command: "viewUnread", inherit: !0 };
                5 == folderType ? (s.fid = 0, s.label = [a]) : s.fid = a, this.model.get("IamFromLaiwang") && (this.model.set("UnReadIamFromLaiwang", !0), BH("rmcontact_clickUnreadMessage"), this.model.set("UnReadMessageSTotalMessage", this.model.getFolderInfo().stats.messageCount)), s.hasClickUnreadLink = !0, $App.trigger("mailCommand", s)
            },
            onPopWriteMailClick: function () {
                var e = (this.model.get("fid"), this.model.getFolderInfo()), t = { inputData: { userAccount: e.email } };
                $App.show("compose", { userAccount: e.email }, t)
            },
            getPOPAccount: function () {
                var e = this, t = this.model.getFolderInfo(), i = { status: 1, id: t.popId };
                this.model.getPOPAccounts(i, function (t) {
                    var i = (t.code, t["var"][0]);
                    (new Date).getTime() / 1e3, parseInt(i.startTime);
                    e.popobj = i, e.autoSynPopAccount()
                })
            },
            autoSynPopAccount: function () {
                var e = this, t = this.model.get("fid"), i = this.model.getFolderInfo(), a = e.$el.next().find("#div_maillist"), s = e.model.get("popReceive"), o = { id: i.popId };
                s || (this.model.set({ popReceive: !0 }), a.find(".whitebaby-remind").hide(), a.append("<div id='connecting' class='set-loading'><img src='/m2015/images/global/wait.gif'>正在连接对方服务器，您可稍后过来查看邮件收取情况。</div>"), this.model.syncPOPAccount(o, function () {
                    e.popTime = setInterval(function () {
                        e.autoSetIntervalPop(i.popId, a, t)
                    }, 6e3)
                }))
            },
            autoSetIntervalPop: function (e, t, i) {
                var a = this, s = { status: 1, id: e };
                a.model.getPOPAccounts(s, function (e) {
                    var s = e["var"][0].status, o = "", n = s ? s.code : "", r = s ? s.messageCount : top.$App.getFolderById(i).stats.messageCount, l = a.model.get("getPopAccountTimes") || 0;
                    return "S_OK" != e.code && M139.UI.TipMessage.error("收取失败，请重试"), !s || l > 29 ? (0 === r ? (t.find("#connecting").remove(), o = ['<div class="alert-remind" style="top:240px;">', '<div class="p_relative horizon_full">', '<i class="remind-angry"></i>', '<div class="remind-text" style="top:-60px;width:auto;line-height:19px;padding:5px 15px;margin-left:-135px;">', '<p class="fz_14">暂未收取到邮件，您可尝试<a href="javascript:;" id="syncAgain">再次收取</a><span style="display:none;">或更改<a href="javascript:;" id="changePopRange">收取范围</a></span></p>', '<i class="i-triangle-back triangle-pos" style="left:155px;"></i>', "</div>", "</div>", "</div>"].join(""), t.append(o), 0 != e["var"][0].flag && $("#syncAgain").next().show().parent().next().css("left", "185px").parent().css("margin-left", "-174px"), $("#syncAgain").click(a.onSyncPopAccountClick), $("#changePopRange").click(a.showPopRange)) : M139.UI.TipMessage.show(e["var"][0].username + "收取到" + r + "封邮件", { delay: 2e3 }), a.model.set({ popReceive: !1 }), void clearInterval(a.popTime)) : "PENDING" === n || "RUNNING" === n || "CONNECTING" === n ? void a.model.set("getPopAccountTimes", ++l) : void 0
                })
            },
            showPopRange: function () {
                var e = ['<div style="width:200px;margin:30px auto;font-size:14px;">', '<p class="collectionText">', '<input type="radio" value="1" name="popFlag" id="get7day">', '<label for="get7day">', "&nbsp;&nbsp;收取最近7天的邮件", "</label>", "</p>", '<p class="collectionText">', '<input type="radio" value="2" name="popFlag" id="get30day">', '<label for="get30day">', "&nbsp;&nbsp;收取最近一个月的邮件", "</label>", "</p>", '<p class="collectionText">', '<input type="radio" value="0" name="popFlag" id="getall">', '<label for="getall">', "&nbsp;&nbsp;收取全部邮件", "</label>", "</p>", "</div>"].join(""), t = $App.getMailboxView().toolbarView, i = $App.getMailboxView().toolbarView.popobj, a = {
                    0: 2,
                    1: 0,
                    2: 1
                }, s = a[i.flag], o = $(e);
                o.find("input").eq(s).attr("checked", "checked"), e = o[0].outerHTML;
                var n = function () {
                    var e = $("input[name='popFlag']:checked").val(), a = {
                        item: {
                            opType: "mod",
                            id: i.id,
                            server: i.server,
                            port: i.port,
                            popType: i.popType,
                            username: i.username,
                            leaveOnServer: i.leaveOnServer,
                            timeout: i.timeout,
                            fid: i.fid,
                            folderName: i.folderName,
                            isSSL: i.isSSL,
                            isAutoPOP: i.isAutoPOP,
                            flag: e
                        }
                    };
                    t.model.modPOPAccount(a, function (e) {
                        "S_OK" == e.code ? (top.$App.trigger("reloadFolder", { reload: !0 }), top.$App.getMailboxView().render()) : M139.UI.TipMessage.error("邮件收取范围更改失败，请重试")
                    })
                }, r = function () {
                }, l = { title: "邮件收取范围更改", name: "changePopRangeDialog", buttons: ["确定", "取消"] };
                top.$Msg.showHTML(e, n, r, l)
            },
            onSyncPopAccountClick: function (e) {
                var t = this.model ? this : $App.getMailboxView().toolbarView, i = t.model.get("fid"), a = t.model.getFolderInfo(), s = (a.stats.messageCount, { id: a.popId }), o = t.model.get("popReceive"), n = t.$el.next().find("#div_maillist"), r = !!e;
                o || (t.model.set({ popReceive: !0 }), top.WaitPannel.show("收取中，请稍候"), t.model.syncPOPAccount(s, function (e) {
                    return "S_OK" != e.code ? (top.WaitPannel.hide(), void top.M139.UI.TipMessage.error(e.summary, { delay: 3e3 })) : void (t.popTime = setInterval(function () {
                        t.setIntervalPop(a.popId, i, n, r)
                    }, 7e3))
                }))
            },
            onFileMailClick: function () {
                function e() {
                    if (M139.UI.TipMessage.show("正在加载中..."), $("#filemailDialog").length < 1) {
                        var e = $Msg.showHTML("<div id='filemailDialog' style='height:370px;'></div>", null, null, null, {
                            dialogTitle: "邮件归档",
                            width: "450px"
                        }), t = new M2012.FileMail.View({ el: "#filemailDialog" });
                        t.model.set("dialog", e), t.initEvents()
                    }
                }

                if (M2012.FileMail) e(); else {
                    var t = '<link rel="stylesheet" type="text/css" href="' + window.location.protocol + "//" + window.location.host + '/m2015/css/module/set.css">';
                    $("head").append(t), this.loadJsScript("filemail", "filemail.html.pack.js", e)
                }
            },
            onClassifyMailClick: function () {
                function e() {
                    function e() {
                        if (M139.UI.TipMessage.show("正在加载中..."), $("#classifymailDialog").length < 1) {
                            var e = $Msg.showHTML("<div id='classifymailDialog' ></div>", null, null, null, {
                                dialogTitle: "快速创建收信规则",
                                width: 500
                            }), t = new M2012.ClassifyMail.View({ el: "#classifymailDialog" });
                            t.model.set("dialog", e), t.initEvents()
                        }
                    }

                    var t = 100, i = { filterFlag: 1 };
                    top.M139.RichMail.API.call("user:getFilter_New", i, function (i) {
                        i && i.responseData && "S_OK" === i.responseData.code ? i.responseData.filterTotal && i.responseData.filterTotal >= t ? $App.show("type_new") : e() : ($App.logger("[user:getFilter_New] return data error"), $Msg.alert("网络繁忙，请稍后重试！"))
                    })
                }

                M2012.ClassifyMail ? e() : this.loadJsScript("classifymail", "classify.html.pack.js", e)
            },
            onCleanMailClick: function () {
                function e() {
                    if (M139.UI.TipMessage.show("正在加载中..."), $("#cleanmailDialog").length < 1) {
                        var e = $Msg.showHTML("<div id='cleanmailDialog' style='width:450px'></div>", null, null, null, {
                            dialogTitle: "邮件清理",
                            width: 452
                        }), t = new M2012.CleanMail.View({ el: "#cleanmailDialog" });
                        t.model.set("dialog", e), t.initEvents()
                    }
                }

                BH("mailbox_mailClean"), M2012.CleanMail ? e() : this.loadJsScript("cleanmail", "cleanmail.html.pack.js", e)
            },
            onEmailaddrClick: function () {
                function e() {
                    var e = "<div id='forwardBillemailDialog'></div>", t = $Msg.showHTML(e, {
                        dialogTitle: "话费账单邮件转发",
                        width: 420
                    }), i = new M2012.ForwardBillemail.View({ el: "#forwardBillemailDialog" });
                    i.model.set("dialog", t)
                }

                top.BH("forwardbillemail_click");
                M2012.ForwardBillemail ? e() : this.loadJsScript("forwardbillemail", "forwardbillemail.html.pack.js", e)
            },
            onMarkUnreadClick: function () {
                var e = this.model.get("isSearchMode"), t = e ? this.model.get("searchOptions").fid : this.model.get("fid");
                $App.trigger("mailCommand", { command: "markAll", fid: t })
            },
            onDeleteUnreadClick: function () {
                var e = this.model.get("isSearchMode"), t = e ? this.model.get("searchOptions").fid : this.model.get("fid");
                $App.trigger("mailCommand", { command: "deleteAll", fid: t })
            },
            onDeleteAllOrdinaryClick: function () {
                var e = this.model.get("fid");
                $App.trigger("mailCommand", { command: "deleteAllOrdinary", fid: e })
            },
            onMailBoxSettingClick: function () {
                var e = this;
                Package.require("mailbox_ext", function () {
                    new M2012.Mailbox.View.MailSetting({ el: e.el }).render(), BH("mailbox_setting")
                })
            },
            onContactMailsTotalClick: function () {
                var e = { command: "viewUnreadContactMails" };
                BH("rmcontact_clickTotalMessage"), $App.trigger("mailCommand", e)
            },
            getFolderType: function () {
                var e = this.model.get("fid"), t = (this.model.getFolderInfo(), $App.getFolderType(e));
                return t
            },
            loadJsScript: function (e, t, i) {
                return e && $("#" + e)[0] ? void (i && i()) : void M139.core.utilCreateScriptTag({
                    id: e,
                    src: t,
                    charset: "utf-8"
                }, function () {
                    i && i()
                })
            },
            showClassifyTips: function (e) {
                var t = this, i = '邮件太多？<a href="javascript:" onClick="return false" class="classify_mail toclassify_mail" bh="mailbox_history"><span id="toclassify_mail" >试试创建收信规则</span></a>吧!';
                $App.showOnce(e, function () {
                    M2012.UI.Tip.DockTips.create({
                        el: $("a#classify_mail"),
                        id: "tip_classify",
                        title: "",
                        icon: "none",
                        text: i,
                        link: {
                            linkId: "toclassify_mail", click: function () {
                                t.onClassifyMailClick(), $(".filterTip").remove()
                            }
                        }
                    });
                    var e = $("#tip_classify").css("left");
                    e && $("#tip_classify").css("left", parseInt(e, 10) - 20 + "px")
                })
            },
            showFilter: function () {
                function e() {
                    return "mailbox_1" == top.$App.getCurrentTab().name
                }

                var t = 999, i = 9999, a = this.model.getFolderInfo();
                if (a) {
                    var s = a.stats.messageCount;
                    2 != top.UserData.vipType && e() && s > i || 2 != top.UserData.vipType && e() && s > t
                }
            },
            renderHeader: function () {
                function e() {
                    return "mailbox_1" == top.$App.getCurrentTab().name
                }

                var t = this, i = this.model.get("fid"), a = this.model.get("hasClickUnreadLink"), s = 0, o = "未读邮件";
                a && (s = 1, o = "返回查看全部");
                var n = this.model.getFolderInfo();
                if ("账单中心" == $App.getCurrentTab().title && this.model.get("isSearchMode")) {
                    var r = this.model.get("billtype");
                    n.name = this.model.getBillTypeName(r) || "账单中心"
                }
                if (this.model.isTaskMode() && (n.name = this.model.get("isTaskbacklogMode") ? "稍后处理" : "已完成"), n) {
                    var l = null;
                    l = n.popId;
                    var c = $App.getFolderType(i), d = this.model.get("isContactsMail"), p = d ? n.name : "", m = ['<span id="sp_total">', p, "共 " + n.stats.messageCount + " 封，", "</span>"];
                    n.stats.unreadMessageCount ? s ? m.push("<a showBackLink=" + s + ' href="javascript:" id="btn_unread">' + o + "</a>") : (m.push("<a showBackLink=" + s + ' href="javascript:" id="btn_unread">' + o + '</a><span id="sp_unread"> '), m.push(n.stats.unreadMessageCount), m.push(" 封</span>")) : (m.push('<span showbacklink="0" style="cursor:default;" id="btn_unread">未读邮件</span><span id="sp_unread"> '), m.push(n.stats.unreadMessageCount), m.push(" 封</span>"));
                    var u = $App.getMailboxView().model.get("searchOptions");
                    (2 === i || u && 2 === u.fid || 7 == i) && (m = ['<span id="sp_total">', p, "共 ", n.stats.messageCount, " 封</span>"]);
                    var h = 199, f = 9999, g = 96, v = ({ inputData: { userAccount: n.email } }, ""), b = '，<a href="javascript:;" id="btn_markUnread" bh="mailbox_markUnread">全部标为已读</a>&nbsp;|&nbsp;<a href="javascript:;" id="btn_deleteUnread" bh="mailbox_deleteUnread">删除全部未读</a>', y = '<span class="createReType">，邮件太多，<a href="javascript:;" onClick="return false" id="classify_mail" class="classify_mail" bh="toolbarclassify_onclick">创建收信规则</a>吧！</span>', w = '，邮件太多，试试<a href="javascript:;" onClick="return false" id="file_mail" bh="mailbox_mailFile">邮件归档</a>吧！', _ = '，<a href="javascript:;" bh="mailbox_pop_1" id="popWriteMail">写信</a><span class="line">|</span><span id="daishoujiluchaxun"><a href="javascript:;">收取记录查询</a></span> ', M = '<span class="inboxHeaderfr"><a bh="mailbox_pop_4" href="javascript:$App.show(\'popmail\')" hidefocus=""><i class="i_set"></i>&nbsp;其他邮箱管理</a></span>', C = '，<a href="javascript:;" id="btn_deleteAllOrdinary">全部删除</a>', x = '，<a href="javascript:;" id="btn_contactMailsTotal">往来邮件</a> 共 {x} 封', k = "", T = '<span class="inboxHeaderfr"><a href="javascript:$App.show(\'tags\')" hidefocus=""><i class="i_set"></i>&nbsp;管理文件夹</a></span>', A = '<span class="inboxHeaderfr"><a href="javascript:$App.show(\'voiceSetting\')" hidefocus=""><i class="i_set"></i>&nbsp;设置和留言</a></span>', I = '<span>&nbsp;（邮件{0} 天后将{1}，去</span><a href="javascript:$App.show(\'preference_autoDelSet\')" hidefocus="">设置</a><span>）</span>', S = '<span class="inboxHeaderfr"><a href="javascript:$App.show(\'addrvipgroup\')" bh="manage_vip_contacts" hidefocus=""><i class="i_set"></i>&nbsp;管理vip联系人</a></span>', D = '<span class="inboxHeaderfr"><a href="javascript:$App.show(\'diskDev\', {from: \'attachment\', toFid: \'99\'})" bh="manage_vip_folder" hidefocus=""><i class="i_atta"></i>&nbsp;管理vip附件</a></span>', B = '<span class="inboxHeaderfr"><a href="javascript:$App.show(\'diskDev\', {from: \'attachment\', toFid: \'98\'})" bh="manage_star_folder" hidefocus=""><i class="i_atta"></i>&nbsp;管理星标附件</a></span>', L = "近{0}天内彻底删除邮件记录{1}{2}", E = '<span style="color:#666;">&nbsp;&nbsp;&nbsp;系统将自动清理7天以上的已删除邮件</span><span class="inboxHeaderfr" style=""><a href="javascript:top.$App.show(\'selfSearch\', { type: 2 });BH({ key: \'set_pop_delquery\' });" id="queryDelMessage">&nbsp;删信记录查询</a></span>', U = n.stats.messageCount, F = $App.getFolders("custom") ? $App.getFolders("custom").length : 0, j = this.$el.find("#inboxHeader:eq(0)"), N = j.length;
                    if (1 == i && n.stats.unreadMessageCount > 20 && !this.model.isOnemailMode() && (v = b), e() && U > h && g > F && (v = y), e() && U > f && g > F && (v = w), 7 == i && $User.isChinaMobileUser()) {
                        var R = "", P = "7", V = ($T.Url.queryString("sid"), top.$App.getConfig("UserData") || {}), O = V.orderInfoList, H = "", z = "", G = [];
                        for (var q in O) {
                            var H = O[q].serviceId;
                            "232" == H && (z = O[q].orderStatus), G.push(H)
                        }
                        G.join(",").indexOf("232") > -1 && (4 == z || 0 == z) && (P = "30", R = "", L = $T.Utils.format(L, [P, "&nbsp;&nbsp;&nbsp;", R]), v = U > 0 ? "&nbsp;&nbsp;&nbsp;" + L : L)
                    } else 8 == i && n.keepPeriod > 0 ? v = $T.Utils.format(I, [n.keepPeriod, "账单"]) : 9 == i && n.keepPeriod > 0 && (v = $T.Utils.format(I, [n.keepPeriod, "订阅"]));
                    if (-3 == c && (v = _, m.unshift(M)), 3 == c && m.unshift(T), 4 == i && m.push(E), this.model.isBillMode() && 6 == this.model.get("billTab") && m.unshift(A), this.model.get("isVipMode") && (m.unshift(S), m.unshift(D)), this.model.isStarMode() && m.unshift(B), this.model.isApproachMode() && U > 0 && !t.model.get("IamFromLaiwang") && (v = C), d && U > 0 && t.model.get("IamFromLaiwang") && (v = k), d && U >= 0 && t.model.get("UnReadIamFromLaiwang")) {
                        var W = t.model.get("UnReadMessageSTotalMessage");
                        m.splice(2, 1), m.splice(3, 1, "<span>未读邮件</span>"), x = x.replace("{x}", W), v = x
                    }
                    m.push(v);
                    t.model.get("bill_type");
                    if (this.model.isBillMode() && this.model.get("billTab") < 1 && (m.push("<span id='ask_wrapper' ><span> 未收到移动账单?</span> <a class='red' data-ask='true' href='javascript:;'>申请补投</a></span>"), m.push("<span><span> ，其他邮箱也想收到话费账单？提交</span><a id='btn_emailaddr' class='red' href='javascript:;'>邮箱地址</a></span>")), this.model.isOnemailMode() && (m.push("<span id='ask_wrapper' ><span>， 未收到移动账单?</span> <a class='red' data-ask='true' href='javascript:;'>申请补投</a></span>"), m.push("<span><span> ，其他邮箱也想收到话费账单？提交</span><a id='btn_emailaddr' class='red' href='javascript:;'>邮箱地址</a></span>")), 8 != this.model.get("billTab") || top.$User.isChinaMobileUser() || (m.push("<span style='padding-left:5px'>更多潮州本地移动优惠资讯，请点击进入<a id='btn_chao'  style='color:white;background-color:orange' href='javascript:;'>潮州服务专区</a></span>"), setTimeout(function () {
                        $("#btn_chao").click(function () {
                            top.$App.show("mpostOnlineService", null, {
                        title: "潮州移动",
                        key: 41005,
                        inputData: { columnId: 41005, columnName: "xxxx" }
                    })
                    })
                    }, 50)), N && (j[0].innerHTML = m.join(""), this.model.isBillMode() && !$("#receiveBillEnable").length && j.before(this.getBillBtn()), this.model.isOnemailMode() && !$("#receiveBillEnable").length && j.before(this.getBillBtn())), t.model.isBillMode() && 0 == U) {
                        N && j.hide(), t.$el.find("#mailClassife").length > 0 && t.$el.find(".width_full").hide();
                        var K = t.model.get("billTab");
                        this.model.isBillMode() && 3 == K && j.parent().addClass("skin_bgColor"), this.model.isBillMode() && 6 == K && j.parents("#toolbar_div").hide()
                    }
                    if (0 != U || n.popId ? N && j.find("span.inboxHeaderfr").removeClass("mt_10") : N && j.find(".inboxHeaderfr").length ? (j.children().not("span.inboxHeaderfr").hide(), j.find("span.inboxHeaderfr").addClass("mt_10"), 7 == i && $("#upgradeTip").show().addClass("mt_10 mr_10").css({ "float": "left" })) : N && j.hide(), -3 == c) {
                        var J = j.parents("#toolbar_div").find("ul");
                        0 === J.find("#syncPOPAccount").length && J.prepend('<li class="mr_6"><a id="syncPOPAccount" href="javascript:" class="icoG"><span class="p_relative">收取</span></a></li>')
                    }
                    var Q = top.$App.getConfig("isNewPop");
                    -3 == c && 0 != U ? N && this.showAgentMailCount(i) : -3 == c && 0 === U && Q && Q.flag && (top.$App.setConfig("isNewPop", "flag", 0), this.getPOPAccount()), this.addSelectFolderMenu(c)
                }
            },
            getBillBtn: function () {
                var e = this, t = ['<div id="receiveBillEnable" class="entrance" style="display:none">', '<span class="ml_10"><a href="javascript:"><input type="checkbox" checked="checked" id="receiveBillEmail_{id}">邮件接收</a></span>', '<span id="receiveBillSms" class="ml_10"><a href="javascript:"><input type="checkbox" id="receiveBillSms_{id}">短信提醒</a></span>', "</div>"].join(""), i = e.model.get("billTab"), a = $($T.format(t, { id: i })), s = {
                    0: "31",
                    2: "32",
                    3: "33",
                    5: "34",
                    14: "31"
                }, o = !0;
                return s[i] ? (a.find("input").m139Check({
                    labelClass: "closingbtn",
                    labeledClass: "openingbtn"
                }), a.find("#receiveBillEmail_" + i).click(function () {
                    $(this).is(":checked") && o ? a.find("#receiveBillSms").show() : a.find("#receiveBillSms").hide()
                }), e.model.on("rejectMailOffFail", function (e) {
                    a.find("#receiveBillEmail_" + i).attr("checked", e).change(), e && o ? a.find("#receiveBillSms").show() : a.find("#receiveBillSms").hide()
                }), e.model.getMailNotify(function (t) {
                    t.enable ? t.notifystyle && ($.inArray(s[i], t.notifystyle.split(",")) > -1 ? a.find("#receiveBillSms_" + i).attr("checked", !0).change() : a.find("#receiveBillSms_" + i).attr("checked", !1).change(), a.find("#receiveBillSms_" + i).click(function () {
                        e.model.setBillMailNotify(s[i], $(this).is(":checked"), i)
                    })) : (a.find("#receiveBillSms").hide(), o = !1)
                }), e.model.getMailSubscribeStatus(function (e) {
                    for (var t = { 0: 1, 2: 2, 3: 3, 5: 4, 14: 1 }, s = 0; s < e.length; s++) {
                        if (e[s].businessType == t[i] && "1" == e[s].mailUnsubType) {
                            a.find("#receiveBillEmail_" + i).attr("checked", !1).change(), a.find("#receiveBillSms").hide();
                            break
                        }
                        a.find("#receiveBillEmail_" + i).attr("checked", !0).change()
                    }
                    a.show()
                }), a.find("#receiveBillEmail_" + i).click(function () {
                    e.model.setMailSubscribe(i, $(this).is(":checked"))
                }), a) : ""
            },
            showAgentMailCount: function (e, t) {
                function i(e, t) {
                    var i = {}, a = [];
                    if (e && t) {
                        for (var s = 0; s < e.length; s++) i[e[s].email] = e[s];
                        for (var o = 0; o < t.length; o++) a.push(i[t[o].email] || null);
                        return a
                    }
                }

                if ($("body").data("fid") == e) return !1;
                for (var a = function (e) {
                    var t = "";
                    switch (e) {
                        case "1110002":
                            t = "收取失败（帐户或密码验证失败），请确认其他邮箱帐号密码设置正确后重试！";
                            break;
                        default:
                            t = '收取失败（无法连接到对方服务器），请尝试<a id="tips_auto" href="javascript:;">手动收取！</a>'
                }
                    return t
                }, s = function (t, i) {
                    for (var s = $Date.format("yyyy-MM-dd hh:mm:ss", new Date), o = 0, n = 0, r = "", l = (top.$App.getFolderById(e).stats.messageCount, 0), c = i.length; c > l; l++) if (i[l].account == t) {
                        s = i[l].popDate, o = i[l].count, n = i[l].result;
                        break
                }
                    0 == n ? (r = 0 == o ? t + "暂未收取到邮件" : t + "收取到" + o + "封邮件", M139.UI.TipMessage.show(r, { delay: 2e3 })) : M139.UI.TipMessage.error(a(n), { delay: 2e3 }), setTimeout(function () {
                        $(window).resize()
                }, 1e3), $("body").data("fid", e), $("#tips_auto").click(function () {
                        BH({ key: "click_over_tips_auto" }), $("body").removeData("fid"), $("#syncPOPAccount").trigger("click")
                })
                }, o = i(top.$App.getFolders("pop"), top.$App.getPopList()), n = "", r = 0, l = o.length; l > r; r++) if (o[r].fid == e) {
                    n = o[r].email;
                    break
                }
                $RM.call("user:popAgentHistory", null, function (e) {
                    "S_OK" == e.responseData.code && s(n, e.responseData["var"].datalist)
                })
            },
            setIntervalPop: function (e, t, i, a) {
                var s = this, o = { status: 1, id: e };
                this.model.getPOPAccounts(o, function (e) {
                    var i = e["var"][0].status, o = i ? i.code : "", n = s.model.get("getPopAccountTimes") || 0;
                    return "S_OK" != e.code && (top.WaitPannel.hide(), M139.UI.TipMessage.error("收取失败，请重试")), !i || n > 29 ? (top.WaitPannel.hide(), s.model.set({ popReceive: !1 }), clearInterval(s.popTime), top.$App.trigger("reloadFolder", { reload: !0 }), top.$App.getMailboxView().render(), $("body").removeData("fid"), void s.showAgentMailCount(t, a)) : "PENDING" === o || "RUNNING" === o || "CONNECTING" === o ? void s.model.set("getPopAccountTimes", ++n) : void 0
                })
            },
            creatDelBackTip: function () {
                setTimeout(function () {
                    var e = $User.getServiceItem(), t = "0016" == e ? 30 : "0017" == e ? 90 : 7;
                    M2012.UI.Tip.DockTips.create({
                        el: $("#queryDelBack"),
                        id: "delBackTip",
                        title: "",
                        text: "找回" + t + "天内彻底删除的邮件，快去<a href='javascript:$App.showMailbox(7);'>看看</a>吧"
                    });
                    var i = $("#delBackTip").css("left"), a = $("#delBackTip").css("top");
                    $("#delBackTip").css({ left: parseInt(i, 10) + 70 + "px", top: parseInt(a, 10) + 10 + "px" })
                }, 800)
            }
        })
    })
}(),

//M2012.Mailbox.View.MailMenu
M139.namespace("M2012.Mailbox.View", {
    MailMenu: Backbone.View.extend({
        el: "",
        template: "",
        events: {},
        initialize: function (e) {
            function t(e) {
                i.setButtonVisible(e.count)
            }

            var i = this;
            this.el = e.el, this.model = e.model, this.readmail = e.readmail, this.model.off("mailSelectedChange", t).on("mailSelectedChange", t), this.$el.parent().delegate("#task_icreate", "click", function () {
                i.calendarPicker ? i.calendarPicker.show() : i.calendarPicker = M2012.UI.Picker.TaskCalendar.create({
                    container: $("#btn_cal"),
                    value: new Date,
                    callback: function (e) {
                        i.reqGetTaskView(e)
                    }
                }), top.BH("toolbar_task_calendar")
            })
        },
        reqGetTaskView: function (e) {
            var t = this, i = this.getCalendarParam(e);
            M139.RichMail.API.call("mbox:searchMessages", i, function (e) {
                e.responseData && "S_OK" == e.responseData.code ? t.calendarViewSuccess(e.responseData) : console.log("calendar getTask returndata error")
            })
        },
        calendarViewSuccess: function (e) {
            for (var t = this, i = e["var"], a = t.calendarPicker.calArea, s = 0; s < i.length; s++) {
                var o = new Date(1e3 * i[s].taskDate), n = o.getMonth() + 1, r = o.getFullYear();
                if (parseInt(a.find("em.calendarMonth").text()) == n && a.find("em.calendarYear").text() == r) {
                    var l = a.find("td[rel='" + o.getDate() + "']").find("span");
                    l.addClass("calendarMod_on"), l.after("<i></i>")
                }
            }
        },
        getCalendarParam: function (e) {
            var t = function (e) {
                return e = e >= 10 ? e : "0" + e
            }, i = e.getFullYear(), a = t(e.getMonth() + 1), s = $Date.getDaysOfMonth(e), o = i + "-" + a + "-01", n = i + "-" + a + "-" + s, r = Math.round(top.M139.Date.parse(o + " 00:00:00").getTime() / 1e3), l = Math.round(top.M139.Date.parse(n + " 23:59:59").getTime() / 1e3);
            return {
                fid: 0,
                recursive: 0,
                ignoreCase: 0,
                isSearch: 1,
                isFullSearch: 1,
                isBackup: 1,
                start: 1,
                total: 100,
                limit: 1e3,
                order: "taskDate",
                desc: 0,
                isTaskmail: !0,
                flags: { taskFlag: 1 },
                condictions: [{ field: "taskDate", operator: ">", value: r }, {
                    field: "taskDate",
                    operator: "<",
                    value: l
                }],
                statType: 1
            }
        }, BH2: function (e) {
            "mailbox" == $App.getCurrentTab().group && e && (e = e.replace("toolbar_", "mailbox_")), BH(e)
        }, getElement: function () {
            return this._element || ("string" == typeof this.el ? this._element = $(this.el)[0] : M139.Dom.isJQueryObj(this.el) ? this._element = this.el[0] : this._element = this.el), $(this.el)
        }, isAllDenyFroward: function () {
            var e = $App.getMailboxView().model.superSelectResult, t = !1, i = !1, a = !1;
            for (var s in e) if (i = !0, null != e[s] && !e[s].denyForward) {
                a = !0;
                break
            }
            return a ? t = !1 : i && (t = !0), t
        },
        setButtonVisible: function (e) {
            var t = this;
            if ("left" == $App.getLayout() || "top" == $App.getLayout()) {
                var i = $(this.el).find("#btn_reply,#btn_replyAll"), a = $(this.el).find("#btn_reply_2,#btn_replyAll_2"), s = $(".attachmentNum").length, o = $("#headAttach").length;
                if ("left" == $App.getLayout()) {
                    var n = $(".i-chooseMo.i-chooseYet").parents("td").find(".i_atta.mr_6").length;
                    0 != n && (s = 1), 1 >= e && !t.model.isSubscribeMode() && 0 == s || 0 == n && 0 == o ? (i.show(), a.hide()) : 0 == s && 0 === n || (i.hide(), a.show()), e > 0 && (i.hide(), a.hide())
                } else setTimeout(function () {
                    var n = $(".i-chooseMo.i-chooseYet").parents("td").next("td").find(".i_atta").length;
                    0 != n && (s = 1), 1 >= e && !t.model.isSubscribeMode() && 0 == s || 0 == n && 0 == o ? (i.show(), a.hide()) : 0 == s && 0 === n || (i.hide(), a.show()), e > 1 && (i.hide(), a.hide())
                }, 40);
                if (e > 0) {
                    var r = $(".toolBarArray #btn_more");
                    r.hide()
                }
            }
            this.model.isTaskMode() && (this.$el.find('li:contains("移动到")').remove(), this.$el.find('li:contains("举报")').remove(), this.$el.find('li:contains("筛选")').remove(), this.$el.find('li:contains("更多")').remove(), this.$el.find('li:contains("删除")').remove(), this.$el.find('li:contains("彻底删除")').remove())
        }, showReturnBtn: function (e, t) {
            var i = this;
            if (t) {
                var a = document.createElement("li");
                a.className = "", $(i.el).append(a), M2012.UI.MenuButton.create({
                    text: "返回",
                    container: a,
                    templateClass: "icoTb mr_6",
                    onClick: function () {
                        7 == e ? (setTimeout(function () {
                            $App.showMailbox(4)
                        }, 100), BH("toolbar_back_del")) : ($App.close(), $App.isReadSessionMail() && BH("cMail_toolbar_goback"))
                    }
                }), $(a).find("a:eq(0)").removeClass("ml_6")
            }
        }, showReplyBtn: function (e, t) {
            var i = this;
            if (t) {
                var a = 0;
                t.mail && t.mail.attachmentNum && (a = t.mail.attachmentNum);
                if (a > 0 && !$App.isReadSessionMail() && !t.mail.denyForward) var s = [{
                    text: "不带原邮件的附件",
                    args: { value: !1, bh: "toolbar_replynoattach" }
                }, { text: "带上原邮件的附件", args: { value: !0, bh: "toolbar_replywithattach" } }];
                o = document.createElement("li"), o.id = "btn_replyAll", o.className = "", M2012.UI.MenuButton.create({
                    text: "全部回复",
                    container: o,
                    templateClass: s ? "icoTd mr_6" : "icoTb mr_6",
                    leftSibling: !0,
                    rightSibling: !1,
                    menuItems: s,
                    dy: 1,
                    onItemClick: function (e) {
                        i.doCommand("reply", {
                            all: !0,
                            attach: e.args.value
                        }), e.args.value ? BH("toolbar_replyallwithattach") : BH("toolbar_replyallnoattach")
                    },
                    onClick: function () {
                        BH($App.isReadSessionMail() ? "cMail_toolbar_replyAll" : "toolbar_replyall"), i.doCommand("reply", {
                            all: !0,
                            attach: !1
                        })
                    }
                }), $(i.el).append(o);
                var o = document.createElement("li");
                if (o.id = "btn_reply", M2012.UI.MenuButton.create({
                    text: "回复",
                    container: o,
                    rightSibling: !0,
                    templateClass: s ? "icoTd mr_6" : "icoTb mr_6",
                    menuItems: s,
                    dy: 1,
                    onItemClick: function (e) {
                        i.doCommand("reply", { attach: e.args.value }), BH(e.args.bh)
                },
                    onClick: function () {
                        BH($App.isReadSessionMail() ? "cMail_toolbar_reply" : "toolbar_reply"), i.doCommand("reply", { attach: !1 })
                }
                }), $(i.el).append(o), "list" != $App.getLayout()) {
                    var s = [{ text: "不带原邮件的附件", args: { value: !1, bh: "toolbar_replynoattach" } }, {
                        text: "带上原邮件的附件",
                        args: { value: !0, bh: "toolbar_replywithattach" }
                    }];
                    o = document.createElement("li"), o.id = "btn_replyAll_2", o.style.display = "none", o.className = "", M2012.UI.MenuButton.create({
                        text: "全部回复",
                        container: o,
                        templateClass: s ? "icoTd mr_6" : "icoTb mr_6",
                        leftSibling: !0,
                        rightSibling: !1,
                        menuItems: s,
                        dy: 1,
                        onItemClick: function (e) {
                            i.doCommand("reply", {
                                all: !0,
                                attach: e.args.value
                            }), e.args.value ? BH("toolbar_replyallwithattach") : BH("toolbar_replyallnoattach")
                        },
                        onClick: function () {
                            BH($App.isReadSessionMail() ? "cMail_toolbar_replyAll" : "toolbar_replyall"), i.doCommand("reply", {
                                all: !0,
                                attach: !1
                            })
                        }
                    }), $(i.el).append(o);
                    var o = document.createElement("li");
                    o.id = "btn_reply_2", o.style.display = "none", M2012.UI.MenuButton.create({
                        text: "回复",
                        container: o,
                        rightSibling: !0,
                        templateClass: s ? "icoTd mr_6" : "icoTb mr_6",
                        menuItems: s,
                        dy: 1,
                        onItemClick: function (e) {
                            i.doCommand("reply", { attach: e.args.value }), BH(e.args.bh)
                        },
                        onClick: function () {
                            BH($App.isReadSessionMail() ? "cMail_toolbar_reply" : "toolbar_reply"), i.doCommand("reply", { attach: !1 })
                        }
                    }), $(i.el).append(o)
                }
            }
        }, showSendAgainBtn: function (e, t) {
            var i = this;
            if ((!t || !t.isSessionMail) && t && t.mail && 3 == t.mail.fid) {
                var a = document.createElement("li");
                a.className = "", M2012.UI.MenuButton.create({
                    text: "再次编辑", container: a, onClick: function () {
                        $App.editMessage(t.mid)
                    }
                }), $(i.el).append(a)
            }
        },
        showForwardBtn: function (e, t, i) {
            var a = this, s = document.createElement("li");
            s.id = "btn_forward";
            var o = "none";
            t && t.mail && t.mail.attachmentNum > 0 && (o = "block");
            var n = [{
                text: "转发",
                args: { value: !1, bh: $App.isReadSessionMail() ? "cMail_toolbar_forward" : "toolbar_forward" }
            }, {
                text: "作为附件转发",
                args: {
                    value: !0,
                    bh: $App.isReadSessionMail() ? "cMail_toolbar_forward_as_attach" : "toolbar_forwardasattach"
                }
            }, {
                text: "只转发附件",
                args: {
                    value: !1,
                    bh: $App.isReadSessionMail() ? "cMail_toolbar_forward_as_attach" : "toolbar_forwardasattach"
                },
                display: o
            }], r = !1;
            i && 1 == i && r && n.push({
                text: "转发给飞信好友",
                args: { value: "fetion" }
            }), M2012.UI.MenuButton.create({
                text: "转发",
                container: s,
                rightSibling: !0,
                templateClass: n ? "icoTd mr_6" : "icoTb mr_6",
                menuItems: n,
                dy: 1,
                onItemClick: function (e, t) {
                    if (BH("cMail_toolbar_forwardMenu_click"), "fetion" == e.args.value) return void Package.require("readmail_ext", function () {
                        M2012.ReadMail.Fetion.View.create()
                    });
                    var i = !1;
                    "2" == t && (i = !0), a.doCommand("forward", { attach: e.args.value, asAttch: i }), BH(e.args.bh)
                },
                onClick: function () {
                    $App.isReadSessionMail() ? BH("cMail_toolbar_forward") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_forward") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() ? BH("sublist_read_forward") : BH("toolbar_forward"), a.doCommand("forward", { attach: !1 })
                }
            }), $(a.el).append(s)
        }, showMarkAllReadBtn: function (e, t) {
            return
        }, showMarkBtn: function (e, t) {
            var i = this;
            if (2 == e || i.model.isTaskMode()) var a = !0; else var a = !1;
            var s = (i.model.getTagMenuItems(), document.createElement("li"));
            s.id = "MarkTo", this.menuBtn = M2012.UI.MenuButton.create({
                text: "标记为",
                container: s,
                rightSibling: !1,
                templateClass: a ? "icoT mr_6" : "icoTl",
                menuItems: i.model.getMarkMenuItems(!0, e, t),
                dy: 1,
                onItemClick: function (t) {
                    t.command && ($.extend(t.args, { fid: e }), i.doCommand(t.command, t.args), t.args.bh && i.BH2(t.args.bh), $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_mark") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() && BH("sublist_read_mark"))
                }
            }), $(i.el).append(s)
        }, showMoveBtn: function (e, t) {
            var i = $App.getMailboxView().model.get("searchOptions");
            if (!(2 === e || 7 === e || i && 2 === i.fid)) {
                var a = this, s = a.model.getFolderMenuItems("system", { fid: e }), o = a.model.getFolderMenuItems("custom", { fid: e });
                a.model.getFolderMenuItems("pop", { fid: e });
                o.length >= 0 && (s.push({ isLine: !0 }), s = s.concat(o));
                var n = document.createElement("li");
                n.className = "ml-1", M2012.UI.MenuButton.create({
                    text: "移动到",
                    container: n,
                    leftSibling: !1,
                    rightSibling: !1,
                    templateClass: "icoTr mr_6",
                    menuItems: s,
                    dy: 1,
                    onItemClick: function (e) {
                        a.doCommand(e.command, e.args), a.BH2("toolbar_move"), e.args.bh && a.BH2(e.args.bh), $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_remove") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() && BH("sublist_read_remove")
                    }
                }), $(a.el).find("#MarkTo").after(n)
            }
        },
        showSaveBtn: function (e, t) {
            if (!$App.isSessionMode() && 1 == e) {
                var i = this, a = document.createElement("li");
                a.className = "", M2012.UI.MenuButton.create({
                    text: "备份", container: a, onClick: function () {
                        i.doCommand("backupMail", { fid: e }), BH("toolbar_backupMailSingle")
                    }
                }), $(i.el).append(a)
            }
        }, showDeleteBtn: function (e, t) {
            var i = this, a = !1, s = !1, o = !1;
            if (t && t.mail && 4 == t.mail.fid && (s = !0), (4 == e || s) && (a = !0), $App.isTagFolder(e) && (o = !0), !a) {
                var n = { command: "move", fid: 4, resumeDel: !1 }, r = document.createElement("li");
                $(i.el).append(r), M2012.UI.MenuButton.create({
                    text: "删除",
                    container: r,
                    rightSibling: !0,
                    onClick: function () {
                        $App.trigger("mailCommand", n), $App.isReadSessionMail() ? BH("cMail_toolbar_del") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_delete") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() ? BH("sublist_read_delete") : i.BH2("toolbar_delete"), o && $App.trigger("mailCommand", {
                            command: "reduceTag",
                            labelId: e
                        })
                    }
                })
            }
            -1 == $App.getCurrentTab().name.indexOf("readmail_") && $(r).find("a:eq(0)").removeClass("ml_6");
            var l = { command: "delete", fid: e }, c = document.createElement("li");
            a ? c.className = "" : c.className = "ml-1", M2012.UI.MenuButton.create({
                text: "彻底删除",
                container: c,
                leftSibling: !a,
                onClick: function () {
                    $App.trigger("mailCommand", l), $App.isReadSessionMail() ? BH("cMail_toolbar_delclearly") : i.BH2("toolbar_realdelete")
                }
            }), $(i.el).append(c)
        }, showDeleteMenuBtn: function (e, t) {
            var i = this, a = !1, s = !1, o = !1;
            if (t && t.mail && 4 == t.mail.fid && (s = !0), (4 == e || s) && (a = !0), $App.isTagFolder(e) && (o = !0), !a) {
                var n = { command: "move", fid: 4, resumeDel: !1 }, r = document.createElement("li");
                $(i.el).append(r);
                var l = [{ text: "删除", args: { command: "move", fid: 4, resumeDel: !1 } }, {
                    text: "彻底删除",
                    args: { command: "delete", fid: e }
                }];
                M2012.UI.MenuButton.create({
                    text: "删除",
                    container: r,
                    rightSibling: !0,
                    templateClass: "icoTd mr_6",
                    menuItems: l,
                    dy: 1,
                    onItemClick: function (t) {
                        "move" == t.args.command ? ($App.trigger("mailCommand", t.args), $App.isReadSessionMail() ? BH("cMail_toolbar_del") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_delete") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() ? BH("sublist_read_delete") : i.BH2("toolbar_delete"), o && $App.trigger("mailCommand", {
                            command: "reduceTag",
                            labelId: e
                        })) : "delete" == t.args.command && ($App.trigger("mailCommand", t.args), $App.isReadSessionMail() ? BH("cMail_toolbar_delclearly") : i.BH2("toolbar_realdelete"))
                    },
                    onClick: function () {
                        $App.trigger("mailCommand", n), $App.isReadSessionMail() ? BH("cMail_toolbar_del") : i.BH2("toolbar_delete"), o && $App.trigger("mailCommand", {
                            command: "reduceTag",
                            labelId: e
                        })
                    }
                })
            }
            if (-1 == $App.getCurrentTab().name.indexOf("readmail_") && $(r).find("a:eq(0)").removeClass("ml_6"), a) {
                var c = { command: "delete", fid: e }, d = document.createElement("li");
                a ? d.className = "" : d.className = "ml-1", M2012.UI.MenuButton.create({
                    text: "彻底删除",
                    container: d,
                    templateClass: "icoTb mr_6",
                    leftSibling: !a,
                    onClick: function () {
                        $App.trigger("mailCommand", c), $App.isReadSessionMail() ? BH("cMail_toolbar_delclearly") : i.BH2("toolbar_realdelete")
                    }
                }), $(i.el).append(d)
            }
        }, showResumeDelBtn: function (e) {
            var t = this, i = (t.model.getTagMenuItems(), document.createElement("li")), a = t.model.getResumeDelMenuItems({ fid: e });
            M2012.UI.MenuButton.create({
                text: "恢复到",
                container: i,
                rightSibling: !1,
                templateClass: "icoT mr_6",
                dy: 1,
                menuItems: a,
                onItemClick: function (e) {
                    t.doCommand(e.command, e.args)
                }
            });
            $(t.el).append(i)
        },
        showDelResumeBtn: function () {
            var e = this, t = document.createElement("li");
            M2012.UI.MenuButton.create({
                text: "误删除恢复",
                container: t,
                templateClass: "icoTb icoTbColor ml_6",
                rightSibling: !1,
                onClick: function () {
                    top.$App.showMailbox(7)
                }
            }), $(e.el).append(t)
        }, showClearAllBtn: function () {
            var e = this, t = document.createElement("li"), i = { command: "delete", type: "all" };
            M2012.UI.MenuButton.create({
                text: "清空记录",
                container: t,
                rightSibling: !1,
                templateClass: "icoTr mr_6",
                onClick: function () {
                    $App.trigger("mailCommand", i)
                }
            }), $(e.el).append(t)
        }, showClearDelBtn: function () {
            var e = this, t = document.createElement("li"), i = { command: "delete" }, a = {
                text: "永久删除",
                container: t,
                rightSibling: !1,
                onClick: function () {
                    $App.trigger("mailCommand", i), top.BH("backup_del_clear")
                }
            };
            M2012.UI.MenuButton.create(a), $(e.el).append(t)
        }, showNotAdBtn: function (e, t) {
            return
        },
        addCalBtn: function () {
            var e = this.el.parent().find("a#btn_more"), t = '<a id="btn_cal" style="float: left; padding-right: 1px; display: inline; margin-right: 6px;"><i class="iconCreateV3 c-pointer" id="task_icreate" style="vertical-align: -4px;"></i></a>';
            $(t).insertAfter(e)
        }, showCancelTaskBtn: function () {
            var e = this, t = document.createElement("li");
            e.cancelTaskBtn = M2012.UI.MenuButton.create({
                text: "取消任务",
                container: t,
                leftSibling: !1,
                rightSibling: !1,
                onClick: function () {
                    function t(e) {
                        i.model.setTask({
                            requestData: { value: 2, time: 0, ids: e }, success: function () {
                                var e = $App.getCurrentTab().title;
                                $App.getMailboxView().model.clearSuperSelect(), $App.getMailboxView().model.set("pageIndex", 1), i.model.set({ taskDate: 0 }), $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView"), $App.trigger("reloadFolder", { reload: !0 }), $App.setTitle(e), i.showTips("canceltasksucc")
                            }, error: function () {
                                i.showFailTips()
                            }
                        })
                    }

                    BH("toolbar_task_cancel");
                    var i = $App.getView("remind"), a = $App.getMailboxView().model.getSelectedRow(), s = a && a.mids.length && a.mids || e.model.get("mid") && [e.model.get("mid")] || [];
                    return 0 === s.length ? (top.M139.UI.TipMessage.show("请选择邮件", { delay: 3e3 }), !1) : void (i && i.model.batchDelRemind({
                        midArr: s,
                        actionType: 0,
                        success: function () {
                            t(s), top.$App.trigger("refresh:calendar", { actionType: "mainviewdata" })
                        }
                    }))
                }
            }), $(t).insertAfter($(e.el).find('li:contains("标为处理完毕")'))
        }, showComplaintBtn: function (e, t) {
            function i() {
                var e = document.createElement("li");
                e.className = "", M2012.UI.MenuButton.create({
                    text: o,
                    container: e,
                    leftSibling: !1,
                    rightSibling: !1,
                    onClick: function () {
                        a.doCommand(n, {}), $App.isReadSessionMail() ? BH("cMail_toolbar_spam") : "spam" == n ? a.BH2("toolbar_spam") : BH("toolbar_unspam")
                    }
                }), $(a.el).append(e)
            }

            var a = this;
            if (!$App.isSessionMode()) {
                var s = $App.getMailboxView().model.get("searchOptions");
                if (!(2 === e || 3 === e || 4 === e || s && 2 === s.fid || s && 3 === s.fid || s && 4 === s.fid || this.model.isSubscribeMode())) if (top.mailboxComplaintView.model.set({ fid: e }), top.mailboxComplaintView.model.isNotRubbishMailBtn()) {
                    var o = "这不是垃圾邮件", n = "unSpam";
                    i()
                } else if (top.mailboxComplaintView.model.isShowComplaintBtn()) {
                    var o = "举报", n = "spam";
                    i()
                }
            }
        }, showViewBtn: function (e) {
            var t = this;
            if ("left" != $App.getLayout()) {
                var i = document.createElement("li");
                i.id = "btn_view", menuItems = [{
                    html: '<span class="icon16 mr_6"><i class="i-read-v3"></i></span>已读邮件',
                    command: "viewMail",
                    flags: { read: 0 }
                }, {
                    html: '<span class="icon16 mr_6"><i class="i-unread-v3"></i></span>未读邮件',
                    command: "viewMail",
                    flags: { read: 1 }
                }, {
                    html: '<span class="icon16 mr_6"><i class="i_m_yhf"></i></span>已回复邮件',
                    command: "viewMail",
                    flags: { replied: 1 }
                }, {
                    html: '<span class="icon16 mr_6"><i class="i_m_o2h"></i></span>已转发邮件',
                    command: "viewMail",
                    flags: { forwarded: 1 }
                }, { isLine: !0 }, {
                    html: '<span class="icon16 mr_6"><i class="tag-new" style="background-color:red;"><em class="i_jj"></em></i></span>紧急邮件',
                    command: "viewMail",
                    flags: "important"
                }, {
                    html: '<span class="icon16 mr_6"><i class="i_star_y"></i></span>星标邮件',
                    command: "viewMail",
                    flags: { starFlag: 1 }
                }, { isLine: !0 }, {
                    text: "清除所有筛选",
                    command: "viewMail",
                    flags: "all"
                }], M2012.UI.MenuButton.create({
                    text: "筛选",
                    container: i,
                    leftSibling: !0,
                    rightSibling: !1,
                    templateClass: "icoT mr_6",
                    menuItems: menuItems,
                    onItemClick: function (e) {
                        e.fid = t.model.get("fid"), e.command && t.doCommand(e.command, e), $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_select") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() && BH("sublist_read_select")
                    }
                });
                var a = $App.getMailboxView().model.get("searchOptions");
                (2 === e || a && 2 === a.fid) && menuItems.splice(0, 2), $(t.el).append(i)
            }
        },
        showConversationToggleBtn: function (e, t) {
            var i = this, a = t.total;
            if (t && t.isSessionMail && a && 51 > a) {
                var s = document.createElement("li"), o = "全部展开", n = "covtoggle";
                $(s).attr("name", "cov-toggle"), M2012.UI.MenuButton.create({
                    text: o,
                    container: s,
                    leftSibling: !1,
                    rightSibling: !1,
                    onClick: function (e) {
                        var o = $(s).find("span"), r = o.attr("data-flag");
                        if ("1" == r) {
                            if ("全部展开" == l) return;
                            return t.mail.doAction = "stopConversation", t.mail.callBack = function () {
                                o.text("全部展开"), o.removeAttr("data-flag")
                            }, void i.doCommand(n, t.mail)
                        }
                        var l = o.text();
                        "全部展开" === l ? (t.mail.doAction = "showConversation", r || (a > 10 && o.text("停止展开"), o.attr("data-flag", 1)), t.mail.callBack = function () {
                            o.text("全部收起"), o.attr("data-flag", 2)
                        }, BH("cov_showall")) : (t.mail.doAction = "hideConversation", t.mail.callBack = function () {
                            o.text("全部展开")
                        }, BH("cov_hideall")), i.doCommand(n, t.mail)
                    }
                }), $(i.el).append(s)
            }
        }, showExtraBtn: function (e, t) {
            var i = this, a = document.createElement("li");
            a.id = "btn_extra";
            var s = [{
                text: t ? "导出邮件" : "导出选中邮件",
                command: "exportMail",
                args: { bh: "toolbar_export" }
            }, { text: "导入eml文件", command: "importMail", args: { bh: "toolbar_import" } }];
            if (!$App.isSessionMode()) {
                var o = (this.model.isClusterColumn, this.model.isClusterColumn ? !this.model.isClusterColumn() : !0), n = !1;
                "服务邮件" == $App.getCurrentTab().title && (n = !0, o = !0), sBh = n ? "toolbar_backupMailListforServer" : "toolbar_backupMailList", !o || this.model.isOnlyBillMode() || this.model.isOnemailMode() || s.push({
                    text: "备份至彩云网盘",
                    command: "backupMail",
                    args: { bh: sBh }
                })
            }
            var r = $App.getMailboxView().model.get("searchOptions");
            if (!(2 === e || 3 === e || 4 === e || r && 2 === r.fid || r && 3 === r.fid || r && 4 === r.fid || this.model.isSubscribeMode())) {
                if (top.mailboxComplaintView.model.set({ fid: e }), top.mailboxComplaintView.model.isNotRubbishMailBtn()) var l = "这不是垃圾邮件", c = "unSpam", d = "toolbar_unspam"; else if (top.mailboxComplaintView.model.isShowComplaintBtn()) var l = "举报", c = "spam", d = $App.isReadSessionMail() ? "cMail_toolbar_spam" : "toolbar_spam";
                l && s.push({ text: l, command: c, args: { bh: d } })
            }
            11 == e && s.push({
                text: "这不是广告邮件",
                command: "unAdMail",
                args: { fid: e, bh: d }
            }), 3 == e && "list" != $App.getLayout() && s.push({
                text: "再次编辑",
                command: "reEdit",
                args: { bh: d }
            }), i.isAllDenyFroward() && (i.$el.find("#btn_forward").hide(), $.each(s, function (e, t) {
                t && (t.text.indexOf("导出") >= 0 || t.text.indexOf("备份至彩云网盘") >= 0) && s.splice(e, 1)
            })), M2012.UI.MenuButton.create({
                text: "更多",
                container: a,
                leftSibling: !0,
                rightSibling: !1,
                templateClass: "icoT",
                menuItems: s,
                dx: -84,
                dy: 1,
                onItemClick: function (e) {
                    e.command && i.doCommand(e.command), e.args && e.args.bh && BH(e.args.bh), $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_more1") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() && BH("sublist_read_more1")
                }
            }), $(i.el).append(a)
        }, showBillLifeBtn: function () {
            var e = this, t = document.createElement("li");
            t.className = "ml_5 ", t.id = "mylifeitem";
            M2012.UI.MenuButton.create({
                html: '<i class="i-bill-sm mr_5 posTwo"></i>账单生活',
                container: t,
                templateClass: "icoT icoTbColor",
                leftSibling: !1,
                rightSibling: !1,
                onClick: function (e) {
                    BH("my_billlife_load"), $App.show("billLife")
                }
            });
            $(e.el).append(t), $(e.el).find("#mylifeitem a").addClass("btnTbColor")
        }, showBillBackup: function () {
            var e = this, t = document.createElement("li");
            t.className = "ml_5 ", t.id = "billBackup";
            var i = "全部备份至彩云网盘", a = "备份至彩云网盘", s = this.getSelectMailBillCount(), o = s.length ? "increment" : "all", n = !1;
            M2012.UI.MenuButton.create({
                html: s.length ? a : i,
                container: t,
                templateClass: "icoT icoTbColor",
                leftSibling: !1,
                rightSibling: !1,
                onClick: function (t) {
                    "increment" === o ? e.doCommand("backupMailPDF", { isHasUnBill: n }) : e.doCommand("backupAllBillMail")
                }
            });
            $(e.el).append(t), s.length && s.unBillLength === s.length ? $("#billBackup").addClass("hide") : s.unBillLength && (n = !0), $(e.el).find("#billBackup a").addClass("btnTbColor"), this.model.on("mailListChange", function () {
                n = !1;
                var t = e.getSelectMailBillCount();
                t.unBillLength && (n = !0), 0 === t.length ? (o = "all", $("#billBackup span").text(i), $("#billBackup").removeClass("hide")) : t.unBillLength === t.length ? $("#billBackup").addClass("hide") : t.billLength ? (o = "increment", $("#billBackup span").text(a), $("#billBackup").removeClass("hide")) : $("#billBackup").removeClass("hide")
            })
        },
        getSelectMailBillCount: function () {
            var e = this.model.getSelectedRow().mids || [], t = { length: e.length, billLength: 0, unBillLength: 0 };
            if (!e.length) return t;
            for (var i = 0; i < t.length; i++) {
                var a = this.model.getMailById(e[i]);
                a && (1000006 !== a.sendId || 1 !== a.logoType && 110 !== a.logoType ? t.unBillLength++ : t.billLength++)
            }
            return t
        }, showChaoMobileLifeBtn: function () {
            var e = this, t = document.createElement("li");
            t.className = "mr_10 ml_5 ", t.id = "mylifeitem";
            M2012.UI.MenuButton.create({
                html: '<i class="i-bill-sm mr_5 posTwo"></i>潮州移动',
                container: t,
                templateClass: "icoT icoTbColor mr_6",
                leftSibling: !1,
                rightSibling: !1,
                onClick: function (e) {
                    BH("my_billlife_load"), $App.show("billLife")
                }
            });
            $(e.el).append(t), $(e.el).find("#mylifeitem a").addClass("btnTbColor")
        }, showVoiceMailBtn: function () {
            var e = this, t = document.createElement("li");
            t.className = "mr_10 ml_5", t.id = "myVoiceitem";
            M2012.UI.MenuButton.create({
                html: '<i class="i-message-sm mr_5 posOne"></i>和留言',
                container: t,
                templateClass: "icoT icoTbColor mr_6",
                leftSibling: !1,
                rightSibling: !1,
                onClick: function (e) {
                    BH("voicemail_tab"), $App.jumpTo("voiceMail")
                }
            });
            $(e.el).append(t), $(e.el).find("#myVoiceitem a").addClass("btnTbColor")
        }, showBillCategoryBtn: function () {
            return
        },
        showTaskBtn: function () {
            var e = this, t = document.createElement("li");
            t.className = "mr_10", $(e.el).prepend(t), M2012.UI.MenuButton.create({
                text: "标为处理完毕",
                container: t,
                templateClass: "icoG",
                onClick: function () {
                    function t(e) {
                        i.model.setTask({
                            requestData: { value: 2, time: 0, ids: e }, success: function () {
                                var e = $App.getCurrentTab().title;
                                $App.getMailboxView().model.clearSuperSelect(), $App.getMailboxView().model.set("pageIndex", 1), i.model.set({ taskDate: 0 }), $App.trigger("refreshSplitView"), $App.trigger("reloadFolder", {
                                    reload: !0,
                                    callback: function () {
                                        setTimeout(function () {
                                            $App.trigger("showMailbox", { comefrom: "commandCallback" })
                                        }, 120)
                                    }
                                }), $App.setTitle(e), i.showTips("markfinish转发succ")
                            }, error: function () {
                                i.showFailTips()
                            }
                        })
                    }

                    BH("task_batch_markcomplete");
                    var i = $App.getView("remind"), a = $App.getMailboxView().model.getSelectedRow(), s = a && a.mids.length && a.mids || e.model.get("mid") && [e.model.get("mid")] || [];
                    return 0 === s.length ? (top.M139.UI.TipMessage.show("请选择邮件", { delay: 3e3 }), !1) : void (i && i.model.batchDelRemind({
                        midArr: s,
                        actionType: 0,
                        success: function () {
                            t(s), top.$App.trigger("calendarViewRefresh")
                        }
                    }))
                }
            }), $(t).find("a:eq(0)").addClass("btnSetG").removeClass("btnTb ml_6").prepend('<i class="i_t_right" style="vertical-align:baseline;*vertical-align:4px;margin-right:3px;"></i>'), $(t).find("span:eq(0)").removeClass("p_relative")
        },
        render: function () {
            this.$el.hide();
            var e = this, t = this.model.get("fid"), i = e.readmail, a = $App.getLayout() || "list", s = this.model.get("billTab");
            if (top.mailboxComplaintView.model.set({ dataSource: i && i.mail }), this.model.isTaskMode() && (this.showTaskBtn(), this.addCalBtn()), $App.getCurrentTab().name.indexOf("mailsub") >= 0 && "mailsub_0" != $App.getCurrentTab().name && this.showReturnBtn(t, {}), "list" == a && !i) if (this.showForwardBtn(t, i), this.showDeleteMenuBtn(t, i), this.showNotAdBtn(t, i), this.showMarkAllReadBtn(t, i), this.showMarkBtn(t, i), this.model.isTaskMode() || setTimeout(function () {
                e.showMoveBtn(t, i)
            }, 50), this.showViewBtn(t), this.showExtraBtn(t, i), this.model.isBillMode()) {
                var o = this.model.get("searchOptions");
                o.condictions && "logoType" == o.condictions[0].field && (1 == o.condictions[0].value || o.condictions[0].value >= 110 && o.condictions[0].value <= 113) && setTimeout(function () {
                    e.showBillLifeBtn(), e.showBillBackup()
                }, 100), o.condictions && "logoType2" == o.condictions[0].field && 2 == o.condictions[0].value && $User.isChinaMobileUser() && setTimeout(function () {
                    e.showVoiceMailBtn()
                }, 100)
            } else this.model.isOnemailMode() && setTimeout(function () {
                e.showBillBackup()
            }, 100);
            if ("list" == a && i) if (top.mailboxComplaintView.model.set({ mid: i.mid }), i.mail && i.mail.fid && (t = i.mail.fid), this.showReturnBtn(t, i), this.showSendAgainBtn(t, i), this.showReplyBtn(t, i), this.showNotAdBtn(t, i), this.showForwardBtn(t, i, !0), this.showDeleteMenuBtn(t, i), this.model.isBillMode() || 1 === s || this.showComplaintBtn(t, i), this.showMarkBtn(t, i), this.showMoveBtn(t, i), this.model.isBillMode()) {
                var o = this.model.get("searchOptions");
                o.condictions && "logoType" == o.condictions[0].field && (1 == o.condictions[0].value || o.condictions[0].value >= 110 && o.condictions[0].value <= 113) && setTimeout(function () {
                    e.showBillLifeBtn(), e.showBillBackup()
                }, 100), o.condictions && "logoType2" == o.condictions[0].field && 2 == o.condictions[0].value && $User.isChinaMobileUser() && setTimeout(function () {
                    e.showVoiceMailBtn()
                }, 100)
            } else this.model.isOnemailMode() && setTimeout(function () {
                e.showBillBackup()
            }, 100);
            if ("left" == a && (this.showReplyBtn(t, i), this.showNotAdBtn(t, i), this.showForwardBtn(t, i), this.showDeleteMenuBtn(t, i), this.showMarkAllReadBtn(t, i), this.showMarkBtn(t, i), this.showMoveBtn(t, i), this.showExtraBtn(t, i)), "top" == a) if (this.showReplyBtn(t, i), this.showForwardBtn(t, i), this.showNotAdBtn(t, i), this.showDeleteMenuBtn(t, i), this.showMarkAllReadBtn(t, i), this.showMarkBtn(t, i), this.showMoveBtn(t, i), this.showViewBtn(t), this.showExtraBtn(t, i), this.model.isBillMode()) {
                var o = this.model.get("searchOptions");
                o.condictions && "logoType" == o.condictions[0].field && (1 == o.condictions[0].value || o.condictions[0].value >= 110 && o.condictions[0].value <= 113) && setTimeout(function () {
                    e.showBillLifeBtn(), e.showBillBackup()
                }, 100)
            } else this.model.isOnemailMode() && setTimeout(function () {
                e.showBillBackup()
            }, 100);
            return 7 == this.model.get("fid") && ($(this.el).find("li").remove(), this.showReturnBtn(t, {}), this.showResumeDelBtn(t)), 4 == this.model.get("fid") && setTimeout(function () {
                e.showDelResumeBtn()
            }, 50), this.setButtonVisible(0), this.$el.show(), this
        }, doCommand: function (e, t) {
            t || (t = {}), t.command = e, $App.trigger("mailCommand", t), $("#conversationDialog").remove()
        }
    })
}),

//M2012.Mailbox.View.ListView
M139.namespace("M2012.Mailbox.View", {
    ListView: Backbone.View.extend({
        template: "",
        events: {
            "click div.daytableTitle": "onLetterGroupClick",
            "click a[name=tagMenu]": "onTagMenuClick",
            "click a[name=mailStick]": "onMailTopClick",
            "click input[id^=chk_mailist_all]": "onSelectAllClick",
            "mouseover table.dayAreaTable span[name=from]": "onReceiverAddrMouseOver",
            "click #th_subject,#th_from,#th_size,#th_date": "onTableHeaderClick",
            "click #cancelchoice": "cancelChoice",
            "mouseover table.dayAreaTable tr": "changeMailStyle",
            "click a#btn_setting_new": "onNew3ColSettingClick",
            "click a#new_three_type_div": "onNew3TypeDivClick",
            "click .i-chooseMo": "listSelect",
            "click .dayAreaTable tr": "listReadmail",
            "click a#find_30_Mail": "orderDelLink",
            "click #SiChuanBillBtn": "goBillSubscript",
            "mouseover table.dayAreaTable .i-identity": "overBusiness",
            "mouseout table.dayAreaTable .i-identity": "outBusiness",
            "click #goBill": "goBillIndex"
        },
        goBillIndex: function () {
            var e = window.location.protocol;
            if ("https:" == e) {
                var t = ["<div style='padding:10px 30px'>", "<div class='.toolbar-box'>", "<p class='fz_12 mt_20'>对不起,移动账单<strong class='green fz_12'>暂不支持https安全访问</strong>，如需使用此功能</p>", "<p class='fz_12' style='margin:20px 0'>请在邮箱安全设置中关闭'https安全访问'后重新登录邮箱.</p>", "</div>", "</div>"].join(""), i = $Msg.showHTML(t, function () {
                    i.close()
                }, function () {
                }, { buttons: ["确定"] });
                i.setBottomTip("<a href='javascript:;'class='ml_15 bibText fz_14'  title=''>去设置邮箱协议</a>"), i.$el.on("click", "a", function () {
                    i.close(), top.$App.show("account_httpsSet")
                })
            } else $("#goBill").attr({ href: "javascript:$App.show('billLife')" })
        },
        createInstance: function (e) {
            $App.getView("maillist") || $App.registerView("maillist", new M2012.Mailbox.View.ListView(e));
            var t = $App.getView("maillist");
            return e.el && t.setElement(e.el), t
        },
        initialize: function (e) {
            function t() {
                var e = $App.getCurrentTab();
                if (/subscribe|myCloudSubscribe/i.test(e.group)) try {
                } catch (t) {
                }
            }

            var i = this;
            this.firstLoaded = !0, this.repeater = null, this.model = e.model, this.Folder = appView.getView("folder"), this.remindMailView = appView.getView("remind"), e.el && this.setElement(e.el), this.model.view = this, this.model.on("change:fid", function (e, t) {
            }), $App.on("refreshSplitView", function (e) {
                setTimeout(function () {
                    i.refreshSplitView(e)
                }, 500)
            }), $App.on("showTab", function (e) {
                "mailbox" != e.group && "mailsub_0" != e.group || i.restorePosition(), t()
            }), $App.off("changDraftMid").on("changDraftMid", function (e) {
                var t = $App.getView("tabpage");
                t && t.tab && t.tab.cur && e && e.mid && $(t.tab.cur).attr("mid", e.mid)
            }), this.model.on("mailSelectedChange", function (e) {
                var t = e.count, a = i.model.superSelectResult || {};
                if (t) {
                    var s = '<span>已选：<i class="red fw_b">' + t + '</i> 封，<a id="cancelchoice" href="javascript:;" BH="left_maillist_click_topCancel">取消</a></span>', o = $(i.el).find("#list_header td:eq(2)");
                    if ("left" != $App.getLayout() && o.addClass("td6"), o.removeClass("td2").html(s), "left" == $App.getLayout()) {
                        $(i.el).find("#cancelchoice").parent().remove();
                        var n = '<i class="fl text-static">已选：<i class="red fz_14 fw_b">' + t + '</i> 封，<a href="javascript:;" id="cancelchoice" BH="left_maillist_click_topCancel">取消</a></i>';
                        $(i.el).find("#new_three_count_div").after(n), $(i.el).find("#new_three_type_div").hide(), $(i.el).find("#new_three_count_div").hide()
                    }
                    setTimeout(function () {
                        i.$el.find("[id^=id_]:checked").length == i.$el.find("[id^=id_]:checkbox").length ? i.$el.find("[id^=chk_mailist_all]").attr("checked", !0).change() : i.$el.find("[id^=chk_mailist_all]").attr("checked", !1).change()
                    }, 10)
                } else $(i.el).find("#list_header td:eq(2)").removeClass("td6").addClass("td2").html(i.getFromHtmlInListHeader()), "left" == $App.getLayout() && i.new3CancelChoice();
                "left" != $App.getLayout() && "top" != $App.getLayout() || i.changeReadMailArea(t, e.isNoRender), 0 == t && i.model.set({ mid: null });
                var r = e.flag;
                if (r && !i.model.get("crossPageSelect")) for (var l in a) if (a.hasOwnProperty(l)) {
                    var c = a[l].mid, d = i.model.getMailById(c);
                    if (null == d) {
                        i.model.set("crossPageSelect", !0), BH("cross_page_select");
                        break
                    }
                }
            }), this.model.on("checkboxChange", function (e) {
                i.checkboxChange(e)
            }), $App.on("splitReadNextMail", function (e) {
                e.mid && setTimeout(function () {
                    var t = M139.PageApplication.getTopApp().print[e.mid];
                    t && t.next && t.next.mid && i.readMailSplitView(t.next.mid, i.model.get("fid"))
                }, 200)
            }), top.$App.on("pageStyleChange", function (e) {
                e && e.pageStyle && ("2" == e.pageStyle && BH("left_pagebigstyle"), "3" == e.pageStyle && BH("left_pagesmallstyle"), $("#toolbar_div").parent().attr("class", $User.getPageStyleByKey(e.pageStyle)))
            }), $App.on("ContactsDataChange", function (e) {
                $App.isMailbox() && $App.trigger("showMailbox")
            }), this.setScrollWidth(), $(window).resize(function () {
                i.onResize(), i.resetOfficialHight(), i.setScrollWidth()
            })
        },
        onLetterRowClick: function (e) {
            function t() {
                var e = a.model.get("mailListData");
                for (var t in e) if (c == e[t].mid) var i = e[t].attachmentNum;
                return i
            }

            function i(e, t) {
                var i = -1, s = !1;
                return a.$el.find("tr[mid]").each(function (i, a) {
                    return a == t ? (s = !1, $(a).find("input[type=checkbox]").attr("checked", !0).change(), void h.push($(a).attr("mid"))) : void ((a == e || s) && (h.push($(a).attr("mid")), s = !0, $(a).find("input[type=checkbox]").attr("checked", !0).change()))
                }), i
            }

            var a = this, s = e.currentTarget, o = $(s), n = e.target, r = $(n), l = r.attr("name"), c = (r.parent().attr("name"), o.attr("mid")), d = $App.getMailDataByMid(c), p = t();
            this.setStrokeRow(d, c, s);
            var m = o.find("td").is("td[type=allbill]") && !r.is(".i-triangle-sq");
            if ("subject" != l && "from" != l && "summary" != l && !m || e.shiftKey) {
                if ("tag_span" == l) return !1;
                var u = o.find("input[type=checkbox]"), h = [], f = !1;
                if (e.shiftKey) {
                    f = !0, console.log("shiftKey");
                    var g = a.previousRow, v = s;
                    $(g).offset().top > $(v).offset().top ? i(v, g) : i(g, v)
                } else if ("INPUT" != n.tagName) {
                    var b = r.closest("td").get(0);
                    if (!b) return;
                    var y = b.cellIndex;
                    if (0 == y && "left" != $App.getLayout()); else {
                        var w = r.attr("class"), _ = r.attr("name"), M = b.className;
                        if ("noclickzineng" == _ || "i_cl_w" == w || "i_close_min" == w || "i-starMo" == w || "list_starmail" === _ || "cl_tag" === _ || "i_tx" === w || "i_tagfor_n" === w || "i-starClick" === w || "voiceMailBtn" === _ || "i-voi-y" === w || "i-voi-start" === w || "fr icoG" === w) return;
                        if ("remindName" == w && a.modAtRemindFalg(c, r), "sub-td1" != M && "sub-td2" != M && "sub-td3" != M && "sub-td4" != M && "sub-td5" != M && "sub-td6" != M && "sub-td3 listItem-train" != M && "parent-td td1" != M && "parent-td td2 clearfix" != M && "parent-td td1" != w || a.readMailInner(c, p, s), "td_new" == $(b).attr("name") && "list_starmail" != _ && "i-chooseMo" != w && "mailtask" != _ || "td_sub" == $(b).attr("name") || "td2" == M || "td3" == M || "td4" == M || "td6" == M || "i_atta" == w || "td5 strokeTd" == M) return void (7 != a.model.get("fid") && a.readMailInner(c, p, s));
                        if ("td5" == M) return
                    }
                }
                this.$el.find(".dayAreaTable input[type=checkbox]:checked");
                a.checkboxChange(f ? h : u, f), a.previousRow = s
            } else {
                var C = a.model.get("fid");
                if (2 == C) return $App.restoreDraft(c), e.preventDefault(), !1;
                7 != C && a.readMailInner(c, p, s)
            }
        },
        setStrokeRow: function (e, t, i) {
            if (e && t) if (1000011 == e.sendId || e.sendId >= 1010001 && e.sendId <= 1010001 && !this.model.isClusterMail(t)) {
                top.BH("readStroke");
                var a = $App.getCurrentTab().element, s = $(a).find("#div_maillist");
                this.model.set("strokeRead", !0), s.find("li[class]").removeClass("on"), s.find(".curmail").remove(), strokeUnAlreadyRead = !1;
                var o = s.find("tr[mid=" + t + "]").parents("li");
                o.length > 0 && o.addClass("on")
            } else (1000011 == e.sendId || e.sendId >= 1010001 && e.sendId <= 1010100) && (strokeUnAlreadyRead = !0, top.BH("strokeMainList"))
        },
        readMailInner: function (e, t, i) {
            function a(e) {
                BH && BH("maillist_click_discuss");
                var t = top.$App.getView("tabpage").model.pages;
                for (var i in t) i && i.indexOf("viewDiscussInfo") >= 0 && t[i].view.param.sendId == e.sendId && top.$App.getView("tabpage").close(i);
                $App.show("viewDiscussInfo", { sendId: e.sendId, subject: e.subject })
            }

            var s = this, o = $App.getLayout(), n = s.model.get("isSearchMode"), r = s.model.get("fid"), l = s.model.getMailById(e), c = l && l.sendId, d = $(i), p = !1;
            if (this.model.isClusterMail(e)) {
                var m = !l.subscriptionFlag, u = [1000001, 1000006, 1000007, 1000008, 1000009, 1000010, 1000011], h = c >= 1010001 && 1010200 >= c || c >= 1000100 && 1000103 >= c;
                if (m) {
                    if (l.sendId > 11e5 && l.sendId < 2e9 && (1 == r || r > 11)) return void a(l);
                    if ($App.showSubscribe(c, l.from, m),
                        BH("click_cluster_columnlist"), 1000014 == c || 1000013 == c) {
                        var f = top.$User.getProvText() + "移动";
                        return void top.$App.setTitle(f)
                    }
                    if ($.inArray(c, u) > -1 || h) {
                        var g = s.model.modelTitle, v = g[c];
                        if (v && v.name) return top.$App.setTitle(v.name), void (v.hasOwnProperty("inboxBh") ? top.BH(v.inboxBh) : "");
                        var f = M139.Text.Email.getName(l.from);
                        return void top.$App.setTitle(f)
                    }
                } else {
                    if (!s.model.isClusterColumn(e)) return $App.showSubscribe(), void BH("click_cluster_mailbox");
                    p = !0, l.mailNum = l.sendTotalNum
                }
            } else if (c > 0) {
                if (l.sendId > 11e5 && l.sendId < 2e9 && (1 == r || r > 11) && !top.$App.getMailboxView().model.get("isSearchMode")) return void a(l);
                $App.clearTabCache("mailsub_"), BH("click_cluster_maillist"), BH("read_cluster_mail")
            }
            if (l && l.flags && 1 == l.flags.read) {
                var b = M139.Core.getCGUID(), y = (new Date).getTime();
                l.flags.read = 0, this.model.isOnemailMode() && 0 == l.flags.read && 1 == l.flags.top && (l.flags.top = 0), d.find("h3").removeClass(), d.find("[name=from]").removeClass("fw_b"), d.find("[name=subject]").removeClass("fw_b").addClass("fw_n"), d.find(".i_m_n").removeClass().addClass("i_m_o");
                var w = !(!l.flags || !l.flags.starFlag), _ = s.model.isVipMail(l.from);
                $App.isSessionMid(e) || $App.trigger("reduceFolderMail", {
                    fid: l.fid,
                    isStar: w,
                    isVip: _,
                    billFlag: l.billFlag,
                    mailInfo: l
                }), l.label && l.label.length > 0 && $App.trigger("reduceTagMail", { label: l.label })
            }
            return l && 2 == l.fid ? ($App.restoreDraft(e), !1) : void ("list" == o || void 0 == o ? (s.model.set("mid", e), $App.readMail(e, !1, r, {
                searchMode: n,
                guid: b,
                readTime: y,
                subscribeSession: p,
                subscriptionFlag: l.subscriptionFlag
            }), 1000006 == c && top.BH("telbillClick_mailbox"), BH("mailbox_readmail")) : (l && l.subscriptionFlag && BH("left" == o ? "sublist_three_click" : "sublist_top_click"), t > 0 ? (this.$el.find("#btn_replyAll").hide(), this.$el.find("#btn_reply").hide(), this.$el.find("#btn_replyAll_2").addClass("attachmentNum").show(), this.$el.find("#btn_reply_2").show()) : (this.$el.find("#btn_replyAll").show(), this.$el.find("#btn_reply").show(), this.$el.find("#btn_replyAll_2").removeClass("attachmentNum").hide(), this.$el.find("#btn_reply_2").hide()), s.readMailSplitView(e, r, {
                guid: b,
                readTime: y
            }), BH("mailbox_readmail"), s.restorePosition(), s.rememberPosition(), l && l.subscriptionFlag && BH("left" == o ? "sublist_tree_item_load" : "sublist_top_item_load")))
        },
        modAtRemindFalg: function (e, t) {
            $App.isSessionMid(e) && console.log("m2012.mailbox.view.listview.js modAtRemindFalg 聚合邮件不调用更新接口")
        },
        onLetterGroupClick: function (e) {
            $(e.currentTarget).find("i").hasClass("i_new_minus") ? $(e.currentTarget).find("i").addClass("i_new_plusj").removeClass("i_new_minus") : $(e.currentTarget).find("i").removeClass("i_new_plusj").addClass("i_new_minus"), $(e.currentTarget).next().toggle()
        },
        isMailHasTheLabel: function (e, t) {
            var i = $App.getMailDataByMid(e);
            if (i) for (var a = i.label, s = 0; s < a.length; s++) if (a[s] == t) return !0;
            return !1
        },
        onTagMenuClick: function (e) {
            var t = this, i = t.menu, a = $(e.target).parents("tr[mid]").attr("mid");
            return i && i.$el.is(":visible") && t.mid && t.mid == a ? void i.hide() : (tagItems = this.model.getMailBoxTagMenuItems(a), t.menu = M2012.UI.PopMenu.create({
                dockElement: e.target,
                direction: "auto",
                width: "200px",
                items: tagItems,
                scrollCount: 14,
                maxHeight: 285,
                dx: 20,
                onItemClick: function (i) {
                    var s = i.args || {};
                    if (i.command) {
                        "tag" == i.command && -1 != s.labelId && t.isMailHasTheLabel(a, s.labelId) ? (BH("cancel_one_tag"), s.command = "reduceTag") : (s.command = i.command, "tag" == i.command && -1 == s.labelId ? BH("create_new_tag") : "emptyTag" == i.command ? BH("cancel_all_tag") : "show" == i.command ? BH("manage_tag") : BH("mark_one_tag")), s.mids = [$(e.target).parents("tr[mid]").attr("mid")];
                        var o;
                        o = $(e.target).parents("tr[sessionid]").attr("sessionid"), s.sessionIds = [Number(o)], console.log("mid=" + s.mids), $App.trigger("mailCommand", s), M139.Event.stopEvent()
                    }
                }
            }), void (t.mid = a))
        },
        loadCss: function (e, t) {
            var i = top.document.getElementById(t);
            if (!i) {
                var a = top.document.createElement("link"), s = top.document.getElementsByTagName("head")[0];
                a.type = "text/css", a.rel = "stylesheet", a.href = e, a.id = t, s.appendChild(a)
            }
        },
        onMailTopClick: function (e) {
            var t = $(e.target).parents("tr[mid]").attr("mid"), i = ($(e.target).parents("tr[sessionid]").attr("sessionid"), "on" == $(e.target).parents("[stick]").attr("stick") ? 0 : 1);
            i ? BH("mailList_clickTargetUp") : BH("mailList_clickTargetDown");
            var a = { mids: [t], sessionIds: [], command: "mark", type: "top", value: i, from: "mailToolbar" };
            $App.trigger("mailCommand", a)
        },
        onSelectAllClick: function (e) {
            var t = !!$(e.currentTarget).attr("checked");
            this.$el.find(".dayAreaTable input[type=checkbox]").attr("checked", t).change(), this.getSelectedRow(), this.checkboxChange(e.currentTarget)
        },
        initListEvents: function () {
            var e = this;
            if (this.initTableHeaderEvent(), this.remindMailView.addEvent(e.$el), this.showThreeBtn(), this.setScrollWidth(), "left" == $App.getLayout()) {
                var t = null;
                $(e.el).find("tr[mid]").die("click").live("click", function (i) {
                    t && clearTimeout(t), t = setTimeout(function () {
                        e.onLetterRowClick(i, !0)
                    }, 300)
                }).live("dblclick", function (i) {
                    t && clearTimeout(t);
                    var a = i.target || i.srcElement;
                    if ("list_starmail" != $(a).attr("name") && "mailtask" != $(a).attr("name") && "i-chooseMo" != a.className) {
                        var s = $(i.currentTarget).attr("mid");
                        e.changeReadMailArea(0);
                        var o = $("iframe[name=mid_" + s + "]");
                        o.length > 0 && (o.attr("id", "mid_" + s + "_old"), o.attr("name", "mid_" + s + "_old"));
                        var n = $(a).closest("tr");
                        n.find("h2").removeClass(), n.find("[name=from]").removeClass("fw_b"), n.find("[name=subject]").removeClass("fw_b").addClass("fw_n"), n.find(".i_m_n").removeClass().addClass("i_m_o"), $App.readMail(s)
                    }
                })
            } else $(e.el).find("tr[mid]").die("click").live("click", function (t) {
                e.onLetterRowClick(t, !0)
            })
        },
        setScrollWidth: function () {
            var e = this;
            e.$body = e.$body || $("body"), e.$mailboxList = $("#div_maillist")
        },
        readMailSplitView: function (e, t, i) {
            function a() {
                var t = o.render();
                $App.trigger("readmail", {
                    mid: e,
                    type: "split",
                    el: n
                }), t.view.render(), $(".inboxfl").css("padding", "0px")
            }

            var s = this;
            if (e) {
                this._readmailView && this._readmailView.disposeView();
                var o = this._readmailView = new M2012.ReadMail.View;
                s.model.set("mid", e), s.model.set("lastReadmailFid", t);
                var n = this.$el.find("#readWrap");
                n.attr("rel", "isRead"), o.model.set({
                    mid: e,
                    win: !1,
                    currFid: t,
                    showToolBar: !1,
                    el: n,
                    guid: i && i.guid,
                    readTime: i && i.readTime
                }), $App.isSessionMode() ? Package.require("readmail_ext", function () {
                    a()
                }) : a()
            }
        },
        refreshSplitView: function (e) {
            var t = $App.getLayout();
            "top" != t && "left" != t || this.readMailSplitView(this.model.get("mid"), this.model.get("lastReadmailFid")), "skin_christmas" == top.$User.getSkinName() && $("#divTab li[role=tab][id!=tabsMenuIco]:visible span:last").append('<i class="christmasHats"></i>')
        },
        restorePosition: function () {
            var e = this.$el.find("#div_maillist");
            if (e[0]) {
                null != this.model.get("listPosition");
                var t = this.model.get("mid");
                if (t) {
                    e.find("tr[class]").removeClass("on"), e.find(".curmail").remove();
                    var i = e.find("tr[mid=" + t + "]");
                    i.length > 0 && i.removeClass("on").addClass("on")
                }
                this.model.get("scrollFlipEnable") && this.model.get("pageIndex") < this.model.get("scrollFlipMax") && this.checkForScrollLoad(this.$el.find("#div_maillist"))
            }
        },
        rememberPosition: function () {
            var e = this;
            e.model.set("listPosition", null);
            var t = this.$el.find("#div_maillist");
            this.model.isApproachMode() && (t = this.$el.find("#div_mail")), t.scroll(function () {
                e.model.set("listPosition", $(this)[0].scrollTop), e.model.get("scrollFlipEnable") && e.model.get("pageIndex") < e.model.get("scrollFlipMax") && e.checkForScrollLoad(this)
            })
        },
        checkForScrollLoad: function (e) {
            var t = this, i = this.model.getPageCount();
            if (!(this.isLoadingNext || 3 > i && this.model.get("pageIndex") == i) && e.scrollHeight - (e.scrollTop + $(e).height()) < 20) {
                this.isLoadingNext = !0, this.$el.find("#maillist_pager_bottom").hide();
                var a = this.$el.find("#scrollTip");
                if (a.show(), a.length > 0) a.show(); else {
                    var s = "left" == $App.getLayout() ? this.$el.find("#btn_nextPage") : this.$el.find("#maillist_pager_bottom");
                    s.prepend("")
                }
                this.model.set("flipType", "scroll"), setTimeout(function () {
                    t.loadNextPage()
                }, 500)
            }
        },
        highlightSelected: function () {
            $(".dayAreaTable tr").each(function () {
                var e = $(this).find("input[type=checkbox]").attr("checked");
                e ? $(this).removeClass("on") : $(this).removeClass("on")
            })
        },
        checkboxChange: function (e, t) {
            var i = this, t = !!t, a = e || [], s = i.model.superSelectResult || {};
            if (e && /^chk_mailist_all/.test($(e).attr("id"))) var o = !!$(e).attr("checked"), n = i.$el.find(".dayAreaTable tr"); else if (!t) var n = $(e).closest("tr"), o = n.find("input[type=checkbox]").attr("checked");
            if (t) for (var r = 0, l = a.length; l > r; r++) {
                var c = a[r], d = i.model.getMailById(c);
                d && !s[c] && (s[c] = d)
            } else n.each(function () {
                var e = $(this).attr("mid"), t = i.model.getMailById(e);
                o ? t && !s[e] && (s[e] = t) : delete s[e]
            });
            i.model.superSelectResult = s;
            var p = 0;
            for (var m in s) s.hasOwnProperty(m) && (p += s[m] && s[m].mailNum || 1);
            "list" != $App.getLayout && $(".J-readMailArea").find("[mid]").length && !p ? this.model.trigger("mailSelectedChange", {
                count: p,
                flag: o,
                isNoRender: !0
            }) : this.model.trigger("mailSelectedChange", {
                count: p,
                flag: o,
                isNoRender: !0
            }), top.BH("mailist_click_checkbox"), 7 != i.model.get("fid") && this.highlightSelected()
        },
        onReceiverAddrMouseOver: function (e) {
            var t = e.currentTarget, i = $(t).parents("tr").attr("mid"), a = this.model.getMailById(i);
            if (i && a) {
                var s = this.model.isApproachMode() && !this.model.get("isContactsMail");
                if (s) {
                    var o;
                    o = 1 == t.firstChild.nodeType ? t.firstChild.innerHTML : t.innerHTML;
                    var n = [a.from];
                    n = n.concat(a.to.split(","));
                    var r;
                    $.each(n, function (e, t) {
                        var i = Contacts.getContactsByEmail(t);
                        (t.indexOf(o) >= 0 || i.length > 0 && i[0].AddrFirstName.indexOf(o) >= 0) && (r = $Email.getEmail(t))
                    })
                } else if (this.model.get("isContactsMail")) r = a.from; else {
                    var l = a.fid;
                    r = 2 == l || 3 == l ? a.to.split(",")[0] : a.from
                }
                if ($Email.isEmail($Email.getEmail(r))) return void M2012.UI.Widget.ContactsCard.show({
                    dockElement: t,
                    margin: 5,
                    email: r
                })
            }
        },
        createSuperSelectMenu: function () {
            var e = this, t = this.model.getFolderInfo();
            if (t) {
                var i = [{
                    text: $T.Utils.format("选择全部邮件", [t.stats.messageCount]),
                    type: "all"
                }, {
                    text: $T.Utils.format("选择未读邮件", [t.stats.unreadMessageCount]),
                    type: "unread"
                }, {
                    text: $T.Utils.format("选择已读邮件", [t.stats.messageCount - t.stats.unreadMessageCount]),
                    type: "read"
                }];
                e.model.get("isSearchMode") && (i.pop(), i.pop()), M2012.UI.PopMenu.createWhenClick({
                    target: e.$el.find("#btn_checkMenu"),
                    width: "154px",
                    items: i,
                    onItemClick: function (t) {
                        e.superSelectAll(t.type)
                    }
                })
            }
        },
        onTableHeaderClick: function (e) {
            if (!e.target || "span" == e.target.tagName.toLowerCase()) {
                this.model.get("fid");
                if (!this.model.isTaskMode()) {
                    var t = {
                        command: "sort",
                        order: $(e.currentTarget).attr("field"),
                        desc: 1 ^ this.model.get("desc")
                    };
                    $App.trigger("mailCommand", t)
                }
            }
        },
        initTableHeaderEvent: function () {
            var e = this, t = e.model.get("orderText"), i = e.model.get("fid"), a = e.model.get("isSearchMode");
            t && $("#btn_sortMenu span").html(t), this.createSuperSelectMenu(), ($App.isSessionMode() && !a && $App.isSessionFid(i) || 7 == i) && e.$el.find("#btn_checkMenu").hide(), M2012.UI.PopMenu.createWhenClick({
                target: e.$el.find("#btn_sortMenu"),
                items: [{ text: "时间由新到旧", order: "receiveDate", desc: 1, bh: "mailbox_sortDate" }, {
                    text: "时间由旧到新",
                    order: "receiveDate",
                    desc: 0,
                    bh: "mailbox_sortDate"
                }, { text: "发件人升序", order: "from", desc: 0, bh: "mailbox_sortFrom" }, {
                    text: "发件人降序",
                    order: "from",
                    desc: 1,
                    bh: "mailbox_sortFrom"
                }, { text: "主题升序", order: "subject", desc: 0, bh: "mailbox_sortSubject" }, {
                    text: "主题降序",
                    order: "subject",
                    desc: 1,
                    bh: "mailbox_sortSubject"
                }, { text: "邮件大小升序", order: "size", desc: 0, bh: "mailbox_sortSize" }, {
                    text: "邮件大小降序",
                    order: "size",
                    desc: 1,
                    bh: "mailbox_sortSize"
                }],
                onItemClick: function (t) {
                    e.model.set("orderText", t.text), $App.trigger("mailCommand", {
                        command: "sort",
                        order: t.order,
                        desc: t.desc
                    }), BH(t.bh)
                }
            });
            var i = this.model.get("fid");
            if (2 == i || 3 == i) $(e.el).find("#th_from span").html("收件人"); else if (this.model.isApproachMode() && !this.model.get("isContactsMail")) {
                var s = "";
                switch (this.model.getSearchNameType()) {
                    case 1:
                        s = "收件人";
                        break;
                    case 2:
                        s = "发件人";
                        break;
                    case 3:
                        s = "发件人/收件人";
                        break;
                    default:
                        s = "发件人/收件人"
                }
                $(e.el).find("#th_from span").html(s)
            }
            e.$el.find("#th_from").length && (e.listHeader = e.$el.find("#th_from").parent("td").html());
            var o = $(this.$el);
            this.model.get("showSummary") ? o.addClass("havetext") : this.model.getKeyWord("content") && this.model.get("isSearchMode") ? o.addClass("havetext") : o.removeClass("havetext")
        },
        superSelectAll: function (e) {
            if ("shift" != e) {
                var t = this;
                this.model.superSelectAll(e, function (i) {
                    var a = "all" == e ? t.model.superSelectResult : {};
                    $.each(i.mid, function (e, t) {
                        !a[t] && (a[t] = null)
                    }), t.model.superSelectResult = a, "all" == e ? (t.$el.find("[id^=chk_mailist_all]").attr("checked", !0).change(), t.$el.find(".dayAreaTable input[type=checkbox]").attr("checked", !0).change()) : "none" == e ? (t.$el.find(".dayAreaTable input[type=checkbox]").attr("checked", !1).change(), t.model.clearSuperSelect(), t.$el.find("[id^=chk_mailist_all]").attr("checked", !1).change()) : "read" != e && "unread" != e || (t.$el.find(".dayAreaTable input[type=checkbox]").attr("checked", !1).change(), t.$el.find(".dayAreaTable span[name=from]").each(function () {
                        ($(this).hasClass("fw_b") && "unread" == e || !$(this).hasClass("fw_b") && "read" == e) && $(this).parents("tr").find("input[type=checkbox]").attr("checked", !0).change()
                    })), t.checkboxChange()
                })
            }
        },
        crossPageCheckbox: function () {
            var e = this.model.getSelectedRow().mids, t = this;
            e && e.length > 0 && ($(t.model.get("mailListData")).each(function (i, a) {
                $.inArray(a.mid, e) >= 0 && t.$el.find("tr[mid=" + a.mid + "]").find("input").attr("checked", !0).change()
            }), this.checkboxChange())
        },
        billTopShow: function (e) {
            for (var t, i = 0; i < e.length; i++) 1000006 !== e[i].sendId || 110 !== e[i].logoType && 1 !== e[i].logoType || this.model.regTellBillCardSummery(e[i].summary) && (!_.isNumber(t) || e[t].receiveDate < e[i].receiveDate) && (t = i);
            if (_.isNumber(t)) {
                var a;
                a = e[t], a.flags.top = 1, e.splice(t, 1), e.unshift(a)
            }
        },
        oneMailTopShow: function (e) {
            for (var t = this, i = e.length, a = 0; i > a; a++) {
                var s = e[a];
                if (1 == s.flags.read && 1000010 == s.sendId) {
                    s.flags.top = 1, e.unshift(e.splice(a, 1)[0]);
                    break
                }
            }
            t.billTopShow(e);
            for (var a = 0; i > a; a++) {
                var s = e[a];
                if (1000006 == s.sendId) {
                    s.flags.top = 1, e.unshift(e.splice(a, 1)[0]);
                    break
                }
            }
        },
        showThreeBtn: function () {
            var e = this, t = e.model.get("fid");
            7 != t && "left" != $App.getLayout() && (e.model.isSubscribeMode() || ($(e.el).find("tr[mid]").each(function (e, t) {
                t.onmouseenter = function (e) {
                    $(this).find(".i-tag,.i-remand,.i-del,[name=mailStick]").show(), $(this).find(".i_tx_nn,.i_tx_nbb").addClass("on")
                }
            }), $(e.el).find("tr[mid]").each(function (e, t) {
                t.onmouseleave = function (e) {
                    $(this).find(".i-tag,.i-remand,.i-del,[name=mailStick]").hide(), $(this).find(".i_tx_nn,.i_tx_nbb").removeClass("on")
                }
            }), 4 == t ? $(e.listEl).find("tr[mid] .i-del").attr("title", "彻底删除邮件") : $(e.listEl).find("tr[mid] .i-del").attr("title", "删除邮件"), $(e.listEl).find("tr[mid] .i-del").off("click").click(function () {
                var e = $(this).parents("tr").attr("mid");
                4 == t ? $App.trigger("mailCommand", {
                    command: "delete",
                    mids: [e]
                }) : $App.trigger("mailCommand", { command: "move", mids: [e], fid: 4, resumeDel: !1 })
            })))
        },
        overBusiness: function (e) {
            var e = e || window.event;
            e.preventDefault();
            var t = $(e.currentTarget), i = t.offset().top - 56, a = t.offset().left + 15;
            $(document.body).find("#busicons_s").remove();
            var s = ['<div class="menuPop shadow" id="busicons_s" style="top: {top}px; left: {left}px; z-index: 9001; width: 175px;padding-left: 14px; position: absolute;">', '<p class="business_help">139邮箱商务助手<i class="icons i-identity ml_6"></i></p>', '<span class="business_help_s">集多功能为一身，“S”身份标识</span>', "</div>"].join("");
            "left" == $App.getLayout() && (a -= 208), $(document.body).append($T.Utils.format(s, { top: i, left: a }))
        },
        outBusiness: function () {
            $(document.body).find("#busicons_s").remove()
        },
        renderContainer: function () {
            this.listEl = this.$el.find("#div_maillist")
        },
        resetOfficialHight: function () {
            var e = this;
            if (e.model.isUseNewMode()) {
                var t = $App.getCurrentTab().element, i = e.model.isEofficialMode() ? 100 : 152, a = document.body.clientHeight - i + "px";
                $(t).find("#mailing-lists-inner").css("height", a)
            }
        },
        render: function (e, t, i) {
            var a = this;
            this.renderContainer(), e || (a.model.get("isSearchMode") ? (a.model.set("isNewSearch", !0), BH("searchResult_load")) : BH("mailbox_load"), this.model.addLoadBehavior());
            var s = M2012.Mailbox.View.MailTag.prototype.createInstance();
            M139.UI.TipMessage.show("正在加载...", { after: 2e3 });
            this.model.getDataSource(function (o, n) {
                if (M139.UI.TipMessage.hide(), !e || e && "common" == a.model.get("flipType")) {
                    var r;
                    if (r = "left" == $App.getLayout() ? $("#template_maillist_left_new").val() : $("#template_maillist").val(), (0 == a.model.get("showSize") || a.model.isTaskMode()) && (r = r.replace(/<td class="td4"><a id="th_size".+?<\/td>/gi, "").replace(/<td class="td4" name="size">.*td>/gi, ""), a.$el.find("#th_size").parents("td").addClass("maillist-tdhide")), 7 == a.model.get("fid") && (r = $("#template_deresume_maillist").val()), a.model.isOnemailMode() || a.model.isBillMode()) {
                        var l = {
                            pageSize: a.model.get("pageSize"),
                            pageIndex: a.model.get("pageIndex"),
                            order: a.model.get("order")
                        };
                        1 == l.pageIndex && "receiveDate" == l.order && (a.model.isOnemailMode() && a.oneMailTopShow(o), a.billTopShow(o))
                    }
                    var c, d = a.model.isUseNewMode();
                    if (d) {
                        top.BH("strokeListLoad");
                        var p = $App.getCurrentTab().element;
                        a.loadCss("../css/common/icon_spl.css?" + Math.random(), "iconCss"), $(p).find(".horizon_full").html(['<div class="new-main-inner">', '<div class="p_relative new-main-data horizon_full">', '<div id="mailing-lists-inner" class="mailing-lists-inner" style="overflow-x:hidden;overflow-y:auto;height:">', '<div id="div_maillist" class="mainCont">', "</div>", "</div>", "</div>", "</div>"].join("")), a.resetOfficialHight(), a.model.isEofficialMode() && (c = new M2012.Mailbox.View.Eofficial({
                            model: a.model,
                            data: o
                        })), a.model.isBankMode() && (c = new M2012.Mailbox.View.Bankbill({
                            model: a.model,
                            sendId: d
                        })), a.model.isStrokeMode() && (c = new M2012.Readmail.Stroke.Templatehtml({
                            data: o,
                            model: a.model
                        })), a.model.isUtilityBillMode() && (c = new M2012.Mailbox.View.Utilitybill({
                            model: a.model,
                            sendId: d
                        }))
                    } else c = new Repeater(r);
                    a.repeater = c, c.model = a.model, c.view = a, c.Functions = createMailboxRenderFunctions(a.model, a), c.Functions.getTagList = s.render, c.ItemDataBound = null, a.model.set("mailListData", o), a.model.set("contactCacheSearchList", {}), a.model.set("keywordContacts", {}), a.model.checkUnreadChange();
                    var m = c.DataBind(o), u = new M2012.Mailbox.View.telbillcard({
                        html: m,
                        data: o,
                        model: a.model
                    }), h = u.render();
                    if (0 == o.length ? (!a.model.isPopMode() && a.$el.find("#list_header").hide(), a.model.isBillMode() && "left" != $App.getLayout() && a.$el.find(".billright").addClass("bill-serve-right"), a.model.isApproachMode() && "left" != $App.getLayout() && !a.model.get("billtype") || $("#myAccountList2").css("margin-top", "188px"), a.model.isUseNewMode() || (h = a.getEmptyTemplate())) : a.$el.find(".billright").removeClass("bill-serve-right"), h instanceof $ ? $.browser.msie && $.browser.version <= 7 && "left" == $App.getLayout() ? $(a.el).find("#div_maillist")[0].innerHTML = m : $(a.el).find("#div_maillist").html(h) : $(a.el).find("#div_maillist")[0].innerHTML = h, a.model.isStrokeMode()) {
                        var f = $(a.el).find("#div_maillist");
                        a.strokenavbar = new M2012.Mailbox.View.Strokenavbar({ handeEle: f })
                    }
                    a.model.isOnemailMode() && M139.core.utilCreateCssTag("/mpost2014/css/module/cloudMail2.0/rssMailCard.css", document, function () {
                        var e = new M2012.Mailbox.View.Sublist;
                        e.render({ oneStandsublist: !0 })
                    }), "list" != $App.getLayout() && "top" != $App.getLayout() || (0 == a.model.get("showSize") || a.model.isTaskMode()) && a.listEl.find(".dayAreaTable colgroup .td4").hide(), "left" == $App.getLayout() && ($(a.el).find("#div_maillist").append('<div class="downPagenumBox clearfix" id="maillist_pager_bottom" style="padding-right:10px;"></div>'), $(a.el).find("#topbarManage").find("#maillist_pager_top").remove(), $(a.el).find("#topbarManage").append('<div id="maillist_pager_top" style="padding-right:35px;"></div>'), 0 == o.length && ($(a.el).find("#maillist_pager_bottom").hide(), $(a.el).find("#readWrap")[0].innerHTML = ['<div class="whitebaby-remind whitebaby-remind0" style="position:absolute;top:50%;height:150px;margin-top:-75px;left:50%;width:208px;margin-left:-104px;display:block;">', '<div class="remind-layout">', '<i class="remind-character"></i>', "</div>", "</div>"].join("")));
                    var g = a.model.get("searchOptions") && a.model.get("searchOptions").condictions && a.model.get("searchOptions").condictions[0];
                    if (g && "sendId" == g.field && 0 != g.value && "EQ" == g.operator && BH("sublist_item_list_load"), $App.getMailboxView().model.isSubscribeMode() && ("top" == $App.getLayout() ? BH("sublist_top_load") : "left" == $App.getLayout() ? BH("sublist_tree_load") : BH("sublist_two_load")), a.model.isTaskMode()) {
                        var v = a.$el.find("#div_maillist .newdayArea");
                        _.each(v, function (e, t) {
                            var i = $(e).find("span>b");
                            i.text(i.text() + "（" + $(e).find("tr").length + "）")
                        })
                    }
                    a.model.isTaskMode() && "left" == $App.getLayout() && a.$el.find("#list_header .td6").remove(), a.model.isBillMode() && a.addBillCenter(), a.initListEvents(), o.length > 0 && a.changeReadMailArea(0), s.attachHintForTag(), a.firstLoaded = !1;
                    for (var b = a.listEl.find("div.daytableTitle"), y = 0; y < b.length; y++) "置顶" != $(b[y]).find("span").text() && "今日待办邮件" != $(b[y]).find("span").text() || $(b[y]).addClass("skin_mailTop");
                    if (a.prevSectionName = c.prevSectionName, -1 == a.model.get("order").indexOf("Date")) for (var b = a.listEl.find("div.daytableTitle"), y = 0; y < b.length; y++) "置顶" != $(b[y]).find("span").text() || "今日待办邮件" != $(b[y]).find("span").text() ? $(b[y]).hide() : $(b[y]).addClass("skin_mailTop")
                } else if (a.isLoadingNext = !1, console.log("滚动条方式自动翻页"), a.repeater.ItemDataBound = a.repeaterItemDataBound, a.model.set("mailListData", a.model.get("mailListData").concat(o)), a.repeater.DataBind(o), a.$el.find("#scrollTip").hide(), a.model.isTaskMode()) {
                    var v = a.$el.find("#div_maillist .dayArea");
                    _.each(v, function (e, t) {
                        var i = $(e).find("span>b");
                        i.text(i.text().replace(/\d+/, $(e).find("tr").length))
                    })
                }
                a.crossPageCheckbox(), a.model.isApproachMode() && !e && (a.model.set("searchStats", n), $App.getView("mailbox_other").searchClassify && $App.getView("mailbox_other").searchClassify.render()), $(a.$el).find("#list_header a").each(function () {
                    var e = $(this).attr("field");
                    if (3 == a.model.get("fid") && "from" == e && (e = "to"), e == a.model.get("order")) {
                        var t = 1 ^ Number(a.model.get("desc"));
                        $(this).find("i")[0] && ($(this).find("i")[0].className = "i_th" + t)
                    }
                }), a.model.trigger("mabilbox_render", { isFlipPage: this.isFlipPage, data: o }), setTimeout(function () {
                    a.onResize()
                }, 100), a.restorePosition(), a.refreshContact(arguments), setTimeout(function () {
                    a.rememberPosition()
                }, 50);
                var w = M2012.Mailbox.View.Drag.prototype.createInstance({ el: a.el });
                if (w.render(), "left" == $App.getLayout()) {
                    for (var b = a.listEl.find("div.daytableTitle"), y = 0; y < b.length; y++) "置顶" != $(b[y]).find("span").text() && "今日待处理" != $(b[y]).find("span").text() && $(b[y]).hide();
                    var M = $App.getMailboxView().model.getFolderInfo().stats.messageCount;
                    M > 0 && a.$el.find("#new_three_count_div").html("(共 " + M + " 封)")
                }
                if ("left" == $App.getLayout() && 5 == a.model.get("fid")) {
                    a.$el.find("#delBackYTip").length > 0 && a.$el.find("#delBackYTip").remove();
                    var C = ['<div class="WarnArticle" id="delBackYTip">', "“垃圾邮件”将自动清理30天以上的邮件&nbsp;|&nbsp;<a href=\"javascript:top.$App.show('selfSearch', { type: 1 });BH({ key: 'set_spam_delquery' });\">删信记录查询</a>", "</div>"].join("");
                    a.$el.find("#div_maillist").parent().before(C)
                }
                !(o.length > 0 && o[0].flags && 1 == o[0].flags.top), a.model.isSubscribeMode() && a.$el.find(".td5").find("div").hide(), a.model.isSubscribeMode() && ($("#btn_replyAll").hide(), $App.getView("sublist").render()), $(".loadingTip").remove(), 7 == a.model.get("fid") && (a.$el.find("#th_date").find("span").html("删信日期"), a.$el.find("#th_size").find("span").html("删信方式")), a.$el.find("input:checkbox").m139Check(), i && i();
                var x = a.listEl.find(".i_m_d").parents("tr[mid]");
                x.addClass("have");
                var k = a.listEl.find("[name=todayTodo]").parents("tr[mid]");
                k.addClass("have"), setTimeout(function () {
                    "left" == $App.getLayout() && 1 == a.model.get("pageIndex") && window.isReadFirstMailInLeft && (a.model.set("isReadFirst", !1), a.model.trigger("readFirstMail"), window.isReadFirstMailInLeft = !1)
                }, 50), t && t.isScrollTop && (a.$el.find("#div_maillist")[0].scrollTop = 0, a.model.set("listViewScollTop", 0)), a.showRemindOnce()
            });
            t && t.comefrom && "commandCallback" == t.comefrom && setTimeout(function () {
                a.model.trigger("mailboxReady")
            }, 700);
            $App.getCurrentTab().element.className = $User.getPageStyleByKey(a.model.get("pageStyle"));
        },
        showRemindOnce: function () {
            var e = this, t = ['<div id="remindGuide" class="boxIframe" style="position: absolute;top: 220px; width:310px;z-index:9001;display:block;"><div class="icons TriangleBottom" style="left:14px;"></div><a href="javascript:;" class="icons tips-upload-close newPop-close"></a><div class="boxIframeMain newPopIframe"><div class="boxIframeText"><div class="norTips"><span class="norTipsIco"><i class="i-newPop i-newPop-hover"></i></span><dl class="norTipsContent pt_10"><dt class="norTipsLine"></dt><dd class="norTipsLine">hover这里，快速标记待处理事项！</dd></dl></div></div></div></div>'].join("");
            "left" != $App.getLayout() && $App.showOnce("remindGuide", function () {
                if (2 != UserData.vipType) if ($("#remindGuide").length) $("#remindGuide").show(); else {
                    var i = $(t), a = e.$el.find("#div_maillist table [name=list_starmail]").eq(0), s = a.offset();
                    i.css({
                        top: s.top - 186 + "px",
                        left: s.left - 215 + "px"
                    }), e.$el.append(i), i.find(".newPop-close").click(function (e) {
                        i.hide()
                    }), setTimeout(function () {
                        i.hide()
                    }, 5e3), $(document).click(function () {
                        i.hide()
                    })
                }
            })
        },
        refreshContact: function (e) {
            var t = this;
            $App.getModel("contacts").isLoading && !this.isRefreshContact && (this.isRefreshContact = !0, window.isReadFirstMailInLeft = !0, $App.getModel("contacts").requireData(function (i) {
                e.callee.apply(t, e)
            }))
        },
        setMailListPadding: function () {
            var e = this.$el.find("#div_maillist");
            e[0] && (e[0].scrollHeight > e.height() ? e.removeClass("bgPadding").addClass("bgPadding_left") : e.removeClass("bgPadding_left").addClass("bgPadding"))
        },
        addBillCenter: function () {
            var e = this, t = e.model.get("specialFolderId").myBill, i = e.model.get("isSearchMode"), a = e.model.get("fid"), s = e.model.get("billtype"), o = this.$el.parent().parent().parent(), n = o.find("#mybillitem");
            o.find("#inboxHeader"), o.find(".toolBar");
            if (a == t && !i) {
                try {
                    e.model.updateBillType(function (e) {
                    })
                } catch (r) {
                }
                n.find("li:eq(0) a").addClass("current")
            }
            n.find("a[data-billtype=" + s + "]").addClass("current"), $App.on("showBillManager", function (e) {
                $App.show("billManager");
                try {
                    $App.closeTab("mailbox_" + t), $App.closeTab("mailbox_1")
                } catch (e) {
                }
            }), o.find("#showbillmanager").click(function () {
                $App.trigger("showBillManager", {})
            }), o.find("#myAccountList2 a").click(function () {
                var e = window.location.protocol + "//bill.mail.10086.cn/handler/bill/goto.ashx?lc=line&sid=" + sid, t = "<iframe src=" + e + " frameborder='0' allowTransparency='false' style='border:0px;width:780px;height:355px'/>";
                $Msg.showHTML(t, { width: 800, height: 355, buttons: ["关闭"], dialogTitle: "账单消费概况" })
            }), e.loadBillType()
        },
        loadBillType: function () {
            function e(e) {
                var s;
                if (i.find("#emptyBillContainer")[0] && (s = !0), s) {
                    if (0 == t.model.get("billTab")) a = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', '<div class="noMailData">', "<h3>该标签下没有邮件</h3>", '<div class="line"></div>', '<ul><li>了解更多生活缴费服务？点击<a class="mlr_5" id="goBill" href="javascript:void(0)">账单生活</a>查看吧</li></ul>', "</div>", "</div>", "</div>"].join(""); else if (1 == t.model.get("billTab")) {
                        var r = '<li id="invoice_desc">目前仅部分地市上线电子发票业务，具体请以当地中国移动业务通知为准</li>';
                        window.SiteConfig.invoiceArea && $.inArray(Number($User.getAreaCode()), SiteConfig.invoiceArea) >= 0 && (r = '<li id="invoice_desc">订阅电子发票业务后，我们会定期将您的话费发票发送至139邮箱，<a href="javascript:;" id="btn_invoice">设置电子发票接收时间&gt;&gt;</a></li>'), a = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有邮件 start-->", '<div class="noMailData">', "<h3>该标签下没有邮件</h3>", '<div class="line"></div>', "<ul>", r, '<li><a href="javascript:" onclick="$(this).hide();$(\'.explain-text\').show()" >什么是电子发票？</a></li></ul>', '<div class="explain-text" id="invoice_exp" style="display:none">', '<div class="inner">', "<h2>1、什么是电子发票？</h2>", '<div class="categorydes">电子发票是指消费者在购买商品或者接受服务时收取的以电子方式存储的发票文件，其法律效力、基本用途、基本使用规定等与税务机关监制的普通纸质发票相同. </div>', "<h2>2、如何使用电子发票？</h2>", '<div class="categorydes">电子发票与纸质发票一样可以用于正常的财务报销、产品保修等场景，如需使用纸质发票，您可以下载电子发票后直接打印使用。</div>', "<h2>3、如何获取电子发票？</h2>", '<div class="categorydes">a. 目前用户只能通过中国移动沟通100服务厅获取移动业务的电子发票，电子发票文件会以邮件的形式发送至您的139邮箱。后续会逐步开放中国移动官网、手机客户端、10086客服等多种自助办理渠道。目前仅部分地市开通了电子发票服务，当地是否开通电子发票业务请咨询10086客服确认。<br>', "b. 您也可以通过139邮箱进行中国移动话费电子发票的订阅，订阅后我们会每月定期将您的话费发票发送至您的139邮箱并实时短信提醒。（该功能暂未上线，具体上线时间以139邮箱产品界面通知为准）</div>", '<div class="mt_10"><img src="/m2015/images/imgsrc/invoicing-sample.png" alt="电子发票样例"></div>', "</div>", "</div>", "<!--没有邮件 end-->", "</div>", "</div>"].join(""), M139.core.utilCreateScriptTag({ src: top.getRootPath() + "/js/richmail/mailbox/m2012.mailbox.view.invoice.js" }, function () {
                            var e = new M2012.Mailbox.View.Invoice;
                            return !$User.isChinaMobileUser() || top.$User.isInternetUser() ? void setTimeout(function () {
                                $("#invoice_desc").html("电子发票需要绑定移动号码，<a href='javascript:' id='btn_bind'>立即绑定&gt;&gt;</a>"), $("#btn_bind").die("click").live("click", function () {
                                    BH("invoice_bind"), e.bindMobileNumber()
                                })
                            }, 10) : (e.checkIsOpen(), void $("#btn_invoice").die("click").live("click", function () {
                                BH("invoice_set1"), e.render()
                            }))
                        })
                    }
                    n.html(a), n.find(".noindexbody").prepend(t.$el.find("#mailClassife")), t.$el.find("#mailClassife").css("text-align", "left"), t.$el.find("#mailClassife").on("click", "#closemailClassif", function () {
                        top.BH("closedesc_descbox"), t.$el.find("#mailClassife").remove()
                    }), $(".billleftDiv:first").hide(), $(".mailing-lists-head").hide(), o.hide()
                } else 1 == t.model.get("billTab") && window.SiteConfig.invoiceArea && $.inArray(Number($User.getAreaCode()), SiteConfig.invoiceArea) >= 0 && M139.core.utilCreateScriptTag({ src: top.getRootPath() + "/js/richmail/mailbox/m2012.mailbox.view.invoice.js" }, function () {
                    var e = new M2012.Mailbox.View.Invoice;
                    e.checkIsOpen(function (i) {
                        i || (t.$el.find("#inboxHeader").append("<span style='padding-left:12px;'>订阅电子发票业务后，我们会定期将您的话费发票发送至139邮箱，点击<a href='javascript:' bh='invoice_set2' id='btn_invoice_sub'>订阅发票</a></span>"), $("#btn_invoice_sub").click(function () {
                            e.render()
                        }))
                    })
                }), t.onResize()
            }

            var t = this, i = t.$el, a = (['<div class="billleftDiv bill_list_null"><h2>你暂时没有账单邮件</h2>', '<p>您可以在账单管理<a href="javascript:;" onclick="$App.trigger(\'showBillManager\',{})" title="开通账单服务">开通账单服务</a>，让您每月收到账单信息，时刻掌握自己的消费状况！', '</p><img src="http://image0.139cm.com/rm/richmail/images/billCenter/bill_null.png">', "</div>"].join(""), ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有邮件 start-->", '<div class="noMailData">', "<h3>该标签下没有邮件</h3>", "</div>", "<!--没有邮件 end-->", "</div>", "</div>"].join("")), s = i.find(".billright"), o = i.find("#inboxHeader,.toolBar"), n = this.$el.find("#div_maillist");
            t.model.getBillTypeList(function (t) {
                if (t["var"] && t["var"].length > 0) {
                    for (var i = t["var"].length, a = [], o = 0; i > o; o++) {
                        var n = t["var"][o].status;
                        a.push(n)
                    }
                    a.sort();
                    for (var r = 0; r < a.length; r++) a[r] == a[r + 1] && (a.splice(r + 1, 1), r -= 1);
                    a.length > 1 ? (e(!0), s.find(".aside-bd .bill_box").eq(0).hide(), s.find(".ads_bill").removeClass("ads_bill1").addClass("ads_bill2")) : (1 == a[0] && (s.find(".aside-bd .bill_box").eq(0).hide(), e(!0)), 2 == a[0] && (s.find(".aside-bd .bill_box").eq(0).show(), s.find(".ads_bill").removeClass("ads_bill2").addClass("ads_bill1"), e()), 0 == a[0] && (s.find(".aside-bd .bill_box").eq(0).hide(), e()))
                } else e()
            })
        },
        goBillSubscript: function () {
            var e = location.href.split("//")[0], t = {
                "https:": 8443,
                "http:": 8001
            }, i = e + "//happy.mail.10086.cn:" + t[e] + "/jsp/cn/billsubscibe/sso.do?sid=" + top.sid;
            window.open(i)
        },
        getEmptyCluster: function (e) {
            var t = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有找到邮件 start-->", '<div class="noMailData">', "<h3>没有找到邮件，可能：</h3>", "<ul>", "<li>1. 您的订阅邮件被转移至其他文件夹</li>", '<li>2. 您没有{0}，请到<a class="mlr_5" href="javascript:$App.show(\'googSubscription\');">云邮局</a>订阅</li>', "</ul></div>", "<!--没有找到邮件 end-->", "</div>", "</div>"].join("");
            return $T.Utils.format(t, [e ? "订阅杂志" : "订阅服务", e ? "http://fun.mail.10086.cn/ymail/1403/morentupian/p11.html" : "http://fun.mail.10086.cn/ymail/1403/morentupian/p12.html"])
        },
        getEmptySearch: function () {
            function e(t) {
                var i = $("#tb_emptyKeyword").val().trim();
                "" != i ? (i.length > 100 && (top.FF.alert("仅支持对100个字符的关键词搜索，100个字符外的字词将被忽略"), i = i.substring(0, 100)), $App.searchMail(i), $("#tb_mailSearch").val(i), $("#btn_emptySearch").die("click", e)) : $Msg.alert("请输入关键字")
            }

            $("#btn_emptySearch").die("click"), $("#btn_emptySearch").live("click", e);
            var t = "", i = "", a = this.model.get("isContactsMailAndTheEmailIs") || "";
            this.model.get("searchOptions").condictions && this.model.get("searchOptions").condictions.length && (t = $T.Html.encode(this.model.get("searchOptions").condictions[0].value)), t && a && (i = top.M139.Text.Email.getSendText(a, t).replace(/\"/g, ""));
            var s = '<li style="line-height:36px;height:auto;">1、您尚未开启全文检索功能，建议开启后重新搜索<a href="javascript:;" onclick="top.$App.openFullSearch();" bh="fullSearch_mailbox"  class="icoG "><span>开启全文检索</span></a></li><li style="line-height:36px;height:auto;">2、建议您使用高级搜索，更加精准<a bh="advanceSearch_mailbox" href="javascript:;" onclick="top.$App.showAdvanceSearch();" class="icoG">高级搜索</a></li><li style="height:auto;line-height:36px;">3、更换关键字或搜索条件，重试</li>';
            this.model.get("isFullSearch") && (s = '<li style="line-height:36px;height:auto;">1、建议您使用高级搜索，更加精准<a bh="advanceSearch_mailbox" href="javascript:;" onclick="top.$App.showAdvanceSearch();" class="icoG">高级搜索</a></li><li style="height:auto;line-height:36px;">2、更换关键字或搜索条件，重试</li>'), this.model.get("isContactsMail") && (this.model.get("isFullSearch") ? (s = '跟好友多多联系吧<a class=\'icoG\' href=\'javascript:top.$App.close("mailsub_0");top.$App.show("compose",null,{inputData:{receiver:"' + i + "\"}});' style = 'margin-left:20px;'><span>去写信</span></a>", t = "没有发现与“" + a + "”的往来邮件") : (s = '开通全文检索，查找更多记录<a class="icoG" href="javascript:top.$App.openFullSearch();" style = "margin-left:20px;"><span>开启全文检索</span></a>', t = "没有发现与“" + a + "”的往来邮件，您可以"));
            var o = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有找到邮件 start-->", '<div class="noMailData">', '<h3 id="noSearch_haskey">没有搜索到包含<span class="red">' + t + "</span>的邮件，您可以：</h3>", '<h3 style="display:none;" id="noSearch_nokey">没有搜索到符合条件的邮件，您可以：</h3>', '<ul class="search-no-data">', s, "</ul></div>", "<!--没有找到邮件 end-->", "</div>", "</div>"].join(""), n = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有找到邮件 start-->", '<div class="noMailData">', '<h3 id="noSearch_haskey">' + t + "</h3>", '<div class="line"></div>', "<ul>", "<li>" + s + "</li>", "</ul></div>", "<!--没有找到邮件 end-->", "</div>", "</div>"].join(""), r = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有找到邮件 start-->", '<div class="noMailData">', '<h3 id="noSearch_haskey">该标签下没有邮件</h3>', '<div class="line"></div>', "<ul>", '<li>将联系人设为"VIP联系人",来自TA的邮件在列表醒目显示.</li>', '<li><a class="icoG" href="javascript:top.$App.doCommand(\'addVip\');"><span>添加VIP联系人</span></a></li>', "</ul></div>", "<!--没有找到邮件 end-->", "</div>", "</div>"].join("");
            if (!t) {
                var l = $(o);
                l.find("#noSearch_nokey").show(), l.find("#noSearch_haskey").hide(), o = l[0].outerHTML
            }
            return this.model.get("isContactsMail") ? n : this.model.get("searchOptions").isVip ? r : o
        },
        getEmptyStar: function () {
            return ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有邮件 start-->", '<div class="noMailData">', "<h3>该标签下没有邮件</h3>", '<div class="line"></div>', "<ul>", "<li>在邮件列表中，将邮件设为星标，方便查看重要邮件</li>", '<li><div class="tips"><img src="../images/imgsrc/noStarMail.png"></div></li>', "</ul></div>", "<!--没有邮件 end-->", "</div>", "</div>"].join("")
        },
        getEmptyTask: function () {
            return ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有邮件 start-->", '<div class="noMailData">', "<h3>“稍后处理”没有邮件</h3>", '<div class="line"></div>', "<ul>", "<li>将邮件设为“稍后处理”，便捷管理待处理事项。</li>", "</ul></div>", "<!--没有邮件 end-->", "</div>", "</div>"].join("")
        },
        getEmptyTaskdone: function () {
            return ['<div class="bgMargin_top">', '<h2 class="" style="font-weight:bold;">您暂时没有"已完成"邮件</h2>', '<p class="tipTxt">您可以将您的待办任务邮件设为已完成。</p>', '<img src="../images/global/norenwudone.jpg" alt="您可以将您的待办任务邮件设为已完成。" style="margin-top:5px;">', "</div>"].join("")
        },
        getEmptyUnread: function () {
            return ['<div class="noindexbody">', '<div class="empty_btn">没有找到未读邮件</div>', "<p></p>", "</div>"].join("")
        },
        getEmptyVoiceMail: function () {
            return ['<div class="skin_voicemail"><div class="voicemail">', '<i class="voicemailImg"></i>   ', '<p>您暂时还未收到语音来电留言哦！o(∩_∩)o <br><a href="javascript:$App.show(\'voiceSetting\')" id="voice_setting">查看设置 &gt;&gt;</a></p>', "</div></div>"].join("")
        },
        getEmptyDeleteFloder: function () {
            var e = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', '<div class="noMailData">', '<h3>已删除文件夹邮件为空</h3><div class="line"></div>', '<ul><li>邮件不小心被彻底删除了？想找回误删除邮件，试试 <a class="mlr_5" href="javascript:top.$App.showMailbox(7);">误删除恢复</a> 吧</li></ul>', "</div>", "</div>", "</div>"].join("");
            return e
        },
        getEmptyDelResuFloder: function () {
            var e = (top.$User.getServiceItem(), '<a href="javascript:;" target="_blank" id="find_30_Mail" bh="gotoOrderMistakeDel">开通误删除恢复，可找回30天内彻底删除的邮件，去开通&gt;&gt;</a>'), t = top.$App.getConfig("UserData") || {}, i = t.orderInfoList, a = "", s = "", o = [];
            for (var n in i) {
                var a = i[n].serviceId;
                "232" == a && (s = i[n].orderStatus), o.push(a)
            }
            return o.join(",").indexOf("232") > -1 && (4 == s || 0 == s) ? html = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', '<div class="noMailData">', '<h3>近30天内暂无彻底删除的邮件</h3><div class="line"></div>', "</div>", "</div>", "</div>"].join("") : html = ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', '<div class="noMailData">', '<h3>您还未开通误删除恢复功能！</h3><div class="line"></div>', "<ul><li>", e, "</li></ul>", "</div>", "</div>", "</div>"].join(""), html
        },
        getEmptyHtml: function (e) {
            return ['<div class="whitebaby-remind whitebaby-remind0" style="position:absolute;top:50%;height:198px;margin-top:-99px;left:50%;width:208px;margin-left:-104px;display:block;">', '<div class="remind-layout">', '<div class="remind-text"><p class="fz_14 c_999 ta_c">' + e + "</p></div>", '<i class="remind-direction"></i>', '<i class="remind-character"></i>', "</div>", "</div>"].join("")
        },
        getEmptyProvincetpl: function () {
            var e = '<li>获取每月的移动话费电子账单？请点击<a class="mlr_5" id="SiChuanBillBtn" href="javascript:void(0)">订阅账单</a>开通服务吧</li>', t = "26" == $User.getProvCode() ? e : "";
            return ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', '<div class="noMailData">', '<h3>该标签下没有邮件</h3><div class="line"></div>', "<ul>", '<li>了解更多分省移动资讯？请点击进入<a id="oneStand" style="margin-left:10px;" bh="onestand_empty" href="javascript:;">超级服务号</a></li>', t, "</ul>", "</div>", "</div>", "</div>"].join("")
        },
        getEmptyTemplate: function () {
            var e = this, t = Number(this.model.get("fid")), i = this.model.getFolderInfo(t);
            "left" == $App.getLayout() || $App.getMailboxView().model.isBillMode() || i.popId ? $App.getMailboxView().model.isBillMode() && this.toolbarView.$el.find("[id*=toolbar]").parent().hide() : this.toolbarView.$el.hide();
            var a = $T.Html.encode(i.name) + "没有邮件", s = '<div style="display:none" id="emptyBillContainer"></div>';
            if (e.model.isBillMode()) return 6 == e.model.get("billTab") ? this.getEmptyVoiceMail() : s;
            if (e.model.get("isSearchMode")) {
                if (e.model.isClusterColumn()) return e.getEmptyCluster(!0);
                if (e.model.isClusterList()) return ['<div class="noindexbody noindexbodyS" >', '<div class="empty_btn">', "<!--没有找到邮件 start-->", '<div class="noMailData">', "<h3>此栏目下暂时没有订阅邮件</h3>", "<ul>", '<li>栏目更新后您将收到订阅邮件。<a href="javascript: $App.showSubscribe(true);">返回</a>全部栏目</li>', "</ul></div>", "<!--没有找到邮件 end-->", "</div>", "</div>"].join("");
                if (e.model.isStarMode()) return e.getEmptyStar();
                if (e.model.isPriorityMode()) return e.getEmptyHtml(a);
                if (e.model.get("isTaskbacklogMode")) return e.getEmptyTask();
                if (e.model.get("isTaskdoneMode")) return e.getEmptyTaskdone();
                if (e.model.isOnemailMode()) {
                    var o = "" + $User.getProvCode(), n = $User.getOnemailInfo();
                    e.gopage({ ele: "#oneStand", columnId: n[o].columnId, title: n[o].title, key: n[o].key });
                    var r = $App.getCurrentTab().element;
                    return $(r).find("#toolbar_div").show().find(".new-main-topbar").remove(), e.getEmptyProvincetpl()
                }
                return e.getEmptySearch()
            }
            if ("left" == $App.getLayout()) var l = '<div class="nodata">' + a + "</div>"; else {
                var l = "";
                switch (t + "") {
                    case "4":
                        l = e.getEmptyDeleteFloder();
                        break;
                    case "7":
                        l = e.getEmptyDelResuFloder();
                        break;
                    default:
                        l = e.getEmptyHtml(a)
                }
            }
            return l
        },
        gopage: function (e) {
            clearTimeout(t);
            var t = setTimeout(function () {
                $(e.ele).click(function () {
                    top.$App.show("mpostOnlineService", null, {
                        title: e.title,
                        key: e.key,
                        inputData: { columnId: e.columnId, columnName: e.title }
                    })
                })
            }, 50)
        },
        loadNextPage: function () {
            this.model.nextPage(), this.render(!0)
        },
        repeaterItemDataBound: function (e) {
            var t = this.view.$el.find("#div_maillist");
            if (this.view.prevSectionName != e.sectionName) {
                this.view.prevSectionName = e.sectionName;
                var i = this.sectionStart.replace("@getSectionName", e.sectionName);
                t.find("table:last").after(i + this.sectionEnd)
            }
            var a = e.html, s = $.browser.msie && 6 == $.browser.version;
            s ? t.find("table:last").children("tbody").append(a) : t.find("table:last").append(a)
        },
        getSelectedRow: function () {
            return this.model.getSelectedRow(this.$el)
        },
        changeReadMailArea: function (e, t) {
            var i = this;
            if ("list" != $App.getLayout() && t, "left" == $App.getLayout()) var a = ['<div class="whitebaby-remind whitebaby-remind0" style="position:absolute;top:50%;height:198px;margin-top:-99px;left:50%;width:208px;margin-left:-104px;display:block;">', '<div class="remind-layout">', '<div class="remind-text">{0}</div>', '<i class="remind-direction"></i>', '<i class="remind-character"></i>', "</div>", "</div>"].join(""); else var a = '<div style="position: absolute;top: 48%;left: 0;width: 100%;height: 20px;line-height: 20px;margin-top: -10px;color: #888888;font-size: 16px;text-align: center;">{0}</div>';
            var s = '<p class="fz_14 c_999 ta_c">单击一封邮件在此处显示</p>';
            e > 0 && (this.model.set("mid", null), s = '<p class="fz_14 c_999 ml_15">已选择<span class="red fw_b">' + e + '</span>封邮件，<a href="javascript:;" id="cancelChoice2" BH="left_maillist_click_rightCancel"><span>取消</span></a></p>');
            var o = this.$el.find(".toolBarArray #btn_more");
            o.hide();
            var n = this.$el.find("#readWrap");
            n.html($T.Utils.format(a, [s])), n.find("#cancelChoice2").unbind("click").click(function () {
                i.cancelChoice()
            })
        },
        getViewOffsetTop: function () {
            var e, t = $App.getLayout();
            return e = "left" == t ? 149 : 215
        },
        onResize: function () {
            if (this.el) try {
                var e = arguments.callee;
                if (e.invokeTime && new Date - e.invokeTime < 100, e.invokeTime = new Date, "none" == this.$el[0].style.display) return;
                var t = $("#div_mail:eq(0)"), i = $App.getBodyHeight();
                if ("top" == $App.getLayout()) {
                    i = this.$el.find("#mailbox_split").offset().top + 4;
                    var a = $App.getBodyHeight() - i - this.$el.find("#mailbox_split").outerHeight(!0) + 6, s = this.$el.find("#readWrap:eq(0)");
                    s.height(a), s.find(".J-readMailArea").height(a - 4);
                    var o = s.find("div.cov-list");
                    if (o[0]) {
                        var n = s.find("div.inboxTips").height() || 0, r = s.find("div.cov-title-bg").height() || 0;
                        o.height(a - n - r - 6)
                    }
                    this.model.isApproachMode() && ($("#div_searchclassify").css("height", "auto"), setTimeout(function () {
                        var e = $("#div_mail").height(), t = $("#div_searchclassify").height();
                        t > e ? $("#div_mail").css({
                            "overflow-y": "auto",
                            height: e + "px"
                        }) : $("#div_mail").attr("style", "").css("height", e + "px")
                    }, 1e3))
                } else if ("left" == $App.getLayout()) {
                    var l = this.$el.find("#div_maillist"), c = this.$el.find("#mailbox_split"), d = $App.getBodyHeight() - $(".new-main-left").top, p = l[0].scrollHeight > l.height() ? c.position().left + 2 : c.position().left;
                    c.height(d), l.width(p), p > 360 && l.find(".mail-title").width(p - 75);
                    var m = $("#div_main").width() - c.position().left - 6;
                    this.model.isApproachMode() ? (t.width(m), t.height(d)) : this.$el.find("#readWrap").height(d)
                }
                var d;
                this.model.isApproachMode() && ($("#div_searchclassify>.searchFilterList").height(i - t.offset().top - 4), $("#div_searchclassify>.searchFilterList").css({
                    "overflow-y": "scroll",
                    "overflow-x": "hidden"
                })), this.model.isApproachMode() && "list" == $App.getLayout() ? (t.height(i - t.offset().top - 4), this.model.get("searchStats") && 0 == this.model.get("searchStats").messageCount ? t.find("#div_maillist").height(i - t.offset().top) : t.find("#div_maillist").height(i - t.offset().top - 31), this.model.isStrokeMode() && this.model.get("mailListData") && 0 == this.model.get("mailListData").length ? t.find("#div_maillist").css({
                    "overflow-y": "hidden",
                    "overflow-x": "hidden"
                }) : t.find("#div_maillist").css({
                    "overflow-y": "scroll",
                    "overflow-x": "hidden"
                })) : this.model.isClusterColumn() || this.model.isClusterList() ? (d = i - this.listEl.offset().top - 1, this.listEl.height(d), this.listEl.find("iframe").height(d - 114 - 5)) : (d = i - this.getViewOffsetTop() - 1, this.listEl.height(d))
            } catch (u) {
            }
        },
        cancelChoice: function () {
            var e = !1;
            $App.getCurrentView().listView.model.get("mid") && (e = !0), this.model.superSelectResult = {}, $(this.el).find("#list_header td:eq(2)").removeClass("td6").addClass("td2").html(this.getFromHtmlInListHeader()), this.new3CancelChoice(), $App.getMailboxView().model.trigger("mailSelectedChange", {
                count: 0,
                isNoRender: e
            }), $(this.el).find("[id^=chk_mailist_all]").attr("checked", !1).change(), this.$el.find(".dayAreaTable input[type=checkbox]").attr("checked", !1).change(), this.changeReadMailArea(0, e), this.checkboxChange(), this.model.get("crossPageSelect") && (BH("cross_page_select_cancel"), this.model.set("crossPageSelect", !1)), this.model.trigger("mailListChange", { selectedTr: [] })
        },
        getFromHtmlInListHeader: function () {
            var e = $App.getLayout();
            if ("left" == e) return "";
            var t = (this.model.get("order"), this.model.get("desc"), $(this.listHeader));
            return t[0]
        },
        changeMailStyle: function (e) {
            if (7 == this.model.get("fid")) {
                var t = e.currentTarget;
                $(t).find("td").css("cursor", "default"), $(t).find("a").attr("href", "javascript:;").css("cursor", "default"), $(t).find("p").css("cursor", "default"), $(t).find("td").css("background", "rgba(0,0,0,0)")
            }
        },
        onNew3ColSettingClick: function () {
            var e = this;
            Package.require("mailbox_ext", function () {
                new M2012.Mailbox.View.MailSetting({ el: e.el }).render(), BH("mailbox_setting")
            })
        },
        new3CancelChoice: function () {
            $(this.el).find("#new_three_type_div").show(), $(this.el).find("#new_three_count_div").show(), $(this.el).find("#cancelchoice").parent().remove()
        },
        onNew3TypeDivClick: function () {
        },
        listSelect: function (e) {
            var t = this;
            setTimeout(function () {
                var e = $("#div_maillist").find(".i-chooseMo.i-chooseYet"), i = 0;
                if (1 == e.length) {
                    var a = e.parents("tr").attr("mid");
                    i = $App.getMailDataByMid(a).attachmentNum
                }
                i > 0 || $("#headAttach").length > 0 ? t.reShowBtn(t, "block") : t.reShowBtn(t, "none");
                var s = $($App.getCurrentTab().element).find("#div_maillist");
                t.model.trigger("mailListChange", { selectedTr: s.find(".i-chooseMo.i-chooseYet").closest("tr[mid]") })
            }, 40), e.stopPropagation()
        },
        listReadmail: function (e) {
            var t = this, i = e.target || e.srcElement, a = $(i).parents("tr").attr("mid");
            a && (attch = $App.getMailDataByMid(a).attachmentNum, attch > 0 ? t.reShowBtn(t, "block") : t.reShowBtn(t, "none"))
        },
        orderDelLink: function () {
            var e = (top.$App.getConfig("UserData") || {}, "http://vip.mail.10086.cn/html/detailsPage(recovery).html?sid=" + top.$App.getSid());
            $("#find_30_Mail").attr("href", e)
        },
        reShowBtn: function (e, t) {
            var i = e, a = document.createElement("li");
            a.id = "btn_forward";
            var t = t, s = [{
                text: "转发",
                args: { value: !1, bh: $App.isReadSessionMail() ? "cMail_toolbar_forward" : "toolbar_forward" }
            }, {
                text: "作为附件转发",
                args: {
                    value: !0,
                    bh: $App.isReadSessionMail() ? "cMail_toolbar_forward_as_attach" : "toolbar_forwardasattach"
                }
            }, {
                text: "只转发附件",
                args: {
                    value: !1,
                    bh: $App.isReadSessionMail() ? "cMail_toolbar_forward_as_attach" : "toolbar_forwardasattach"
                },
                display: t
            }];
            M2012.UI.MenuButton.create({
                text: "转发",
                container: a,
                rightSibling: !0,
                templateClass: s ? "icoTd mr_6" : "icoTb mr_6",
                menuItems: s,
                dy: 1,
                onItemClick: function (e, t) {
                    if (BH("cMail_toolbar_forwardMenu_click"), "fetion" == e.args.value) return void Package.require("readmail_ext", function () {
                        M2012.ReadMail.Fetion.View.create()
                    });
                    var a = !1;
                    "2" == t && (a = !0), i.doCommand("forward", { attach: e.args.value, asAttch: a }), BH(e.args.bh)
                },
                onClick: function () {
                    $App.isReadSessionMail() ? BH("cMail_toolbar_forward") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscribeMode() ? BH("sublist_forward") : $App.getMailboxView() && $App.getMailboxView().model && $App.getMailboxView().model.isSubscriptionMail() ? BH("sublist_read_forward") : BH("toolbar_forward"), i.doCommand("forward", { attach: !1 })
                }
            }), $("#btn_forward").replaceWith(a), this.model.trigger("resetMoreBtnItem")
        },
        doCommand: function (e, t) {
            t || (t = {}), t.command = e, $App.trigger("mailCommand", t), $("#conversationDialog").remove()
        }
    })
}),

//.M2012.Mailbox.View.SearchClassify
M139.namespace("M2012.Mailbox.View", {
    SearchClassify: Backbone.View.extend({
        el: "",
        template: "",
        events: {},
        createInstance: function (e) {
            $App.getView("searchclassify") || $App.registerView("searchclassify", new M2012.Mailbox.View.SearchClassify(e));
            var t = $App.getView("searchclassify");
            return e.el && (t.el = e.el), "0" == top.$App.getCustomAttrs("openSearchclassify") ? $("#div_searchclassify").addClass("searchFilter-off") : $("#div_searchclassify").removeClass("searchFilter-off"), t
        },
        initialize: function (e) {
            this.firstLoaded = !0, this.model = e.model, this.searchDefaultSetting = $App.getCustomAttrs("searchDefaultSetting")
        },
        initstats: function () {
            var e = this.searchStats = this.model.get("searchStats"), t = {
                from: e.fromStats,
                fid: e.folders,
                during: e.during,
                attached: [{ name: "含附件", attached: 1, count: e.attachMessageCount }, {
                    name: "不含附件",
                    attached: 2,
                    count: e.messageCount - e.attachMessageCount
                }]
            }, i = $App.getLayout();
            if ("list" == i || "top" == i) {
                $(".noindexbody.noindexbodyS").width()
            }
            return e.messageCount > 0 ? t : {}
        },
        renderContainer: function () {
            function e(e, t) {
                var t = t.split("_"), i = [];
                if ("all" !== t[0]) for (var a = 0; a < t.length; a++) i.push({
                    field: t[a],
                    operator: "contains",
                    value: e
                }); else i.push({ field: "content", operator: "contains", value: e }, {
                    field: "attachName",
                    operator: "contains",
                    value: e
                }, { field: "subject", operator: "contains", value: e }, {
                    field: "from",
                    operator: "contains",
                    value: e
                }, { field: "to", operator: "contains", value: e });
                return i
            }

            var t = this, i = this.model.get("searchStats"), a = this.model.get("isContactsMail"), s = i.messageCount, o = function () {
                t.$el.hide(), $(".searchFlanking").hide()
            };
            if (!s) return void o();
            this.headEl = $('<div class="searchFilterTitle clearfix"><a class="fr" id="setItDefault" bh="searchResult_edit" href="javascript:;">编辑</a><b>分类查找</b>(搜到' + i.messageCount + "封)</div>"), this.contentEl = $("<div class='searchFilterList'></div>"), this.classifyTemplate = $('<div class="searchFilterList"></div>'), this.contentEl.append(this.headEl), this.contentEl.append(this.classifyTemplate), a ? o() : $(this.el).show(), $(this.el).html(this.contentEl), this.switchEl = ['<a href="javascript:void(0)" class="switchOn" title="收起"></a>', '<a href="javascript:void(0)" class="switchOff" title="展开"></a>'], $(this.el).append(this.switchEl.join(""));
            var n = $(".switchOn"), r = $(".switchOff");
            n.click(function () {
                $(t.el).addClass("searchFilter-off"), top.$App.setCustomAttrs("openSearchclassify", "0")
            }), r.click(function () {
                top.BH("openSearchclassify"), $(t.el).removeClass("searchFilter-off"), top.$App.setCustomAttrs("openSearchclassify", "1")
            }), $App.getConfig("UserAttrs") && 0 == $App.getConfig("UserAttrs").fts_flag ? ($("#searchRangeUl input[rel='all']").parent("li").hide(), $("#searchRangeUl input[rel='subject_content']").parent("li").hide(), $("#searchRangeUl a#open_all").parent("li").click(function () {
                $RM.setAttrs({ attrs: { fts_flag: 1 } }, function (e) {
                    if ("S_OK" == e.code) {
                        BH("open_search_all_succeed");
                        $Msg.confirm("全文检索开通成功，刷新页面生效", function () {
                            location.reload()
                        }, { title: "", dialogTitle: "系统通知", icon: "ok", buttons: ["立即刷新"] })
                    } else top.M139.UI.TipMessage.show("全文检索开通失败", { className: "msgRed", delay: 1e3 })
                })
            })) : $("#searchRangeUl a#open_all").parent("li").hide();
            var l = t.model.get("setting");
            "from,subject,to_from,subject_content,op_all".indexOf(l) > -1 ? $("#searchRangeUl input[rel='" + l + "']").attr("checked", "checked") : "iamadvance" == l || $("#searchRangeUl input[rel='" + t.searchDefaultSetting + "']").attr("checked", "checked"), $("#searchRangeUl").click(function (i) {
                if ("INPUT" === i.target.nodeName.toUpperCase()) {
                    top.$App.getView("mailbox_other").model.set("showSearchclassify", !0);
                    var a = $(i.target).attr("rel");
                    "from" == a && top.$App.getView("mailbox").model.set("searchIsComeformDefault", ""), t.model.set("setting", a);
                    var s = t.model.get("searchOptions"), o = s.condictions[0].value;
                    delete s.condictions, s.condictions = e(o, a), $App.searchMail(s)
                }
            }), $("#setItDefault").click(function () {
                top.$App.showAdvanceSearch()
            })
        },
        render: function () {
            this.renderContainer();
            var e = this.initstats(), t = this.model, i = this.classifyTemplate;
            if (e.from && e.from.length > 0) {
                var a = { model: t, el: i, title: "按发件人", data: e.from, key: "from", type: "from" };
                this.searchclassifyfrom = new M2012.Mailbox.View.SearchClassifyItem(a), this.searchclassifyfrom.render({
                    limit: 8,
                    type: "nameType"
                })
            }
            if (e.fid && e.fid.length > 0) {
                var s = { model: t, el: i, title: "按文件夹", data: e.fid, key: "folderName", type: "fid" };
                this.searchclassifyfid = new M2012.Mailbox.View.SearchClassifyItem(s), this.searchclassifyfid.render()
            }
            if ($App.getConfig("searchDate") && $App.getConfig("searchDate").isSet && e.during && e.during.length > 0) {
                var o = $App.getConfig("searchDate"), n = {
                    model: t,
                    el: i,
                    title: "按时间范围",
                    data: [{
                        name: o.start + " 至," + o.end,
                        count: e.during[e.during && e.during.length - 1].count,
                        stats: !0
                    }],
                    key: "name",
                    type: "during"
                };
                this.searchclassifydate = new M2012.Mailbox.View.SearchClassifyItem(n), this.searchclassifydate.render(), top.$App.registerConfig("searchDate", { isSet: !1 })
            } else if (e.during && e.during.length > 0) {
                "自定义" != e.during[0].name && e.during.unshift({ name: "自定义" });
                var n = { model: t, el: i, title: "按时间范围", data: e.during, key: "name", type: "during" };
                this.searchclassifydate = new M2012.Mailbox.View.SearchClassifyItem(n), this.searchclassifydate.render()
            }
            if (e.attached && e.attached.length > 0) {
                var r = { model: t, el: i, title: "按附件", data: e.attached, key: "name", type: "attached" };
                this.searchclassifyattach = new M2012.Mailbox.View.SearchClassifyItem(r), this.searchclassifyattach.render()
            }
            var l = this.model.get("selected");
            if (l) {
                var c = { model: t, el: i };
                this.searchclassifychoosed = new M2012.Mailbox.View.SearchClassifyChoosed(c), this.searchclassifychoosed.render()
            }
        },
        toggleSearchclassify: function (e) {
            var t = $(this.el).parent();
            t.hasClass("searchListoff") ? (t.removeClass("searchListoff"), $(e).attr("title", "隐藏分类搜索")) : (t.addClass("searchListoff"), $(e).attr("title", "展开分类搜索")), BH("top_searchToggle")
        }
    })
}),

//M2012.Mailbox.View.SearchClassifyItem
M139.namespace("M2012.Mailbox.View", {
    SearchClassifyItem: Backbone.View.extend({
        el: "",
        template: "",
        events: { "click #sureInputTime": "sureInputTime" },
        iconList: { from: "i-contactperson", fid: "i-foldersearch", during: "i-timelimit", attached: "i-annexsearch" },
        initialize: function (e) {
            this.el = e.el, this.model = e.model, this.title = e.title, this.data = e.data, this.key = e.key, this.type = e.type
        },
        renderContainer: function () {
            var e = this;
            e.itemListEl = $('<div class="searchFilterClass clearfix" type="' + e.type + '"></div>'), e.itemNameEl = $('<h2 class="searchFilterClassT clearfix">' + e.title + "</h2>"), "from" != e.type ? e.div = $('<div class="searchFilterClassL clearfix"><ul></ul></div>') : e.div = $(['<div class="searchFilterClassC clearfix"><ul></ul>', '<div class="displayall" id="searchFilterDisplayall" style="display:none;"><a href="javascript:;">显示全部</a></div>', '<div class="displayall" id="searchFilterCollapse" style="display:none;"><a href="javascript:;">显示部分</a></div>', "</div>"].join("")), e.itemListEl.append(e.itemNameEl), e.itemListEl.append(e.div);
            var t = e.data.length;
            if ($App.getConfig("searchDate") && $App.getConfig("searchDate").type && "during" == e.type) {
                var i = $App.getConfig("searchDate").type.split(",");
                switch (top.$App.registerConfig("searchDate", { type: 0 }), i[0]) {
                    case "D0":
                        for (var a = t - 1; a >= 0 && -1 == e.data[a].name.indexOf("天") ; a--) e.data.pop();
                        break;
                    case "W0":
                        for (var a = t - 1; a >= 0 && -1 == e.data[a].name.indexOf("周") ; a--) e.data.pop();
                        break;
                    case "M0":
                        for (var a = t - 1; a >= 0 && -1 == e.data[a].name.indexOf("月") ; a--) e.data.pop();
                        break;
                    case "Y0":
                        for (var a = t - 1; a >= 0 && -1 == e.data[a].name.indexOf("年") ; a--) e.data.pop()
                }
            }
            for (var a = 0; a < e.data.length; a++) "六月内" == e.data[a].name || "五年内" == e.data[a].name ? e.data.splice(a, 1) : "一天内" == e.data[a].name && (e.data[a].name = "三天内");
            $(e.itemListEl).append(e.dl), $(e.itemListEl).append(e.itemToggleEl), e.el.append(e.itemListEl), "top" == top.$App.getView("mailbox").model.get("layout") && $(".showall").click(function () {
                var e = $("#div_mail").height(), t = $("#div_searchclassify").height();
                t > e ? $("#div_mail").css({
                    "overflow-y": "auto",
                    height: e + "px"
                }) : $("#div_mail").attr("style", "").css("height", e + "px")
            }), e.itemListEl.click(function (t) {
                var i = /^[0-9]{4}-[0-9]{2}-[0-9]{2}/;
                if ($("#guideHTML").hide(), BH("searchResult_" + e.type), "during" == $(t.target).parents("div[type]").attr("type")) if ("Custom" == $(t.target).parents("li[type]").attr("type")) e.showTimeArea(); else {
                    if ("cancelInputTime" == $(t.target).parent().attr("id") || "cancelInputTime" == $(t.target).attr("id")) return void $(".calendar-month:visible").remove();
                    if ("sureInputTime" == $(t.target).parent().attr("id") || "sureInputTime" == $(t.target).attr("id")) return void $(".calendar-month:visible").remove();
                    if (i.test(t.target.innerText)) return;
                    if ("cancelInputTime" == t.target.id) return $("#guideHTML").hide(), $(".timeInput").hide(), $(".showTime").show(), $(t.target).parents("[type]").find("[current]").click(), void $(t.target).parents("[type]").find("[current]").click();
                    if ("start" == t.target.id || "end" == t.target.id) return;
                    t.target && e.changeSearchOptions(t, this)
                } else e.changeSearchOptions(t, this);
                $(t.target).parent().is("#searchFilterDisplayall") && (BH("searchResult_displayall"), $(t.target).parent().siblings("ul").find("li").show(), $(t.target).parent().hide(), $("#searchFilterCollapse").show()), $(t.target).parent().is("#searchFilterCollapse") && (BH("searchResult_collapse"), $(t.target).parent().siblings("ul").find("li").filter(function (e) {
                    return e > 7
                }).hide(), $(t.target).parent().hide(), $("#searchFilterDisplayall").show())
            })
        },
        showTimeArea: function () {
            var e = this, t = ['<div class="p_relative customtimeSearch">', '<p class="clearfix">', '<input class="ipt-text" style="width:70px;" type="text" id="start" name="" value="">', '<span class="until">至</span>', '<input class="ipt-text" style="width:70px;" id="end" type="text" name="" value="">', "</p>", '<p class="mt_10 clearfix">', '<a href="javascript:" id="sureInputTime" class="btnSure icoG"><span>确定</span></a>', '<a href="javascript:;" class="btnNormal icoTb"><span id="cancelInputTime">取消</span></a>', "</p>", '<div class="tips write-tips EmptyTips" style="position:absolute;left:0px;top:-45px;z-index:99999;width:146px;padding:5px;display:none;" id="guideHTML">', '<div class="tips-text EmptyTipsContent">开始日期不能晚于结束日期</div>', '<div class="tipsBottom diamond"></div>', "</div>", "</div>"].join("");
            if ($("div[type=during]").find("ul").hide().end().find(".searchFilterClassL").append(t), $("div[type=during]").find("#cancelInputTime").click(function () {
                $("div[type=during]").find(".customtimeSearch").remove().end().find("ul").show(), $(".calendar-month:visible").remove(), event.stopPropagation()
            }), top.$App.getConfig("searchDate") && top.$App.getConfig("searchDate").start && top.$App.getConfig("searchDate").end) {
                var i = top.$App.getConfig("searchDate"), a = i.start, s = i.end;
                $("div[type=during]").find("#start").val(a), $("div[type=during]").find("#end").val(s)
            } else {
                var o = new Date, a = (new Date).setFullYear(o.getFullYear() - 3);
                a = $Date.parse(a), $("div[type=during]").find("#start").val(a.format("yyyy-MM-dd")), $("div[type=during]").find("#end").val(o.format("yyyy-MM-dd"))
            }
            e.bindCalender("start"), e.bindCalender("end")
        },
        render: function (e) {
            e = e || {};
            var t = this;
            this.renderContainer();
            for (var i = "", a = [], s = "", o = "", n = 0, r = t.data.length; r > n; n++) {
                if (o = t.data[n], !o) return;
                (o.count > 0 || "自定义" == o.name) && (i = e.limit && n >= e.limit ? "none" : "", s = t.createItemEl(i, o), a.push(s))
            }
            this.div.find("ul").append(a.join("")), e.limit && n > e.limit + 2 && this.div.find("#searchFilterDisplayall").show()
        },
        bindCalender: function (e) {
            var t = this, i = $("div[type=during]").find("#" + e);
            t[e] = top.M2015.UI.Picker.Calendar.create({
                bindInput: i,
                dx: -142,
                value: $Date.parse(i.val() + " 00:00:00"),
                dateStart: $Date.parse($("div[type=during]").find("#start").val() + " 00:00:00").getTime() + "",
                dateEnd: $Date.parse($("div[type=during]").find("#end").val() + " 00:00:00").getTime() + ""
            }), t[e].on("select", function (e) {
                var a = e.value.format("yyyy-MM-dd");
                i.val(a), $Date.parse($("#start").val() + " 00:00:00").getTime() > $Date.parse($("#end").val() + " 00:00:00").getTime() ? ($("#guideHTML").show(), t.isAbove = !0) : ($("#guideHTML").hide(), t.isAbove = !1)
            }), i.click(function () {
                $("#guideHTML").hide()
            })
        },
        sureInputTime: function () {
            var e = this;
            if (!("during" != this.type || this.model.get("searchOptions").approachSearch && this.model.get("searchOptions").approachSearch.during)) {
                this.data[0].name;
                if (e.isAbove) return void $("#guideHTML").show();
                var t = e.model.get("selected");
                t || (t = {}), t.during = {
                    title: $("#start").val() + "至" + $("#end").val(),
                    count: Number.MAX_VALUE
                }, e.model.set("selected", t);
                var i = e.model.get("searchOptions");
                i.isSearch = 1, i.approachSearch || (i.approachSearch = {}), i.approachSearch.during = Math.round($Date.parse($("#start").val() + " 00:00:00") / 1e3), i.approachSearch.duringTo = Math.round($Date.parse($("#end").val() + " 23:59:59") / 1e3), top.$App.searchMail(i), BH("top_searchClassduring")
            }
        },
        createItemEl: function (e, t) {
            try {
                var i = "我的帐单" == t[this.key] ? "账单中心" : t[this.key], a = i + (t.count ? "(" + t.count + ")" : ""), s = "";
                if (s = a.length > 22 ? a.substr(0, 22) : a, "from" == this.type) {
                    var o = ['<li style="display:' + e + '">', '<a href="javascript:;" title="{title}({count})" count="{count}" type="{type}" val="{val}">', '<span class="face">', '<img src="{faceSrc}" alt="" onerror="$(this).attr(\'src\',\'../images/imgsrc/avatar22x22.png\')">', "</span>", '<span class="stext">{name}</span>', '<span class="total blue">({count})</span>', "</a>", "</li>"].join(""), n = top.Contacts.getContactsByEmail(t[this.key]);
                    n[0] || (n[0] = {}, n[0].ImageUrl = "../../images/imgsrc/avatar22x22.png", n[0].AddrFirstName = t[this.key].split("@")[0]), "https:" === location.protocol && (n[0].ImageUrl = n[0].ImageUrl.replace("https://image0.139cm.com/", "https://appmail.mail.10086.cn/images_139cm/"));
                    var r = $T.format(o, {
                        faceSrc: n[0].ImageUrl,
                        title: t[this.key],
                        count: t.count,
                        type: this.type,
                        name: $T.Html.encode(n[0].AddrFirstName) || t[this.key].split("@")[0],
                        val: t[this.type]
                    })
                } else if ("during" == this.type && "自定义" == t[this.key]) var r = ['<li type="Custom">', '<a href="javascript:;">', '<span class="stext">自定义</span>', '<span class="total blue"></span>', "</a>", "</li>"].join(""); else var o = ['<li style="display:' + e + '">', '<a href="javascript:;" title="{title}({count})" count="{count}" type="{type}" val="{val}">', '<span class="stext">{title}</span>', '<span class="total blue">({count})</span>', "</a>", "</li>"].join(""), r = $T.format(o, {
                    title: $T.Html.encode(t[this.key]),
                    count: t.count,
                    type: this.type,
                    val: t[this.type]
                });
                return r
            } catch (l) {
                return console.warn(l.toString()), M139.Logger.sendClientLog({
                    level: "ERROR",
                    name: "search classify",
                    errorMsg: l.toString()
                }), ""
            }
        },
        changeSearchOptions: function (e, t) {
            var i = e.target;
            if (i != t) {
                top.$App.getView("mailbox_other").model.set("showSearchclassify", !0);
                var a = $(i).parents("a");
                if (a.length) {
                    var s = a.attr("title"), o = a.attr("count"), n = a.attr("type"), r = a.attr("val");
                    if ("自定义" != s) {
                        var l = this.model.get("selected");
                        l || (l = {}), l[n] = {
                            title: s.replace(/\([0-9]*\)$/, ""),
                            count: o
                        }, this.model.set("selected", l)
                    }
                    var c = this.model.get("searchOptions");
                    if (c.isSearch = 0, c.approachSearch || (c.approachSearch = {}), "during" == n) {
                        if (r = this.getDuringVal(s), !r) return;
                        c.isSearch = 1, c.approachSearch.duringTo = Math.round((new Date).getTime() / 1e3)
                    }
                    c.approachSearch[n] = r, $App.searchMail(c), BH("top_searchClass" + n)
                }
            }
        },
        getDuringVal: function (e) {
            e = e.replace(/\([0-9]*\)/, "");
            var t = {
                "一天内": "D0,1",
                "三天内": "D0,3",
                "一周内": "W0,1",
                "一月内": "M0,1",
                "六月内": "M0,6",
                "一年内": "Y0,1",
                "五年内": "Y0,5",
                "自定义": "Z0"
            }, i = t[e].split(","), a = {
                D0: "click_data_three",
                W0: "click_data_week",
                M0: "click_data_month",
                Y0: "click_data_year",
                Z0: "click_data_own"
            };
            BH(a[i[0]]);
            var s = new Date(new Date);
            switch (i[0]) {
                case "D0":
                    s.setDate(s.getDate() - parseInt(i[1]));
                    break;
                case "W0":
                    s.setDate(s.getDate() - 7 * parseInt(i[1]));
                    break;
                case "M0":
                    s.setMonth(s.getMonth() - parseInt(i[1]));
                    break;
                case "Y0":
                    s.setFullYear(s.getFullYear() - parseInt(i[1]));
                    break;
                case "Z0":
                    return $(".timeInput").show(), $(".showTime").hide(), !1
            }
            return Math.round(s / 1e3)
        },
        toggleItemList: function (e) {
            var t = this;
            "close" == $(e).attr("current") ? (t.dl.find("dd:gt(1)").show(), $(e).attr("current", "open"), $(e).html('<span>只显示部分项</span><i class="g-up"></i>')) : (t.dl.find("dd:gt(1)").hide(), $(e).attr("current", "close"), $(e).html('<span>显示全部</span><i class="g-down"></i>'))
        }
    })
}),

//M2012.Mailbox.View.SearchClassifyChoosed
M139.namespace("M2012.Mailbox.View", {
    SearchClassifyChoosed: Backbone.View.extend({
        el: "", template: "", events: {}, initialize: function (e) {
            this.el = e.el, this.model = e.model
        }, renderContainer: function () {
        }, render: function () {
            var e = this;
            this.renderContainer();
            var t = this.model.get("selected");
            for (var i in t) {
                var a = e.createItemEl(i, t[i]);
                "from" == i ? $(e.el).find("div[type='" + i + "']").find("ul").remove().end().find(".searchFilterClassC").append(a) : $(e.el).find("div[type='" + i + "']").find("ul").remove().end().find(".searchFilterClassL").append(a)
            }
            e.addEvent()
        }, addEvent: function () {
            var e = this;
            $(e.el).find("a[rel]").click(function (t) {
                var i = $(t.target), a = i.attr("rel");
                return "" != a && e.cancel(a), !1
            })
        }, createItemEl: function (e, t) {
            if (t.count = this.model.get("searchStats").messageCount, "from" == e) {
                var i = ["<ul>", '<li class="hover" title="{title}" >', '<a href="javascript:;">', '<span class="face">', '<img src="{faceSrc}" alt=""  onerror="$(this).attr(\'src\',\'../images/imgsrc/avatar22x22.png\')">', "</span>", '<span class="stext">{name}</span>', '<span class="total blue">({count})</span></a>', '<a class="i-icoclose" title="取消" rel={type} href="javascript:;"></a></li>', "</ul>"].join(""), a = top.Contacts.getContactsByEmail(t.title);
                a[0] || (a[0] = {}, a[0].ImageUrl = "../images/imgsrc/avatar22x22.png", a[0].AddrFirstName = t.title.split("@")[0]), "https:" === location.protocol && (a[0].ImageUrl = a[0].ImageUrl.replace("https://image0.139cm.com/", "https://appmail.mail.10086.cn/images_139cm/"));
                var s = $T.format(i, {
                    faceSrc: a[0].ImageUrl,
                    title: t.title,
                    count: t.count,
                    type: e,
                    name: $T.Html.encode(a[0].AddrFirstName)
                })
            } else if (/[0-9]{4}-[0-9]{2}-[0-9]{2}/g.test(t.title)) var i = ["<ul>", '<li class="hover" title={title} style="width: 151px;">', '<a href="javascript:;">', '<span class="">{title}</span>', '<span class="total blue"></span></a>', '<a class="i-icoclose" title="取消" rel={type} href="javascript:;"></a></li>', "</ul>"].join(""), s = $T.format(i, {
                title: $T.Html.encode(t.title),
                count: t.count,
                type: e
            }); else var i = ["<ul>", '<li class="hover">', '<a href="javascript:;">', '<span class="stext">{title}</span>', '<span class="total blue">({count})</span></a>', '<a class="i-icoclose" title="取消" rel={type} href="javascript:;"></a></li>', "</ul>"].join(""), s = $T.format(i, {
                title: t.title,
                count: t.count,
                type: e
            });
            return s
        }, cancel: function (e) {
            var t = this.model.get("searchOptions"), i = t.approachSearch, a = this.model.get("selected");
            delete a[e], delete i[e], "during" == e && (top.BH("click_data_cancel"), top.$App.getConfig("searchDate") && (top.$App.getConfig("searchDate").start + "").length < 30 && top.$App.registerConfig("searchDate", { isSet: !0 })), this.model.set("selected", a), t.isSearch = 1, $App.searchMail(t)
        }, cancelAll: function () {
            var e = this.model.get("searchOptions");
            delete e.approachSearch, this.model.set("selected", null), e.isSearch = 1, $App.searchMail(e)
        }
    })
}),

//M2012.Mailbox.View.Command
M139.namespace("M2012.Mailbox.View", {
    Command: Backbone.View.extend({
        el: "",
        initialize: function (e) {
            this.model = e.model;
            var t = this;
            $App.on("mailCommand", function (e) {
                t.doCommand(e.command, e)
            })
        },
        createInstance: function (e) {
            return $App.getView("mailCommand") || $App.registerView("mailCommand", new M2012.Mailbox.View.Command(e)), $App.getView("mailCommand")
        },
        mailValidate: function (e, t) {
            var i = this;
            if ($App.isMailbox() && t.mids) {
                var a = $($App.getMailboxView().el);
                switch (t.command) {
                    case "tag":
                        return $(t.mids).each(function (e, i) {
                            var s = null, o = "left" == $App.getLayout() ? ".inboxWrapLeft_TagDiv" : ".TagDiv";
                            if (s = a.find("tr[mid=" + i + "]").find(o), s.find("[tagid=" + t.labelId + "]")[0]) return !0;
                            var n = M2012.Mailbox.View.MailTag.prototype.createInstance();
                            s.append(n.render([t.labelId]));
                            var r = $App.getMailDataByMid(i);
                            r.label.push(t.labelId)
                        }), !0;
                    case "mark":
                        if ("starFlag" == t.type) return $(t.mids).each(function (e, i) {
                            var s = a.find("tr[mid=" + i + "]").find("[name=list_starmail]");
                            0 == t.value ? ("1" != s.attr("taskflag") && s.removeClass("i_star_y").addClass("i_starM"), s.attr("starflag", 0)) : ("1" != s.attr("taskflag") && s.removeClass("i_starM").addClass("i_star_y"), s.attr("starflag", 1))
                        }), !0;
                        if ("read" == t.type) return $(t.mids).each(function (e, s) {
                            var o = a.find("tr[mid=" + s + "]");
                            0 == t.value ? (o.find("h3").removeClass(), o.find("[name=from]").removeClass("fw_b"), o.find("span[name=subject]").removeClass("fw_b"), i.switchReadOrUnreadIcon(o, 0)) : (o.find("h3").addClass("fw_b"), o.find("[name=from]").addClass("fw_b"), o.find("span[name=subject]").addClass("fw_b"), i.switchReadOrUnreadIcon(o, 1))
                        }), !1;
                        break;
                    case "emptyTag":
                        return $(t.mids).each(function (e, t) {
                            var i = "left" == $App.getLayout() ? ".inboxWrapLeft_TagDiv" : ".TagDiv", s = a.find("tr[mid=" + t + "]").find(i);
                            s.html("")
                        }), !0
                }
            }
        },
        switchReadOrUnreadIcon: function (e, t) {
            var i = {
                i_service_pink: "i_service_pinked",
                i_money_blue: "i_money_blueed",
                i_sound_yellow: "i_sound_yellowed",
                i_key_green: "i_key_greened",
                i_clock_pink: "i_clock_pinked",
                i_m_rss: "i_m_rssg",
                i_m_n: "i_m_o",
                i_m_o2h: "i_m_o2h",
                i_m_chui: "i_m_chui",
                i_m_yhf: "i_m_yhf",
                i_m_sd: "i_m_sd",
                i_m_d: "i_m_d",
                "i-transmited": "i-transmited",
                m139: "m139",
                i_m_secret: "i_m_secreted",
                "i-blueinvoicing": "i-grayinvoicing"
            }, a = {
                i_service_pinked: "i_service_pink",
                i_money_blueed: "i_money_blue",
                i_sound_yellowed: "i_sound_yellow",
                i_key_greened: "i_key_green",
                i_clock_pinked: "i_clock_pink",
                i_m_rssg: "i_m_rss",
                i_m_o: "i_m_n",
                i_m_o2h: "i_m_o2h",
                i_m_chui: "i_m_chui",
                i_m_yhf: "i_m_yhf",
                i_m_sd: "i_m_sd",
                i_m_d: "i_m_d",
                "i-transmited": "i-transmited",
                m139: "m139",
                i_m_secreted: "i_m_secret",
                "i-grayinvoicing": "i-blueinvoicing"
            }, s = e.find("i:first"), o = s[0].className;
            1 == t ? a[o] && s.removeClass().addClass(a[o]) : i[o] && s.removeClass().addClass(i[o])
        },
        doCommand: function (e, t) {
            function i() {
                var i = {
                    markAll: "mailbox_markUnread_ok",
                    deleteAll: "mailbox_deleteUnread_ok",
                    "delete": "mailbox_realDelete_ok",
                    spam: "mailbox_spam_ok"
                }, a = /readmail_/gi.test($App.getCurrentTab().name);
                return "move" == e && 4 == t.fid ? void (a ? BH("toolbar_deleteok") : t.resumeDel || BH("mailbox_delete_ok")) : void (i[e] && (a && "delete" == e ? BH("toolbar_realdeleteok") : BH(i[e])))
            }

            function a() {
                function a() {
                    $App.off("folderRendered", a), t.mids = c, t.sessionIds = d, m.mailValidate(e, t) || ($App.getCurrentTab().name.indexOf("readmail_") >= 0 ? ($App.trigger("mailboxDataChange"), $App.trigger("readmailControl", {
                        command: e,
                        args: t,
                        mids: c,
                        sessionIds: d
                    })) : ($App.trigger("readMaiDataChange", {
                        command: e,
                        args: t,
                        mids: c,
                        sessionIds: d
                    }), !s && $App.trigger("showMailbox", { comefrom: "commandCallback" })), $App.clearTabCache("mailsub_"))
                }

                var s = !1;
                if (M139.UI.TipMessage.hide(), V && setTimeout(function () {
                    M139.UI.TipMessage.show(V, { delay: 3e3 })
                }, 1e3), "mark" != t.command && "tag" != t.command && "emptyTag" != t.command, "mark" == t.command && "read" == t.type && 1 == t.value && "left" == $App.getLayout()) return s = !0, $App.trigger("reloadFolder", { reload: !0 }), void $App.on("folderRendered", a);
                f.view && f.view.superSelectAll("none");
                var o = function () {
                    var e = $App.getCurrMailMid(), i = $App.getView("currentMailMenu-" + e);
                    i && i.menuBtn && top.$RM.getMessageInfo([e], function (a) {
                        if (a && "S_OK" == a.code) {
                            var s = {};
                            s.flags = a["var"][0].flags;
                            var o = t.fid || $App.getCurrentFid(), n = f.getMarkMenuItems(!0, o, { mid: e, mail: s });
                            i.menuBtn.changeItems(n)
                        }
                    }), t.callback && t.callback()
                };
                if (o && o(), "delete" === e && U.length) {
                    var n = $App.getView("remind");
                    n && n.model.batchDelRemind({
                        midArr: U, actionType: 0, success: function () {
                            top.$App.trigger("refresh:calendar", { actionType: "mainviewdata" })
                        }
                    })
                }
                if (t.inCovMainbody) return void $App.trigger("reloadFolder", { reload: !0 });
                if ($App.isReadSessionMail() && "list" == $App.getLayout()) return "delete" == e || "move" == e && 4 == t.fid ? $App.trigger("delCovMails", { mids: c }) : "move" == e ? $App.trigger("moveCovMails", {
                    mids: c,
                    fid: t.fid
                }) : "mark" == e ? $App.trigger("markCovMails", {
                    mids: c,
                    type: t.type,
                    value: t.value
                }) : "tag" == e ? $App.trigger("tagCovMails", {
                    mids: c,
                    labelId: t.labelId
                }) : "emptyTag" == e ? $App.trigger("tagCovMails", {
                    mids: c,
                    type: "empty"
                }) : $App.getCurrentTab().view.covCon && "covMailSummaryList" == $App.getCurrentTab().view.covCon.attr("id") || $App.getCurrentTab().view.render(), void $App.trigger("reloadFolder", { reload: !0 });
                if ("singleSessionMail" == x) return void $App.trigger("reloadFolder", { reload: !0 });
                if ("spammail" == x && $Msg.alert("操作成功，邮件已被还原到收件箱中。"), "risktips_spam" == x && top.BH("readmail_complaintpropertysafesucc"), ("move" == e || "delete" == e || "spam" == e || "unSpam" == e || "refuseMail" == e) && (h.set("mid", null), $App.getCurrMailMid())) {
                    var r = $App.getCurrMailMid();
                    if ("list" == $App.getLayout()) if (1 == $App.getCustomAttrs("preference_delcallback")) {
                        var l = "readmail_" + r;
                        setTimeout(function () {
                            $App.closeTab(l)
                        }, 200)
                    } else $App.trigger("readNextMail", {
                        mid: r,
                        sessionIds: d
                    }); else 1 == $App.getCustomAttrs("preference_delcallback") ? $App.getCurrentTab().view.render() : $App.trigger("splitReadNextMail", {
                        mid: r,
                        sessionIds: d
                    })
                }
                if ($App.trigger("reloadFolder", { reload: !0 }), $App.on("folderRendered", a), "list" != $App.getLayout()) {
                    var p = $App.getCurrentView().model.get("mid"), u = $App.getCurrentView().model.get("lastReadmailFid");
                    p && $App.getCurrentView().model.set("mid", p), $App.trigger("refreshSplitView"), setTimeout(function () {
                        $App.getCurrentView().listView.readMailSplitView(p, u), $App.getCurrentView().listView.restorePosition()
                    }, 1e3)
                }
                i(), h.set("crossPageSelect", !1)
            }

            function s(e) {
                var t = e.mids || [], i = e.sendIds || [], s = e.sendFlag || [], o = e.delBackup || 0, n = D && "sessionmail" === C ? e.sessionIds : "";
                7 == H ? f.physicallyDelete({
                    mids: t,
                    sessionIds: "",
                    sendIds: "",
                    value: 1
                }, a) : e.clusterMail ? f.deleteSessionMail({
                    sessionIds: n,
                    mids: t,
                    sendIds: i,
                    delBackup: o
                }, a) : f.deleteMail({ mids: t, sendIds: i, sendFlag: s, delBackup: o }, a)
            }

            function o() {
                M139.UI.TipMessage.show(P), !t.type && h.get("isSearchMode") && (t.type = "search");
                var e = h.markAllRead(t.fid, t.type, a);
                e || M139.UI.TipMessage.hide()
            }

            function n() {
                var e = X;
                Package.require("mailbox_ext", function () {
                    var t = e;
                    (new M2012.Mailbox.Model.Export).exportMail(c, function () {
                        t.find("#btn_leadShow").remove(), t.find(".createReType").show()
                    })
                })
            }

            function r(e, t) {
                var i = parseInt(e.totalNum - e.errNum) + (t ? parseInt(t) : 0);
                if (f_num = parseInt(e.errNum), f_mids = e.errMailIdList, backupDirId = e.backupDirId, 0 == f_num) 1 == i ? M139.UI.TipMessage.show('备份成功  <a href="javascript:;" onclick=\'top.Links.show("diskDev","&id=' + backupDirId + "\",true);return false;'>去查看</a>", { delay: 3e3 }) : i > 1 && M139.UI.TipMessage.show("备份成功" + i + '封邮件 <a href="javascript:;" onclick=\'top.Links.show("diskDev","&id=' + backupDirId + "\",true);return false;'>去查看</a>", { delay: 3e3 }); else if (f_num > 0) {
                    var a = "由于网络原因，邮件备份失败，请重试？", s = "备份成功" + i + "封，备份失败" + f_num + "封，是否继续备份？";
                    $Msg.confirm(i + f_num == 1 ? a : s, function () {
                        f.backupMail(f_mids, function (e) {
                            var e = e.responseData;
                            "S_OK" == e.code ? r(e["var"], i) : $Msg.alert("由于网络原因，邮件备份失败，请稍后再试！")
                        })
                    }, { icon: "warn", isHtml: !0, dialogTitle: "邮件备份" })
                }
            }

            function l() {
                var e = !0;
                return c && 0 != c.length || (e = !1), "singleSessionMail" == x && (e = !0), e ? !0 : (M139.UI.TipMessage.show("请选择邮件", { delay: 1e3 }), !1)
            }

            t || (t = {});
            var c, d, p, m = this, u = $App.getView("folder").model, h = $App.getMailboxView().model, f = h, g = h.get("fid"), v = "left" == $App.getLayout(), b = h.get("mid"), y = $App.isSessionMode(), w = this.getSelectedMail(), M = h.superSelectResult || {}, C = t.mailtype || "", x = t.comefrom || "";
            c = t && t.mids ? t.mids : w.mids, d = t && t.sessionIds ? t.sessionIds : w.sids;
            var k = [], T = [], A = [], I = "", S = !1, D = !1, B = ["move", "delete", "mark", "reply", "forward"];
            if (-1 != $.inArray(e, B) && v && b) {
                c = t.mids || [b];
                var L = h.getMailById(b).mailSession;
                d = [L] || []
            }
            if ("reply" == e && $App.isSessionMode() && (!c || c.length > 1)) {
                var E = "请选择一封邮件进行操作";
                return M139.UI.TipMessage.show(E, { colour: "msgRed", prior: !0, delay: 3e3 }), !1
            }
            var U = [];
            if (c) for (var F = 0, j = c.length; j > F; F++) {
                var N = c[F], R = M[N] || h.getMailById(c[F]);
                if ("mark" == e && "top" == t.type && h.isSubscriptionMail(R)) {
                    var E = "您选择了聚合的邮件，它不能进行置顶。";
                    return M139.UI.TipMessage.show(E, { color: "msgRed", prior: !0, delay: 3e3 }), !1
                }
                R && ((R.taskDate || 2 == R.flags.taskFlag) && U.push(N), h.isClusterMail(N) ? (S = !0, I = h.isClusterColumn() || h.isClusterList() ? "" : 1, k.push(R.sendId), T.push(N)) : A.push(R.mailSession))
            }
            y && (c || d) && $App.isSessionCommand(e) && "singleSessionMail" != x && 7 != g && (C = "sessionmail", "move" !== e && "delete" !== e || c && $.each(c, function (e, t) {
                var i = c ? h.getMailById(t) : M[t];
                i && i.mailNum > 1 && (D = !0)
            })), "sessionmail" == C && 0 == T.length && 0 == A.length && (A = d), mailboxComplaintView.model.set({
                mailtype: C,
                comefrom: x,
                ids: c,
                sessionIds: d,
                commandCallback: a
            });
            var P = "正在操作中...", V = "";
            switch (e) {
                case "delete":
                    if (l()) {
                        var O = null, H = top.$App.getCurrentFid();
                        P = "正在删除邮件...", V = 7 == H ? "所选邮件已删除！" : "所选邮件已彻底删除! <a href='javascript:top.$App.show(\"selfSearch\", { type: 2 });'>删信记录</a>", confirmMessage = 7 == H ? "删除记录后，误删除恢复将无法为您找回记录，确定删除？" : "邮件彻底删除后将不再为您保存，确定要删除吗？（使用误删除恢复功能，2元/30天）", O = $Msg.confirm(confirmMessage, function () {
                            var e = !$App.isReadSessionMail() && (D && "sessionmail" === C || h.isSubscriptionMail(R) && S || S), t = 0;
                            M139.UI.TipMessage.show(P), s({
                                mids: c,
                                sendIds: k,
                                sendFlag: I,
                                sessionIds: d,
                                clusterMail: e,
                                delBackup: t
                            }), BH("sure_thorough_delete")
                        }, function () {
                            BH("cencel_thorough_delete")
                        }, {
                            dialogTitle: ["彻底删除邮件", "永久删除邮件"][Number(7 == H)],
                            icon: "warn",
                            isHtml: !0,
                            buttons: [["彻底删除", "永久删除"][Number(7 == H)], "取消"]
                        }), O.setButtonClass(0, "btnRed icoDel")
                    }
                    break;
                case "mark":
                    if (l()) {
                        if (P = "正在标记邮件...", V = "mailToolbar" == t.from ? 1 == t.value ? "邮件置顶成功" : "邮件取消置顶成功" : "所选邮件标记成功", "starFlag" == t.type && 0 == t.value && (V = "取消星标成功"), M139.UI.TipMessage.show(P), "taskFlag" == t.type) return "sessionmail" == C && (t.sessionIds = A), void f.setTask(c, t, a);
                        "sessionmail" != C || $App.isReadSessionMail() ? f.markMail(c, t, a) : f.markSessionMail({
                            mids: c,
                            sessionIds: A
                        }, t, a)
                    }
                    break;
                case "move":
                    if (-1 == t.fid || l()) {
                        if (-1 == t.fid) return void this.doCommand("addFolder", { mid: c });
                        if (11 == t.fid) {
                            var z = ['<dl class="norTipsContent">', '<dt class="norTipsLine formLine"><strong>您所选择的邮件将被移动到广告文件夹</strong></dt>', '<dd class="formLine"><input type="checkbox" id="checkbox"> 将发件人的邮件都移入广告文件夹</dd>', "</dl>"].join("");
                            BH("move_to_ad_click");
                            var O = $Msg.confirm(z, function () {
                                BH("move_to_ad_sure");
                                var e = $(O.el).find("#checkbox:checked");
                                if (e.prop("checked")) {
                                    BH("move_to_ad_addlist");
                                    for (var i = [], s = 0; s < c.length; s++) if ($App.getMailDataByMid(c[s])) {
                                        var o = $App.getMailDataByMid(c[s]).from;
                                        i[s] = o.match(/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,8}/i)[0]
                                    } else {
                                        var o = "";
                                        i[s] = o
                                    }
                                    if (i.length > 0) {
                                        var n = { opType: 4, newFid: 11, needFilterHistoryMail: 1, list: _.unique(i) };
                                        S && h.isSubscriptionMail(R) || "sessionmail" == C && !$App.isReadSessionMail() || !(R && 1000011 != R.sendId && (R.sendId < 1010001 || R.sendId > 1010100) || R && R.sendTotalNum < 2) ? d ? n.sessionIds = d : n.ids = c : (M139.UI.TipMessage.show(P), n.ids = c), top.M139.RichMail.API.call("mbox:reportSpamMails", n, function (e) {
                                            e.responseData && "S_OK" == e.responseData.code ? (V = "所选邮件移动成功  <a href='javascript:$App.showMailbox(11)'>查看</a>", a()) : M139.UI.TipMessage.show("网络异常", {
                                                colour: "msgRed",
                                                delay: 3e3
                                            })
                                        })
                                    }
                                } else S && h.isSubscriptionMail(R) || "sessionmail" == C && !$App.isReadSessionMail() ? d ? f.moveSessionMail(d, t.fid, a) : f.moveMail({
                                    mids: c,
                                    sendIds: k,
                                    sendFlag: ""
                                }, t.fid, a) : (M139.UI.TipMessage.show(P), f.moveMail({
                                    mids: c,
                                    sendIds: k,
                                    sendFlag: ""
                                }, t.fid, a)), V = "所选邮件移动成功  <a href='javascript:$App.showMailbox(11)'>查看</a>"
                            }, function () {
                                BH("move_to_ad_cancel")
                            }, { dialogTitle: "温馨提示", icon: "warn", isHtml: !0 });
                            return void O.$el.find(".CloseButton").attr("bh", "move_to_ad_close")
                        }
                        P = "正在转移邮件...", V = "所选邮件移动成功";
                        var G = $App.getMailboxView().model;
                        0 === parseInt(G.get("billTab"), 10) && 1 === t.fid && (V = "您选择了的邮件已经在收件箱"), 4 == t.fid && (P = "正在删除邮件...", V = "所选邮件已删除"), 7 == top.$App.getCurrentFid() && (top.BH("delresume_resumesucc"), P = "正在恢复邮件...", V = "邮件已恢复 <a href='javascript:top.$App.showMailbox(" + t.fid + ");'>查看</a>");
                        var q = R && (1000011 == R.sendId || 1000006 == R.sendId || R.sendId >= 1010001 && R.sendId <= 102e4) && this.model.isClusterMail(R.mid);
                        if (S && h.isSubscriptionMail(R) || "sessionmail" == C && !$App.isReadSessionMail() || q) if (4 !== t.fid) d ? f.moveSessionMail(d, t.fid, a) : f.moveMail({
                            mids: c,
                            sendIds: k,
                            sendFlag: I
                        }, t.fid, a); else {
                            var W = $App.getCustomAttrs("sesdeltips");
                            if (D && "welcome" !== t.comefrom || h.isSubscriptionMail(R) && S || S && !W) {
                                var O = $Msg.confirm("选择的邮件中包含多封邮件，是否删除？", function () {
                                    M139.UI.TipMessage.show(P), D ? f.moveSessionMail(d, t.fid, a) : f.moveMail({
                                        mids: c,
                                        sendIds: k,
                                        sendFlag: ""
                                    }, t.fid, a), BH("sure_delete"), $("#nodeltips:checked")[0] && $App.setCustomAttrs("sesdeltips", "1")
                                }, function () {
                                    BH("cencel_delete")
                                }, { title: "", dialogTitle: "删除邮件", icon: "warn", buttons: ["删除", "取消"] });
                                $(".btnSure") && $(".btnSure").addClass("icoDel").removeClass("icoG").removeClass("btnSure"), $("a.CancelButton") && $("a.CancelButton").attr("bh", "cencel_delete"), $("a.CloseButton") && $("a.CloseButton").attr("bh", "cencel_delete")
                            } else d ? f.moveSessionMail(d, t.fid, a) : f.moveMail({
                                mids: c,
                                sendIds: k,
                                sendFlag: ""
                            }, t.fid, a)
                        } else M139.UI.TipMessage.show(P), D ? f.moveSessionMail(A, t.fid, a) : f.moveMail({
                            mids: c,
                            sendIds: k,
                            sendFlag: ""
                        }, t.fid, a)
                    }
                    S && BH(h.isClusterColumn() ? "deleteormove_cluster_columnlist" : "deleteormove_cluster_mailbox");
                    break;
                case "reEdit":
                    l() && (c.length > 1 ? M139.UI.TipMessage.warn("请选择一封邮件进行操作") : $App.editMessage(c[0]));
                    break;
                case "tag":
                    if (-1 == t.labelId || l()) {
                        if (c && d && $App.getCurrentTab().name.indexOf("readmail_") > -1) {
                            var K = this.getSessionTagsCount(c[0]);
                            if (K >= 10) return void $Msg.alert("标签数量已经超过上限!");
                            p = this.getSessionTagsMids(c[0]), p.length > c.length && (c = p)
                        }
                        if (-1 == t.labelId) return void this.doCommand("addTag", { mid: c });
                        P = "正在给邮件打标签...", V = "所选邮件标记成功", M139.UI.TipMessage.show(P), BH("toolbar_tag"), f.addSpecialTagBehavior(t.labelId, "specialtag_mark"), f.addTagForMail(c, t.labelId, a)
                    }
                    break;
                case "emptyTag":
                    l() && (c && d && $App.getCurrentTab().name.indexOf("readmail_") > -1 && (p = this.getSessionTagsMids(c[0]), p.length > c.length && (c = p), $.each(c, function (e, t) {
                        $("#covMail_summary_" + t).find("[name=tag_item]").remove(), $("#covcur_" + t).find("[name=tag_item]").remove();
                        var i = h.getMailById(t);
                        i && i.label && (i.label = [])
                    })), P = "正在取消邮件标签...", V = "取消标签成功", M139.UI.TipMessage.show(P), f.emptyTagForMail(c, a));
                    break;
                case "reduceTag":
                    l() && (c && d && $App.getCurrentTab().name.indexOf("readmail_") > -1 && (p = this.getSessionTagsMids(c[0]), p.length > c.length && (c = p)), P = "正在删除邮件标签...", V = "取消标签成功", M139.UI.TipMessage.show(P), f.removeTagForMail(c, t.labelId, a));
                    break;
                case "sort":
                    if (P = "正在排序邮件...", M139.UI.TipMessage.show(P), f.set("order", t.order), f.set("desc", t.desc), h.get("isSearchMode")) {
                        var J = h.get("searchOptions");
                        J.order = t.order, J.desc = t.desc, h.set("searchOptions", J)
                    }
                    a();
                    break;
                case "spam":
                    if (l()) mailboxComplaintView.mailComplaint(); else {
                        var Q = $App.getCurrentTab().element, X = $(Q).find("#inboxHeader");
                        0 == X.find("#btn_leadShow").length ? (X.find(".createReType").hide(), X.append('<span id="btn_leadShow">，<a href="javascript:;" bh="">举报所选邮件</a></span>')) : X.find("#btn_leadShow a").text("举报所选邮件"), X.find("#btn_leadShow a").off("click").on("click", function () {
                            top.BH("spamMail"), $App.trigger("mailCommand", { command: "spam" })
                        })
                    }
                    break;
                case "unSpam":
                    l() && mailboxComplaintView.notRubbishMail();
                    break;
                case "unAdMail":
                    if (l()) {
                        BH("not_ad_click"), V = "所选邮件已经移动到收件箱";
                        var z = ['<dl class="norTipsContent">', '<dt class="norTipsLine formLine"><strong>您所选择的邮件将被移动到收件箱</strong></dt>', '<dd class="formLine"><input type="checkbox" id="checkbox"> 将广告文件夹中选中发件人的所有邮件移入收件箱</dd>', "</dl>"].join(""), O = $Msg.confirm(z, function () {
                            BH("not_ad_sure");
                            var e = $(O.el).find("#checkbox:checked");
                            if (e.prop("checked")) {
                                BH("not_ad_addlist");
                                for (var t = [], i = 0; i < c.length; i++) if ($App.getMailDataByMid(c[i])) {
                                    var s = $App.getMailDataByMid(c[i]).from;
                                    t[i] = s.match(/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,8}/i)[0]
                                } else {
                                    var s = "";
                                    t[i] = s
                                }
                                if (t.length > 0) {
                                    var o = {
                                        opType: 5,
                                        newFid: 1,
                                        listType: 3,
                                        needFilterHistoryMail: 1,
                                        list: _.unique(t)
                                    };
                                    S && h.isSubscriptionMail(R) || "sessionmail" == C && !$App.isReadSessionMail() ? d ? o.sessionIds = d : o.ids = c : (M139.UI.TipMessage.show(P), o.ids = c), top.M139.RichMail.API.call("mbox:reportSpamMails", o, function (e) {
                                        e.responseData && "S_OK" == e.responseData.code ? a() : M139.UI.TipMessage.show("网络异常", {
                                            colour: "msgRed",
                                            delay: 3e3
                                        })
                                    })
                                }
                            } else {
                                for (var t = [], i = 0; i < c.length; i++) {
                                    var s = $App.getMailDataByMid(c[i]).from;
                                    t[i] = s.match(/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,8}/i)[0]
                                }
                                if (t.length > 0) {
                                    var o = { opType: 5, newFid: 1, listType: 3, list: _.unique(t) };
                                    S && h.isSubscriptionMail(R) || "sessionmail" == C && !$App.isReadSessionMail() ? d ? o.sessionIds = d : o.ids = c : (M139.UI.TipMessage.show(P), o.ids = c), top.M139.RichMail.API.call("mbox:reportSpamMails", o, function (e) {
                                        e.responseData && "S_OK" == e.responseData.code ? a() : M139.UI.TipMessage.show("网络异常", {
                                            colour: "msgRed",
                                            delay: 3e3
                                        })
                                    })
                                }
                            }
                        }, function () {
                            BH("not_ad_cancel")
                        }, { dialogTitle: "这不是广告邮件", icon: "warn", isHtml: !0 });
                        return void O.$el.find(".CloseButton").attr("bh", "not_ad_close")
                    }
                    break;
                case "refuseMail":
                    top.BH("reject");
                    var Y = t.email;
                    Y && mailboxComplaintView.isAllowRefuseEmailaddr(Y) && (mailboxComplaintView.model.set({ from: Y }), mailboxComplaintView.spamMail());
                    break;
                case "markAll":
                    P = "正在标记邮件...", V = "所选邮件标记成功", t.showMsg ? $Msg.confirm("是否将所有未读邮件标记为已读？", function () {
                        o()
                    }) : o();
                    break;
                case "deleteAll":
                    P = "正在删除邮件...", V = "所选邮件已删除", $Msg.confirm("确实要删除这" + h.getFolderInfo().stats.unreadMessageCount + "封邮件吗？", function () {
                        M139.UI.TipMessage.show(P), h.deleteAllUnread(t.fid, a)
                    });
                    break;
                case "deleteAllOrdinary":
                    h.deleteAllOrdinary();
                    break;
                case "open":
                    $App.showMailbox(Number(t.fid));
                    break;
                case "reply":
                    var N, Z = $App.getCurrentTab();
                    if (c && c.length > 0 ? N = c[0] : $App.isSessionMode() || (N = h.get("mid")), !N) return M139.UI.TipMessage.show("请选择邮件", { delay: 1e3 }), !1;
                    var ee = {
                        mid: N,
                        type: t.all ? "replyAll" : "reply",
                        withAttach: t.attach,
                        userAccount: top.$User.getDefaultSender(),
                        lastTabName: Z.name
                    };
                    t.email && (ee.userAccount = t.email);
                    var te = $App.isReadMail(), ie = $App.isReadSessionMail();
                    $App.show("compose", ee), te && !ie && $App.getView("tabpage").replace(Z.name, $App.getCurrentTab().name);
                    break;
                case "forward":
                    var N;
                    $App.isReadSessionMail() || (N = h.get("mid")), c && c.length > 0 && (N = c[0]);
                    var ae = "";
                    if (!N) {
                        if (!c || 0 == c.length) return M139.UI.TipMessage.show("请选择邮件", { delay: 1e3 }), !1;
                        c.length > 1 ? (ae = h.getMailById(c[0]).subject, t.attach = !0, N = c) : N = c[0]
                    }
                    c && c.length > 1 && (ae = "", t.attach = !0, N = c);
                    var se = {};
                    if (t.email && (se.userAccount = t.email), t.attach) $App.forwardAsAttach(N, ae, se); else {
                        var oe = top.$App.getMailDataByMid(N);
                        oe && oe.largeAttach ? this.handlerLargeAttach(N, function () {
                            $App.forward(N, se, t)
                        }) : $App.forward(N, se, t)
                    }
                    break;
                case "showTraffic":
                    t.email.isContactsMail = !0, $App.searchMail(t.email, t.thisEmail, t.isContactsMail);
                    break;
                case "addVip":
                    Contacts.addVIPContact(function () {
                        top.BH("addressBook_click_saveVipContactBtn"), $App.close("vipEmpty"), $App.searchVip()
                    });
                    break;
                case "viewMail":
                    var J = { fid: t.fid, flags: t.flags };
                    if ("important" == t.flags) J = {
                        fid: t.fid,
                        condictions: [{ field: "priority", operator: "", value: "1" }]
                    }; else if ("all" == t.flags) return J = $App.getMailboxView() && $App.getMailboxView().model.get("searchOptions"), void $App.showMailbox(J.fid || 1);
                    if (h.get("isSearchMode")) {
                        t && t.inherit && (J = h.get("searchOptions"));
                        var ne;
                        t && t.flags && "undefined" != typeof t.flags.read && (ne = t.flags.read), J.flags ? J.flags.read = ne : J.flags = { read: ne }, J.approachSearch && (J.approachSearch.read = ne)
                    }
                    t.label && (J.label = t.label), $App.searchMail(J);
                    break;
                case "viewUnread":
                    var J = { fid: t.fid, flags: { read: 1 } };
                    h.get("isSearchMode") && (t && t.inherit && (J = h.get("searchOptions")), J.flags ? J.flags.read = 1 : J.flags = { read: 1 }, J.approachSearch && (J.approachSearch.read = 1)), t.label && (J.label = t.label), t.hasClickUnreadLink && (J.hasClickUnreadLink = t.hasClickUnreadLink), $App.searchMail(J);
                    break;
                case "viewUnreadVip":
                    var Y = $App.getMailboxView().model.getVipEmails();
                    if (Y) {
                        var re = {
                            isVip: !0,
                            isFullSearch: 2,
                            flags: { read: 1 },
                            condictions: [{ field: "from", operator: "contains", value: Y.join(";") }]
                        };
                        $App.searchMail(re)
                    } else $App.show("vipEmpty"), $App.close("mailsub_0");
                    break;
                case "viewUnreadBill":
                    $App.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 2,
                        flags: { billFlag: 1, read: 1 },
                        condictions: [{ field: "logoType", operator: "GE", value: 0 }, {
                            field: "logoType",
                            operator: "LT",
                            value: 2
                        }, { field: "logoType2", operator: "GE", value: 110 }, {
                            field: "logoType2",
                            operator: "LE",
                            value: 113
                        }]
                    });
                    break;
                case "viewUnreadSubscribe":
                    $App.searchMail({
                        fid: 1,
                        exceptFids: [4],
                        isFullSearch: 0,
                        flags: { subscriptionFlag: 1, read: 1 },
                        sessionEnable: 2,
                        condictions: [{ field: "sendId", value: 0, operator: "GT" }, {
                            field: "sendId",
                            value: "9223372036854775807",
                            operator: "LT"
                        }]
                    });
                    break;
                case "viewUnreadRemind":
                    $App.searchMail({ order: "taskDate", desc: 0, flags: { taskFlag: 1, read: 1 } });
                    break;
                case "viewUnreadContactMails":
                    var J = h.get("searchOptions");
                    top.$App.getView("mailbox_other").model.set("IamFromLaiwang", !0), top.$App.getView("mailbox_other").model.set("UnReadIamFromLaiwang", !1), J.flags && delete J.flags, $App.searchMail(J);
                    break;
                case "viewReply":
                    $App.searchMail({ fid: t.fid, flags: { replied: 1 } });
                    break;
                case "unfold":
                    $App.trigger("unfoldCommand", { type: t.type });
                    break;
                case "addFolder":
                    Package.require("main_ext", function () {
                        new M2012.Folder.View.AddFolder({
                            model: u,
                            email: t.email,
                            comefrom: t.comefrom,
                            mid: t.mid,
                            cancelShowDialog: t.cancelShowDialog
                        }).render()
                    });
                    break;
                case "addTag":
                    Package.require("main_ext", function () {
                        new M2012.Folder.View.AddTag({
                            model: u,
                            email: t.email,
                            comefrom: t.comefrom,
                            mid: t.mid,
                            cancelShowDialog: t.cancelShowDialog
                        }).render()
                    });
                    break;
                case "deleteFolder":
                    BH("set_foldermanager_custom_del"), Package.require("main_ext", function () {
                        new M2012.Folder.View.deleteFolder({ fid: t.fid }).render()
                    });
                    break;
                case "deleteTag":
                    BH("set_foldermanagers_tag_del"), Package.require("main_ext", function () {
                        new M2012.Folder.View.deleteTag({ fid: t.fid }).render()
                    });
                    break;
                case "filter":
                    var le = { fid: t.fid || null };
                    $App.isTagFolder(t.fid) && (le = { labelId: t.fid }), $App.show("createType", le);
                    break;
                case "folderManage":
                    $App.show("tags"), $.browser.msie && 6 == $.browser.version && M139.Event.stopEvent();
                    break;
                case "popfolderManage":
                    $App.show("popmail"), $.browser.msie && 6 == $.browser.version && M139.Event.stopEvent();
                    break;
                case "inboxSub":
                    u.setInboxSub(t.fid, t.type);
                    break;
                case "showStar":
                    $App.searchMail({ flags: { starFlag: 1 } });
                    break;
                case "showVip":
                    $App.searchVip();
                    break;
                case "showSubscribe":
                    $App.showSubscribe();
                    break;
                case "showRemind":
                    top.appView.searchTaskmail();
                    break;
                case "showMyApp":
                    t.el.target.click();
                    break;
                case "hideApp":
                    BH("hideMyApp_by_menu");
                    var ce = new M2012.Myapp.View;
                    ce.hideMyApp($(t.el.target).attr("key"));
                    break;
                case "autoFilter":
                    var Y = t.email || "", de = t.name || "";
                    Package.require("main_ext", function () {
                        new M2012.Folder.View.AutoFilter({ model: u, actionType: "folder", email: Y, name: de }).render()
                    });
                    break;
                case "autoFilterTag":
                    Package.require("main_ext", function () {
                        new M2012.Folder.View.AutoFilter({
                            model: u,
                            actionType: "tag",
                            email: t.email,
                            name: t.name
                        }).render()
                    });
                    break;
                case "reNameFolder":
                    BH("set_foldermanager_custom_rename"), Package.require("main_ext", function () {
                        new M2012.Folder.View.reNameFolder({ fid: t.fid, type: 0 }).render()
                    });
                    break;
                case "reNameTag":
                    BH("set_foldermanagers_tag_rename"), Package.require("main_ext", function () {
                        new M2012.Folder.View.reNameFolder({ fid: t.fid, type: 1 }).render()
                    });
                    break;
                case "shortcutKey":
                    var pe = t.currEvent || {}, me = t.win || top.window, ue = pe.srcElement || pe.target || {}, he = M139.Event.KEYCODE, fe = $App.getCurrentTab().name, ge = pe.shiftKey || !1, ve = pe.ctrlKey || !1, be = pe.altKey || !1, ye = pe.keyCode || "", we = {
                        helpKey: ge && ye == he.LEFTSLASH,
                        openShortcut: !$App.getCustomAttrs("shutShortcutKey"),
                        isInput: ue.tagName && /input|textarea/i.test(ue.tagName),
                        isEdit: me && me.location.href.indexOf("blank.htm") > -1,
                        composePage: fe.indexOf("compose") >= 0,
                        needRequJs: !1
                    };
                    if (we.openShortcut) if ((ve || be) && we.composePage) {
                        var _e = [he.S, he.ENTER, he.V];
                        $.inArray(ye, _e) && (we.needRequJs = !0)
                    } else we.isInput || we.isEdit || (we.needRequJs = !0); else we.helpKey && (we.needRequJs = !0);
                    if (!we.needRequJs) return;
                    Package.require("shortcut_key", function () {
                        new M2012.ShortcutKey({ currEvent: pe, win: me })
                    });
                    break;
                case "pop":
                    var re = {};
                    if (t && t.fid) {
                        var Me = $App.getFolderById(t.fid);
                        re.id = Me.popId
                    }
                    V = "已向服务器提交代收命令，请稍后检查您的代收文件夹", h.syncPOPAccount(re, function () {
                        a()
                    });
                    break;
                case "addPop":
                    top.$App.showAddPopAccountDialog();
                    break;
                case "clear":
                    var Ce = 9 == t.fid ? "订阅邮件" : $App.getFolderById(t.fid).name;
                    $Msg.confirm("您确定要清空" + Ce + "的邮件吗?", function () {
                        u.clearFolder(t.fid, function () {
                            h.get("fid") == t.fid && (t.noCloseApp || $App.close()), a()
                        })
                    }, { title: "清空文件夹", icon: "warn" });
                    break;
                case "newWindow":
                    var g = h.getFolderInfo().fid;
                    $App.openNewWin(c);
                    break;
                case "jump":
                    $App.jumpTo(t.key);
                    break;
                case "show":
                    $App.show(t.key);
                    break;
                case "importMail":
                    $App.registerView("importMailDialog", $Msg.open({
                        url: "importmail.html",
                        dialogTitle: "导入邮件",
                        height: 165,
                        name: "importmaildialog"
                    }));
                    break;
                case "exportMail":
                    var Q = $App.getCurrentTab().element, X = $(Q).find("#inboxHeader");
                    l() ? "1" === $App.getUserCustomInfo("26") ? n(c) : $Msg.confirm([c.length > 1 ? "<p>导出的文件为压缩文件，请解压后使用。</p>" : "", "<p>建议安装Foxmail、Outlook邮件客户端查看eml 邮件。</p>", '<div style="margin-top:10px;"><input type="checkbox" id="exportmail_tips_checkbox" /><strong style="position:relative;top:1px;padding-left:3px;">不再提示</strong></div>'].join(""), function () {
                        document.getElementById("exportmail_tips_checkbox").checked && $App.setUserCustomInfo("26", "1"), n(c)
                    }, {
                        icon: "warn",
                        buttons: ["导出邮件", "取消"],
                        isHtml: !0,
                        dialogTitle: "导出邮件"
                    }) : (0 == X.find("#btn_leadShow").length ? (X.find(".createReType").hide(), X.append('<span id="btn_leadShow">，<a href="javascript:" bh="">导出所选邮件</a></span>')) : X.find("#btn_leadShow a").text("导出所选邮件"), X.find("#btn_leadShow a").off("click").on("click", function () {
                        top.BH("loadSelectMail"), $App.trigger("mailCommand", { command: "exportMail" })
                    }));
                    break;
                case "covtoggle":
                    $App.trigger("conversationToggle", {
                        sessionId: t.mailSession,
                        doAction: t.doAction,
                        callBack: t.callBack
                    });
                    break;
                case "backupMail":
                    if (l()) {
                        var xe = "服务邮件" == $App.getCurrentTab().title ? 1 : "";
                        $Msg.confirm("您选择的邮件将会备份到“彩云网盘”中，是否确定备份?", function () {
                            return c.length > 100 ? void M139.UI.TipMessage.show("备份失败，单次备份不能超出100封", {
                                className: "msgRed",
                                delay: 3e3
                            }) : void f.backupMail(c, xe, function (e) {
                                var e = e.responseData;
                                if (e && "S_OK" == e.code) {
                                    r(e["var"]), t && t.callback && t.callback(), $App.getCurrentTab().view.onNoteOrDevSave && $App.getCurrentTab().view.onNoteOrDevSave("bakDisk"), BH("toolbar_backupMailSucess");
                                    var i = top.$App.getCurrentTab().element;
                                    $(i).find("#inboxHeader").find("#btn_leadShow").remove(), $(i).find("#inboxHeader").find(".createReType").show()
                                } else $Msg.alert("由于网络原因，邮件备份失败，请稍后再试！")
                            })
                        }, { icon: "warn", isHtml: !0, dialogTitle: "邮件备份", height: "50px", width: "485px" })
                    } else {
                        var Q = $App.getCurrentTab().element, X = $(Q).find("#inboxHeader");
                        0 == X.find("#btn_leadShow").length ? (X.find(".createReType").hide(), X.append('<span id="btn_leadShow">，<a href="javascript:" bh="">备份至彩云网盘</a></span>')) : X.find("#btn_leadShow a").text("备份至彩云网盘"), X.find("#btn_leadShow a").off("click").on("click", function () {
                            top.BH("backupsYun"), $App.trigger("mailCommand", { command: "backupMail" })
                        })
                    }
                    break;
                case "backupMailPDF":
                    if (l()) {
                        var $e = "您选择的邮件将会备份到“彩云网盘-移动账单”中，是否确定备份?";
                        t.isHasUnBill && ($e = "您选择的邮件包含非账单邮件，仅账单邮件将会备份到“彩云网盘-移动账单”中，是否确定备份?"), $Msg.confirm($e, function () {
                            M139.UI.TipMessage.show("准备备份..."), f.backupMailPDF(m.getBillMids(c).join(","), function (e) {
                                M139.UI.TipMessage.hide();
                                var e = e.responseData;
                                e && "S_OK" == e.code ? M139.UI.TipMessage.show("账单邮件正在备份中,请稍后到彩云网盘查看备份结果", { delay: 3e3 }) : $Msg.alert("由于网络原因，邮件备份失败，请稍后再试！")
                            })
                        }, { icon: "warn", isHtml: !0, dialogTitle: "邮件备份", height: "50px", width: "485px" })
                    }
                    break;
                case "backupAllBillMail":
                    $Msg.confirm("只针对账单邮件全部备份到彩云网盘，是否继续备份？", function () {
                        M139.UI.TipMessage.show("准备备份..."), f.backupMailPDF(null, function (e) {
                            M139.UI.TipMessage.hide();
                            var e = e.responseData;
                            e && "S_OK" == e.code ? M139.UI.TipMessage.show("账单邮件正在备份中,请稍后到彩云网盘查看备份结果", { delay: 3e3 }) : $Msg.alert("由于网络原因，邮件备份失败，请稍后再试！")
                        })
                    }, { icon: "warn", isHtml: !0, dialogTitle: "账单备份", height: "50px", width: "485px" });
                    break;
                case "mail_139pocket":
                    if (l()) {
                        var xe = 2;
                        $Msg.confirm("您选择的邮件将会备份到“云口袋”中，是否确定备份?", function () {
                            return c.length > 100 ? void M139.UI.TipMessage.show("备份失败，单次备份不能超出100封", {
                                className: "msgRed",
                                delay: 3e3
                            }) : void f.backupMail(c, xe, function (e) {
                                var e = e.responseData;
                                if (e && "S_OK" == e.code) {
                                    M139.UI.TipMessage.show("备份成功", { delay: 3e3 }), t && t.callback && t.callback(), BH("toolbar_backupMailSucess");
                                    var i = top.$App.getCurrentTab().element;
                                    $(i).find("#inboxHeader").find("#btn_leadShow").remove(), $(i).find("#inboxHeader").find(".createReType").show()
                                } else $Msg.alert("由于网络原因，邮件备份失败，请稍后再试！")
                            })
                        }, { icon: "warn", isHtml: !0, dialogTitle: "邮件备份", height: "50px", width: "485px" })
                    } else {
                        var Q = $App.getCurrentTab().element, X = $(Q).find("#inboxHeader");
                        0 == X.find("#btn_leadShow").length ? (X.find(".createReType").hide(), X.append('<span id="btn_leadShow">，<a href="javascript:" bh="">备份至彩云网盘</a></span>')) : X.find("#btn_leadShow a").text("备份至彩云网盘"), X.find("#btn_leadShow a").off("click").on("click", function () {
                            top.BH("backupsYun"), $App.trigger("mailCommand", { command: "backupMail" })
                        })
                    }
                    break;
                case "savetoNote":
                    l() && f.savetoNote(c, function (e) {
                        if (e.responseData && "S_OK" == e.responseData.code) {
                            M139.UI.TipMessage.show("邮件已转存至和笔记 <a href='javascript:top.$App.show(\"note\")'>查看</a>");
                            e.responseData["var"].noteid
                        } else M139.UI.TipMessage.show("保存失败，请重试");
                        setTimeout(function () {
                            M139.UI.TipMessage.hide()
                        }, 3e3)
                    });
                    break;
                case "account_secSafe":
                    top.$App.show("account_secSafe")
            }
        }, handlerLargeAttach: function (e, t) {
            var i = top.$("#readmail_" + e).find("#headAttach"), a = [];
            if (i.length && (i.find("ul.attachmentAll_list").children().each(function () {
                var e = $(this).attr("f"), t = !!Number($(this).attr("isexpire")), i = $(this).find("span.fl").attr("title");
                "attach" == e && t && a.push($T.Html.encode(i))
            }), a.length)) {
                var s = ['<div class="norTips" style="padding:35px 20px 30px 40px;">', '<span class="norTipsIco"><i class="MB_Icon i_warn"></i></span>', '<dl class="norTipsContent">', '<p class="bigMax">超大附件<span class="bigLimit">“{expireFileNameStr}</span>', "”{more}文件已过期，转发将自动删除。</p>", "</dl>", "</div>"].join("");
                return void top.$Msg.showHTML($T.format(s, {
                    expireFileNameStr: a.join(","),
                    more: a.length > 1 ? "等" : ""
                }), function () {
                    t && t()
                }, { icon: "warn", dialogTitle: "提示", buttons: ["继续转发", "取消"], width: "414px" })
            }
            t && t()
        }, getSessionTagsMids: function (e) {
            var t = $("#readTag_" + e), i = t.attr("data-mids");
            return i ? i.split(",") : [e]
        }, getBillMids: function (e) {
            for (var t = [], i = 0; i < e.length; i++) {
                var a = $App.getMailboxView().model.getMailById(e[i]);
                a && (1000006 !== a.sendId || 1 !== a.logoType && 110 !== a.logoType || t.push(e[i]))
            }
            return t
        }, getSessionTagsCount: function (e) {
            var t = $("#readTag_" + e);
            return t.find("span[name='tag_item']").length
        }, getSelectedMail: function () {
            var e = null, t = $App.getMailboxView();
            t.listView && (e = t.listView.$el);
            var i = this.model.getSelectedRow(e);
            if (i.mids && i.mids.length && -1 == $App.getCurrentTab().name.indexOf("readmail_")) return i;
            if ($App.getCurrentTab().name.indexOf("readmail_") > -1) if ($App.isReadSessionMail()) var a = $App.getCurrentTab().view.getCheckedMidArr(); else {
                var a = $App.getCurrMailMid();
                a = a ? [a] : null
            } else {
                var a = null;
                "list" != $App.getLayout() && (a = $App.getMailboxView().model.get("mid")),
                    a = a ? [a] : null
            }
            if ($App.isSessionMode()) var s = $App.getCurrentTab().view.model.get("sessionId"); else var s = $("#div_maillist").find("tr[mid=" + (a && a[0]) + "]").attr("sessionId");
            return { mids: a, sids: s ? [+s] : null }
        }
    })
}),

//M2012.Mailbox.View.MailTag
M139.namespace("M2012.Mailbox.View", {
    MailTag: Backbone.View.extend({
        el: "#div_main",
        events: { "click [name=tag_item] a": "deleteClick" },
        createInstance: function () {
            return $App.getView("tagview") || $App.registerView("tagview", new M2012.Mailbox.View.MailTag), this.seqId = 1, $App.getView("tagview")
        },
        initialize: function (e) {
            function t() {
                var e = document.getElementsByName("tag_item");
                $(e).unbind("hover").hover(function (e) {
                    i.itemHover(e)
                })
            }

            var i = this;
            this.model = $App.getMailboxView().model, this.model.on("mabilbox_render", function () {
                t()
            }), $App.on("letterInfoReady_global", function () {
                t()
            })
        },
        deleteClick: function (e, t) {
            $Event.stopEvent(e);
            var i;
            t ? i = t : (i = e.srcElement || e.target, i = $(i).parents("[name=tag_item]"));
            var a = $App.getCurrentTab(), s = $(i).attr("tagid"), o = $(i).closest("div[name=covMail_summary]").attr("data-mid") || $(i).closest("div[name=covMail_mainbody]").attr("mid") || $(i).parents("tr").attr("mid");
            return o = o ? o : a.view.model.get("mid"), this.model.removeTagForMail([o], s, function () {
                var e = $(i).closest("div[name=covMail_summary]")[0] || $(i).closest("div[name=covMail_mainbody]");
                e ? $App.trigger("deleteCovMailTag", {
                    mid: o,
                    tagId: s
                }) : ($App.trigger("mailboxDataChange", { render: !0 }), $App.trigger("refreshSplitView")), i.remove(), $App.trigger("reloadFolder"), $App.trigger("removeTag", {
                    mids: [o],
                    labelId: s,
                    currMid: o
                })
            }), BH("mailbox_tag_cancel"), $(document.body).trigger("click"), !1
        },
        itemHover: function (e) {
            var t = e.srcElement || e.target;
            "tag_item" !== $(t).attr("name") && (t = $(t).parents("[name=tag_item]")), $(t).hasClass("tagOn") ? $(t).removeClass("tagOn") : $(t).addClass("tagOn")
        },
        attachHintForTag: function () {
            $Hint.register($("span[name=tagMin]"), function (e) {
                return ["<div>", $(e).attr("titleEx"), "&nbsp;<a id='btn_tagMinDelete' rel='", $(e).attr("id"), "' href='javascript:'>[删除]</a></div>"].join("")
            });
            var e = this;
            $("#btn_tagMinDelete").die("click"), $("#btn_tagMinDelete").live("click", function () {
                var t = $(this).attr("rel");
                return e.deleteClick(null, $("#" + t))
            })
        },
        render: function (e, t) {
            e = _.uniq(e);
            var i = $App.getTagsById(e), a = [];
            void 0 == t && (t = "left" == $App.getLayout());
            for (var s = 0; s < i.length; s++) {
                var o = $App.getTagColor(i[s].folderColor);
                if (t) a = a.concat(['<span id="tagMin_', Math.random().toString().replace(".", ""), '" name="tagMin" tagId="', i[s].fid, '" titleEx="', $T.Html.encode(i[s].name), '" class="tagMin" style="border-color:', o, '"><span class="tagBody" style="background-color:', o, ";border-color:", o, '" onclick="appView.showMailbox(', i[s].fid, ')"></span></span>']); else {
                    var n = ['<span name="tag_item" tagId="', i[s].fid, '" href="javascript:" class="tag" style="border-color:', o, '"><span class="tagBody" style="background-color:', o, ";border-color:", o, '"><span bh="mailbox_tag_open" name="tag_span" onclick="appView.showMailbox(', i[s].fid, ')">', i[s].name, '</span><a href="javascript:" bh="mailbox_tag_cancel" name="cl_tag" ><i class="i_cl_w"></i></a></span></span>'];
                    a = a.concat(n)
                }
            }
            return a.join("")
        }
    })
}),

//M2012.Mailbox.Model.ContextMenu
M139.namespace("M2012.Mailbox.Model", {
    ContextMenu: Backbone.Model.extend({
        defaults: { isShield: !0 },
        initialize: function (e) {
            var t = this;
            this.mailboxModel = e.mailboxModel,
            this.getMailNotifyEmaillist(function (e) {
                t.getMailNotifyEmaillistCallback(e)
            })
        },
        getFolderMenu: function (e, t) {
            var i, a = {
                1: [{ text: "打开", command: "open" }, { isLine: !0 }, {
                    text: "查看未读",
                    command: "viewUnread"
                }, { text: "收件箱全部标为已读", command: "markAll" }, { isLine: !0 }, { text: "创建收信规则", command: "filter" }],
                2: [{ text: "打开", command: "open" }],
                3: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "全部标为已读", command: "markAll" }, {
                    text: "查看已回复邮件",
                    command: "viewReply"
                }],
                4: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "全部标为已读", command: "markAll" }, {
                    text: "清空已删除",
                    command: "clear"
                }],
                5: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "全部标为已读", command: "markAll" }, {
                    text: "清空垃圾邮件",
                    command: "clear"
                }],
                6: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "全部标为已读", command: "markAll" }, {
                    text: "清空病毒邮件",
                    command: "clear"
                }],
                10: [{ text: "展开二级目录", command: "unfold", type: "file" }],
                11: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "全部标为已读", command: "markAll" }, {
                    text: "清空广告邮件",
                    command: "clear"
                }],
                12: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "全部标为已读", command: "markAll" }, {
                    text: "清空商讯生活邮件",
                    command: "clear"
                }],
                8: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "查看未读", command: "viewUnreadBill" }],
                9: [{ text: "打开", command: "open" }, { isLine: !0 }, { text: "查看未读", command: "viewUnread" }, {
                    text: "全部标为已读",
                    command: "markAll"
                }],
                subscribe: [{ text: "打开", command: "showSubscribe" }, { isLine: !0 }, {
                    text: "查看未读",
                    command: "viewUnreadSubscribe"
                }],
                remind: [{ text: "打开", command: "showRemind" }],
                vip: [{ text: "打开", command: "showVip" }, { isLine: !0 }, {
                    text: "查看未读",
                    command: "viewUnreadVip"
                }, { text: "管理VIP联系人", command: "show", key: "addrvipgroup" }, { text: "添加VIP联系人", command: "addVip" }],
                myfolders: [{ text: "打开", command: "folderManage" }, { isLine: !0 }, {
                    text: "展开二级目录",
                    command: "unfold",
                    type: "custom"
                }, { text: "二级目录全部标为已读", command: "markAll", type: "custom" }, { isLine: !0 }, {
                    text: "创建收信规则",
                    command: "filter"
                }],
                star: [{ text: "打开", command: "showStar" }, { isLine: !0 }, { text: "创建收信规则", command: "filter" }],
                other: [{ text: "展开", command: "unfold", type: "other" }],
                groupMail: [{ text: "打开", command: "jump", key: "groupMail" }],
                attachlist: [{ text: "打开", command: "jump", key: "attachlist" }],
                custom: [{ text: "展开", command: "unfold", type: "folder" }, { isLine: !0 }, {
                    text: "全部标为已读",
                    command: "markAll"
                }, { text: "创建收信规则", command: "filter" }, { text: "重命名", command: "reNameFolder" }, {
                    text: "删除",
                    command: "deleteFolder"
                }, { isLine: !0 }, { text: "新建文件夹", command: "addFolder" }, {
                    text: "文件夹管理",
                    command: "folderManage"
                }, { text: "文件夹加锁", command: "account_secSafe" }, { isLine: !0 }, {
                    text: "在收件箱下显示",
                    command: "inboxSub",
                    type: 1
                }],
                customSub: [{ text: "展开", command: "unfold", type: "folder" }, { isLine: !0 }, {
                    text: "全部标为已读",
                    command: "markAll"
                }, { text: "创建收信规则", command: "filter" }, { text: "重命名", command: "reNameFolder" }, {
                    text: "删除",
                    command: "deleteFolder"
                }, { isLine: !0 }, { text: "新建文件夹", command: "addFolder" }, {
                    text: "文件夹管理",
                    command: "folderManage"
                }, { isLine: !0 }, { text: "取消显示", command: "inboxSub", type: 0 }],
                tagTitle: [{ text: "展开", command: "unfold", type: "tag" }, { isLine: !0 }, {
                    text: "创建收信规则",
                    command: "filter"
                }, { isLine: !0 }, { text: "新建标签", command: "addTag" }, { text: "标签管理", command: "folderManage" }],
                tag: [{ text: "展开", command: "unfold", type: "tag" }, { isLine: !0 }, {
                    text: "创建收信规则",
                    command: "filter"
                }, { text: "重命名", command: "reNameTag" }, { text: "删除", command: "deleteTag" }, { isLine: !0 }, {
                    text: "新建标签",
                    command: "addTag"
                }, { text: "标签管理", command: "folderManage" }],
                pop: [{ text: "展开", command: "unfold", type: "pop" }, { isLine: !0 }, {
                    text: "全部收取",
                    command: "pop",
                    visible: "father"
                }, { text: "全部标为已读", command: "markAll", type: "pop" }, { isLine: !0 }, {
                    text: "新建其他邮箱帐户",
                    command: "addPop"
                }, { text: "其他邮箱管理", command: "popfolderManage" }],
                popSub: [{ text: "打开", command: "open", type: "pop" }, { isLine: !0 }, {
                    text: "查看未读",
                    command: "viewUnread"
                }, { text: "收取邮件", command: "pop" }, { text: "全部标为已读", command: "markAll" }, { isLine: !0 }, {
                    text: "新建其他邮箱帐户",
                    command: "addPop"
                }, { text: "重命名", command: "reNameFolder" }, { text: "其他邮箱管理", command: "popfolderManage" }]
            };
            return "system" == e ? i = a[t] : (i = a[e], i.args = { fid: Number(t) }, t && ("pop" == e && (i = a.popSub), i[0] = {
                text: "打开",
                command: "open"
            })), $(i).each(function (e, i) {
                i.args = { fid: Number(t) }
            }), i
        },
        getAppMenu: function (e, t) {
            var i = {
                greetingcard: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                sms: [{ text: "打开", command: "showMyApp" }],
                mms: [{ text: "打开", command: "showMyApp" }],
                groupMail: [{ text: "打开", command: "showMyApp" }],
                note: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                attach: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                quicklyShare: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                postcard: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                colorfulEgg: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                fax: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }],
                voiceMail: [{ text: "打开", command: "showMyApp" }, { text: "隐藏此应用", command: "hideApp" }]
            }, a = i[e];
            return $(a).each(function (i, a) {
                a.args = { type: e, el: t }
            }), a
        },
        getMailNotifyEmaillistCallback: function (e) {
            var t = e.responseData["var"][0];
            this.set("mailNotifyEmaillist", t);
            for (var i = t.emaillist, a = [], s = [], o = 0; o < i.length; o++) 3 == i[o].settype && (a.push(i[o].email), s.push(i[o].serialid));
            top.$App.getMailboxView().model.set("mailNotifyEmaillist_emaillist", a), this.set("mailNotifyEmaillist_serialid", s)
        },
        getMailNotifyEmaillist: function (e) {
            M139.RichMail.API.call("user:getMailNotify", {}, function (t) {
                t && t.responseData && "S_OK" == t.responseData.code && e && e(t)
            })
        },
        updateMailNotify: function (e, t) {
            M139.RichMail.API.call("user:updateMailNotify", e, function (e) {
                t && t(e.responseData)
            })
        },
        getMailContextmenu: function (e) {
            if (!$.isArray(e.mids)) return void console.log("[邮件列表鼠标右键]getMailContextmenu方法请传入对象！");
            var t = this, i = e.mids || [], a = [], s = [], o = [], n = { isLine: !0 }, r = !1, l = null, c = [], d = $App.getCurrentFid();
            if (crossPageSelect = !1, superSelectResult = $App.getMailboxView().model.superSelectResult, this.mailboxModel = $App.getMailboxView().model, crossPageSelect = this.mailboxModel.get("crossPageSelect"), 7 != d) {
                a = {
                    PREVIEW: { text: "预览", command: "preview", bh2: "context_preview", items: [{ html: "<b>读信预览</b>" }] },
                    NEWWINOPEN: { text: "新窗口打开", command: "newWindow", bh: "context_newWindow" },
                    READ: { text: "标记为已读", command: "mark", args: { type: "read", value: 0, bh: "toolbar_markread" } },
                    UNREAD: { text: "标记为未读", command: "mark", args: { type: "read", value: 1, bh: "toolbar_markunread" } },
                    TOP: { text: "邮件置顶", command: "mark", args: { type: "top", value: 1, bh: "toolbar_sticky" } },
                    UNTOP: { text: "取消置顶", command: "mark", args: { type: "top", value: 0, bh: "toolbar_unsticky" } },
                    CANLABLE: { text: "标签", items: t.mailboxModel.getTagMenuItems(), bh2: "context_tag" },
                    LABLE: { text: "标签", items: t.mailboxModel.getTagMenuItems(!0), bh2: "context_tag" },
                    MOVETO: { text: "移动到", items: t.getMoveItem(), bh2: "context_move" },
                    RECERULES: { text: "创建收信规则", command: "autoFilter", email: "", name: "", bh2: "context_auto_filter" },
                    CLEAR: { text: "删除", command: "move", args: { fid: 4 }, bh: "context_delete" },
                    DELETE: { text: "彻底删除", command: "delete", fid: d },
                    SPAM: { text: "举报", command: "spam", bh: "context_spam" },
                    UNSPAM: { text: "这不是垃圾邮件", command: "unSpam" },
                    SERIALID: { text: "屏蔽此人短信提醒", command: "serialid" },
                    RECEIVE: { text: "接收此人短信提醒", command: "receive" }
                }, this.set("isShield", !0);
                for (var p = $.grep($App.getCurrentView().model.get("mailListData"), function (e) {
                    return e.mid == i[0]
                }), m = 0; m < top.$App.getMailboxView().model.get("mailNotifyEmaillist_emaillist").length; m++) if (top.$App.getMailboxView().model.get("mailNotifyEmaillist_emaillist")[m] == p[0].from.match(/<(.*)\>/)[1]) {
                    this.set("isShield", !1);
                    break
                }
                var u = { readStatus: [], topStauts: [], hasLable: !1, hasEmptyRev: !1 };
                if (crossPageSelect) o = this.get("isShield") ? ",READ,UNREAD,TOP,UNTOP,CANLABLE,MOVETO,RECERULES,line,CLEAR,SPAM,line,SERIALID," : ",READ,UNREAD,TOP,UNTOP,CANLABLE,MOVETO,RECERULES,line,CLEAR,SPAM,line,RECEIVE,"; else {
                    for (var m = 0, h = i.length; h > m; m++) {
                        l = t.mailboxModel.getMailById(i[m]) || superSelectResult[i[m]], c.push(l), t.mailboxModel.isSubscriptionMail(l) && (r = !0);
                        var f = l.flags || {};
                        f.read && 1 == f.read ? u.readStatus.push("READ") : u.readStatus.push("UNREAD"), f.top && 1 == f.top ? u.topStauts.push("UNTOP") : u.topStauts.push("TOP"), l.label && l.label.length > 0 && (u.hasLable = !0), "" == l.to.trim() && (u.hasEmptyRev = !0)
                    }
                    u.readStatus = $.unique(u.readStatus), u.topStauts = $.unique(u.topStauts), o = 1 == i.length ? this.get("isShield") ? ",PREVIEW,NEWWINOPEN,line,READ,TOP,LABLE,MOVETO,RECERULES,line,CLEAR,SPAM,line,SERIALID," : ",PREVIEW,NEWWINOPEN,line,READ,TOP,LABLE,MOVETO,RECERULES,line,CLEAR,SPAM,line,RECEIVE," : ",READ,TOP,LABLE,MOVETO,line,CLEAR,SPAM,", r && (o = o.replace(",TOP,", ",").replace(",MOVETO,", ",").replace("line,SERIALID,", ",").replace("line,RECEIVE,", ",")), o = o.replace("READ", u.readStatus.join(",")).replace("TOP", u.topStauts.join(",")), u.hasLable && (o = o.replace(",LABLE,", ",CANLABLE,"))
                }
                t.mailboxModel.isTaskMode() && (o = o.replace(",TOP,", ",").replace(",UNTOP,", ",")), 5 == d && (o = o.replace(",SPAM,", ",UNSPAM,")), 4 == d && (o = o.replace(",CLEAR,", ",DELETE,")), 2 == d && (o = u.hasEmptyRev || crossPageSelect ? o.replace(",READ,", ",").replace(",UNREAD,", ",").replace(",RECERULES,", ",").replace(",MOVETO,", ",") : o.replace(",READ,", ",").replace(",UNREAD,", ",").replace(",MOVETO,", ",")), o = o.split(",");
                for (var m = 0, h = o.length; h > m; m++) if (o[m]) if ("line" == o[m]) s.push(n); else try {
                    if ("RECERULES" == o[m]) {
                        var g = "";
                        g = 2 == d || 3 == d ? c[0].to : c[0].from, a.RECERULES = {
                            text: "创建收信规则",
                            command: "autoFilter",
                            email: $Email.getEmail(g),
                            name: $Email.getName(g),
                            bh2: ""
                        }
                    }
                    s.push(a[o[m]])
                } catch (v) {
                    console.log("getMailContextmenu数据异常！")
                }
                return s
            }
        },
        getMoveItem: function () {
            var e = this.mailboxModel.getFolderMenuItems("system"), t = this.mailboxModel.getFolderMenuItems("custom", { showCreate: !0 });
            return t.length > 0 && e.push({ isLine: !0 }), e = e.concat(t)
        },
        readMail: function (e, t) {
            var i = {
                fid: 0,
                mid: e,
                autoName: 1,
                markRead: 0,
                returnHeaders: { Sender: "", "X-RICHINFO": "" },
                filterStylesheets: 0,
                filterImages: 0,
                filterLinks: 0,
                keepWellFormed: 0,
                header: 1,
                supportTNEF: 1,
                returnAntispamInfo: 1
            };
            $RM.readMail(i, function (e) {
                t(e["var"])
            })
        }
    })
}),

//M2012.Mailbox.View.ContextMenu
M139.namespace("M2012.Mailbox.View", {
    ContextMenu: Backbone.View.extend({
        el: "body",
        template: "",
        events: {},
        initialize: function (e) {
            var t = this;
            this.mailboxModel = $App.getMailboxView().model, this.model = new M2012.Mailbox.Model.ContextMenu({ mailboxModel: this.mailboxModel }), $("#folder_main,#li_remind,#list_folder_other,#folder_custom,#pop_list,#tag_list,#folder_tag,#div_maillist,#folder_other,#li_star,#li_subscribe,#li_vip,#btn_groupMail,#btn_attachlist,#folder_inbox").live("contextmenu", function (e) {
                t.mailboxModel = $App.getMailboxView().model;
                var i = this, a = e.target;
                t.model.get("currentMenu") && t.model.get("currentMenu").remove();
                var s = [];
                switch (i.id) {
                    case "folder_main":
                        s = t.getFolderMenu("system", e);
                        break;
                    case "list_folder_other":
                        s = t.getFolderMenu("system", e);
                        break;
                    case "folder_custom":
                        s = t.getFolderMenu("custom", e);
                        break;
                    case "pop_list":
                        s = t.getFolderMenu("pop", e);
                        break;
                    case "tag_list":
                        s = t.getFolderMenu("tagTitle", e);
                        break;
                    case "folder_tag":
                        s = t.getFolderMenu("tag", e);
                        break;
                    case "div_maillist":
                        if ("allbill" === $(a).parents("td").attr("type") || "allbill" === $(a).attr("type")) return !1;
                        if (!($(a).closest(".dayAreaTable").length > 0)) return;
                        s = t.mailContextmenu(e);
                        break;
                    case "li_star":
                        s = t.getFolderMenu("star", e);
                        break;
                    case "folder_other":
                        s = t.getFolderMenu("other", e);
                        break;
                    case "btn_groupMail":
                        s = t.getFolderMenu("groupMail", e);
                        break;
                    case "btn_attachlist":
                        s = t.getFolderMenu("attachlist", e);
                        break;
                    case "folder_inbox":
                        s = t.getFolderMenu("myfolders", e);
                        break;
                    case "li_vip":
                        s = t.getFolderMenu("vip", e);
                        break;
                    case "li_subscribe":
                        s = t.getFolderMenu("subscribe", e);
                        break;
                    case "li_remind":
                        s = t.getFolderMenu("remind", e);
                        break;
                    default:
                        s = ""
                }
                return t.model.set("menuItems", s), t.render(e, i.id), $(document).one("contextmenu", function () {
                    return !1
                }), !1
            }), $("#greetingcard_link,#sms_link,#mms_link,#groupmail_link,#note_link,#attach_link,#quicklyShare_link,#fax_link,#postcard_link,#colorfulEgg_link,#voiceMail_link").live("contextmenu", function (e) {
                var i = this;
                e.target;
                t.model.get("currentMenu") && t.model.get("currentMenu").remove();
                var a = [];
                switch (i.id) {
                    case "sms_link":
                        a = t.model.getAppMenu("sms", e);
                        break;
                    case "greetingcard_link":
                        a = t.model.getAppMenu("greetingcard", e);
                        break;
                    case "mms_link":
                        a = t.model.getAppMenu("mms", e);
                        break;
                    case "groupmail_link":
                        a = t.model.getAppMenu("groupMail", e);
                        break;
                    case "note_link":
                        a = t.model.getAppMenu("note", e);
                        break;
                    case "attach_link":
                        a = t.model.getAppMenu("attach", e);
                        break;
                    case "quicklyShare_link":
                        a = t.model.getAppMenu("quicklyShare", e);
                        break;
                    case "fax_link":
                        a = t.model.getAppMenu("fax", e);
                        break;
                    case "postcard_link":
                        a = t.model.getAppMenu("postcard", e);
                        break;
                    case "colorfulEgg_link":
                        a = t.model.getAppMenu("colorfulEgg", e);
                        break;
                    case "voiceMail_link":
                        a = t.model.getAppMenu("voiceMail", e)
                }
                return t.model.set("menuItems", a), t.render(e, i.id), $(document).one("contextmenu", function () {
                    return !1
                }), !1
            })
        },
        getPreviewMail: function () {
            this.mailboxModel = $App.getMailboxView().model;
            var e = this.mailboxModel.getSelectedRow($App.getMailboxView().listView.$el).mids[0], t = this.mailboxModel.getMailById(e).subject;
            t = $T.Html.encode(t);
            var i = "readmailcontent.html?rnd=" + Math.random(), a = ['<div class="dRound shadow indboxview">', '<div class="dRoundBody">', '<h3 id="viewSubject">', t, "</h3>", '<div class="indboxviewC">', '<iframe id="previewContent" scrolling="no" noresize="noresize" src="', i, '" frameborder="0" style="width:100%;height:300px;"> </iframe>', "</div>", "</div>", "</div>"].join("");
            return this.model.readMail(e, function (e) {
                function t() {
                    console.warn("preview iframe loaded");
                    var t = $("#previewContent")[0].contentWindow.document;
                    t.open(), t.writeln(e.html.content), i(t), t.close()
                }

                function i(e) {
                    var t, i, a = e.body;
                    a.scrollHeight ? (t = a.scrollHeight, i = a.scrollWidth) : (t = a.offsetHeight, i = a.offsetWidth), $("#previewContent").css({
                        height: t,
                        width: i
                    })
                }

                0 == $("#previewContent").length ? $("#previewContent").load(function () {
                    t()
                }) : t()
            }), a
        },
        getFolderMenu: function (e, t) {
            return fid = $(t.target).parents("li").attr("fid"), "system" == e && fid > 10 && (e = "customSub"), "custom" == e && fid <= 12 && (e = "system"), this.model.getFolderMenu(e, fid)
        },
        mailContextmenu: function (e) {
            var t = this;
            $App.getCurrentFid();
            return top.SiteConfig.mailContextMenu ? t.getMailContextmenu(e) : void 0
        },
        getMailContextmenu: function (e) {
            var t = this, i = [], a = $(e.target).parents("tr").attr("mid");
            return t.mailboxModel = $App.getMailboxView().model, i = t.mailboxModel.getSelectedRow($App.getMailboxView().listView.$el).mids, t.model.getMailNotifyEmaillist(function (e) {
                t.model.getMailNotifyEmaillistCallback(e)
            }), -1 == $.inArray(a, i) ? (t.unSelectedAll(), a && ($(e.target).parents("tr").find("input").attr("checked", !0).change(), t.mailboxModel.trigger("checkboxChange", $(e.target)), i = [], i.push(a), top.$App.getMailboxView().model.set("crossPageSelect", !1))) : 1 == i.length && t.mailboxModel.trigger("checkboxChange", $(e.target)), t.model.getMailContextmenu({ mids: i })
        },
        unSelectedAll: function () {
            $App.getMailboxView().model.superSelectResult = {}, $("#div_maillist").find(".dayAreaTable input[type=checkbox]").attr("checked", !1).change(), $App.getMailboxView().model.trigger("mailSelectedChange", { count: 0 })
        },
        getMousePos: function (e) {
            var e = e || window.event;
            return {
                x: e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft,
                y: e.clientY + document.body.scrollTop + document.documentElement.scrollTop
            }
        },
        render: function (e, t) {
            function i(e) {
                var t = e.serialid, i = e.email, a = e.type, o = {};
                o.mailnotify = [], o.mailnotify.push(s.model.get("mailNotifyEmaillist")), o.mailnotify[0].updateEmaillist = [], o.mailnotify[0].updateEmaillist.push({
                    serialid: t,
                    email: i,
                    setType: 3
                }), s.model.updateMailNotify(o, function (e) {
                    e && "S_OK" == e.code ? (top.M139.UI.TipMessage.show(a + "成功", { delay: 1e3 }), s.model.getMailNotifyEmaillist(function (e) {
                        s.model.getMailNotifyEmaillistCallback(e)
                    })) : top.M139.UI.TipMessage.show(a + "失败", { delay: 1e3, className: "msgRed" })
                })
            }

            function a(e) {
                function t() {
                    i = setTimeout(function () {
                        l.remove()
                    }, 500)
                }

                $(e).mouseenter(function () {
                    clearTimeout(i)
                }).mouseleave(function () {
                    t()
                });
                var i = -1
            }

            var s = this, o = s.model.get("menuItems"), n = s.getMousePos(e), r = "folder_inbox" == t ? 200 : 170, l = M2012.UI.PopMenu.create({
                width: r,
                width2: 180,
                items: o,
                top: n.y + "px",
                left: n.x + "px",
                onItemClick: function (t) {
                    var a = $.grep($App.getCurrentView().model.get("mailListData"), function (t) {
                        return t.mid == $(e.target).closest("tr[mid]").attr("mid")
                    }), o = s.model.get("mailNotifyEmaillist_serialid"), n = [], r = s.mailboxModel.get("mailNotifyEmaillist_emaillist");
                    if (void 0 !== r && a.length > 0) for (var l = 0; l < r.length; l++) r[l] == a[0].from.match(/<(.*)\>/)[1] && n.push(o[l]);
                    var c = _.clone(t);
                    for (elem in t.args) c[elem] = t.args[elem];
                    "serialid" == c.command ? (r.length >= 30 && top.M139.UI.TipMessage.show("屏蔽失败，屏蔽人数超过最大限制", {
                        delay: 1e3,
                        className: "msgRed"
                    }), i({
                        serialid: null,
                        email: a[0].from.match(/<(.*)\>/)[1],
                        type: "屏蔽"
                    }), BH("email_list_shield")) : "receive" == c.command && (i({
                        serialid: n[0],
                        email: a[0].from.match(/<(.*)\>/)[1],
                        type: "接收"
                    }), BH("email_list_receive")), $App.trigger("mailCommand", c), t.args && t.args.bh && BH(t.args.bh)
                }
            });
            s.model.set("currentMenu", l), a(l.el), l.on("itemMouseOver", function (e) {
                e.bh2 && BH(e.bh2)
            }), l.on("subItemCreate", function (e) {
                "preview" == e.command && ($(e.menu.el).removeClass(), $(e.menu.el).css({
                    width: "570px",
                    position: "absolute"
                }), $(e.menu.el).html(s.getPreviewMail()))
            })
        }
    })
}),

//M2012.Mailbox.View.Drag
M139.namespace("M2012.Mailbox.View", {
    Drag: Backbone.View.extend({
        initialize: function () {
            this.model = $App.getMailboxView().model
        }, createInstance: function (e) {
            if (!$App.getView("dragmail")) {
                var t = new M2012.Mailbox.View.Drag;
                $App.registerView("dragmail", t)
            }
            var i = $App.getView("dragmail");
            return i.setElement(e.el), i
        }, render: function () {
            function e(e) {
                var t = -1, i = !1;
                return $("#folder_custom li[fid] a,#folder_main li[fid] a,#folder_pop li[fid] a,#folder_tag li[fid] a").each(function (a, s) {
                    if (i) $(s).removeClass("on"); else {
                        var o = $(s).parents("li").eq(0);
                        if ($D.hitTest(s, e)) {
                            if (e.offsetTop < $("#sb_h").offset().top) return;
                            $(s).addClass("on"), t = o.attr("fid"), r = $(s).parents("#folder_tag").length > 0, i = !0
                        } else $(s).removeClass("on")
                    }
                }), 8 != t && 9 != t || (t = -1), t
            }

            var t = this;
            this.created || (this.elBasket = $("<div id='dragBasket' style='position:absolute;z-index:9999;display:none'><span class=\"msg msgYellow\"><i class=\"i_t_move\"></i> <span id='dragtips'>移动n封邮件</span></span></div>"), $(document.body).append(this.elBasket), this.created = !0);
            var i, a = this.elBasket[0], s = -1, o = 0, n = !1, r = !1;
            $D.setDragAble(a, {
                handleElement: t.$el.find("tr[mid]"), onDragStart: function (e) {
                    return o = 0, i = e.target || e.srcElement, !i || "TEXTAREA" != $(i)[0].tagName && "INPUT" != $(i)[0].tagName && 7 !== t.model.get("fid") ? void 0 : !1
                }, onDragMove: function (l) {
                    if (o++, o > 10) {
                        t.elBasket.show(), $(i).parents("tr").find("input[type=checkbox]").attr("checked", !0), s = e(a);
                        var c = t.getSelectedCount();
                        if (0 == c) return t.elBasket.hide(), void (n = !1);
                        if ($(a).find("#dragtips").html("移动" + c + "封邮件"), s > 0) {
                            var d = r ? "标记" : "移动";
                            $(a).find("#dragtips").html(d + t.getSelectedCount() + "封邮件"), $(a).find(".msg").removeClass("msgYellow"), $(a).find("i")[0].className = "i_t_right"
                        } else $(a).find(".msg").addClass("msgYellow"), $(a).find("i")[0].className = "i_t_move";
                        n = !0
                    } else n = !1
                }, onDragEnd: function (e) {
                    t.elBasket.hide(), o = 0, n && s > 0 && (s = Number(s), r ? (console.log("add tag:" + s), $App.trigger("mailCommand", {
                        command: "tag",
                        labelId: s
                    })) : (console.log("move to:" + s), $App.trigger("mailCommand", { command: "move", fid: s })))
                }
            })
        }, getSelectedCount: function () {
            var e = $App.getCurrentView().model.getSelectedRow(this.$el);
            return e.mids.length
        }
    })
}),

//M2012.Mailbox.Model.Sublist
//M2012.Mailbox.View.Sublist
function () {
    M139.namespace("M2012.Mailbox.Model", {
        Sublist: Backbone.Model.extend({
            getMySub: function (e) {
                var t = top.getDomain("subscribeUrl") + "mysub?sid=" + top.sid;
                top.M139.RichMail.API.call(t, { contentType: 1, sortType: 1 }, function (t) {
                    var i = t.responseData;
                    if (0 == i.resultCode) {
                        i.body;
                        e(i)
                    }
                }, { requestDataType: "Object2JSON" })
            },
            delSub: function (e, t) {
                var i = top.getDomain("subscribeUrl") + "delSubscribe?sid=" + top.sid;
                top.M139.RichMail.API.call(i, e, function (e) {
                    var i = e.responseData;
                    0 == i.resultCode ? t(i.description) : top.M139.UI.TipMessage.show("您的操作没有成功，请稍后再试。", {
                        delay: 1e3,
                        className: "msgRed"
                    })
                }, { requestDataType: "Object2JSON" })
            }
        })
    }),
    M139.namespace("M2012.Mailbox.View", {
        Sublist: Backbone.View.extend({
            template: {
                content: ['<div class="rssMailCardColumnLayerOutside z-index100" style="top:230px">', '<div class="rssMailCardColumnLayer" id="columnLayer" style="height:650px;">', '<div class="rssMailCardColumnLayerMain" style=""><!--TODO STYLE-->', "<h2>我的订阅</h2>", '<ul id="columnList" style="width:235px;height: 410px;overflow-x:hidden;overflow-y:scroll;"><!--TODO STYLE-->', '<li class="column"><a href="javascript:;"><img src="/mpost2014/images/module/cloudMail2.0/allMazgin.png" width="50" height="50" alt=""><span>全部栏目</span></a><a href="javascript:;" class="closeColumn"><i></i></a></li>', "<li style=\"margin-top:4px;\"><a href=\"javascript:top.BH('sublist_more');top.$App.show('googSubscription', {'mtype' : 20});\" class=\"rmcMoreBtn\">+</a><span>订阅更多</span></li>", "</ul>", "</div>", '<a id="rmcSwitch" herf="javascript:;" class="p_absolute switch-shrink" style="left: -21px;top:0px"></a>', "</div>", "</div>"].join(""),
                onestandCon: ['<div class="rssMailCardColumnLayerOutside z-index100" style="top:150px;">', '<div class="rssMailCardColumnLayer" id="columnLayer" style="height:650px;">', '<div class="rssMailCardColumnLayerMain" style=""><!--TODO STYLE-->', '<iframe src="{0}"style="width:235px;height:600px;overflow-x:scroll;overflow-y:scroll; border:0px"></iframe>', "</div>", '<a id="rmcSwitch" herf="javascript:;" class="p_absolute switch-shrink" style="left: -21px;top:0px"></a>', "</div>", "</div>"].join(""),
                list: _.template(["<!--item start-->", '<li class="column" data-cid="<%= columnId %>" data-subprice="<%= subPrice %>" data-name="<%= columnName %>" data-type="$contentType">', '<a href="javascript:;">', '<img src="<%= logoUrl %>" width="50" height="50" alt="" />', "<span><%= columnName %></span>", "</a>", '<a href="javascript:;" class="closeColumn" style="display:none;"><i class="i-smcColumnClose"></i></a>', "</li>", "<!--item end-->"].join(""))
            },
            initialize: function () {
                this.model = new M2012.Mailbox.Model.Sublist
            },
            render: function (e) {
                if ("undefined" == typeof this.lock || 0 == this.lock) {
                    if (this.lock = 1, 0 != $("#rmcSwitch").length) return void (this.lock = 0);
                    if (e && e.oneStandsublist) {
                        var t = location.href.split("//")[0] + "//icmcc.mail.10086.cn/MailOffice/service/inboxInfo?sid=" + top.sid, i = (location.href.split("//")[0] + "//icmcc.mail.10086.cn/huidu/MailOffice/service/inboxInfo?sid=" + top.sid, location.href.split("//")[0] + "//hall.mail.10086ts.cn:7000/MailOffice/service/inboxInfo?sid=" + top.sid, top.$T.Utils.format(this.template.onestandCon, [t]));
                        $("#div_main>div:visible").find("#div_maillist").prepend(i)
                    } else $("#div_main>div:visible").find("#div_maillist").prepend(this.template.content);
                    var a, s = this, o = $("#columnList li:last-child"), n = top.window.document.documentElement.offsetHeight - 280, r = (Math.floor(n / 100), this.model), l = r.get("list");
                    r.getMySub(function (e) {
                        if (e && e.body && e.body.list) {
                            l = e.body.list, a = l.length, r.set("list", l);
                            for (var t = 0; a > t; t++) o.before(s.template.list(l[t]));
                            s.lock = 0
                        }
                    }), this.bindDomEvent();
                    var c = $App.getView("mailbox").model.get("layout");
                    "list" != c && void 0 != c && $("#rmcSwitch").click()
                }
            },
            bindDomEvent: function () {
                var e = this, t = ($(".rssMailCardColumnLayerMain"), $("#div_main>div:visible").find("#div_maillist"));
                t.find("#rmcSwitch").unbind("click").bind("click", function () {
                    var e, i, a, s = $(this);
                    s.hasClass("switch-shrink") ? (e = "-236px", i = "switch-shrink", a = "switch-expand", BH("sublist_open"), $(this).css("left", "-30px")) : (e = "15px", i = "switch-expand", a = "switch-shrink", BH("sublist_close"), $(this).css("left", "-21px")), t.find("#columnLayer").parent().animate({ right: e }, "fast", function () {
                        s.removeClass(i).addClass(a)
                    })
                }), t.find("#columnList").off("click").on("click", "li.column:not(.noRss)", function () {
                    var e = $(this), t = e.attr("data-cid"), i = e.attr("data-name");
                    return t ? (e.siblings("li").find(">a:eq(0)").removeClass("check"), e.find(">a:eq(0)").addClass("check"), BH("sublist_item"), $App.showSubscribe(t, i), !1) : (BH("sublist_all"), void $App.showSubscribe(!0))
                }).on("mouseenter", "li.column:not(.noRss)", function () {
                    $(this).find("a.closeColumn").show()
                }).on("mouseleave", "li.column:not(.noRss)", function () {
                    $(this).find("a.closeColumn").hide()
                }).on("click", "a.closeColumn", function () {
                    var t = $(this), i = t.closest("li.column"), a = i.attr("data-cid"), s = i.attr("data-name"), o = i.attr("data-subprice"), n = i.attr("data-type");
                    return BH("sublist_del"), e.showUnSubscribeConfirm({
                        columnId: a,
                        column: i,
                        type: n,
                        columnName: s,
                        callback: function () {
                            e.model.delSub({
                                columnId: a,
                                feeWay: "月",
                                subPrice: o,
                                columnName: s,
                                contentType: n
                            }, function () {
                                top.M139.UI.TipMessage.show("退订成功！", { delay: 1e3 }), t.closest("li.column").fadeOut("fast", function () {
                                    t.remove()
                                })
                            })
                        }
                    }), !1
                })
            },
            showUnSubscribeConfirm: function (e) {
                var t = (e.column.columnId, 2 != e.column.contentType ? "杂志" : "服务"), i = '<span class="norTipsIco"><i class="i_warn"></i></span>\n<dl class="norTipsContent">\n<dt class="norTipsTitle">您要退订&nbsp;<a href=\'javascript:;\' id="popup_details">' + e.columnName + "</a>&nbsp;" + t + "？</dt>\n</dl>\n", a = '<span class="norTipsIco"><i class="i_warn"></i></span>\n<dl class="norTipsContent">\n<dt class="norTipsTitle">您要退订&nbsp;<a href=\'javascript:;\' id="popup_details">' + e.columnName + "</a>&nbsp;" + t + '？</dt>\n<dd class="formLine c_666" style="color:#f00;">退订后不能再阅读更新的期刊</dd>\n</dl>\n';
                if (3 == e.column.contentType) var s = top.$Msg.confirm(a, function () {
                    e.callback && e.callback()
                }, function () {
                    s.close()
                }, { buttons: ["确定", "取消"], dialogTitle: "退订提醒", isHtml: !0 }); else {
                    var s = top.$Msg.confirm(i, function () {
                        e.callback && e.callback()
                    }, function () {
                        s.close()
                    }, { buttons: ["确定", "取消"], dialogTitle: "退订提醒", isHtml: !0 });
                    "reader" == e.type && (s.el.style.zIndex = 2147483647), top.$("#popup_details").click(function (t) {
                        return top.$App.show("googSubscription", { cid: e.columnId, comeFrom: 1005 }), s.close(), !1
                    })
                }
            }
        })
    })
}(),

//M2012.Readmail.Stroke.Templatehtml
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Readmail.Stroke.Templatehtml", s.extend({
        el: "",
        events: "",
        name: "M2012.Readmail.Stroke.Templatehtml",
        CONFIG_INFO: {
            1010001: { fromReg: /ctrip\.com/g },
            1010002: { fromReg: /rails\.com/g },
            1010003: { fromReg: /airchina\.com/g },
            1010004: { fromReg: /csair\.com/g },
            1010005: { fromReg: /elong\.com/g },
            1010006: { fromReg: /qunar\.com/g },
            1010007: { fromReg: /chinamobile\.com/g },
            1000011: {}
        },
        template: {
            fixed_head: ['<div class="noneReservation" id="StrokeInfoCon">', '<div class="travelChen">', '<h4 class="noneReservation-tipsTitle" id="descrStorke"><img class="i-airplane" src="../images/module/inbox/airplane.png">“行程”中汇聚航班确认、酒店预订、车票预订等旅行相关的电子邮件</h4>', "</div>", "</div>", '<div class="" id="zhiNengCon">@getAllSectionHtml</div>'],
            head: ['<h3 class="travel-mailing-date">@getEofficialGroupDes</h3>'],
            content_main: ['<ul class="travel-list">@getContentMailHtml</ul>'],
            content_center: {
                newstroke: ['<li class="travel-listItem">', '<table class="travelTable">', "<tbody>", '<tr class="listItem"  mid="$mid" sendId="$sendId">', "<td></td>", '<td class="parent-td td1" >', '<div class="listItem-disImg">@getEndCityPlcsDom(航班)</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" sendId="$sendId" type="title"  name="noclickzineng">@getStrokeEPName()</h4>', '<i class="fr icons i-triangle-sq" sendId="$sendId"  name="noclickzineng"></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable">', "<tbody><tr>", "<td></td>", '<td class="sub-td1" >', '<p class="airLine-place">@getStrokeStart(addr)</p>', '<h4 class="airLine-time">@getStrokeStart(time)</h4>', "</td>", '<td class="sub-td2">', '<i class="icon_spl i-plane"></i>', "</td>", '<td class="sub-td3">', '<p class="airLine-place">@getStrokeEnd(addr)</p>', '<h4 class="airLine-time">@getStrokeEnd(time)</h4>', "</td>", "</tr>", "</tbody></table>", "</div>", '<div class="listItem-contF clearfix">', '<p class="fl airLine-num">航班号 : @getFlightNumber(航班)</p>', "@getFlightUpateDom()", "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"],
                newtrain: ['<li class="travel-listItem">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid="$mid" sendId="$sendId">', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg">@getEndCityPlcsDom(火车)</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" sendId="$sendId" type="title"  name="noclickzineng">12306</h4>', '<i class="fr icons i-triangle-sq" sendId="$sendId"  name="noclickzineng"></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable">', "<tr>", "<td></td>", '<td class="sub-td1">', '<p class="airLine-place">@getTrainStartAddr(站点)</p>', '<h4 class="airLine-time">@getTrainTime(发车)</h4>', "</td>", '<td class="sub-td2">', '<i class="icon_spl i-train"></i>', "</td>", "<!-- 动车添加.listItem-train识别 -->", '<td class="sub-td3 listItem-train">', '<p class="airLine-place">@getTrainEndAddr(站点)</p>', "</td>", "</tr>", "</table>", "</div>", '<div class="listItem-contF clearfix">', '<p class="fl airLine-num">@getTrainNumber(车次)</p>', '<a href="http://m.114piaowu.com/huochepiao/checi/" class="fr icoG" target="_blank"><span class="p_relative" name="noclickzineng">车次查询</span></a>', "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"],
                newgrogshop: ['<li class="travel-listItem">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid="$mid" sendId="$sendId">', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg"><img src="../images/module/inbox/smartMail/dist_default/default_hotel.png" alt="酒店" title="酒店"></div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" sendId="$sendId" type="title"  name="noclickzineng">@getStrokeEPName()</h4>', '<i class="fr icons i-triangle-sq" sendId="$sendId"  name="noclickzineng"></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable">', "<tr>", "<td></td>", '<td class="sub-td1">', '<p class="airLine-place">入住时间</p>', '<h4 class="airLine-time">@getLiveTime(到店)</h4>', "</td>", '<td class="sub-td2">', '<i class="icon_spl i-hotel"></i>', "</td>", '<td class="sub-td3">', '<p class="airLine-place">离店时间</p>', '<h4 class="airLine-time">@getLeaveTime(离店)</h4>', "</td>", "</tr>", "</table>", "</div>", '<div class="listItem-contF clearfix">', '<p class="fl airLine-num">@getGrogshopName(酒店)</p>', "@getHoteltelephone(电话,地址)", "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"]
            },
            pageBar: ['<div class="downPagenumBox clearfix" id="maillist_pager_bottom" style="width:860px"></div>']
        },
        forwardFont: ["Helvetica", '"PingFang SC"', "HanHei SC", "STHeitiSC-Light", "Microsoft YaHei", "SimSun", "Arial", "sans-serif"].toString().replace(/,/g, " "),
        forwardTemplate: {
            stroke: ['<div style="width:302px;padding-bottom: 15px;">', '<div contenteditable="false" style="width:300px;min-height:136px;margin:0 0 5px 0;padding:0 0 7px 0;background-color:#f4f4f4;display: inline-block;padding-bottom: 5px;text-align: left;font-family:{setfont};">', '<div style="position:relative;height:32px;padding:0 15px;font-size:0;background-color:#47a2e4;">', '<img src="{imgSrc}" alt="" style="position:relative;top:7px;width:18px;margin-right:5px;vertical-align:top;">', '<h5 style="display:inline;margin:0;padding:0;font-size:14px;color:#fff;line-height:32px;">{flyNum}&nbsp;&nbsp;{flyName}</h5>', "</div>", '<div style="position:relative;padding:0 15px;">', '<div style="overflow:hidden;padding-top:11px;">', '<p style="float:left;width:100px;margin:0;padding:0;font-size:12px;color:#a8a8a8;line-height:16px;">{start}</p>', '<p style="float:right;width:100px;margin:0;padding:0;font-size:12px;color:#a8a8a8;line-height:16px;">{end}</p>', "</div>", '<div style="overflow:hidden;margin-top:2px;">', '<p style="float:left;width:100px;margin:0;padding:0;font-size:16px;color:#323232;font-weight:bold;line-height:21px;">{startTime}</p>', '<p style="float:right;width:100px;margin:0;padding:0;font-size:16px;color:#323232;font-weight:bold;line-height:21px;">{endTime}</p>', "</div>", '<div style="overflow:hidden;min-height:28px;margin-top:1px;">', '<p style="float:left;width:100px;margin:0;padding:0;font-size:12px;color:#323232;line-height:14px;white-space:pre-wrap;word-wrap:break-word;">{startAddr}</p>', '<p style="float:right;width:100px;margin:0;padding:0;font-size:12px;color:#323232;line-height:14px;white-space:pre-wrap;word-wrap:break-word;">{endAddr}</p>', "</div>", '<img src="' + window.location.protocol + "//" + window.location.host + top.getRootPath() + '/images/global/airltd/arrow.png" width="22" alt="" style="position:absolute;top:50%;left:50%;margin-top:-11px;margin-left:-11px;vertical-align:top;">', "</div>", '<p style="width:270px;margin:9px 0 0;padding:0 15px;font-size:12px;color:#a8a8a8;line-height:16px;white-space:pre-wrap;word-wrap:break-word;">{username}</p>', "</div></div>"],
            train: ['<div style="width:302px;padding-bottom: 15px;">', '<div contenteditable="false" style="width:300px;min-height:136px;margin:0 0 5px 0;padding:0 0 7px 0;background-color:#f4f4f4;display: inline-block;padding-bottom: 5px;text-align: left;font-family:{setfont};">', '<div style="position:relative;height:32px;padding:0 15px;font-size:0;background-color:#47a2e4;">', '<img src="' + window.location.protocol + "//" + window.location.host + top.getRootPath() + '/images/global/airltd/ch12306.png" alt="" style="position:relative;top:7px;width:18px;margin-right:5px;vertical-align:top;">', '<h5 style="display:inline;margin:0;padding:0;font-size:14px;color:#fff;line-height:32px;">{train}&nbsp;&nbsp;{seat}</h5>', "</div>", '<div style="position:relative;padding:0 15px;">', '<div style="overflow:hidden;padding-top:11px;">', '<p style="float:left;width:100px;margin:0;padding:0;font-size:12px;color:#a8a8a8;line-height:16px;">{date}</p>', "</div>", '<div style="overflow:hidden;margin-top:2px;">', '<p style="float:left;width:100px;margin:0;padding:0;font-size:16px;color:#323232;font-weight:bold;line-height:21px;">{time}</p>', "</div>", '<div style="overflow:hidden;height:28px;margin-top:1px;">', '<p style="float:left;width:100px;margin:0;padding:0;font-size:12px;color:#323232;line-height:14px;white-space:pre-wrap;word-wrap:break-word;">{startAddr}</p>', "</div>", '<p style="position:absolute;top:33px;left:186px;width:100px;margin:0;padding:0;font-size:15px;color:#323232;font-weight:bold;line-height:16px;white-space:pre-wrap;word-wrap:break-word;">{endAddr}</p>', '<img src="' + window.location.protocol + "//" + window.location.host + top.getRootPath() + '/images/global/airltd/arrow.png" width="22" alt="" style="position:absolute;top:50%;left:50%;margin-top:-11px;margin-left:-11px;vertical-align:top;">', "</div>", '<p style="width:270px;margin:9px 0 0;padding:0 15px;font-size:12px;color:#a8a8a8;line-height:16px;white-space:pre-wrap;word-wrap:break-word;">{username}</p>', "</div></div>"],
            grogshop: ['<div style="width:302px;padding-bottom: 15px;">', '<div contenteditable="false" style="width:300px;min-height:136px;margin:0 0 5px 0;padding:0 0 7px 0;background-color:#f4f4f4;display: inline-block;padding-bottom: 5px;text-align: left;font-family:{setfont};">', '<div style="position:relative;height:32px;padding:0 15px;font-size:0;background-color:#47a2e4;">', '<img src="' + window.location.protocol + "//" + window.location.host + top.getRootPath() + '/images/global/airltd/ht.png" alt="" style="position:relative;top:7px;width:18px;margin-right:5px;vertical-align:top;">', '<h5 style="display:inline;margin:0;padding:0;font-size:14px;color:#fff;line-height:32px;">{grogshop}</h5>', "</div>", '<div style="position:relative;padding:0 15px;">', '<div style="overflow:hidden;margin-top:12px;">', '<p style="margin:0;padding:0;font-size:12px;color:#a8a8a8;line-height:14px;">{date}</p>', '<p style="float:left;margin:3px 0 0;padding:0;font-size:16px;color:#323232;font-weight:bold;line-height:21px;">{time} 入住</p>', "</div>", '<div style="overflow:hidden;min-height:28px;margin-top:1px;">', '<p style="float:left;width:270px;margin:0;padding:0;font-size:12px;color:#323232;line-height:14px;white-space:pre-wrap;word-wrap:break-word;">{addr}</p>', "</div>", "</div>", '<p style="width:270px;margin:9px 0 0;padding:0 15px;font-size:12px;color:#a8a8a8;line-height:16px;white-space:pre-wrap;word-wrap:break-word;">{username}</p>', "</div></div>"]
        },
        xingchennone: ['<div class="noneReservation">', '<div class="travelChen">', '<h4 class="noneReservation-tipsTitle"><img class="i-airplane" src="../images/module/inbox/airplane.png">“行程”中汇聚航班确认、酒店预订、车票预订等旅行相关的电子邮件</h4>', "</div>", '<div class="travel-lisCont">', '<div class="noneReservation-listItem">', '<h4 class="noneReservation-listTitleMod"><span class="fw_b">我的机票：</span>点击', '<a href="http://www.airchina.com.cn" target="_blank">中国国航、</a>', '<a href="http://www.csair.com" target="_blank">南方航空、</a>', '<a href="http://www.ctrip.com" target="_blank">携程机票、</a>', '<a href="http://www.elong.com" target="_blank">艺龙机票</a>', "前往购买机票。</h4>", '<ul class="travel-list">', "<!-- 航空 -->", '<li class="travel-listItem">', '<table class="travelTable">', '<tr class="listItem">', '<td class="parent-td td1">', '<div class="listItem-disImg"><img src="../images/module/inbox/smartMail/dist_default/default_plane.png" alt="航班"></div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<i class="fl mr_10 icon_spl i-ca-18"></i>', '<h4 class="fl airLine-name">中国国际航空</h4>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable">', "<tr>", '<td class="sub-td1">', '<p class="airLine-place">北京首都机场</p>', '<h4 class="airLine-time">XXXX年XX月XX日&nbsp;XX:XX</h4>', "</td>", '<td class="sub-td2">', '<i class="icon_spl i-plane"></i>', "</td>", '<td class="sub-td3">', '<p class="airLine-place">广州白云机场</p>', '<h4 class="airLine-time">XXXX年XX月XX日&nbsp;XX:XX</h4>', "</td>", "</tr>", "</table>", "</div>", '<div class="listItem-contF clearfix">', '<p class="fl airLine-num">CA0068</p>', "</div>", "</td>", "</tr>", "</table>", "</li>", "</ul>", '<p class="noneReservation-listItem-ftTips">建议您在预订机票时填写139邮箱，139邮箱将有效的管理您的行程记录。</p>', "</div>", '<div class="noneReservation-listItem">', '<h4 class="noneReservation-listTitleMod"><span class="fw_b">我的火车票：</span>点击', '<a href="https://kyfw.12306.cn/otn/" target="_blank">12306</a>', "前往购买火车票。</h4>", '<ul class="travel-list">', "<!-- 动车 -->", '<li class="travel-listItem">', '<table class="travelTable">', '<tr class="listItem">', '<td class="parent-td td1">', '<div class="listItem-disImg"><img src="../images/module/inbox/smartMail/dist_default/default_train.png" alt="动车"></div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<i class="fl mr_10 icon_spl i-ch12306-18"></i>', '<h4 class="fl airLine-name">12306</h4>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable">', "<tr>", '<td class="sub-td1">', '<p class="airLine-place">上海</p>', '<h4 class="airLine-time">XXXX年XX月XX日&nbsp;XX:XX</h4>', "</td>", '<td class="sub-td2">', '<i class="icon_spl i-train"></i>', "</td>", "<!-- 动车添加.listItem-train识别 -->", '<td class="sub-td3 listItem-train">', '<p class="airLine-place">广州南站</p>', "</td>", "</tr>", "</table>", "</div>", '<div class="listItem-contF clearfix">', '<p class="fl airLine-num">K9018</p>', "</div>", "</td>", "</tr>", "</table>", "</li>", "</ul>", '<p class="noneReservation-listItem-ftTips">建议您在12306的个人信息中将电子邮箱改为139邮箱，139邮箱将有效的管理您的行程记录。</p>', "</div>", '<div class="noneReservation-listItem">', '<h4 class="noneReservation-listTitleMod"><span class="fw_b">我的酒店：</span>点击', '<a href="http://www.ctrip.com" target="_blank">携程、</a>', '<a href="http://www.elong.com" target="_blank">艺龙、</a>', '<a href="http://www.qunar.com" target="_blank">去哪儿网</a>', "前往预定。</h4>", '<ul class="travel-list">', "<!-- 携程 -->", '<li class="travel-listItem">', '<table class="travelTable">', '<tr class="listItem">', '<td class="parent-td td1">', '<div class="listItem-disImg"><img src="../images/module/inbox/smartMail/dist_default/default_hotel.png" alt="酒店"></div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<i class="fl mr_10 icon_spl i-xiec-18"></i>', '<h4 class="fl airLine-name">携程网</h4>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable">', "<tr>", '<td class="sub-td1">', '<p class="airLine-place">入住时间</p>', '<h4 class="airLine-time">XXXX年XX月XX日</h4>', "</td>", '<td class="sub-td2">', '<i class="icon_spl i-hotel"></i>', "</td>", '<td class="sub-td3">', '<p class="airLine-place">离店时间</p>', '<h4 class="airLine-time">XXXX年XX月XX日</h4>', "</td>", "</tr>", "</table>", "</div>", '<div class="listItem-contF clearfix">', '<p class="fl airLine-num">XX酒店</p>', "</div>", "</td>", "</tr>", "</table>", "</li>", "</ul>", '<p class="noneReservation-listItem-ftTips">建议您在预订酒店时填写139邮箱，139邮箱将有效的管理您的行程记录。</p>', "</div>", "</div>", "</div>"].join(""),
        emptyOutline: ['<div style="width:868px">', '<div class="whitebaby-remind whitebaby-remind0" style="height:198px;width:300px;margin:60px auto 0px; ">', '<div class="remind-layout">', '<div class="remind-text">', '<p class="fz_14 c_999 ta_c">{textcon}</p>', "</div>", '<i class="remind-direction"></i>', '<i class="remind-character"></i>', "</div>", "</div>", "</div>"].join(""),
        xingcheng_fixedhead: ['<div class="noneReservation" id="StrokeInfoCon"></div>'].join(""),
        initialize: function (e) {
            if (this.container = this.template, this.model = e.model, this.data = e.data, this.eofficialModel = new M2012.Mailbox.Model.Eofficial, this.data) {
                var t = this.filterMails(this.data);
                if (t.length > 0) {
                    var i = [];
                    for (var a in this.template) "head" != a && "content_main" != a && "content_center" != a && i.push(this.template[a].join(""));
                    this.HtmlTemplate = i.join("")
                } else {
                    var o = "" + this.model.get("modelType") || "", n = "" + this.model.get("modelTitle") || "";
                    if ("1000011" == o) this.HtmlTemplate = this.xingchennone; else {
                        var i = [], r = top.$T.Utils.format(this.emptyOutline, { textcon: "目前您还没有" + n + "的邮件信息" });
                        i.push(this.xingcheng_fixedhead, r), this.HtmlTemplate = i.join("")
                    }
                }
            }
            return s.prototype.initialize.apply(this, arguments)
        },
        render: function (e) {
            var t;
            t = e instanceof Array ? e.join("") : e;
            var i = "";
            return i = this.HtmlTemplate, i = i.replace("@getAllSectionHtml", t)
        },
        DataBind: function (e) {
            var t = [];
            return t = this.getContentMailHtml(e), this.reMarkMails(), t
        },
        replaceHtml: function (e, t, i, a) {
            var s = this, t = t.replace(i, function (t, i, a, o) {
                var n = i.trim(), r = [];
                s.getStrokeJson(s.DataRow.summary), o && (r = o.split(","));
                for (var l = new Array, c = 0; c < r.length; c++) null != e[r[c]] ? l.push(e[r[c]]) : l.push(r[c]);
                if (s.Functions[n]) {
                    var d = s, p = s.Functions[n].apply(d, l);
                    return p && "string" == typeof p && p.indexOf("$") >= 0 && (p = p.replace(/\$/gi, "@￥")), p
                }
            });
            return t = t.replace(a, function (t) {
                if (m = t.substr(1).trim(), void 0 != e[m]) return e[m];
                if (m.indexOf(".") >= 0) {
                    for (var i = m.split("."), a = e, s = 0; s < i.length; s++) {
                        if (void 0 == a[i[s]]) return "";
                        a = a[i[s]]
                    }
                    return a
                }
                return ""
            })
        },
        getContentMailHtml: function (e) {
            var t = this;
            this.DataSource = this.filterMails(e), this.DataSource && !a.isArray(this.DataSource) && (this.DataSource = [this.DataSource]), this.ItemTemplate = this.getCenterContent(), this.sectionStart = this.container.head.join(""), this.listUl = this.container.content_main.join(""), this.sectionEnd = this.container.pageBar.join("");
            var i = /\$[\w\.]+\s?/gi, s = /\@(\w+)\s?(\((.*?)\))?/gi, o = [];
            this.prevSectionName = "";
            for (var n = 0; n < this.DataSource.length; n++) {
                var r = this.DataSource[n];
                r.index = n, this.DataRow = r, this.getStrokeJson(this.DataRow.summary);
                var l = this.getcontainerContent();
                l = this.replaceHtml(r, l, s, i);
                var c = "";
                if (t.Functions && t.Functions.getEofficialGroupDes && (c = t.Functions.getEofficialGroupDes.call(t, t.DataRow)), this.sectionStart && c != this.prevSectionName) {
                    0 == n ? this.prevSectionName = c : this.prevSectionName = c, this.timeTitle = this.sectionStart;
                    var d = this.timeTitle.replace("@getEofficialGroupDes", this.prevSectionName), p = this.listUl.replace("@getContentMailHtml", l);
                    l = d + p
                } else {
                    var p = this.listUl.replace("@getContentMailHtml", l);
                    l = p
                }
                o.push(l)
            }
            return this.render(o)
        },
        getCenterContent: function () {
            var e = [];
            for (var t in this.container) "head" != t && "pageBar" != t && "content_center" != t && "fixed_head" != t && e.push(this.container[t].join(""));
            return e.join("")
        },
        getcontainerContent: function () {
            var e = [];
            switch (this.DataRow.summaryType) {
                case "航班":
                    e.push(this.container.content_center.newstroke.join(""));
                    break;
                case "酒店":
                    e.push(this.container.content_center.newgrogshop.join(""));
                    break;
                case "车次":
                    e.push(this.container.content_center.newtrain.join(""));
                    break;
                case "normal":
                    var t = this.eofficialModel.getFailDetailItem(this.DataRow);
                    e.push(t);
                    break;
                default:
                    e = []
            }
            return e.join("")
        },
        filterMails: function (e) {
            var t = [], i = "" + this.model.get("modelType") || "", a = this.CONFIG_INFO[i].fromReg;
            if (!e) return t;
            for (var s = 0; len = e.length, s < len; s++) if (1000011 == e[s].sendId && "1000011" !== i) {
                if (a.test(e[s].from)) {
                    t.push(e[s]);
                    continue
                }
            } else t.push(e[s]);
            return t
        },
        getStrokeJson: function (e) {
            var t = {}, i = e.split("\n"), a = 0, s = /酒店|航班|车次|座位|发车|站点|起飞|到达|地址|到店|离店|姓名/;
            this.DataRow = this.DataRow || {};
            for (var o = 0, n = i.length; n > o; o++) {
                var r = /：|:/;
                if (r.test(i[o])) {
                    var l = RegExp.leftContext, c = RegExp.rightContext;
                    t[l] = c, s.test(l) && "" !== c.replace(/\s+/, "") && a++, "酒店" != l && "航班" != l && "车次" != l || (this.DataRow.summaryType = l)
                }
            }
            return (-1 === "酒店航班车次".indexOf(this.DataRow.summaryType) || 3 > a) && (this.DataRow.summaryType = "normal"), this.DataRow.summaryJson = t, {
                type: this.DataRow.summaryType,
                data: t
            }
        },
        reMarkMails: function () {
            var e = "" + this.model.get("modelType") || "", t = { sendIds: [e], type: "read", value: 0 };
            this.model.markUseNewModeMail(t, function (e) {
                e.responseData && "S_OK" == e.responseData.code && $App.trigger("reloadFolder", { reload: !0 })
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Mailbox.Model.Strokenavbar
M139.namespace("M2012.Mailbox.Model", {
    Strokenavbar: Backbone.Model.extend({
        navTree: ['<div class="new-main-topbar">', '<div class="p_relative ptblr_s2 clearfix">', '<ul class="toolBarUl_v3">', '<li><a class="icoTb mr_6" href="javascript:" id="Official_back">', '<span class="p_relative">返回</span></a>', "</li>", "</ul>", "</div>", "</div>"].join(""),
        cardBox: ['<div class="" id="navcon">', '<div class="travel-cardBox clearfix">', '<div class="cardMain">', '<div class="cardMain-inner">', '<h4 class="cardMain-title"><%= companyName %></h4>', '<p class="cardMain-txt"><%= companyDesc %></p>', '<ul class="nav-link clearfix" id="menufuncs"></ul>', "</div>", "</div>", '<div class="cardAside">', "<%= companyIconCls %>", "</div>", "</div>", "</div>"].join(""),
        cardLink: ["<li>", '<a href="<%= finalcardLink %>" cardLink="<%= cardLink %>" target="<%= blankstute %>"><%= cardName %></a>', '<span class="nav-line">&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;</span>', "</li>"].join(""),
        emptyOutline: ['<div style="width:868px">', '<div class="whitebaby-remind whitebaby-remind0" style="height:198px;width:300px;margin:60px auto 0px; ">', '<div class="remind-layout">', '<div class="remind-text">', '<p class="fz_14 c_999 ta_c">{textcon}</p>', "</div>", '<i class="remind-direction"></i>', '<i class="remind-character"></i>', "</div>", "</div>", "</div>"].join(""),
        dongtaiTpl: ['<div class="boxIframe smartMail-popW">', '<div class="boxIframeTitle" id="dragbox">', "<h2>", '<i class="fl icon_spl {getIconClass}"></i>', '<span class="DL_DialogTitle">{fltCompany}&nbsp;&nbsp;&nbsp;&nbsp{fltNo}', "</span>", "</h2>", '<a class="i_t_close DL_CloseBut CloseButton" title="关闭" href="javascript:;"></a>', "</div>", '<div class="boxIframeMain">', "{tipdom}", '<div class="smartMail-cardPlane">', '<div class="smartMail-cardPlane-airport clearfix">', '<div class="ta_l">{depAirport}</div>', '<div class="ta_r">{arrAirport}</div>', "</div>", '<div class="smartMail-cardPlane-nameSort clearfix">', '<div class="ta_l">预计</div>', '<div class="ta_r">预计</div>', "</div>", '<div class="smartMail-cardPlane-travel">', '<div class="smartMail-cardPlane-travel-info clearfix">', '<div class="smartMail-cardPlane-start fl">', '<p class="smartMail-cardPlane-time ta_l">{planUpTime}</p>', '<p class="smartMail-cardPlane-text fl">计划 {searchUpDate}</p>', "</div>", '<div class="smartMail-cardPlane-iconBox fl">', '<i class="icon_spl i-plane"></i>', "</div>", '<div class="smartMail-cardPlane-dist fl">', '<p class="smartMail-cardPlane-time ta_r">{planDwTime}</p>', '<p class="smartMail-cardPlane-text fr">计划 {searchDownDate}</p>', "</div>", "</div>", '<p class="smartMail-cardPlane-footer">乘客信息:&nbsp;&nbsp{passengers}</p>', "</div>", '<div class="smartMail-ticketMsg clearfix">', '<div class="ticketMsg-item ta_l">', '<p class="ticketMsg-name">值机柜台</p>', '<p class="ticketMsg-tips">{checkInBar}</p>', "</div>", '<div class="ticketMsg-item">', '<p class="ticketMsg-name">登机口</p>', '<p class="ticketMsg-tips">{upBar}</p>', "</div>", '<div class="ticketMsg-item">', '<p class="ticketMsg-name">到达口</p>', '<p class="ticketMsg-tips">{dwBar}</p>', "</div>", '<div class="ticketMsg-item ta_r">', '<p class="ticketMsg-name">行李转盘</p>', '<p class="ticketMsg-tips ticketMsg-tips-lastChild">{bagCarousel}</p>', "</div>", "</div>", "</div>", "</div>", "</div>"].join(""),
        tipstutedom: {
            plan: ['<div class="smartMail-tipsCard smartMail-tipsCard-default cleafix">', '<div class="smartMail-tipsCard-tipsPoint fl">计划</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info cleafix">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱预计</p>', '<p class="infoMain-t2">*值机时间不变</p>', "</div>", '<div class="smartMail-tipsCard-infoTime fl">{planUpTime}</div>', "</div>", "</div>"].join(""),
            fly: ['<div class="smartMail-tipsCard smartMail-tipsCard-default cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">起飞</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info fl">', '<div class="line-horizontal">', '<img class="smartMail-tipsCard-iconPlane" src="../images/module/inbox/trip/airplane.png" alt="飞机">', "</div>", '<p class="smartMail-tipsCard-infoFooter">{timerabs}</p>', "</div>", "</div>"].join(""),
            flying: ['<div class="smartMail-tipsCard smartMail-tipsCard-default cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">在途中</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info smartMail-tipsCard-onPassage fl">', '<div class="line-horizontal">', '<img class="smartMail-tipsCard-iconPlane" src="../images/module/inbox/trip/airplane.png" alt="飞机">', "</div>", '<p class="smartMail-tipsCard-infoFooter">{timerabs}</p>', "</div>", "</div>"].join(""),
            reach: ['<div class="smartMail-tipsCard smartMail-tipsCard-default cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">到达</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info smartMail-tipsCard-arrive fl">', '<div class="line-horizontal">', '<img class="smartMail-tipsCard-iconPlane" src="../images/module/inbox/trip/airplane.png" alt="飞机">', "</div>", '<p class="smartMail-tipsCard-infoFooter">{timerabs}</p>', "</div>", "</div>"].join(""),
            delays: ['<div class="smartMail-tipsCard smartMail-tipsCard-warming cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">可能延误</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info cleafix">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱预计</p>', '<p class="infoMain-t2">*值机时间不变</p>', "</div>", '<div class="smartMail-tipsCard-infoTime fl">{planUpTime}</div>', "</div>", "</div>"].join(""),
            cancelfly: ['<div class="smartMail-tipsCard smartMail-tipsCard-danger cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">取消</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info cleafix">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱提醒</p>', '<p class="infoMain-t2">*航班取消</p>', "</div>", "</div>", "</div>"].join(""),
            diversion: ['<div class="smartMail-tipsCard smartMail-tipsCard-danger cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">备降</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info cleafix">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱提醒</p>', '<p class="infoMain-t2">*航班备降</p>', "</div>", "</div>", "</div>"].join(""),
            reversal: ['<div class="smartMail-tipsCard smartMail-tipsCard-danger cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">返航</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info cleafix">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱提醒</p>', '<p class="infoMain-t2">*航班返航</p>', "</div>", "</div>", "</div>"].join(""),
            crash: ['<div class="smartMail-tipsCard smartMail-tipsCard-danger cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">失事</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info cleafix">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱提醒</p>', '<p class="infoMain-t2">*航班失事</p>', "</div>", "</div>", "</div>"].join(""),
            nothing: ['<div class="smartMail-tipsCard smartMail-tipsCard-default cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">数据异常</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info fl">', '<div class="smartMail-tipsCard-infoMain fl">', '<p class="infoMain-t1"><span class="fz_14">139</span>邮箱提醒</p>', '<p class="infoMain-t2">*数据异常</p>', "</div>", "</div>", "</div>"].join(""),
            historyreach: ['<div class="smartMail-tipsCard smartMail-tipsCard-default cleafix ">', '<div class="smartMail-tipsCard-tipsPoint fl">到达</div>', '<div class="smartMail-tipsCard-line fl"></div>', '<div class="smartMail-tipsCard-info smartMail-tipsCard-arrive fl">', '<div class="line-horizontal">', '<img class="smartMail-tipsCard-iconPlane" src="../images/module/inbox/trip/airplane.png" alt="飞机">', "</div>", '<p class="smartMail-tipsCard-infoFooter"></p>', "</div>", "</div>"].join("")
        },
        initVal: "——",
        initialize: function (e) {
            this.model = $App.getMailboxView().model
        },
        getflightInfo: function (e, t, i) {
            M139.HttpRouter.addRouter("setting", ["setting:flightInfo"]), M139.RichMail.API.call("setting:flightInfo", e, function (e) {
                var i = e.responseData;
                "S_OK" == i.code ? t && t(i) : top.M139.UI.TipMessage.error("航班动态查询失败", { delay: 1500 })
            }, { urlParam: "&flightDate=" + i.flightDate + "&flightNo=" + i.flightNo })
        },
        getServiceNumbersInfo: function (e) {
            var t = this, i = t.model.get("modelType") || "";
            if ("1000011" != i) {
                if (t.model.get("ServiceNumbersLoaded")) return void (e && e(this.model.get("ServiceNumbers")));
                var a = { type: 1 };
                M139.HttpRouter.addRouter("setting", ["setting:queryServiceNumbers"]), M139.RichMail.API.call("setting:queryServiceNumbers", a, function (i) {
                    var a = i.responseData;
                    a && "S_OK" == a.code ? (t.model.set("ServiceNumbersLoaded", !0), t.model.set("ServiceNumbers", a), e && e(a)) : (console.log("企业服务号系统繁忙"), e && e(a))
                })
            }
        },
        ServiceNumbersInfo: function (e) {
            for (var t = this, i = [], a = e["var"], s = a.length, o = t.model.get("modelType") || "", n = 0; s > n; n++) if (a[n].sendId == o) return i = a[n];
            return i
        },
        getEmptypage: function () {
            var e = this, t = "" + e.model.get("modelTitle") || "", i = top.$T.Utils.format(e.emptyOutline, { textcon: "目前您还没有" + t + "的邮件信息" });
            return i
        },
        getCardBox: function (e, t) {
            var i = this;
            i.getServiceNumbersInfo(function (e) {
                var a = i.ServiceNumbersInfo(e), s = "";
                if (0 == a.length) return void (t && t(s));
                var o = _.template(i.cardBox);
                s = $(o({
                    companyName: a.serviceNumberName,
                    companyDesc: a.desc,
                    companyIconCls: i.getCompanyIconCls(a)
                })), _.each(a.menu, function (e) {
                    if (void 0 != e.url) {
                        var t = /tel/.test(e.url), a = "_blank", o = e.url;
                        t && (a = "", o = "javascript:;");
                        var n = _.template(i.cardLink)({
                            cardLink: e.url,
                            finalcardLink: o,
                            blankstute: a,
                            cardName: e.menuName
                        });
                        s.find("ul").append(n)
                    }
                }), s.find(".nav-line :last").remove(), i.getCardBoxEvents(s), t && t(s)
            })
        },
        getCardBoxEvents: function (e) {
            e.find("ul a").hover(function (e) {
                var t = e.currentTarget, i = $(t).attr("cardLink"), a = i.match(/tel/g);
                if ("tel" == a) {
                    var s = i.replace(/tel:/, "").replace(/\-/g, "");
                    $(t).css("position", "relative");
                    var o = ['<a style="position:absolute;z-index:99;padding-left:10px;border-radius:4px;text-shadow:none;background:#fff;box-shadow:0 0 5px #ccc;height:24px;line-height:24px;text-align:center;cursor:pointer;width:200px;left:62px;top:0px;" onclick="$App.televents({tele:{0}})" id="bankNavCall"><img src="/m2015/images/global/i-iphone.png" style="position:absolute;top:4px;left:6px;"/>可能是电话号码,是否拨号？</a>'].join("");
                    o = $T.Utils.format(o, [s]), 0 == $(t).find("#bankNavCall").length && $(t).append(o)
                }
            }, function (e) {
                var t = e.currentTarget, i = setTimeout(function () {
                    $(t).find("#bankNavCall").remove()
                }, 100);
                $(t).find("#bankNavCall").hover(function (e) {
                    i && clearTimeout(i), 0 == $(t).find("#bankNavCall").length && $(t).append(html)
                }, function (e) {
                    $(t).find("#bankNavCall").remove()
                })
            })
        },
        getCompanyIconCls: function (e) {
            if (e && e.iconUrl) {
                var t = "<img src={iconUrl}>";
                return $T.Utils.format(t, { iconUrl: e.iconUrl })
            }
            return ""
        },
        createZhiNengFunBtn: function (e) {
            var t = this, i = e.currentTarget, a = $(i).attr("sendId");
            a && (this.menu = M2012.UI.PopMenu.create({
                width: "78px",
                direction: "auto",
                hideInsteadOfRemove: !0,
                container: $(i),
                items: [{
                    text: "转发", onClick: function () {
                        t.forwardStroke(e)
                    }, bh: ""
                }, {
                    text: "删除", onClick: function () {
                        t.delZhiNengMail(e)
                    }, bh: ""
                }],
                top: 34,
                left: "normal" === $(i).attr("type") ? 818 : 590
            }))
        },
        forwardStroke: function (e) {
            top.BH("forwardStroke");
            var t = this, i = e.target, a = $(i).parents("tr[mid]").attr("mid"), s = $App.getMailDataByMid(a).summary, o = new M2012.Readmail.Stroke.Templatehtml({}), n = [], r = o.getStrokeJson(s);
            r.data["数量"] > 1 ? t.model.getStrokeList({ mid: a }, function (e) {
                for (var i = e.split("\n\n"), s = 0, r = i.length; r > s; s++) n[s] = o.getStrokeJson(i[s]);
                t.showCompose(a, n, o)
            }) : (n[0] = o.getStrokeJson(s), t.showCompose(a, n, o))
        },
        showCompose: function (e, t, i) {
            for (var a = "", s = { setfont: "'Helvetica','PingFang SC','HanHei SC','STHeitiSC-Light','Microsoft YaHei','SimSun','Arial',sans-serif" }, o = "", n = {}, r = 0, l = t.length; l > r; r++) {
                for (var c in t[r]) n[c] = t[r][c];
                switch (n.type) {
                    case "航班":
                        var d = n.data["起飞"].replace(/(\d)\s+/, "$1,").split(","), p = d[0].replace(/\s+/g, ",").split(","), m = n.data["到达"].replace(/(\d)\s+/, "$1,").split(","), u = m[0].replace(/\s+/g, ",").split(","), h = $App.getAirlinesShortName(n.data["航班"]), f = h.ename;
                        a = i.forwardTemplate.stroke.join(""), s.flyNum = n.data["航班"], s.flyName = h.cname, s.imgSrc = window.location.protocol + "//" + window.location.host + top.getRootPath() + "/images/global/airltd/" + f + ".png", s.start = p[0], s.startTime = p[1], s.startAddr = d[1], s.end = u[0], s.endTime = u[1], s.endAddr = m[1], s.username = n.data["姓名"].replace(/\s+/g, "");
                        break;
                    case "车次":
                        var g = n.data["发车"].split("日"), v = n.data["站点"].split("—");
                        a = i.forwardTemplate.train.join(""), s.train = n.data["车次"], s.seat = n.data["座位"], s.date = g[0] + "日", s.time = g[1], s.startAddr = v[0], s.endAddr = v[1], s.username = n.data["姓名"].replace(/\s+/g, "");
                        break;
                    case "酒店":
                        a = i.forwardTemplate.grogshop.join("");
                        var b = n.data["到店"].replace(/\(|\)|\s+/g, ",").split(",");
                        s.grogshop = n.data["酒店"], s.date = b[0], s.time = b[1], s.addr = n.data["地址"], s.username = n.data["姓名"].replace(/\s+/g, "")
                }
                o += M139.Text.Utils.format(a, s)
            }
            $App.show("compose", { mid: e, type: "forward", lastTabName: "mailbox_1" }, {
                inputData: {
                    content: o,
                    unUseDefaultFont: !0
                }
            })
        },
        zhiNengsearchMails: function (e) {
            var t = this, i = $(e.target).parents("[sendId]").attr("sendId"), a = this.model.get("searchOptions").from || "";
            if ("left" == a && "1000011" != i) {
                var s = t.model.modelTitle, o = s[i];
                o && o.hasOwnProperty("officialBH") ? top.BH(o.officialBH) : "", $App.searchMail({
                    fid: 1,
                    exceptFids: [4],
                    isSearch: 1,
                    isFullSearch: 0,
                    condictions: [{ field: "sendId", operator: "=", value: i }]
                })
            }
        },
        delZhiNengMail: function (e) {
            var t = this, i = e.target, a = $(i).parents("tr[mid]").attr("mid"), s = {
                mids: [a],
                sendIds: [],
                sendFlag: ""
            };
            this.model.moveMail(s, 4, function (e) {
                if (e.responseData && "S_OK" == e.responseData.code) {
                    var i = t.model.get("searchOptions");
                    $App.searchMail(i), setTimeout(function () {
                        M139.UI.TipMessage.show("所选邮件已删除", { delay: 3e3 })
                    }, 1e3)
                }
            })
        },
        getPassenger: function (e) {
            var t = e.row.summaryJson["姓名"];
            return t.replace(/\s/g, "")
        },
        getIconClass: function (e) {
            var t = e.row.summaryJson["航班"], i = $App.getAirlinesShortName(t).ename;
            return "i-" + i + "-18"
        },
        getflightNo: function (e) {
            var t = e.row.summaryJson["航班"];
            return t
        },
        getFlightCName: function (e) {
            var t = e.row.summaryJson["航班"];
            return $App.getAirlinesShortName(t).cname || ""
        },
        getfltStateDom: function (e) {
            var t = this, i = t.tipstutedom, a = t.initVal, s = e.flightInfoCollect.fltState || "", o = "", n = "", r = e.flightInfoCollect.planUpTime.length > 0 ? e.flightInfoCollect.planUpTime : a;
            switch (s) {
                case "计划":
                    var l = top.$T.Utils.format(i.plan, { planUpTime: r });
                    return l;
                case "起飞":
                    var l = top.$T.Utils.format(i.fly, { timerabs: o });
                    return l;
                case "在途中":
                    var l = top.$T.Utils.format(i.flying, { timerabs: o });
                    return l;
                case "到达":
                    var l = top.$T.Utils.format(i.reach, { timerabs: n });
                    return l;
                case "延误":
                    var l = top.$T.Utils.format(i.delays, { planUpTime: r });
                    return l;
                case "取消":
                    var l = top.$T.Utils.format(i.cancelfly, {});
                    return l;
                case "备降":
                    var l = top.$T.Utils.format(i.diversion, {});
                    return l;
                case "返航":
                    var l = top.$T.Utils.format(i.reversal, {});
                    return l;
                case "失事":
                    var l = top.$T.Utils.format(i.crash, {});
                    return l;
                default:
                    var l = top.$T.Utils.format(i.plan, { planUpTime: r });
                    return l
            }
        },
        getTimeOrPort: function (e) {
            var t = this, i = e.row.summaryJson[e.status], a = t.initVal;
            switch (e.type) {
                case "addr":
                    var s = i.replace(/(\d)\s+/, "$1,").split(",")[1];
                    return s;
                case "type_date":
                    var s = i.replace(/(\d)\s+/, "$1,").split(",")[0], o = s.match(/\d{4}年\d+月\d+日/gi);
                    return o && o[0] || a;
                case "type_hours":
                    var s = i.replace(/(\d)\s+/, "$1,").split(",")[0], n = s.match(/\d{2}:\d{2}/gi);
                    return n && n[0] || a;
                case "type_monthHours":
                    var r = i.match(/\d+月\d+日\s*\d{2}:\d{2}/gi);
                    return r && r[0] || a
            }
        }
    })
}),

//M2012.Mailbox.View.Strokenavbar
M139.namespace("M2012.Mailbox.View", {
    Strokenavbar: Backbone.View.extend({
        initVal: "——", initialize: function (e) {
            this.model = $App.getMailboxView().model, this.eofficialModel = new M2012.Mailbox.Model.Eofficial, this.navbarmodel = new M2012.Mailbox.Model.Strokenavbar, this.handeEle = e.handeEle, this.render()
        }, render: function () {
            var e = this;
            e.renderdescrNav(), e.initEvents()
        }, initEvents: function () {
            var e = this;
            $("#Official_back").click(function () {
                top.BH("Official_home"), $App.showBill(16)
            }), $(".flydongtai").click(function (t) {
                e.showFlydongtai(t)
            }), $(".getHotel").click(function (t) {
                e.showHotelInfo(t)
            }), $(".i-triangle-sq").click(function (t) {
                e.navbarmodel.createZhiNengFunBtn(t)
            }), $(".listItem-contH [type=title]").click(function (t) {
                e.navbarmodel.zhiNengsearchMails(t)
            })
        }, showHotelInfo: function (e) {
            function t(e) {
                var t = ['<div  class="tips tips-addtagform tips-width" id="hotleBox"  style="right:100px;top:40px;" id="hotleBox">', '<div class="tips-text">', '<div class="tips-text-padding" name="noclickzineng">', "<!--活动 start-->", '<table class=" table-layout" >', "<tbody>", '<tr class="mb_10 fn_show" id="Hoteladdr" name="noclickzineng">', '<td class="tr-w51">地址：</td>', '<td class="table-boder" style="">{0}</td>', "</tr>", '<tr class="fn_show">', '<td><a class="tips-a" id="mapCoat" style="display:none;left:63px;top:46px;" onclick="window.open(\'' + n + '\',\'_blank\')"><img src="/m2015/images/global/i-map.png" class="tips-img" >在地图中查看</a>', "</td>", "</tr>", '<tr class="fn_show" id="Hoteltele" name="noclickzineng">', '<td class="tr-w51">电话：</td>', '<td class="table-boder ">{1}</td>', "</tr>", '<tr class="fn_show">', '<td><a class="tips-a" id="teleCoat" style="display:none;left:63px;top:82px;"><img src="/m2015/images/global/i-iphone.png" class="tips-img">可能是电话号码,是否拨号？</a>', "</td>", "</tr>", "</tbody>", "</table><!--活动 end-->", "</div>", '<div class="boxIframeBtn tips-bgf7" style="position:relative;" name="noclickzineng">               ', '<span  class="bibBtn"><a class="btnTb" href="javascript:void(0);" id="closeHotelinfo" ><span>关闭</span></a></span>', "</div>", "</div>", '<div class="tipsRight" style="top:108px" name="noclickzineng"></div>', "</div>"].join("");
                return t = $T.Utils.format(t, [e.addr, e.tele])
            }

            var i = e.currentTarget, a = $(i).attr("tele"), s = a.replace(/\-/g, ""), o = $(i).attr("addr"), n = ["http://map.baidu.com/?newmap=1&ie=utf-8&s=s%26wd%3D", encodeURIComponent(o)].join(""), r = t({
                tele: a,
                addr: o
            }), l = $(i).parent();
            0 == l.find("#hotleBox").length && l.append(r), l.find("#closeHotelinfo").click(function () {
                l.find("#hotleBox").remove()
            }), l.find("#Hoteladdr").mouseover(function () {
                l.find("#teleCoat").hide(), l.find("#mapCoat").show()
            }), l.find("#Hoteltele").mouseover(function () {
                l.find("#mapCoat").hide(), l.find("#teleCoat").show(), "——" === s && (l.find("#Hoteltele").css("cursor", "default"), l.find("#teleCoat").hide())
            }), l.find("#teleCoat").click(function () {
                "——" !== s && top.$App.televents({ tele: a })
            }), M139.Dom.bindAutoHide({
                action: "click",
                element: l.find("#hotleBox"),
                stopEvent: !0,
                callback: function () {
                    l.find("#hotleBox").remove(), M139.Dom.unBindAutoHide({ element: l.find("#hotleBox") })
                }
            })
        }, showFlydongtai: function (e) {
            var t = this, i = e.currentTarget;
            top.BH("checkhangban");
            var a = $(i).attr("flightDate"), s = $(i).attr("flightNo"), o = $(i).parents("[mid]").attr("mid");
            null != $Date.parse(a) && $Date.parse(a).getTime() - $Date.parse("2017-09-01").getTime() < 0 ? t.dongTaiSucessCon({ mid: o }) : t.navbarmodel.getflightInfo({}, function (e) {
                t.dongTaiSucessCon({ result: e, mid: o })
            }, { flightDate: a, flightNo: s })
        }, dongTaiSucessCon: function (e) {
            var t = this, i = $App.getMailDataByMid(e.mid), a = t.navbarmodel, s = t.navbarmodel.dongtaiTpl, o = t.initVal;
            if (e.result) {
                var n = e.result["var"];
                s = top.$T.Utils.format(s, {
                    fltCompany: n.fltCompany.length > 0 ? n.fltCompany : a.getFlightCName({ row: i }),
                    fltState: n.fltState.length > 0 ? n.fltState : o,
                    depAirport: n.depAirport.length > 0 ? n.depAirport : a.getTimeOrPort({
                        row: i,
                        type: "addr",
                        status: "起飞"
                    }),
                    arrAirport: n.arrAirport.length > 0 ? n.arrAirport : a.getTimeOrPort({
                        row: i,
                        type: "addr",
                        status: "到达"
                    }),
                    planUpTime: n.planUpTime.length > 0 ? n.planUpTime : o,
                    planDwTime: n.planDwTime.length > 0 ? n.planDwTime : o,
                    checkInBar: n.checkInBar.length > 0 ? n.checkInBar : o,
                    upBar: n.upBar.length > 0 ? n.upBar : o,
                    dwBar: n.dwBar.length > 0 ? n.dwBar : o,
                    bagCarousel: n.bagCarousel.length > 0 ? n.bagCarousel : o,
                    getIconClass: a.getIconClass({ row: i }),
                    fltNo: a.getflightNo({ row: i }),
                    searchUpDate: a.getTimeOrPort({ row: i, type: "type_monthHours", status: "起飞" }) || o,
                    searchDownDate: a.getTimeOrPort({ row: i, type: "type_monthHours", status: "到达" }) || o,
                    passengers: a.getPassenger({ row: i }) || o,
                    tipdom: a.getfltStateDom({ flightInfoCollect: n }) || o
                })
            } else s = top.$T.Utils.format(s, {
                fltCompany: a.getFlightCName({ row: i }),
                fltState: "到达",
                depAirport: a.getTimeOrPort({ row: i, type: "addr", status: "起飞" }),
                arrAirport: a.getTimeOrPort({ row: i, type: "addr", status: "到达" }),
                planUpTime: o,
                planDwTime: o,
                checkInBar: o,
                upBar: o,
                dwBar: o,
                bagCarousel: o,
                getIconClass: a.getIconClass({ row: i }),
                fltNo: a.getflightNo({ row: i }),
                searchUpDate: a.getTimeOrPort({ row: i, type: "type_monthHours", status: "起飞" }) || o,
                searchDownDate: a.getTimeOrPort({ row: i, type: "type_monthHours", status: "到达" }) || o,
                passengers: a.getPassenger({ row: i }) || o,
                tipdom: a.tipstutedom.historyreach
            });
            var r = $Msg.showHTML(s, function () {
            }, function () {
            }, { hideTitleBar: !0 });
            $D.setDragAble(r.el, {
                handleElement: r.$el.find("#dragbox"), onDragEnd: function (e) {
                }
            })
        }, renderdescrNav: function () {
            var e = this, t = e.model.get("modelType") || "", i = this.model.get("searchOptions").from || "";
            "1000011" == t ? e.handeEle.find("#descrStorke").show() : ($("#mailing-lists-inner").before(this.navbarmodel.navTree), e.handeEle.find("#descrStorke").hide()), "left" != i && e.handeEle.find("#zhiNengCon").addClass("serPage");
            var a = [1010001, 1010002, 1010003, 1010004, 1010005, 1010006, 1010007], s = $.inArray(parseInt(t), a);
            s > -1 && e.navbarmodel.getCardBox(t, function (t) {
                e.handeEle.find("#StrokeInfoCon").after(t)
            })
        }
    })
}),

//M2012.Mailbox.View.Bankbill
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Mailbox.View.Bankbill", s.extend({
        sendId: "",
        initVal: "——",
        template: {
            pageBar: '<div class="downPagenumBox clearfix" id="maillist_pager_bottom" style="width:860px"></div>',
            bankBillTitle: ['<div class="noneReservation">', '<div class="travelChen">', '<h4 class="noneReservation-tipsTitle"><img class="i-airplane" src="../images/module/inbox/trip/img_02.png">银行账单：这里汇聚各银行账单邮件信息，如信用卡账单、消费提醒等</h4>', "</div>", "</div>"].join(""),
            contentBox: '<div id="bankBillList" class="travel-lisCont"></div>',
            timeLabel: '<h3 class="travel-mailing-date" day={day}>{day}</h3>',
            billBox: '<ul class="travel-list"></ul>',
            consumerReminder: ['<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid={mid} sendId={sendId} timerAllTitle={timerAllTitle}>', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg">{getBankPlcDom}</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" type="title" name="noclickzineng">{title}</h4>', '<i class="fr icons i-triangle-sq" type="bankBill" name="noclickzineng" sendId={sendId}></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill billTips">', "<tbody>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">交易时间</p></td>', '<td class="sub-td2"><p class="billCont">{payTime}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">交易金额</p></td>', '<td class="sub-td2"><p class="billCont">{price}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">交易商户</p></td>', '<td class="sub-td2"><p class="billCont">{company}</p></td>', "</tr>", "</tbody>", "</table>", "</div>", '<div class="listItem-contF clearfix">', '<a href={jumpLink} target="_blank" class="fr icoG"><span class="p_relative" name="noclickzineng">查询额度<i class="r-line"></i></span></a>', "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join(""),
            creditCardBill: ['<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid={mid} sendId={sendId} timerAllTitle={timerAllTitle}>', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg">{getBankPlcDom}</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" type="title" name="noclickzineng">{title} {timerTitle}</h4>', '<i class="fr icons i-triangle-sq" name="noclickzineng" type="bankBill" sendId={sendId}></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill bankBill">', "<tbody>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">账单日期</p></td>', '<td class="sub-td3"><p class="billCont">{billTime}</p></td>', '<td class="sub-td6"><p class="billTitle">最后还款日</p></td>', '<td class="sub-td5"><p class="billCont">{lastPayTime}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">账单金额</p></td>', '<td class="sub-td3"><p class="billCont">{needPay}</p></td>', '<td class="sub-td6"><p class="billTitle">最低还款金额</p></td>', '<td class="sub-td5"><p class="billCont">{minPay}</p></td>', "</tr>", "</tbody>", "</table>", "</div>", '<div class="listItem-contF clearfix" style="display:{checkSmsTipDom}">', '<a taskDate={taskDate} billTime={billTime} lastPayTime={lastPayTime} taskFlag={taskFlag} starFlag={starFlag} href="javascript:void(0)" class="fr icoG"><span class="p_relative" name="noclickzineng">{remindText}<i class="r-line"></i></span></a>', "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join(""),
            none: ['<div class="noneReservation">', '<div class="travelChen">', '<h4 class="noneReservation-tipsTitle"><img class="i-airplane" src="../images/module/inbox/trip/img_02.png">银行账单：这里汇聚各银行账单邮件信息，如信用卡账单、消费提醒等</h4>', "</div>", '<div class="travel-lisCont">', '<div class="noneReservation-listItem">', '<h4 class="noneReservation-listTitleMod"><span class="fw_b">我的银行账单：</span>点击<a href="http://market.cmbchina.com/ccard/xyksq/xyksq.html?WT.srch=1&WT.mc_id=N3700BD1057Z074200BZ" target="_blank">招商银行信用卡</a>前往办理信用卡。</h4>', '<ul class="travel-list">', '<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem">', '<td class="parent-td td1">', '<div class="listItem-disImg"><img src="../images/module/inbox/trip/img_01.jpg" alt="招商银行"></div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name">招商银行信用卡消费提醒</h4>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill billTips">', "<tbody>", "<tr>", '<td class="sub-td1"><p class="billTitle">交易时间</p></td>', '<td class="sub-td2"><p class="billCont">XXXX年XX月XX日</p></td>', "</tr>", "<tr>", '<td class="sub-td1"><p class="billTitle">交易金额</p></td>', '<td class="sub-td2"><p class="billCont">XXXX</p></td>', "</tr>", "<tr>", '<td class="sub-td1"><p class="billTitle">交易商户</p></td>', '<td class="sub-td2"><p class="billCont">XXXX</p></td>', "</tr>", "</tbody>", "</table>", "</div>", '<div class="listItem-contF clearfix"></div>', "</td>", "</tr>", "</tbody>", "</table>", "</li>", '<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem">', '<td class="parent-td td1">', '<div class="listItem-disImg"><img src="../images/module/inbox/trip/img_01.jpg" alt="招商银行"></div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name">招商银行信用卡账单</h4>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill billCard">', "<tbody>", "<tr>", '<td class="sub-td1"><p class="billTitle">账单日期</p></td>', '<td class="sub-td3"><p class="billCont">XXXX年XX月XX日</p></td>', '<td class="sub-td6"><p class="billTitle">最后还款日</p></td>', '<td class="sub-td5"><p class="billCont">XXXX年XX月XX日</p></td>', "</tr>", "<tr>", '<td class="sub-td1"><p class="billTitle">账单金额</p></td>', '<td class="sub-td3"><p class="billCont">XXXX</p></td>', '<td class="sub-td6"><p class="billTitle">最低还款金额</p></td>', '<td class="sub-td5"><p class="billCont">XXXX</p></td>', "</tr>", "</tbody>", "</table>", "</div>", '<div class="listItem-contF clearfix"></div>', "</td>", "</tr>", "</tbody>", "</table>", "</li>", "</ul>", '<p class="noneReservation-listItem-ftTips">建议您在招商银行办理信用卡的个人信息中将电子邮箱改为139邮箱，139邮箱将有效的管理您的账单记录。</p>', "</div>", "</div>", "</div>"].join("")
        },
        initialize: function (e) {
            return e = e || {}, this.model = $App.getMailboxView().model, this.eofficialModel = new M2012.Mailbox.Model.Eofficial, this.navbarmodel = new M2012.Mailbox.Model.Strokenavbar, this.from = this.model.get("searchOptions").from || "", this.sendId = e.sendId, this.render(), s.prototype.initialize.apply(this, arguments)
        },
        render: function () {
            var e = this;
            this.renderBase(), e.eofficialModel.checkListBh({ sendId: e.sendId })
        },
        initEvents: function () {
            var e = this;
            a("#Official_back").click(function () {
                top.BH("Official_home"), $App.showBill(16)
            }), this.$el.find(".i-triangle-sq").click(function (t) {
                e.navbarmodel.createZhiNengFunBtn(t)
            }), this.$el.find(".listItem-contH [type=title]").click(function (t) {
                e.navbarmodel.zhiNengsearchMails(t)
            }), this.$el.find(".listItem-contF [taskDate]").click(function (t) {
                e.readyToShowMenu(t)
            }), $App.on("remindRender", function (t) {
                var i = e.$el.find("#bankBillList [mid=" + t.mid + "]");
                i.find(".listItem-contF a").attr({
                    taskDate: t.taskDate,
                    taskFlag: t.taskFlag
                }).find("span").text(t.taskFlag ? "已设置提醒" : "设置提醒")
            })
        },
        renderBase: function () {
            var e = this, t = e.sendId;
            e.$el = a("<div></div>"), "left" !== this.from ? (a("#mailing-lists-inner").before(e.navbarmodel.navTree), e.navbarmodel.getCardBox(t, function (t) {
                e.$el.prepend(t)
            })) : e.$el.append(e.template.bankBillTitle), e.$el.append(e.template.contentBox), e.$el.append(e.template.pageBar)
        },
        DataBind: function (e) {
            var i = this;
            return e = e || [], 0 === e.length ? this.renderNone() : t.each(e, function (e) {
                i.renderBill(e)
            }), this.reMarkMails(), this.initEvents(), this.$el
        },
        renderNone: function () {
            var e = this, t = e.sendId;
            "left" == this.from ? this.$el.html(this.template.none) : e.navbarmodel.getCardBox(t, function (t) {
                var i = e.navbarmodel.getEmptypage();
                e.$el.html(t), e.$el.append(i)
            })
        },
        renderBill: function (e) {
            return this.renderBankBill(e)
        },
        renderBankBill: function (e) {
            var t = this, i = this.$el.find("#bankBillList");
            "left" !== this.from && i.addClass("serPage");
            var s = this.eofficialModel.getDateFormat(1e3 * e.receiveDate), o = i.find(".travel-mailing-date[day=" + s + "]");
            if (o.length) o.next("ul").append(t.getBankTemplate(e)); else {
                var n = top.$T.Utils.format(t.template.timeLabel, { day: s }), r = a(this.template.billBox);
                r.append(t.getBankTemplate(e)), i.append(n), i.append(r)
            }
        },
        getBankTemplate: function (e) {
            var t = this, i = t.eofficialModel.getEPName(e), a = t.getSummaryJson(e.summary), s = t.isNewBankBill(e), o = t.getRealBankBillDay(e), n = {
                name: i,
                getBankPlcDom: t.getBankPlcDom(e),
                timerAllTitle: t.eofficialModel.getRetime({ type: "YearMonthDay", item: e }),
                timerTitle: "(" + o + ")",
                mid: e.mid,
                sendId: e.sendId,
                checkSmsTipDom: t.checkSmsTipDom(e) ? "" : "none",
                taskDate: e.taskDate,
                taskFlag: e.flags.taskFlag,
                starFlag: e.flags.starFlag,
                remindText: e.flags.taskFlag ? "已设置提醒" : "设置提醒"
            };
            return -1 != e.subject.indexOf("电子账单") && a.validateFlag && "1010101" == t.sendId ? t.getCBMMonthDetailItem(e, n, a) : -1 != e.subject.indexOf("消费提醒") && a.validateFlag && "1010101" == t.sendId ? t.getCBMTipsDetailItem(e, n, a) : a.validateFlag && s ? t.getBankMonthDetailItem(e, n, a) : t.eofficialModel.getFailDetailItem(e)
        },
        getCBMMonthDetailItem: function (e, t, i) {
            var s = this, o = s.eofficialModel.getEPName(e), n = s.initVal, r = i["最后还款日"] || n, l = i["人民币账单金额"] || i["美元账单金额"] || i["账单金额"] || n, c = i["人民币最低还款额"] || i["美元最低还款额"] || i["最低还款额"] || n, d = s.getRealBankBillDay(e), p = a.extend(t, {
                title: o + "信用卡账单",
                billTime: d,
                lastPayTime: r,
                needPay: l,
                minPay: c
            });
            return top.$T.Utils.format(s.template.creditCardBill, p)
        },
        getCBMTipsDetailItem: function (e, t, i) {
            var s = this, o = s.eofficialModel.getEPName(e), n = s.initVal, r = i["金额"] || n, l = i["商户名称"] || n, c = i["交易时间"] || n, d = s.formatCurrencyStyle(e), p = r == n ? n : d + r, m = a.extend(t, {
                title: o + "信用卡消费提醒",
                payTime: c,
                price: p,
                company: l,
                jumpLink: "https://xyk.cmbchina.com/myAccindex?WT.refp=%2Fdbtn2$"
            });
            return top.$T.Utils.format(s.template.consumerReminder, m)
        },
        getBankMonthDetailItem: function (e, t, i) {
            var s = this, o = s.eofficialModel.getEPName(e), n = s.initVal, r = i["最后还款日"] || n, l = i["账单金额"] || n, c = i["最低还款额"] || n, d = s.getRealBankBillDay(e), p = s.formatCurrencyStyle(e);
            l = l == n ? n : p + l, c = c == n ? n : p + c;
            var m = a.extend(t, { title: o + "信用卡账单", billTime: d, lastPayTime: r, needPay: l, minPay: c });
            return top.$T.Utils.format(s.template.creditCardBill, m)
        },
        getSummaryJson: function (e) {
            for (var t = {}, i = e.split("\n"), a = 0, s = /银行卡|卡号后四位|可用额度|取现额度|交易时间|商户名称|金额|币种|账单日期|最后还款日|人民币账单金额|美元账单金额|人民币最低还款额|美元最低还款额|账单金额|最低还款额/, o = 0, n = i.length; n > o; o++) {
                var r = /：|:/;
                if (r.test(i[o])) {
                    var l = RegExp.leftContext, c = RegExp.rightContext;
                    t[l] = c, s.test(l) && c && c.length > 0 && a++
                }
            }
            return 4 > a ? t.validateFlag = !1 : t.validateFlag = !0, t
        },
        formatCurrencyStyle: function (e) {
            var t = this, i = t.getSummaryJson(e.summary), s = i["币种"] || "";
            s = a.trim(s);
            var o = ["人民币", "元", "￥", "CNY", "RMB", "¥"], n = ["美元", "美金", "$", "USD", "usd"];
            return -1 != a.inArray(s, o) ? "￥" : -1 != a.inArray(s, n) ? "$" : ""
        },
        reMarkMails: function () {
            var e = "" + this.model.get("modelType") || "", t = { sendIds: [e], type: "read", value: 0 };
            this.model.markUseNewModeMail(t, function (e) {
                e.responseData && "S_OK" == e.responseData.code && $App.trigger("reloadFolder", { reload: !0 })
            })
        },
        isNewBankBill: function (e) {
            return 1010101 < e.sendId && 1010200 > e.sendId
        },
        getBankPlcDom: function (e) {
            var t = e.sendId, i = ["<img src='../images/module/inbox/trip/img_01.jpg'>"].join(""), a = {
                1010101: "img_01.jpg",
                1010102: "bankjs.jpg",
                1010103: "bankjt.jpg",
                1010104: "bankgf.jpg",
                1010105: "bankny.jpg",
                1010106: "bankxy.jpg",
                1010107: "bankgd.jpg",
                1010108: "bankyz.jpg",
                1010109: "bankhs.jpg"
            }, s = ["<img src='../images/module/inbox/trip/{url}'>"].join(""), o = a.hasOwnProperty(t) ? $T.Utils.format(s, { url: a[t] }) : i;
            return o
        },
        checkSmsTipDom: function (e) {
            var t = this, i = t.initVal, a = t.getSummaryJson(e.summary), s = a["最后还款日"] || i, o = (t.getRealBankBillDay(e), /(\d{1,2})日/), n = /(\d{1,2})月/;
            return null != s.match(o) && null != s.match(n)
        },
        readyToShowMenu: function (e) {
            var t, i, s, o, n, r = this;
            t = a(e.target).parents("tr[mid]").attr("mid"), i = a(e.target).parent().attr("taskDate"), s = a(e.target).parent().attr("taskFlag"), o = a(e.target).parent().attr("lastPayTime"), n = a(e.target).parent().attr("billTime");
            var l = this.getRealLastPayDate(o, n);
            r.showMenu(e, { flag: { taskFlag: s }, mid: t, taskDate: i, dtop: 12, dleft: 9, from: "bankBill", payDate: l })
        },
        getRealLastPayDate: function (e, t) {
            var i = /(\d{1,2})日/, a = /(\d{1,2})月/, s = /(\d{2,4})年/, o = new Date;
            if (null == t.match(a) || null == t.match(s) || null == e.match(i) || null == e.match(a)) return o;
            var n = parseInt(e.match(i)[1], 10), r = parseInt(e.match(a)[1], 10), l = parseInt(t.match(a)[1], 10), c = parseInt(t.match(s)[1], 10);
            return l > r && r !== l && c++, o.setFullYear(c), o.setMonth(r - 1), o.setDate(n), o
        },
        getRealBankBillDay: function (e) {
            var t = this, i = t.initVal, a = t.getSummaryJson(e.summary), s = a["账单日期"] || i, o = (s.replace(/\s+/g, ""), s.match(/\d{4}年\d{2}月/));
            return o && o[0] ? o[0] : $Date.format("yyyy年MM月", new Date(1e3 * e.receiveDate))
        },
        showMenu: function (e, i) {
            var s = this;
            i = t.extend(i, { element: e.target }), s.popMenu || (s.popMenu = $App.getView("starOrRemindPopMenu")), s.popMenu.showMenu(i), a("#starOrRemindPopContainer").css({ left: "998px" })
        }
    }))
}(jQuery, _, M139),

//M2012.Mailbox.View.Utilitybill
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Mailbox.View.Utilitybill", s.extend({
        sendId: "",
        initVal: "——",
        template: {
            pageBar: '<div class="downPagenumBox clearfix" id="maillist_pager_bottom" style="width:860px"></div>',
            contentBox: '<div id="UtilityBillList" class="travel-lisCont"></div>',
            timeLabel: '<h3 class="travel-mailing-date" day={day}>{day}</h3>',
            billBox: '<ul class="travel-list"></ul>',
            gasBill: ['<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid="{mid}" sendId={sendId} timerAllTitle={timerAllTitle}>', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg">{UtilityPlcDom}</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" type="title" name="noclickzineng">{timerTitle}燃气账单</h4>', '<i class="fr icons i-triangle-sq" name="noclickzineng" type="bankBill" sendId="{sendId}"></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill gasBill">', "<tbody>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">户号</p></td>', '<td class="sub-td3"><p class="billCont">{acout}</p></td>', '<td class="sub-td6"><p class="billTitle">金额</p></td>', '<td class="sub-td5"><p class="billCont">{money}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">户名</p></td>', '<td class="sub-td3"><p class="billCont">{name}</p></td>', '<td class="sub-td6"><p class="billTitle">消费立方数</p></td>', '<td class="sub-td5"><p class="billCont">{usetotal}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">地址</p></td>', '<td class="sub-td3"><p class="billCont">{addr}</p></td>', '<td class="sub-td6"><p class="billTitle">抄表日期</p></td>', '<td class="sub-td5"><p class="billCont">{copytime}</p></td>', "</tr>", "</tbody>", "</table>", "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join(""),
            waterBill: ['<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid={mid} sendId={sendId} timerAllTitle={timerAllTitle}>', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg">{UtilityPlcDom}</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" type="title" name="noclickzineng">{timerTitle}水费账单</h4>', '<i class="fr icons i-triangle-sq" name="noclickzineng" type="bankBill" sendId="{sendId}"></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill swBill">', "<tbody>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">户号</p></td>', '<td class="sub-td3"><p class="billCont">{acout}</p></td>', '<td class="sub-td6"><p class="billTitle">金额</p></td>', '<td class="sub-td5"><p class="billCont">{money}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">户名</p></td>', '<td class="sub-td3"><p class="billCont">{name}</p></td>', '<td class="sub-td6"><p class="billTitle">用水量</p></td>', '<td class="sub-td5"><p class="billCont">{usetotal}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">地址</p></td>', '<td class="sub-td3"><p class="billCont">{addr}</p></td>', '<td class="sub-td6"><p class="billTitle">{billTimedesc}</p></td>', '<td class="sub-td5"><p class="billCont">{copytime}</p></td>', "</tr>", "</tbody>", "</table>", "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join(""),
            electrBill: ['<li class="travel-listItem travel-listItem-bank">', '<table class="travelTable">', "<tbody>", '<tr class="listItem" mid={mid} sendId={sendId} timerAllTitle={timerAllTitle}>', "<td></td>", '<td class="parent-td td1">', '<div class="listItem-disImg">{UtilityPlcDom}</div>', "</td>", '<td class="parent-td td2 clearfix">', '<div class="clearfix listItem-contH">', '<h4 class="fl airLine-name" type="title" name="noclickzineng">{timerTitle}电费账单</h4>', '<i class="fr icons i-triangle-sq" name="noclickzineng" type="bankBill" sendId="{sendId}"></i>', "</div>", '<div class="listItem-contM">', '<table class="subTravelTable-bill dlBill">', "<tbody>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">户号</p></td>', '<td class="sub-td3"><p class="billCont">{acout}</p></td>', '<td class="sub-td6"><p class="billTitle">金额</p></td>', '<td class="sub-td5"><p class="billCont">{money}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">户名</p></td>', '<td class="sub-td2"><p class="billCont">{name}</p></td>', '<td class="sub-td6"><p class="billTitle">电量</p></td>', '<td class="sub-td5"><p class="billCont">{usetotal}</p></td>', "</tr>", "<tr>", "<td></td>", '<td class="sub-td1"><p class="billTitle">地址</p></td>', '<td class="sub-td2"><p class="billCont">{addr}</p></td>', '<td class="sub-td6"><p class="billTitle">抄表日期</p></td>', '<td class="sub-td5"><p class="billCont">{copytime}</p></td>', "</tr>", "</tbody>", "</table>", "</div>", "</td>", "</tr>", "</tbody>", "</table>", "</li>"].join("")
        },
        initialize: function (e) {
            return e = e || {}, this.eofficialModel = new M2012.Mailbox.Model.Eofficial, this.navbarmodel = new M2012.Mailbox.Model.Strokenavbar, this.sendId = e.sendId, this.render(), s.prototype.initialize.apply(this, arguments)
        },
        render: function () {
            var e = this;
            e.renderBase(), e.eofficialModel.checkListBh({ sendId: e.sendId })
        },
        initEvents: function () {
            var e = this;
            a("#Official_back").click(function () {
                top.BH("Official_home"), $App.showBill(16)
            }), this.$el.find(".i-triangle-sq").click(function (t) {
                e.navbarmodel.createZhiNengFunBtn(t)
            }), this.$el.find(".listItem-contH [type=title]").click(function (t) {
                e.navbarmodel.zhiNengsearchMails(t)
            })
        },
        renderBase: function () {
            var e = this, t = e.sendId;
            e.$el = a("<div></div>"), a("#mailing-lists-inner").before(e.navbarmodel.navTree), e.navbarmodel.getCardBox(t, function (t) {
                e.$el.prepend(t)
            }), e.$el.append(e.template.contentBox), e.$el.append(e.template.pageBar)
        },
        renderNone: function () {
            var e = this, t = e.sendId;
            e.navbarmodel.getCardBox(t, function (t) {
                var i = e.navbarmodel.getEmptypage();
                e.$el.html(t), e.$el.append(i)
            })
        },
        renderBill: function (e) {
            return this.renderUtilityBill(e)
        },
        renderUtilityBill: function (e) {
            var t = this, i = this.$el.find("#UtilityBillList");
            i.addClass("serPage");
            var s = this.eofficialModel.getDateFormat(1e3 * e.receiveDate), o = i.find(".travel-mailing-date[day=" + s + "]");
            if (o.length) o.next("ul").append(t.getUtilityTemplate(e)); else {
                var n = top.$T.Utils.format(t.template.timeLabel, { day: s }), r = a(this.template.billBox);
                r.append(t.getUtilityTemplate(e)), i.append(n), i.append(r)
            }
        },
        getUtilityTemplate: function (e) {
            var t = this, i = t.getUtilitySummaryJson(e), s = t.getUtilityPlcDom(e), o = t.timerTitle(e), n = t.eofficialModel.getRetime({
                item: e,
                type: "AllTime"
            }), i = t.getUtilitySummaryJson(e), r = t.initVal, l = {
                mid: e.mid,
                sendId: e.sendId,
                timerTitle: o,
                timerAll: n,
                UtilityPlcDom: s,
                acout: i["户号"] || r,
                money: i["金额"] || r,
                name: i["户名"] || r,
                addr: i["地址"] || r,
                usetotal: r,
                copytime: r
            };
            if ("water" == i.type && i.validateFlag) {
                var c = a.extend(l, {
                    billtype: "waterbill",
                    usetotal: i["用水量"] || r,
                    billTimedesc: t.getBillTimedesc(e),
                    copytime: i["缴费月份"] || i["计费周期"] || r
                });
                return top.$T.Utils.format(t.template.waterBill, c)
            }
            if ("gas" == i.type && i.validateFlag) {
                var c = a.extend(l, { billtype: "gasbill", usetotal: i["消费立方数"] || r, copytime: i["抄表日期"] || r });
                return top.$T.Utils.format(t.template.gasBill, c)
            }
            if ("electr" == i.type && i.validateFlag) {
                var c = a.extend(l, { billtype: "electrbill", usetotal: i["电量"] || r, copytime: i["抄表日期"] || r });
                return top.$T.Utils.format(t.template.electrBill, c)
            }
            return t.eofficialModel.getFailDetailItem(e)
        },
        getUtilitySummaryJson: function (e) {
            var t = {}, i = { 1000100: "water", 1000101: "water", 1000102: "gas", 1000103: "electr" }, a = i[e.sendId];
            t.type = a;
            for (var s = e.summary.split(";"), o = 0, n = /户号|户名|地址|金额|消费立方数|电量|用水量|抄表日期|缴费月份|计费周期/, r = 0, l = s.length; l > r; r++) {
                var c = /：|:/;
                if (c.test(s[r])) {
                    var d = RegExp.leftContext, p = RegExp.rightContext;
                    t[d] = p, n.test(d) && p && p.length > 0 && o++
                }
            }
            return 4 > o ? t.validateFlag = !1 : t.validateFlag = !0, t
        },
        getUtilityPlcDom: function (e) {
            var t = e.sendId, i = ["<img src='../images/module/inbox/trip/zjgas.jpg'>"].join(""), a = {
                1000100: "zjsw.jpg",
                1000101: "zjzls.jpg",
                1000102: "zjgas.jpg",
                1000103: "zjdl.jpg"
            }, s = ["<img src='../images/module/inbox/trip/{url}'>"].join(""), o = a.hasOwnProperty(t) ? $T.Utils.format(s, { url: a[t] }) : i;
            return o
        },
        getBillTimedesc: function (e) {
            var t = e.sendId, i = "缴费时间", a = { 1000100: "计费周期", 1000101: "缴费月份" }, s = a.hasOwnProperty(t) ? a[t] : i;
            return s
        },
        DataBind: function (e) {
            var i = this;
            return e = e || [], 0 === e.length ? this.renderNone() : t.each(e, function (e) {
                i.renderBill(e)
            }), this.reMarkMails(), this.initEvents(), this.$el
        },
        reMarkMails: function () {
            var e = "" + this.model.get("modelType") || "", t = { sendIds: [e], type: "read", value: 0 };
            this.model.markUseNewModeMail(t, function (e) {
                e.responseData && "S_OK" == e.responseData.code && $App.trigger("reloadFolder", { reload: !0 })
            })
        },
        timerTitle: function (e) {
            var t = $T.Html.encode(e.subject) || "(无)", i = $Date.format("yyyy年MM月", new Date(1e3 * e.receiveDate)), a = t.match(/\d{4}[\u5e74]\d{1,2}[\u6708]/);
            return a && a[0] ? a[0] : i
        }
    }))
}(jQuery, _, M139),

//M2012.Mailbox.View.Eofficial
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Mailbox.View.Eofficial", s.extend({
        initialize: function (e) {
            return e = e || {}, this.eofficialModel = new M2012.Mailbox.Model.Eofficial, this.model = e.model, this.data = e.datasource, this.from = this.model.get("searchOptions").from || "", s.prototype.initialize.apply(this, arguments)
        }, renderBase: function (e) {
            var t = this;
            t.$el = a('<div class="mail-service" id="mainserviceCon"></div>'), t.$el.append(t.eofficialModel.officeCon), t.$el.append(t.centerInfoCon(e)), t.$el.append(t.eofficialModel.pageBar)
        }, initEvents: function () {
            var e = this;
            e.$el.find("li[mid]").click(function (t) {
                var i = t.target, s = a(i), o = s.attr("name");
                "btnclick" != o && e.searchMailsByOfficePage(t)
            }), e.$el.find("i[name=btnclick]").click(function (t) {
                e.createOfficalFunBtn(t)
            })
        }, createOfficalFunBtn: function (e) {
            var t = this, i = e.currentTarget;
            t.menu = M2012.UI.PopMenu.create({
                width: "78px",
                direction: "auto",
                hideInsteadOfRemove: !0,
                container: a(i),
                items: [{
                    text: "删除", onClick: function () {
                        t.delMailByOfficalPage(e)
                    }, bh: ""
                }],
                left: 818,
                top: 34,
                onItemClick: function (e) {
                }
            })
        }, delMailByOfficalPage: function (e) {
            var t = this, s = e.target, o = a(s).parents("li[mid]").attr("mid"), n = Number(a(s).parents("li[sendId]").attr("sendId")), r = {
                mids: [o],
                sendIds: [n],
                newFid: 4,
                sendFlag: ""
            }, l = t.eofficialModel.deleText;
            $Msg.confirm(l.context, function () {
                i.UI.TipMessage.show(l.deling), t.model.moveMail(r, 4, function (e) {
                    e.responseData && "S_OK" == e.responseData.code ? $App.trigger("reloadFolder", {
                        callback: function () {
                            var e = t.model.get("searchOptions");
                            $App.searchMail(e), i.UI.TipMessage.show(l.succeeddel, { delay: 3e3 })
                        }
                    }) : i.UI.TipMessage.error(l.falldel, { delay: 3e3 })
                })
            }, function () {
                BH("cencel_delete")
            }, { title: "", dialogTitle: "删除邮件", icon: "warn", buttons: ["删除", "取消"] });
            a(".btnSure") && a(".btnSure").addClass("icoDel").removeClass("icoG").removeClass("btnSure")
        }, DataBind: function (e) {
            var t = this;
            return e = t.resortData(e), e = t.reBuildDataBySendId(e), e = e || [], 0 === e.length ? t.renderNone() : t.renderBase(e), this.initEvents(), this.$el
        }, resortData: function (e) {
            return 0 === e.length ? e : (e.sort(function (e, t) {
                var i = e.receiveDate, a = t.receiveDate;
                return a - i
            }), e)
        }, reBuildDataBySendId: function (e) {
            for (var t = e.length, i = [], s = [], o = 0; t > o; o++) -1 == a.inArray(e[o].sendId, s) && (s.push(e[o].sendId), i.push(e[o]));
            return i
        }, searchMailsByOfficePage: function (e) {
            var t = this, i = a(e.target).parents("[sendId]").attr("sendId"), s = t.model.modelTitle, o = s[i];
            o && o.hasOwnProperty("officialBH") ? top.BH(o.officialBH) : "", $App.searchMail({
                fid: 1,
                isSearch: 1,
                isFullSearch: 0,
                exceptFids: [4],
                condictions: [{ field: "sendId", operator: "=", value: i }]
            })
        }, renderNone: function () {
            var e = this;
            e.$el = a('<div class="mail-service" id="mainserviceCon"></div>'), e.$el.append(e.eofficialModel.emptyOutline)
        }, centerInfoCon: function (e) {
            for (var t = this, i = e.length || 0, a = "", s = t.$el.find("#officeCon"), o = 0; i > o; o++) {
                var n = e[o];
                a += t.getItemHtml(n)
            }
            return s.append(a), s
        }, getItemHtml: function (e) {
            var t = this, i = "", a = t.eofficialModel;
            return i = top.$T.Utils.format(t.eofficialModel.detailItem, {
                getSubject: a.getSubject(e),
                getEPName: a.getEPName(e),
                getsendTotalNum: a.getsendTotalNum(e),
                getcompanyLogo: a.getcompanyLogo(e),
                getDate: a.getDate(e),
                StrokeVIcon: a.getStrokeVIcon(e),
                mid: e.mid,
                timerAllTitle: a.getRetime({ type: "YearMonthDay", item: e }),
                sendId: e.sendId
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Mailbox.View.telbillcard
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Mailbox.View.telbillcard", s.extend({
        tellBillSymbel: "telBill", billSymbel: "bill", initialize: function (e) {
            this.options = e, this.$el = a("<div></div>"), this.$el.append(e.html)
        }, render: function () {
            return this.isBillMode() && top.BH("telbill_load"), this.replaceHtml(), this.addEvents(), this.$el
        }, replaceHtml: function () {
            var e = this.$el.find("[type=" + this.tellBillSymbel + "]");
            if (e.length && !this.isSearchBillUnread()) if (this.isBillMode() && this.isFirstPage()) for (var i = 0; i < e.length; i++) {
                var a = this.findData(e.eq(i)) || {}, s = this.model.regTellBillCardSummery(a.summary);
                if (s && this.isBillLogoType(a)) {
                    this.setRead(a);
                    var o = t.template(this.template.allBill)(t.extend(s, this.getMailAttr(e.eq(i))));
                    return e.eq(i).html(o), !0
                }
            } else for (var i = 0; i < e.length; i++) {
                var a = this.findData(e.eq(i)) || {}, s = this.model.regTellBillCardSummery(a.summary);
                if (s && this.isBillLogoType(a)) {
                    var o = t.template(this.template.mailTelbill)(t.extend(s, this.getMailAttr(e.eq(i))));
                    e.eq(i).find(".tdtitle").html(o), e.eq(i).find(".td1 i").remove(), e.eq(i).find(".td1 div").append('<i class="icons i-cmcc-14" title="中国移动"></i>'), e.eq(i).addClass("smartMail-cardTable"), e.eq(i).find("[name=summary]").html("")
                }
            }
        }, setRead: function (e) {
            $App.getMailboxView().model.markMail([e.mid], { type: "read", value: 0 }, function () {
                $App.trigger("reloadFolder", {
                    callback: function () {
                        $App.trigger("refreshCount")
                    }
                })
            })
        }, findData: function (e) {
            var i = e.attr("mid");
            return t.find(this.options.data, function (e) {
                return e.mid === i
            })
        }, addEvents: function () {
            this.$el.find("[type=queryTelFare]").click(function (e) {
                e.stopPropagation(), top.$App.show("mpostOnlineService", null, {
                    title: "邮箱营业厅",
                    key: "38159",
                    inputData: {
                        urlParams: { oct: "main", oac: "index" },
                        key: "38159",
                        columnId: "38159",
                        columnName: "邮箱营业厅"
                    }
                })
            }), this.$el.find("[type=recharge]").click(function (e) {
                e.stopPropagation(), top.$App.show("mpostOnlineService", null, {
                    title: "邮箱营业厅",
                    key: "38159",
                    inputData: {
                        urlParams: { oct: "ipos", oac: "iposorder" },
                        key: "38159",
                        columnId: "38159",
                        columnName: "邮箱营业厅"
                    }
                })
            }), this.$el.find(".i-triangle-sq").click(function (e) {
                self.navbarmodel || (self.navbarmodel = new M2012.Mailbox.Model.Strokenavbar), self.navbarmodel.createZhiNengFunBtn(e)
            })
        }, getMailAttr: function (e) {
            var t = e.find(".tdtitle");
            return { tdtitle: t.html() }
        }, isSearchBillUnread: function () {
            if (this.model.get("isSearchMode") && this.isBillMode()) {
                var e = this.model.get("searchOptions");
                return !(!e.flags || !e.flags.read)
            }
            return !1
        }, isBillMode: function () {
            if (this.model.get("isSearchMode")) {
                var e = this.model.get("searchOptions");
                if (e && e.flags && 1 == e.flags.billFlag) return !0;
                var t = e.condictions;
                if (!t) return !1;
                for (var i = 0; i < t.length; i++) if (t[i].field) {
                    if (t[i].field.indexOf("logoType") > -1 && 4 != e.condictions[i].value) return !0;
                    if (t[i].field.indexOf("sendId") > -1 && 1000006 === e.condictions[i].value) return !0
                }
            }
            return !1
        }, isBillLogoType: function (e) {
            return 1 == e.logoType || 110 == e.logoType
        }, isOnemailMode: function () {
            return this.model.isOnemailMode()
        }, isFirstPage: function () {
            var e = this.model.get("lastSearchOptions");
            return e ? !(e.start - e.total > 0) : !1
        }, template: {
            allBill: ['<td type="allbill" colspan="7">', '<div class="smartMail-card-travelTable travelTable">', '<div class="clearfix listItem-contH">', '<i class="fl mr_10 icons i-cmcc"></i>', '<h4 class="fl airLine-name">中国移动话费账单(<%= month %>月)</h4>', '<i class="fr icons i-triangle-sq" sendid="1000006"></i>', "</div>", '<div class="listItem-contM">', '<ul class="mailList-smartCard-phoneInfo">', "<li>", '<span class="smartCard-phoneInfo-name">客户姓名</span>', '<span class="smarCard-phoneInfo-value"><%= user %></span>', "</li>", "<li>", '<span class="smartCard-phoneInfo-name">手机号码</span>', '<span class="smarCard-phoneInfo-value"><%= tel %></span>', "</li>", "<li>", '<span class="smartCard-phoneInfo-name">计费周期</span>', '<span class="smarCard-phoneInfo-value"><%= costCycle %></span>', "</li>", "</ul>", '<div class="mailList-smartCard-m">', '<p class="mailList-smartCard-Num"><%= cost %></p>', "<p>本期消费</p>", "</div>", '<div class="mailList-smartCard-m">', '<p class="mailList-smartCard-Num"><%= balance %></p>', "<p>话费余额</p>", "</div>", "</div>", '<div class="listItem-contF clearfix ta_r" <%= styleDetail %>>', '<a type="queryTelFare" href="javascript:void(0)" class="icoG mr_10"><span class="p_relative">话费查询<i class="r-line"></i></span></a>', '<a type="recharge" href="javascript:void(0)" class="icoG"><span class="p_relative">充值服务<i class="r-line"></i></span></a>', "</div>", "</div>", "</td>"].join(""),
            mailTelbill: ["<div>", "<%= tdtitle %>", "</div>", '<div class="mailList-smartCard">', '<div class="mailList-smartCard-m mailList-smartCard-mBr">', '<p class="mailList-smartCard-Num"><%= cost %></p>', "<p>本期消费(元)</p>", "</div>", '<div class="mailList-smartCard-m">', '<p class="mailList-smartCard-Num"><%= balance %></p>', "<p>话费余额(元)</p>", "</div>", '<div class="mailList-smartCard-btnBox">', '<a type="queryTelFare" href="javascript:void(0)" class="icoG mr_10"><span class="p_relative">话费查询<i class="r-line"></i></span></a>', '<a type="recharge" href="javascript:void(0)" class="icoG"><span class="p_relative">充值服务<i class="r-line"></i></span></a>', "</div>", "</div>"].join("")
        }
    }))
}(jQuery, _, M139);

//启动主程序
var appView = null;
$(function () {
    appView = $App = new M2012.MainApplication,
    $App.run(),
    setTimeout(function () {
        if (window.TRIGGER_LIST) {
            for (var e = 0; e < window.TRIGGER_LIST.length; e++) {
                var t = window.TRIGGER_LIST[e];
                $App.trigger(t.key, t.val)
            }
            for (var e = 0; e < window.ON_LIST.length; e++) {
                var t = window.ON_LIST[e];
                $App.on(t.key, t.val)
            }
        }
    }, 50)
}),



//M2012.ReadMail.CalendarWord.View
function (e, t, i) {
    var a = i.View.ViewBase;
    i.namespace("M2012.ReadMail.CalendarWord.View", a.extend({
        name: "M2012.ReadMail.CalendarWord",
        events: {},
        initialize: function () {
            return a.prototype.initialize.apply(this, arguments)
        },
        bindEvent: function () {
        },
        nextHour: function (e) {
            var t = e.getTime(), i = t + 36e5, a = new Date(i);
            return a
        },
        nextDay: function (e) {
            var t = e.getTime(), i = t + 864e5, a = new Date(i);
            return a
        },
        getMonthTime: function (e, t) {
            var i = new Date, a = i.getMonth();
            return i.setMonth(a + e), i.setDate(t), i.setHours(9), i.setMinutes(0), i
        },
        changeChinaDate: function (e, t) {
            for (var i = new Date, a = i.getFullYear(), s = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], o = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十", "二十一", "二十二", "二十三", "二十四", "二十五", "二十六", "二十七", "二十八", "二十九", "三十", "三十一"], n = 0; n < s.length; n++) s[n] == e && (e = n + 1);
            for (var n = 0; n < o.length; n++) o[n] == t && (t = n + 1);
            return $Date.parseValidDateStr(a + "-" + e + "-" + t)
        },
        getNewDayTime: function (e) {
            var t = new Date, i = t.getFullYear();
            switch (t.setHours(9), t.setMinutes(0), e) {
                case "元旦":
                    t.setYear(i + 1), t.setMonth(0), t.setDate(1);
                    break;
                case "五一":
                    t.setMonth(4), t.setDate(1);
                    break;
                case "六一":
                    t.setMonth(5), t.setDate(1);
                    break;
                case "情人节":
                    t.setMonth(1), t.setDate(14);
                    break;
                case "愚人节":
                    t.setMonth(3), t.setDate(1);
                    break;
                case "教师节":
                    t.setMonth(8), t.setDate(10);
                    break;
                case "国庆节":
                    t.setMonth(9), t.setDate(1);
                    break;
                case "光棍节":
                    t.setMonth(10), t.setDate(11);
                    break;
                case "圣诞":
                    t.setMonth(11), t.setDate(25)
            }
            return t
        },
        matchWord: function (e, t, i) {
            function a(e) {
                var i = t || new Date;
                return i.setDate(i.getDate() + e), i.setHours(9), i.setMinutes(0), i
            }

            function s(e, i) {
                var a = (t || new Date).getDay();
                return i && (e += 7), e - a
            }

            var o, n = {}, r = (new Date).getFullYear();
            if (n.subject = e, n.mid = i, t = new Date(1e3 * t), o = e.match(/(\d{4})年(\d\d?)月(\d\d?)日/)) {
                if (n.keyword = o.shift(), n.datetime = $Date.parseValidDateStr(o.join("-")), n.datetime) return n.datetime.setHours(9), n
            } else if ((o = e.match(/(\d{4})年(\d\d?)月/)) && o[2] >= 1 && o[2] <= 12) return n.keyword = o[0], n.isMonthView = !0, n.datetime = t, n;
            if (o = e.match(/(\d{1,2}[\.]){2}\d{4}/)) {
                n.keyword = o[0];
                var l = o[0].split("."), c = l.reverse().join("-");
                if (n.datetime = $Date.parseValidDateStr(c), n.datetime) return n.datetime.setHours(9), n
            }
            if ((o = e.match(/\d{4}([-\/\.]?\d{1,2}){2}/)) && (n.keyword = o[0], n.datetime = $Date.parseValidDateStr(o[0]), n.datetime)) return n.datetime.setHours(9), n;
            if ((o = e.match(/(\d\d?)月(\d\d?)日/)) && (n.keyword = o.shift(), n.datetime = $Date.parseValidDateStr(r + "-" + o.join("-")), n.datetime)) return n.datetime.setHours(9), n;
            if (o = e.match(/(\d{1,2}\/){2}\d{4}/)) {
                n.keyword = o[0];
                var l = o[0].split("/"), c = l.reverse().join("-");
                if (n.datetime = $Date.parseValidDateStr(c), n.datetime) return n.datetime.setHours(9), n
            }
            if (o = e.match(/(\d{1,2}\/){2}\d{2}/)) {
                n.keyword = o[0];
                var l = o[0].split("/"), c = "20" + l.reverse().join("-");
                if (n.datetime = $Date.parseValidDateStr(c), n.datetime) return n.datetime.setHours(9), n
            }
            if (o = e.match(/\d{1,2}\/\d{1,2}/)) {
                n.keyword = o[0];
                var d = r + "/" + o[0];
                if (n.datetime = $Date.parseValidDateStr(d), n.datetime) return n.datetime.setHours(9), n
            }
            if ((o = e.match(/([一二三四五六七八九]|[十][一二])月([一二三四五六七八九十]{1,3})日/)) && (n.keyword = o[0], n.datetime = this.changeChinaDate(o[1], o[2]), n.datetime)) return n.datetime.setHours(9), n;
            if (o = e.match(/今日|今天/)) return n.keyword = o[0], n.datetime = this.nextHour(t), n;
            if (o = e.match(/明日|明天/)) return n.keyword = o[0], n.datetime = a(1), n;
            if (o = e.match(/(?:下周)([七一二三四五六日])/)) {
                var p = s("七一二三四五六日".indexOf(o[1]));
                return n.datetime = a(p + 7), n.keyword = o[0], n
            }
            if (o = e.match(/(?:星期|周)([七一二三四五六日])/)) {
                var p = s("七一二三四五六日".indexOf(o[1]));
                return console.log("day:" + p), n.datetime = a(p), n.keyword = o[0], n
            }
            return (o = e.match(/本月(\d\d?)号/)) ? (n.keyword = o[0], n.datetime = this.getMonthTime(0, o[1]), n) : (o = e.match(/下月(\d\d?)号/)) ? (n.keyword = o[0], n.datetime = this.getMonthTime(1, o[1]), n) : (o = e.match(/(\d\d?)月第[一二三四]周/)) ? (n.keyword = o[0], n.datetime = t, n.week = t.getDay(), n.subject = "记下你准备做的事，最多输入100字", n.isWeekView = !0, n) : (o = e.match(/会议/)) ? (n.datetime = a(1), n.keyword = o[0], n) : (o = e.match(/五一|六一|情人节|愚人节|教师节|国庆节|光棍节/)) ? (n.keyword = o[0], n.datetime = this.getNewDayTime(o[0]), n) : (o = e.match(/银行账单|电子单/)) ? (n.keyword = o[0], n.datetime = t, n.isMonthView = !0, n) : (o = e.match(/面试(通知|邀请)?/)) ? (n.datetime = a(1), n.keyword = o[0], n) : (o = e.match(/集合|聚餐|出游/)) ? (n.datetime = a(1), n.keyword = o[0], n) : n.keyword ? (null == n.datetime && (n = {}), n) : (n.datetime && o ? n.keyword = o[0] : (o = e.match(/紧急|重要/)) && (n.datetime = a(1), n.keyword = o[0]), n)
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.Image.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.Image.View", s.extend({
        name: "M2012.ReadMail",
        imgInfo: { minWidth: 200, minHeight: 200 },
        events: {},
        initialize: function (e) {
            return this.option = e, this.isOverImg = !1, this.$contentDoc = a(e.doc), this.bindEvent(), s.prototype.initialize.apply(this, arguments)
        },
        bindEvent: function () {
            var e = this, t = this.$contentDoc.find(".div_remail_img_tool");
            this.$contentDoc.find("img").each(function () {
                this.onload = function () {
                    a(this).attr("orignSize", a(this).width() + "," + a(this).height())
                }, e.getOrginImgInfo(a(this))
            }), this.$contentDoc.find("img").mouseenter(function () {
                e.mouseEnter(a(this))
            }).mouseleave(function (t) {
                e.isOverImg = !1;
                var i = a(this);
                setTimeout(function () {
                    return e.isOverImg ? !1 : void i.prev(".div_remail_img_tool").remove()
                }, 500)
            }), t.live("mouseenter", function () {
                e.isOverImg = !0
            }).live("mouseleave", function (e) {
                a(e.target) != a(this).next() && a(this).remove()
            }), t.live("click", function (t) {
                var i = a(t.target), s = i.parents(".div_remail_img_tool").next(), o = i.attr("action");
                switch (o) {
                    case "zoomIn":
                        top.BH("readmail_img_zoomin"), e.zoomIn(s, i), e.trigger("zoomIn");
                        break;
                    case "zoomOut":
                        top.BH("readmail_img_zoomout"), e.zoomOut(s, i), e.trigger("zoomOut");
                        break;
                    case "zoomNone":
                        top.BH("readmail_img_origin"), e.zoomNone(s), e.trigger("zoomNone");
                        break;
                    case "full":
                        top.BH("readmail_img_fullscreen"), e.fullScreen(s);
                        break;
                    case "down":
                        top.BH("readmail_img_download"), e.downLoad(s, i);
                        break;
                    case "yun":
                        top.BH("readmail_img_saveyun"), e.saveYun(s);
                        break;
                    case "share":
                        top.BH("readmail_img_share"), e.shareEmail(s, i);
                        break;
                    case "hideImgTool":
                        top.BH("closeImgEditor"), a(this).remove(), e.hideImgTool = !0
                }
            })
        },
        showGray: function (e) {
            var t = e.width(), i = (e.height(), this.getOrginImgInfo(e)), a = this.$contentDoc.find(".div_remail_img_tool");
            1.1 * t >= 2 * i.width ? a.find('a[action="zoomIn"]').addClass("p_selected") : a.find('a[action="zoomIn"]').removeClass("p_selected"), .9 * t <= .1 * i.width ? a.find('a[action="zoomOut"]').addClass("p_selected") : a.find('a[action="zoomOut"]').removeClass("p_selected")
        },
        mouseEnter: function (e) {
            var t = this.getOrginImgInfo(e);
            if (t.width < this.imgInfo.minWidth && t.height < this.imgInfo.minHeight) return !1;
            if (e.hasClass("not_show_img_tool")) return !1;
            if (!this.hideImgTool) {
                var i = '<div class="p_banner_seat div_remail_img_tool" style="position: absolute; z-index:9999;"><a href="javascript:;" class="p_amplify" action="zoomIn" title="放大"></a><i></i><a href="javascript:;" class="p_reduce" action="zoomOut" title="缩小"></a><i></i><a href="javascript:;" class="p_normal" action="zoomNone" title="原图"></a><i></i><a href="javascript:;" class="p_breviary" action="full" title="全屏查看"></a><i></i><a href="javascript:;" class="p_cloud" action="yun" title="保存到彩云网盘"></a><i></i><a href="javascript:;" class="p_download" action="down" title="下载图片"></a><i></i><a href="javascript:;" class="p_up" action="share" title="邮件分享图片"></a><i></i><a href="javascript:;" class="p_close" action="hideImgTool" title="关闭"></a></div>';
                this.$contentDoc.find(".div_remail_img_tool").remove();
                var s = e.position().left, o = e.position().top;
                e.height(), e.width();
                e.before(i), e.prev().css({
                    left: s,
                    top: o
                }), this.showGray(e), this.isOverImg = !0, e.off("dblclick").on("dblclick", function () {
                    a(this).prev().find('a[action="full"]').trigger("click")
                });
                var n = this.$contentDoc.find("head");
                0 == n.find("style#imgEditorMenuStyle").length && n.append(this.getCssHtml())
            }
        },
        getOrginImgInfo: function (e) {
            var t = { height: 0, width: 0 };
            return e.height() && (t = { height: e.height(), width: e.width() }), t
        },
        zoomIn: function (e, t) {
            var i = e.width(), a = e.height(), s = this.getOrginImgInfo(e);
            i = 1.1 * i, a = 1.1 * a, i <= 2 * s.width && (e.width(i).height(a), t.removeClass("p_selected"), t.next().next().removeClass("p_selected")), this.showGray(e)
        },
        zoomOut: function (e, t) {
            var i = e.width(), a = e.height(), s = this.getOrginImgInfo(e);
            i = .9 * i, a = .9 * a, i >= .1 * s.width && (e.width(i).height(a), t.removeClass("p_selected"), t.prev().prev().removeClass("p_selected")), this.showGray(e)
        },
        zoomNone: function (e) {
            var t = a(e).attr("orignSize");
            t && (t = t.split(","), e.width(t[0]).height(t[1]), this.showGray(e))
        },
        fullScreen: function (e) {
            var t = [], i = 0;
            this.$contentDoc.find("img").each(function (s) {
                var o = a(this).attr("src"), n = {
                    bigthumbnailURL: o,
                    createTime: "2015-01-23 13:26:57",
                    directoryId: "9U11Y1HOS04e0092015010101023614c",
                    ext: "png",
                    fileSize: 14480,
                    id: "9U11Y1HOS04e009201501231325560gv",
                    isShare: 0,
                    modifyTime: "2015-01-23 13:27:27",
                    name: "1111201501231328486hsq.png",
                    presentHURL: "",
                    presentLURL: "",
                    presentURL: o,
                    rawSize: 14480,
                    thumbnailURL: o
                };
                t.push(n), o == e.attr("src") && (i = s)
            }), this.previewImage(t, i)
        },
        downLoad: function (e, t) {
            var i = e.attr("src");
            i = i.replace("http://", top.getProtocol()), t.attr("href", i), -1 == i.indexOf("10086.cn") && window.open(i)
        },
        saveYun: function (e) {
            var t = top.$Url.getQueryObj(e.attr("src")), i = [], a = {
                url: e.attr("src"),
                directoryId: "",
                dirType: 1,
                fileName: t.fileName,
                fileSize: 0
            };
            i.push(a);
            var s = { netFiles: i };
            top.M139.UI.TipMessage.show("正在保存到彩云网盘..."), top.M139.RichMail.API.call("disk:attachUpload", s, function (e) {
                var t = '保存成功, <a href="{0}">去查看</a>';
                t = $T.format(t, ["javascript:$App.showChannel('disk')"]), e.responseData.code && "S_OK" == e.responseData.code ? top.M139.UI.TipMessage.show(t, { delay: 3e3 }) : top.M139.UI.TipMessage.show("保存失败!", {
                    delay: 3e3,
                    className: "msgRed"
                })
            })
        },
        shareEmail: function (e, t) {
            if (t.attr("disabled")) return !1;
            var i = {
                type: "1",
                to: "4",
                subject: "这张图片不错哦，快来看看吧~~",
                content: "<br/><img src='" + e.attr("src") + "' width='100%'/>",
                showZoomIn: !0
            };
            t.attr("disabled", "disabled"), top.$Evocation.create(i, function () {
                t.removeAttr("disabled")
            })
        },
        previewImage: function (e, t) {
            var i = [], s = "|jpg|gif|png|ico|jfif|tiff|tif|bmp|jprg|jpe|";
            a.each(e, function (e, t) {
                var a = $Url.getFileExtName(t.name).toLowerCase();
                s.indexOf("|" + a + "|") >= 0 && i.push({
                    thumbnailURL: t.file && t.file.thumbnailURL || t.thumbnailURL,
                    bigthumbnailURL: t.file && t.file.presentURL || t.presentURL,
                    presentURL: t.file && t.file.presentURL || t.presentURL,
                    fileName: t.name
                })
            }), "undefined" != typeof top.focusImagesView ? top.focusImagesView.render({
                data: i,
                index: t
            }) : (top.M139.registerJS("M2012.OnlinePreview.FocusImages.View", "packs/focusimages.html.pack.js?v=" + Math.random()), top.M139.requireJS(["M2012.OnlinePreview.FocusImages.View"], function () {
                top.focusImagesView = new top.M2012.OnlinePreview.FocusImages.View, top.focusImagesView.render({
                    data: i,
                    index: t,
                    from: "readmail"
                })
            }))
        },
        getCssHtml: function () {
            var e = '<style id="imgEditorMenuStyle" type="text/css">            .p_banner_seat{position: absolute;right: 0;top: 0;}            .p_banner_seat a, .p_banner_seat i{margin:0; padding:0}            .p_amplify,.p_reduce,.p_normal,.p_breviary,.p_cloud,.p_download,.p_up, .p_selected{ width:38px; height: 33px;background: url(' + top.getRootPath() + "/images/module/attr/attr-ico.png) no-repeat 0 0;display: inline-block;}            .p_amplify{background-position: 0 -214px;width: 38px;}            .p_reduce{background-position:-40px -214px;width: 38px}            .p_normal{width: 46px;background-position:-78px -214px}            .p_breviary{background-position:-125px -214px;width: 43px;}            .p_cloud{background-position:-169px -214px;width: 46px;}            .p_download{background-position:-216px -214px;width: 40px;}            .p_up{background-position:-257px -214px;width: 43px;}            .p_amplify:hover{background-position: 0 -255px;}            .p_reduce:hover{background-position:-40px -255px;}            .p_normal:hover{background-position:-78px -255px;}            .p_breviary:hover{background-position:-125px -255px;}            .p_cloud:hover{background-position:-169px -255px;}            .p_download:hover{background-position:-216px -255px;}            .p_up:hover{background-position:-257px -255px;}            .p_banner_seat i{display:inline-block; background: url(" + top.getRootPath() + "/images/module/attr/p_banner_line.png) no-repeat 0 0;width: 1px;height: 33px; }			.p_banner_seat .p_selected{background-position: -329px -255px;}            .p_close{height: 33px;background: url(" + top.getRootPath() + "/images/module/attr/attr-ico.png?v=20161230) no-repeat 0 0;display: inline-block;}            .p_close{background-position:-204px -127px;width: 43px;}            .p_close:hover{background-position:-259px -127px;}            </style>";
            return e
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.HotWord.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.HotWord.View", s.extend({
        name: "M2012.ReadMail.HotWord", events: {}, initialize: function (e) {
            return this.win = e.win || {}, this.initEvent(), s.prototype.initialize.apply(this, arguments)
        }, initEvent: function () {
            if (!window.simpleMode || !window.simpleMode()) {
                var e = this.win.from;
                this.isNormalEmail(e) && (this.initReplaceAll(), this.recommendTitle(), this.replaceTitle())
            }
        }, recommendTitle: function () {
            function e(e, t) {
                for (var i = 0; i < e.length; i++) u.push({ key: e[i], command: t })
            }

            function s(e) {
                for (var i = [], a = 0; a < e.length; a++) {
                    var s = e[a].key, o = f.indexOf(s);
                    -1 != o && (e[a].index = o, i.push(e[a]))
                }
                return t.sortBy(i, "index")[0]
            }

            function o(e) {
                var t = a(e.target).closest("a").data("cmd"), i = a(e.target).offset(), s = ['<div class="clearfix">', '<div class="mail_scene_t">', '<img src="/m2015/images/temp/scene_ios.jpg" alt="ios下载"><b>ios下载</b>', "</div>", '<div class="mail_scene_t mail_scene_m">', '<img src="/m2015/images/temp/scene_a.jpg" alt="安卓下载"><b>安卓下载</b>', "</div>", "</div>"].join(""), o = '<img src="/m2015/images/temp/sceneMa.jpg" style="padding-bottom:13px;">';
                switch (t) {
                    case "showCloudApp":
                        n({
                            name: "Cloud",
                            left: i.left,
                            top: i.top,
                            summary1: "安全、方便、全网",
                            summary2: "的跨终端私人云空间",
                            topic: "和彩云",
                            from: "cloud",
                            imgstr: s
                        }), top.BH && top.BH("readmail_showapp_hcy");
                        break;
                    case "showWebApp":
                        n({
                            name: "Mail",
                            left: i.left,
                            top: i.top,
                            summary1: "一邮尽有",
                            summary2: "绑定所有邮箱",
                            topic: "139邮箱",
                            from: "web",
                            imgstr: o
                        }), top.BH && top.BH("readmail_showapp_pe")
                }
            }

            function n(e) {
                clearTimeout(g.showTimer), g.showTimer = setTimeout(function () {
                    r(e)
                }, 100)
            }

            function r(e) {
                a(document.body).find("#emailTitleAppTip").remove().end().append($T.format(y, {
                    name: e.name || "Cloud",
                    left: e.left - 24,
                    top: e.top + 19,
                    summary1: e.summary1,
                    summary2: e.summary2,
                    topic: e.topic,
                    from: e.from,
                    bh: "web" == e.from ? "readmail_click_installpe" : "readmail_click_installhcy",
                    imgstr: e.imgstr
                }));
                var t = a("#emailTitleAppTip");
                i.Event.GlobalEvent.on("click", function (e) {
                    e.window != window && l();
                    var t = e.event.target;
                    a(t).closest("[name='titleApp']").length || a(t).closest("#emailTitleAppTip").length || l()
                }), t.find("#install").click(function (e) {
                    function t(e) {
                        var t = n.$el.find("#number"), i = a.trim(t.val()), s = n.$el.find("#errorTip");
                        top.$Mobile.isMobile(i) ? (!s.hasClass("hide") && s.addClass("hide"), e && e(i)) : s.removeClass("hide")
                    }

                    var i = top.$User.getUid(), s = a(e.target).closest("#install").attr("from");
                    if ($Mobile.isMobile(i)) g.sendSysSms({ msgContent: v[s] }, function () {
                    }); else {
                        var o = ['<div class="norTips identityTips">', '<dl class="norTipsContent">', '<dd class="norTipsLine">', '<input id="number" type="text" class="iText mr_5" style="width: 225px !important;">', "</dd>", '<dd class="norTipsLine hide" id="errorTip">', '<p class="red fz_12">请输入正确的手机号码</p>', "</dd>", "</dl>", "</div>"].join(""), n = top.$Msg.showHTML(o, function (e) {
                            e.cancel = !0, t(function () {
                                g.sendSysSms({ msgContent: v[s] }, function () {
                                    n && n.close()
                                })
                            })
                        }, { dialogTitle: "请输入您的手机号码，完成下载", buttons: ["发送", "取消"] });
                        n.$el.find("#number").blur(function () {
                            t()
                        }).focus(function () {
                        })
                    }
                }), t.hover(function () {
                }, function () {
                }), a("#readmail_container").scroll(function () {
                    setTimeout(function () {
                        l()
                    }, 300)
                })
            }

            function l() {
                clearTimeout(g.showTimer), a("#emailTitleAppTip").remove()
            }

            var c = this.win.letterInfo.omid, d = this.win.letterInfo.flag.read;
            if (-1 != top.$App.getCurrentTab().name.indexOf("readmail")) {
                var p = ["彩云", "网盘", "存储", "附件", "空间"], m = ["邮件", "邮箱", "139", "办公", "mail", "客户端", "商务"], u = [], h = a("div[mid='" + c + "']").find(".emailTitle"), f = h.text().trim(), g = this, v = {
                    web: "点击http://y.10086.cn/fm?s=34 下载139邮箱手机客户端，轻松管理您的邮箱！",
                    cloud: "点击http://y.10086.cn/fm?s=33 下载和彩云手机客户端，安全、方便、全网的跨终端私人云空间！"
                };
                e(p, "showCloudApp"), e(m, "showWebApp");
                var b = s(u), y = ['<div id="emailTitleAppTip" class="menuPop shadow" style="z-index: 5000; width: 362px; position: absolute; display: block; left: {left}px; top: {top}px;">', '<div class="mailScene clearfix">', '<div class="mail_scene_l">', '<img src="/m2015/images/module/welcome/scene{name}.png"><h3>{topic}</h3>', "<p>{summary1}</p>", "<p>{summary2}</p>", "</div>", '<div class="mail_scene_r">', "<p><strong>方法一：</strong>扫描二维码安装</p>", "{imgstr}", "<p><strong>方法二：</strong>免费发送安装地址至手机</p>", '<a id="install" from="{from}" bh="{bh}" href="javascript:;" class="icoG"><span class="p_relative">立即安装<i class="r-line"></i></span></a>', "</div>", "</div>", '<div class="TriangleTop microChat_left"></div>', "</div>"].join("");
                if (b) {
                    var w = "showCloudApp" == b.command ? "readmail_subject_hithcy" : "readmail_subject_hitpe";
                    top.BH && top.BH(w);
                    var _ = f.replace(b.key, "<a name='titleApp' data-cmd='" + b.command + "'>" + b.key + "</a>");
                    if (h.html(_), h.click(function (e) {
                        o(e)
                    }), h.on("mouseenter", "a", function (e) {
                        o(e)
                    }).on("mouseleave", "a", function (e) {
                        a(e.toElement).closest("#emailTitleAppTip").length || l()
                    }), setTimeout(function () {
                        l()
                    }, 3e3), !d) return
                }
            }
        }, initReplaceAll: function () {
            String.prototype.replaceAll = function (e, t, i) {
                return RegExp.prototype.isPrototypeOf(e) ? this.replace(e, t) : this.replace(new RegExp(e, i ? "gi" : "g"), t)
            }
        }, replaceSid: function (e) {
            var t = top.sid;
            return e.indexOf("sid=$sid") > -1 && (e = e.replace("sid=$sid", "sid=" + t)), e
        }, getLinkStr: function (e) {
            var t = e.indexOf(","), i = e.lastIndexOf(",");
            return e.slice(t + 1, i)
        }, getHotWordList: function (e) {
            var t = this, i = "web_110";
            top.M139.RichMail.API.call("unified:getUnifiedPositionContent", {
                comeFrom: 4,
                positionCodes: i
            }, function (s) {
                if (s.responseData.code && "S_OK" == s.responseData.code && s.responseData["var"][i]) {
                    var o = s.responseData["var"];
                    if (o[i][0]) {
                        o = o[i][0].content;
                        for (var n = o.split("|"), r = [], l = 0; l < n.length; l++) {
                            var c = n[l].split(","), d = t.getLinkStr(n[l]);
                            c.length > 1 && r.push({ word: c[0], url: t.replaceSid(d), id: c[c.length - 1] })
                        }
                        a("body").data("arrHotWord", r), e(r)
                    }
                }
            })
        }, replaceTitle: function () {
            var e = a("body").data("arrHotWord"), t = function (e) {
                a('.emailTitle[hotword!="true"]').each(function () {
                    for (var t = a(this).html(), i = t, s = 0, o = e.length; o > s; s++) {
                        var n = e[s].word, r = e[s].id, l = new RegExp(n);
                        if (l.test(t)) {
                            var c = '<a class="a_hotword" style="border-bottom: 1px dashed #999;" href="{url}" bh="readmail_click_hotword" thing="{id}">{word}</a>', d = '<a class="a_hotword" style="border-bottom: 1px dashed #999;" href="{url}" target="_blank" bh="readmail_click_hotword" thing="{id}">{word}</a>', p = e[s].url.indexOf("http://") ? c : d, m = $T.format(p, e[s]);
                            i = i.replaceAll(n, m), a(this).html(t).attr("hotword", "true"), top.BH({
                                key: "readmail_show_hotword",
                                thingId: r,
                                ext3: n
                            })
                        }
                    }
                    a(this).html(i), a(this).find(".a_hotword").each(function () {
                        a(this).attr("ext3", a(this).text())
                    })
                })
            };
            e ? t(e) : this.getHotWordList(function (e) {
                t(e)
            })
        }, isNormalEmail: function (e) {
            for (var t = ["yfw1_smpost@139.com", "gzzzb_cmpost@139.com", "sjb1_smpost@139.com", "zsw_smpost@139.com", "sshb_cmpost@139.com", "cjhb_cmpost@139.com", "jkhb_cmpost@139.com", "xxhb_cmpost@139.com", "kjhb_cmpost@139.com", "rjxy_cmpost@139.com", "agj_cmpost@139.com", "zjzx_cmpost@139.com", "itzj1_cmpost@139.com", "xdhd_smpost@139.com", "djyd_cmpost@139.com", "wyyx_smpost@139.com", "jc_cmpost@139.com", "mba_cmpost@139.com", "dcktx_cmpost@139.com", "shds_cmpost@139.com", "dzws_cmpost@139.com", "dfls_cmpost@139.com", "dfcs_cmpost@139.com", "hfczfw_smpost@139.com", "hbyd_cmpost@139.com", "mzyd_cmpost@139.com", "jr_cmpost@139.com", "rwzk_cmpost@139.com", "zgwz_cmpost@139.com", "zwxz_cmpost@139.com", "xlkf_cmpost@139.com", "whb_cmpost@139.com", "nbw_cmpost@139.com", "ibtimes_cmpost@139.com", "xlyk_cmpost@139.com", "ptw_cmpost@139.com", "tyhb_cmpost@139.com", "cfzww_cmpost@139.com", "bdbj_cmpost@139.com", "zhxsqgb_cmpost@139.com", "gsdtfxqgb_cmpost@139.com", "qcdbsfqgb_cmpost@139.com", "kxw_cmpost@139.com", "kdyy_cmpost@139.com", "qntz_cmpost@139.com", "sjtt_cmpost@139.com", "djw_cmpost@139.com", "solidot_cmpost@139.com", "mwrs_cmpost@139.com", "sdfx_cmpost@139.com", "dfyd_cmpost@139.com", "sb_cmpost@139.com", "zqf_cmpost@139.com", "lyw_cmpost@139.com", "ns_cmpost@139.com", "dfyl_cmpost@139.com", "dfcj_cmpost@139.com", "yspl_cmpost@139.com", "mlt1_smpost@139.com", "it168_cmpost@139.com", "dyw1905_cmpost@139.com", "nyjs_smpost@139.com", "hxds_cmpost@139.com", "ppw_cmpost@139.com", "ltly_cmpost@139.com", "xmJESSIC_cmpost@139.com", "ylhb_cmpost@139.com", "xwhb_cmpost@139.com", "sxydjyh_cmpost@139.com", "nbss1_cmpost@139.com", "tzylc1_cmpost@139.com", "rl_cmpost@139.com", "cj_cmpost@139.com", "pgw_cmpost@139.com", "yd_cmpost@139.com", "hzdpt_cmpost@139.com", "xbk_cmpost@139.com", "yqyqs_cmpost@139.com", "mrdwyhxj_cmpost@139.com", "lzsy_cmpost@139.com", "xljunshi_cmpost@139.com", "jyjdtj_smpost@139.com", "sjb_smpost@139.com", "xb_cmpost@139.com", "jjrb_cmpost@139.com", "sjb_cmpost@139.com", "comcpa_smpost@139.com", "yxszf_smpost@139.com", "hlc_smpost@139.com", "ylwtt_cmpost@139.com", "sww_cmpost@139.com", "mslgkjpl_cmpost@139.com", "fxw_cmpost@139.com", "dclbcx7_smpost@139.com", "dclbcx6_smpost@139.com", "dclbcx2_smpost@139.com", "dclbcx1_smpost@139.com", "dclbcx0_smpost@139.com", "dclbcx9_smpost@139.com", "dclbcx8_smpost@139.com", "dclbcx10_smpost@139.com", "essjq_smpost@139.com", "sgyl_smpost@139.com", "dclbcx_smpost@139.com", "jzzg_cmpost@139.com", "gdfwzq1_smpost@139.com", "fjz_cmpost@139.com", "ggs_cmpost@139.com", "sd_cmpost@139.com", "hyd_smpost@139.com", "wmjx_cmpost@139.com", "cwllk_smpost@139.com", "ftxnj_smpost@139.com", "yyj_smpost@139.com", "mxp_smpost@139.com", "sfcz_smpost@139.com", "mrbb_smpost@139.com", "ggm_cmpost@139.com", "yxyhjx_smpost@139.com", "jdstb_smpost@139.com", "cjyyl_smpost@139.com", "zdsh_smpost@139.com", "mtxxwyb_smpost@139.com", "sshfcx_smpost@139.com", "fswmyx_smpost@139.com", "ydh_cmpost@139.com", "ash_cmpost@139.com", "fsb_cmpost@139.com", "ydysh_smpost@139.com", "jjc_cmpost@139.com", "szy_cmpost@139.com", "yjlx_cmpost@139.com", "xsj_cmpost@139.com", "wbw_cmpost@139.com", "gcz_cmpost@139.com", "sfw_cmpost@139.com", "gcj_cmpost@139.com", "csj_cmpost@139.com", "wyhyfzbg_cmpost@139.com", "hnyd_smpost@139.com", "rmrb_cmpost@139.com", "mmyysc_smpost@139.com", "qgdypq_smpost@139.com", "ydyy_smpost@139.com", "zgzlxw_cmpost@139.com", "zgjyb_cmpost@139.com", "qzw_cmpost@139.com", "jjgcb_cmpost@139.com", "djd_cmpost@139.com", "wmmrjx_cmpost@139.com", "qgjtwz_smpost@139.com", "gdyd_smpost@139.com", "fhcx_cmpost@139.com", "fhdy_cmpost@139.com", "gcjsp_cmpost@139.com", "kcw_cmpost@139.com", "lqcjjz_cmpost@139.com", "xkb_cmpost@139.com", "zqrb_cmpost@139.com", "kgs_cmpost@139.com", "xlls_cmpost@139.com", "txyl_cmpost@139.com", "xljs_cmpost@139.com", "xlsz_cmpost@139.com", "kd100_smpost@139.com", "bxssg_cmpost@139.com", "kly_cmpost@139.com", "cxyzz_cmpost@139.com", "btw_cmpost@139.com", "wthb_cmpost@139.com", "xsy_cmpost@139.com", "mzw_cmpost@139.com", "hqqyj_cmpost@139.com", "hdbk_cmpost@139.com", "zysb_cmpost@139.com", "amw_cmpost@139.com", "bkzs_cmpost@139.com", "hxbk_cmpost@139.com", "wagsw_cmpost@139.com", "hdzb_cmpost@139.com", "hwwz_cmpost@139.com", "xlcj_cmpost@139.com", "itsb_cmpost@139.com", "fsw_cmpost@139.com", "ykj_cmpost@139.com", "zgqyj_cmpost@139.com", "zmtjx_cmpost@139.com", "lhgd_cmpost@139.com", "2345mryl_cmpost@139.com", "klmh_cmpost@139.com", "lczk_cmpost@139.com", "donews_cmpost@139.com", "esysjsypl_cmpost@139.com", "timeoutbj_cmpost@139.com", "zy_cmpost@139.com", "lwdfzk_cmpost@139.com", "dlyl_cmpost@139.com", "tzj_cmpost@139.com", "lczb_cmpost@139.com", "jpgwzn_cmpost@139.com", "wyshzk_cmpost@139.com", "jtz_cmpost@139.com", "zgzqw_cmpost@139.com", "xhj_cmpost@139.com", "ydm_cmpost@139.com", "dmw_cmpost@139.com", "yly_cmpost@139.com", "xhzj_cmpost@139.com", "bzmh_cmpost@139.com", "wdz_cmpost@139.com", "wqt_cmpost@139.com", "qxdzyxmt_cmpost@139.com", "snsn_cmpost@139.com", "wysymrtj_cmpost@139.com", "cyg_cmpost@139.com", "hbtz_cmpost@139.com", "ellejjxs_cmpost@139.com", "hbmw_cmpost@139.com", "ms_cmpost@139.com", "jrjd_cmpost@139.com", "mys_cmpost@139.com", "abwbbpd_cmpost@139.com", "kzw_cmpost@139.com", "ssffw_cmpost@139.com", "txysw_cmpost@139.com", "jfssw_cmpost@139.com", "msjms_cmpost@139.com", "zfkc_cmpost@139.com", "jxms_cmpost@139.com", "wgzl_cmpost@139.com", "ywms_cmpost@139.com", "chrj_cmpost@139.com", "mrjxcp_cmpost@139.com", "mjxj_cmpost@139.com", "zsw_cmpost@139.com", "qczxjx_cmpost@139.com", "kjzxjx_cmpost@139.com", "tyzxjx_cmpost@139.com", "jszxjx_cmpost@139.com", "cjzxjx_cmpost@139.com", "ylzxjx_cmpost@139.com", "shxwjx_cmpost@139.com", "gjssjx_cmpost@139.com", "gnssjx_cmpost@139.com", "sjllyxx_cmpost@139.com", "zls_cmpost@139.com", "wlk_cmpost@139.com", "lyzg_cmpost@139.com", "zjy_cmpost@139.com", "tsk_cmpost@139.com", "ykqlx_cmpost@139.com", "xz40g_cmpost@139.com", "djl_cmpost@139.com", "jyc_cmpost@139.com", "lxj_cmpost@139.com", "ylx_cmpost@139.com", "cyj_cmpost@139.com", "tkq_cmpost@139.com", "ssqz_cmpost@139.com", "utw_cmpost@139.com", "scfy_cmpost@139.com", "wqjj_cmpost@139.com", "lqsj_cmpost@139.com", "zqtx_cmpost@139.com", "qcsd_cmpost@139.com", "cnqc_cmpost@139.com", "zgmcw_cmpost@139.com", "qcdsj_cmpost@139.com", "qcjh_cmpost@139.com", "xcpw_cmpost@139.com", "dycw_cmpost@139.com", "qcts_cmpost@139.com", "cxw_cmpost@139.com", "tpyqcw_cmpost@139.com", "hqqcw_cmpost@139.com", "xcar_cmpost@139.com", "qczy_cmpost@139.com", "hdw_cmpost@139.com", "xgxw_cmpost@139.com", "twxw_cmpost@139.com", "nxxw_cmpost@139.com", "ynxw_cmpost@139.com", "xjxw_cmpost@139.com", "xzxw_cmpost@139.com", "snxw_cmpost@139.com", "sxxw_cmpost@139.com", "qhxw_cmpost@139.com", "nmgxw_cmpost@139.com", "jxxw_cmpost@139.com", "jlxw_cmpost@139.com", "hljxw_cmpost@139.com", "haxw_cmpost@139.com", "hexw_cmpost@139.com", "tjxw_cmpost@139.com", "hixw_cmpost@139.com", "gzxw1_cmpost@139.com", "gxxw_cmpost@139.com", "gsxw_cmpost@139.com", "fjxw_cmpost@139.com", "hnxw_cmpost@139.com", "ahxw_cmpost@139.com", "sdxw_cmpost@139.com", "jsxw_cmpost@139.com", "lnxw_cmpost@139.com", "hbxw_cmpost@139.com", "scxw_cmpost@139.com", "cqxw_cmpost@139.com", "zjxw_cmpost@139.com", "gdxw_cmpost@139.com", "shxw_cmpost@139.com", "bjxw_cmpost@139.com", "jhw_cmpost@139.com", "jbw_cmpost@139.com", "dhw_cmpost@139.com", "bfw_cmpost@139.com", "bgw_cmpost@139.com", "dgw1_cmpost@139.com", "qlwbw_cmpost@139.com", "zqzx_cmpost@139.com", "gjzx_cmpost@139.com", "jww_cmpost@139.com", "gmw1_cmpost@139.com", "xmw_cmpost@139.com", "fzw_cmpost@139.com", "ndw_cmpost@139.com", "xdkbw_cmpost@139.com", "ltzww_cmpost@139.com", "cxrbzww_cmpost@139.com", "surface_cmpost@139.com", "ssmz_cmpost@139.com", "ssyl_cmpost@139.com", "ysjlr_cmpost@139.com", "ybalq_cmpost@139.com", "bytwlb_cmpost@139.com", "itsdzkwlb_cmpost@139.com", "okjc_cmpost@139.com", "cjgjxww_cmpost@139.com", "txxz_cmpost@139.com", "wyxz_cmpost@139.com", "xlxz_cmpost@139.com", "nyw_cmpost@139.com", "mjw_cmpost@139.com", "rjzww_cmpost@139.com", "jjgs_cmpost@139.com", "dqzk_cmpost@139.com", "xzwzk_cmpost@139.com", "jkgs_cmpost@139.com", "mdgs_cmpost@139.com", "xys_cmpost@139.com", "xzw_cmpost@139.com", "whzg_cmpost@139.com", "jyzn_cmpost@139.com", "wfw_cmpost@139.com", "dfw_cmpost@139.com", "mtimesgw_cmpost@139.com", "fhpl_cmpost@139.com", "fhty_cmpost@139.com", "fhjs_cmpost@139.com", "fhzx_cmpost@139.com", "yszy_cmpost@139.com", "zydq_cmpost@139.com", "lyq_cmpost@139.com", "tsw_cmpost@139.com", "jrcm_cmpost@139.com", "spkxw_cmpost@139.com", "ptjzz_cmpost@139.com", "hjsjw_cmpost@139.com", "milk_cmpost@139.com", "shtg_cmpost@139.com", "qncyw_cmpost@139.com", "zgdxscyw_cmpost@139.com", "ckxx_cmpost@139.com", "dycjzk_cmpost@139.com", "dycx_cmpost@139.com", "ycsh_cmpost@139.com", "yccj_cmpost@139.com", "ycgp_cmpost@139.com", "yclc_cmpost@139.com", "yccy_cmpost@139.com", "ycsx_cmpost@139.com", "yydj_cmpost@139.com", "whfx_cmpost@139.com", "zgsy_cmpost@139.com", "shpt_cmpost@139.com", "qqgc_cmpost@139.com", "zjgj_cmpost@139.com", "zgyjykcw_cmpost@139.com", "wby_cmpost@139.com", "jfing_cmpost@139.com", "msty_cmpost@139.com", "img_cmpost@139.com", "mmw_cmpost@139.com", "ttzb_cmpost@139.com", "xhwz_cmpost@139.com", "shqcxw_cmpost@139.com", "slgc_cmpost@139.com", "cxwzjxw_cmpost@139.com", "cxwgjsp_cmpost@139.com", "shyl_cmpost@139.com", "shitxw_cmpost@139.com", "shtyxw_cmpost@139.com", "shgjxw_cmpost@139.com", "shgnxw_cmpost@139.com", "shxwtt_cmpost@139.com", "cxwjjpd_cmpost@139.com", "cxwjrpd_cmpost@139.com", "cxwgspd_cmpost@139.com", "cxwgdpd_cmpost@139.com", "hlwerdzdk_cmpost@139.com", "jsck_cmpost@139.com", "yqw_cmpost@139.com", "qczg_cmpost@139.com", "zaw_cmpost@139.com", "dxy_cmpost@139.com", "hejjw_cmpost@139.com", "pbsyzk_cmpost@139.com", "msj_cmpost@139.com", "sjp_cmpost@139.com", "nd_cmpost@139.com", "sjxqn_cmpost@139.com", "qyw_cmpost@139.com", "rjjxs_cmpost@139.com", "mjmj_cmpost@139.com", "hlwwqdysc_cmpost@139.com", "cinephiliamy_cmpost@139.com", "msmjw_cmpost@139.com", "wineblogjb_cmpost@139.com", "zwptjzz_cmpost@139.com", "dgw_cmpost@139.com", "mshb_cmpost@139.com", "shmzw_cmpost@139.com", "rrdscpjl_cmpost@139.com", "hch_cmpost@139.com", "ndylwlb_cmpost@139.com", "autobetaqczz_cmpost@139.com", "ycw_cmpost@139.com", "cyw_cmpost@139.com", "mczzww_cmpost@139.com", "wyts_cmpost@139.com", "wyjs_cmpost@139.com", "wygjxw_cmpost@139.com", "wygnxw_cmpost@139.com", "wyttxw_cmpost@139.com", "jsz_cmpost@139.com", "gjxw_cmpost@139.com", "hysc_cmpost@139.com", "xlkj_cmpost@139.com", "xlgjyw_cmpost@139.com", "xlgnyw_cmpost@139.com", "txdypd_cmpost@139.com", "dybk_cmpost@139.com", "dsqy_cmpost@139.com", "dywgzxw_cmpost@139.com", "dywshxw_cmpost@139.com", "dywzgxw_cmpost@139.com", "dyfc_cmpost@139.com", "dycj_cmpost@139.com", "dyty_cmpost@139.com", "dyqc_cmpost@139.com", "dyyl_cmpost@139.com", "dyms_cmpost@139.com", "yyrgl_cmpost@139.com", "500pxmtjx_cmpost@139.com", "rwt_cmpost@139.com", "yxdg_cmpost@139.com", "yxb_cmpost@139.com", "amxw_cmpost@139.com", "jywmsgz_cmpost@139.com", "jywszdt_cmpost@139.com", "panscifkx_cmpost@139.com", "oneyg_cmpost@139.com", "jccp_cmpost@139.com", "lxwiredtw_cmpost@139.com", "txdj_cmpost@139.com", "tmt_cmpost@139.com", "ysyljs_cmpost@139.com", "arw_cmpost@139.com", "mnbbf_cmpost@139.com", "dyw_cmpost@139.com", "sybkp_cmpost@139.com", "gzxw_cmpost@139.com", "jywgjxw_cmpost@139.com", "jywgnxw_cmpost@139.com", "jyty_cmpost@139.com", "shsp_cmpost@139.com", "zgcsj_cmpost@139.com", "sycj_cmpost@139.com", "wsh_cmpost@139.com", "zgls_cmpost@139.com", "xyx_cmpost@139.com", "qcsb_cmpost@139.com", "xytx_cmpost@139.com", "cjshq_cmpost@139.com", "qcbl_cmpost@139.com", "zgpp_cmpost@139.com", "dszn_cmpost@139.com", "ysshkb_cmpost@139.com", "syfysyk_cmpost@139.com", "cgyx_cmpost@139.com", "dgjy_cmpost@139.com", "letsgo_cmpost@139.com", "tzk_cmpost@139.com", "cfzn_cmpost@139.com", "ttdyxz_cmpost@139.com", "pingwestzww_cmpost@139.com", "kdyzzdzq_cmpost@139.com", "zhmrjx_cmpost@139.com", "gdk_cmpost@139.com", "jkgy_cmpost@139.com", "yyjx_cmpost@139.com", "zads_cmpost@139.com", "txkj_cmpost@139.com", "dxr_cmpost@139.com", "kxssh_cmpost@139.com", "hbjj_cmpost@139.com", "nfzmrdxw_cmpost@139.com", "ygbk_cmpost@139.com", "yl2_cmpost@139.com", "gwjybyl_cmpost@139.com", "jzyl_cmpost@139.com", "zwscyl_cmpost@139.com", "zybyl_cmpost@139.com", "xxjyl_cmpost@139.com", "12yl_cmpost@139.com", "snbyl_cmpost@139.com", "ethbyl_cmpost@139.com", "thyl_cmpost@139.com", "qxsyl_cmpost@139.com", "xwxyl_cmpost@139.com", "ycbyl_cmpost@139.com", "appyyr_cmpost@139.com", "zxwjs_cmpost@139.com", "zxwqc_cmpost@139.com", "zxwty_cmpost@139.com", "zxwgj_cmpost@139.com", "zxwgn_cmpost@139.com", "zxwwlrt_cmpost@139.com", "zxwcjgs_cmpost@139.com", "zxwmxbg_cmpost@139.com", "zxwfkjx_cmpost@139.com", "zxwgqtp_cmpost@139.com", "zxwxwlb_cmpost@139.com", "txshxw_cmpost@139.com", "gnxw_cmpost@139.com", "bbczww_cmpost@139.com", "ftzww_cmpost@139.com", "hejrb_cmpost@139.com", "zghsy_cmpost@139.com", "fxtc_cmpost@139.com", "zd_cmpost@139.com", "dzhzb_cmpost@139.com", "cxmlt_cmpost@139.com", "jtxby_cmpost@139.com", "jtsby_cmpost@139.com", "lssdjt_cmpost@139.com", "wjh_cmpost@139.com", "cgworldsdmy_cmpost@139.com", "jrpl_cmpost@139.com", "ysq_cmpost@139.com", "yyzk_cmpost@139.com", "wmyf_cmpost@139.com", "qcsypl_cmpost@139.com", "nk_cmpost@139.com", "sypl_cmpost@139.com", "xdyl_cmpost@139.com", "xnz_cmpost@139.com", "sjrw_cmpost@139.com", "zgjjhxxh_cmpost@139.com", "tybl_cmpost@139.com", "zgjsjbmfb_cmpost@139.com", "yyslszbmfb_cmpost@139.com", "qcdbscmfb_cmpost@139.com", "qcdbgzmfb_cmpost@139.com", "jsjsjmfb_cmpost@139.com", "t3swss_cmpost@139.com", "hysn_cmpost@139.com", "dfzz_cmpost@139.com", "zylc_cmpost@139.com", "xzchicelegancely_cmpost@140.com", "xzgd_cmpost@139.com", "qcz_cmpost@139.com", "yjsh_cmpost@139.com", "jsj_cmpost@139.com", "ddys_cmpost@139.com", "sjjy_cmpost@139.com", "syly_cmpost@139.com", "mysj_cmpost@139.com", "jdscp_cmpost@139.com", "dnskmfb_cmpost@139.com", "xdnmfb_cmpost@139.com", "sdcw_cmpost@139.com", "mq_cmpost@139.com", "xzpw_cmpost@139.com", "xkcz_cmpost@139.com", "sjys_cmpost@139.com", "syzghw_cmpost@139.com", "mme_cmpost@139.com", "cz_cmpost@139.com", "yssd_cmpost@139.com", "hj_cmpost@139.com", "mn_cmpost@139.com", "zggjly_cmpost@139.com", "hjxx_cmpost@139.com", "jcmw_cmpost@139.com", "cnbeta_cmpost@139.com", "mty_cmpost@139.com", "hxcj_cmpost@139.com", "yej_cmpost@139.com", "xzsh_cmpost@139.com", "jh_cmpost@139.com", "acz_cmpost@139.com", "ypl_cmpost@139.com", "qs_cmpost@139.com", "petpetykl_cmpost@139.com", "hxhsj_cmpost@139.com", "dxdd_cmpost@139.com", "wbk_cmpost@139.com", "hwsh_cmpost@139.com", "xhqqtdzb_cmpost@139.com", "trj_cmpost@139.com", "ywl_cmpost@139.com", "hz_cmpost@139.com", "jtymb_cmpost@139.com", "sl_cmpost@139.com", "smyjk_cmpost@139.com", "xl_cmpost@139.com", "zl_cmpost@139.com", "seasonjkz_cmpost@139.com", "zzy_cmpost@139.com", "zhxs_cmpost@139.com", "gsdtfx_cmpost@139.com", "hqrwdl_cmpost@139.com", "csshkb_cmpost@139.com", "wdnsj_cmpost@139.com", "cyb_cmpost@139.com", "szns_cmpost@139.com", "czsh_cmpost@139.com", "xsyscplb_cmpost@139.com", "xsyscqdb_cmpost@139.com", "xsyscglb_cmpost@139.com", "grdn_cmpost@139.com", "sspp_cmpost@139.com", "ybtx_cmpost@139.com", "ssye_cmpost@139.com", "syzy1_cmpost@139.com", "yxsj1_cmpost@139.com", "jrrx_cmpost@139.com", "szlofficiejzb_cmpost@139.com", "qcdb_cmpost@139.com", "cqgs_cmpost@139.com", "pw_cmpost@139.com", "ktx_cmpost@139.com", "12580hsh_cmpost@139.com", "zgydqqtppyxbd_cmpost@139.com", "zgzk_cmpost@139.com", "hqsh_cmpost@139.com", "jz_cmpost@139.com", "xlx_cmpost@139.com", "jrfc_cmpost@139.com", "cyb1_cmpost@139.com", "dszf_cmpost@139.com", "lahyjt_cmpost@139.com", "zez_cmpost@139.com", "yxwjdzzz_cmpost@139.com", "cb_cmpost@139.com", "gdydtxzz_cmpost@139.com", "ndxljpzz_cmpost@139.com", "zhshb_cmpost@139.com", "jydd_cmpost@139.com", "gdydtxb_cmpost@139.com", "gr12580shzz_cmpost@139.com", "qcyyd_cmpost@139.com", "hwtx_cmpost@139.com", "xsysc_cmpost@139.com", "fszb_cmpost@139.com", "ndzk_cmpost@139.com", "gamef_cmpost@139.com", "yl1_cmpost@139.com", "gsl_cmpost@139.com", "fkyyydb_cmpost@139.com", "sxy_cmpost@139.com", "itsdzk1_cmpost@139.com", "zqjkb_cmpost@139.com", "dslr_cmpost@139.com", "qj1_cmpost@139.com", "zgxwzk_cmpost@139.com", "ydyyzz_cmpost@139.com", "qnbl_cmpost@139.com", "qbq_cmpost@139.com", "37nr_cmpost@139.com", "sj_cmpost@139.com", "jtys_cmpost@139.com", "qcdbs_cmpost@139.com", "jtys1_cmpost@139.com", "xdfyyxx_cmpost@139.com", "ndylzk_cmpost@139.com", "ydlgzn_cmpost@139.com", "cgdmmf_cmpost@139.com", "wxpmmf_cmpost@139.com", "gxjdmf_cmpost@139.com", "ydyyzzmf_cmpost@139.com", "sjsxyzz_cmpost@139.com", "jcckmf_cmpost@139.com", "dsjzqb_cmpost@139.com", "ybdlw_cmpost@139.com", "sjmrjk_cmpost@139.com", "csdn_cmpost@139.com", "ssmr_cmpost@139.com", "zwfs_cmpost@139.com", "hxw_cmpost@139.com", "ssyoyo_cmpost@139.com", "ftz_cmpost@139.com", "syzy_cmpost@139.com", "wytyrp_cmpost@139.com", "hplq_cmpost@139.com", "hpzq_cmpost@139.com", "liveside_cmpost@139.com", "mr6_cmpost@139.com", "rysh_cmpost@139.com", "dbanotes_cmpost@139.com", "taobaouedteam_cmpost@139.com", "xjzl_cmpost@139.com", "tib_cmpost@139.com", "eedscpjlsj_cmpost@139.com", "xyyxqs_cmpost@139.com", "sfl_cmpost@139.com", "shzk_cmpost@139.com", "zysygh_cmpost@139.com", "hxdl_cmpost@139.com", "fcms_cmpost@139.com", "wlwls_cmpost@139.com", "gmw_cmpost@139.com", "dhljy_cmpost@139.com", "szwb_cmpost@139.com", "hmsg_cmpost@139.com", "qyx_cmpost@139.com", "dysy_cmpost@139.com", "zgdybd_cmpost@139.com", "cdqss_cmpost@139.com", "tk_cmpost@139.com", "my_cmpost@139.com", "ddkj_cmpost@139.com", "lfw_cmpost@139.com", "techcrun_cmpost@139.com", "mzdxsrj_cmpost@139.com", "idea1983_cmpost@139.com", "jd_cmpost@139.com", "qsbkxdmnsfc_cmpost@139.com", "wyxcf_cmpost@139.com", "sjzg_cmpost@139.com", "jysh_cmpost@139.com", "jysh1_cmpost@139.com", "lyzdgtpt_cmpost@139.com", "yywcbxh_cmpost@139.com", "blhnrdcf_cmpost@139.com", "aladdsjlfp_cmpost@139.com", "lfdgxtp_cmpost@139.com", "mtyx_cmpost@139.com", "sjss_cmpost@139.com", "xqyj_cmpost@139.com", "lzys_cmpost@139.com", "dzzt_cmpost@139.com", "dtzjjlb_cmpost@139.com", "zzqxqm_cmpost@139.com", "sqsm_cmpost@139.com", "xbdmh_cmpost@139.com", "ykj1_cmpost@139.com", "wydbk_cmpost@139.com", "xcf_cmpost@139.com", "dfty_cmpost@139.com", "jjpl_cmpost@139.com", "wstd_cmpost@139.com", "qj_cmpost@139.com", "nrfs_cmpost@139.com", "yzfemina_cmpost@139.com", "mdyx_cmpost@139.com", "hjyy_cmpost@139.com", "sjwl_cmpost@139.com", "qnwzkd_cmpost@139.com", "alzx_cmpost@139.com", "snkt_cmpost@139.com", "sjtc_cmpost@139.com", "wzl_cmpost@139.com", "zth_cmpost@139.com", "stgml_cmpost@139.com", "stzl_cmpost@139.com", "yxsj_cmpost@139.com", "itxws_cmpost@139.com", "xzyhp_cmpost@139.com", "ihm_cmpost@139.com", "ylrlef_cmpost@139.com", "bky_cmpost@139.com", "hlwdyxsq_cmpost@139.com", "tech2ipo_cmpost@139.com", "hyyjt_cmpost@139.com", "cyhb_cmpost@139.com", "padmacsj_cmpost@139.com", "qqfx_cmpost@139.com", "xkkb_cmpost@139.com", "xfxdj_cmpost@139.com", "yl_cmpost@139.com", "syjz_cmpost@139.com", "st_cmpost@139.com", "yyb_cmpost@139.com", "syjr_cmpost@139.com", "tjs_cmpost@139.com", "ydsj_cmpost@139.com", "mrxgjx_cmpost@139.com", "jplsbjrj_cmpost@139.com", "wl_cmpost@139.com", "qxzy_cmpost@139.com", "xzrj_cmpost@139.com", "iphonemfrj_cmpost@139.com", "hqkx_cmpost@139.com", "jdqw_cmpost@139.com", "jdsh_cmpost@139.com", "jdwh_cmpost@139.com", "jdkj_cmpost@139.com", "wye_cmpost@139.com", "wwxjp_cmpost@139.com", "ayscl_cmpost@139.com", "wty_cmpost@139.com", "qxl_cmpost@139.com", "sysyjq_cmpost@139.com", "ysyl_cmpost@139.com", "psxxw_cmpost@139.com", "axq_cmpost@139.com", "ysjyxdt_cmpost@139.com", "xl1_cmpost@139.com", "xxts_cmpost@139.com", "dhsjhs_cmpost@139.com", "sdstsjlfp_cmpost@139.com", "bql_cmpost@139.com", "mozty_cmpost@139.com", "fashiondes_cmpost@139.com", "elle_cmpost@139.com", "fs_cmpost@139.com", "zgssjp_cmpost@139.com", "mhw_cmpost@139.com", "awc_cmpost@139.com", "bc_cmpost@139.com", "cyyy_cmpost@139.com", "pqp_cmpost@139.com", "ffk_cmpost@139.com", "sj1_cmpost@139.com", "mmcz_cmpost@139.com", "qczj_cmpost@139.com", "htcsjzj_cmpost@139.com", "dfwh_cmpost@139.com", "tyhg_cmpost@139.com", "stzk_cmpost@139.com", "ymw_cmpost@139.com", "wtimejdyl_cmpost@139.com", "lxshsys_cmpost@139.com", "sh_cmpost@139.com", "zyj_cmpost@139.com", "fcybsh_cmpost@139.com", "hsh_cmpost@139.com", "smj_cmpost@139.com", "ahw_cmpost@139.com", "th_cmpost@139.com", "zgydyh_cmpost@139.com", "mgjj_cmpost@139.com", "cjw_cmpost@139.com", "cygl_cmpost@139.com", "sytt_cmpost@139.com", "lvyj_cmpost@139.com", "sgk_cmpost@139.com", "gkw_cmpost@139.com", "wqsh_cmpost@139.com", "mrhf_cmpost@139.com", "ymxh_cmpost@139.com", "sslk_cmpost@139.com", "lomow_cmpost@139.com", "jktips_cmpost@139.com", "dtksj_cmpost@139.com", "yysb_cmpost@139.com", "tpsgj_cmpost@139.com", "kxts_cmpost@139.com", "amwsyz_cmpost@139.com", "dzxs_cmpost@139.com", "cyyyhy_cmpost@139.com", "mxyy_cmpost@139.com", "since1984_cmpost@139.com", "ylgrbk_cmpost@139.com", "cydb_cmpost@139.com", "leicazwsyzz_cmpost@139.com", "wmtp_cmpost@139.com", "nfdsb_cmpost@139.com", "afe_cmpost@139.com", "hlwdnds_cmpost@139.com", "Techweb_cmpost@139.com", "amw1_cmpost@139.com", "qsbk_cmpost@139.com", "lxlf_smpost@139.com", "wxs_cmpost@139.com", "rht_cmpost@139.com", "zym_cmpost@139.com", "bcnxse_smpost@139.com", "jqrzn_cmpost@139.com", "qjhw_smpost@139.com", "ydlt_smpost@139.com", "lc_smpost@139.com", "pcttgms_smpost@139.com", "hnlx_smpost@139.com", "yxsjzd_smpost@139.com", "techcrun_cmpost@139.com  ", "GPRSllcx_smpost@139.com", "fwsd_smpost@139.com", "jkyxs_cmpost@139.com", "sjzrjjh_smpost@139.com", "blhnrdcf@139.com", "mrdwyhxj_cmpost@139.com", "xmjessica_mpost@139.com", "xm_cmpost@139.com", "ppw_cmpost@139.com", "ltly_cmpost@139.com", "sxydqqtj_cmpost@139.com", "mlt_smpost@139.com", "cstdyj_smpost@139.com", "sxtemp_cmpost@139.com", "tsts_cmpost@139.com", "yspl_cmpost@139.com", "cskfpttd_cmpost@139.com", "khzszzf_cmpost@139.com", "fhgdshcs_cmpost@139.com", "ns_cmpost@139.com", "sb_cmpost@139.com", "sdfx_cmpost@139.com", "mwrs_cmpost@139.com", "bzmwjc_smpost@139.com", "solidot_cmpost@139.com", "djw_cmpost@139.com", "sjtt_cmpost@139.com", "dfyd_cmpost@139.com", "bdbj_cmpost@139.com", "cfzww_cmpost@139.com", "tyhb_cmpost@139.com", "cpdt_cmpost@139.com", "y26rcsfw_smpost@139.com", "cjyk_cmpost@139.com", "ssyk_cmpost@139.com", "rwzk_cmpost@139.com", "jr_cmpost@139.com", "mzyd_cmpost@139.com", "hbyd_cmpost@139.com", "dfcs_cmpost@139.com", "dfls_cmpost@139.com", "dzws_cmpost@139.com", "shds_cmpost@139.com", "dcktx_cmpost@139.com", "mbazk_cmpost@139.com", "jcrb_cmpost@139.com", "jcrb_cmpost@139.com", "itzj1_cmpost@139.com", "zjzx_cmpost@139.com", "agj_cmpost@139.com", "rjxy_cmpost@139.com", "kjhb_cmpost@139.com", "sshb_cmpost@139.com", "xxhb_cmpost@139.com", "gsdtqgb_cmpost@139.com", "qcdbqgb_cmpost@139.com", "dmtlmnql_cmpost", "service_mpost@139.com", "cy_cmpost@139.com", "jtsby1_cmpost@139.com", "jtxby1_cmpost@139.com", "nfrwzk_cmpost@139.com", "nfrwzkq_cmpost@139.com", "lyzl_cmpost@139.com", "blb_cmpost@139.com", "jlr_cmpost@139.com", "xjjb_cmpost@139.com", "yysj_cmpost@139.com"], i = ["10086.ln@ln.chinamobile.com", "10086@139.COM", "10086@139.com", "10086@cq.chinamobile.com", "10086@gd.chinamobile.com", "10086@gs.chinamobile.com", "10086@gx.chinamobile.com", "10086@gz.chinamobile.com", "10086@ha.chinamobile.com", "10086@hl.chinamobile.com", "10086@hn.10086.cn", "10086@hn.chinamobile.com", "10086@jl.chinamobile.com", "10086@js.chinamobile.com", "10086@jx.chinamobile.com", "10086@ln.chinamobile.com", "10086@nm.chinamobile.com", "10086@nx.chinamobile.com", "10086@qh.chinamobile.com", "10086@sc.chinamobile.com", "10086@sd.chinamobile.com", "10086@sn.chinamobile.com", "10086@sx.chinamobile.com", "10086@tj.chinamobile.com", "10086@xj.chinamobile.com", "10086@xz.chinamobile.com", "10086@yn.chinamobile.com", "10086@zj.chinamobile.com", "110@gdga.gov.cn", "12580@10086.cn", "12580emall_newsletter@139.com", "12580mall@139.com", "268097812@139.com", "53xiu@139.com", "787878@78.com", "95598@gdqy.csg.cn", "95598@gdzq.csg.cn", "95598@zj.sgcc.com.cn", "96968@djsw.com.cn", "CMCCAccount@139.com", "CMCC_NB@139.com", "CMCCservice@139.com", "Credit_Card_CS@service.pingan.com", "E-report01@139.com", "E_report02@139.com", "E_report03@139.com", "E_report04@139.com", "E_report05@139.com", "Health_Insurance@service.pingan.com", "JYMSM@139.com", "MM_Anto@139.com", "PAZQ@promotion.pingan.com", "PA_Bank@promotion.pingan.com", "PA_CX@service.pingan.com", "PA_CreditCard@promotion.pingan.com", "PA_Life@promotion.pingan.com", "PA_LifeInsurance@promotion.pingan.com", "PA_WLT@promotion.pingan.com", "PA_XT@promotion.pingan.com", "PA_XT@service.pingan.com", "PA_ZQ@service.pingan.com", "PA_annuity@promotion.pingan.com", "PA_fund@promotion.pingan.com", "PA_info@information.pingan.com", "PA_info@message.pingan.com", "PA_info@promotion.pingan.com", "PA_lufax@promotion.pingan.com", "PAbank@service.pingan.com", "PAbankreport@service.pingan.com", "ST13901@139.com", "ST13902@139.com", "TZXJ95598@139.com", "UMCIMMS@139.com", "User_experience@139.com", "VIP@service.pingan.com", "WLT@promotion.pingan.com", "WLT@service.pingan.com", "account@139.com", "adminzd@139.com", "ah10086@0001.10086.cn", "ah10086@0002.10086.cn", "ah10086@0003.10086.cn", "ah10086@0004.10086.cn", "ah10086@0005.10086.cn", "ah10086@0006.10086.cn", "ah10086@0007.10086.cn", "ah10086@0008.10086.cn", "ah10086@0009.10086.cn", "ah10086@0010.10086.cn", "ah10086@0011.10086.cn", "ah10086@0012.10086.cn", "ah10086@0013.10086.cn", "ah10086@0014.10086.cn", "ah10086@0015.10086.cn", "ah10086@0016.10086.cn", "ah10086@0017.10086.cn", "ah10086@0018.10086.cn", "ah10086@0019.10086.cn", "ah10086@0020.10086.cn", "ah10086@1001.10086.cn", "ah10086@1002.10086.cn", "ah10086@1003.10086.cn", "ah10086@1004.10086.cn", "ah10086@1005.10086.cn", "ah10086@1006.10086.cn", "ah10086@1007.10086.cn", "ah10086@1008.10086.cn", "ah10086@1009.10086.cn", "ah10086@1010.10086.cn", "ah10086@1011.10086.cn", "ah10086@1012.10086.cn", "ah10086@1013.10086.cn", "ah10086@1014.10086.cn", "ah10086@1015.10086.cn", "ah10086@1016.10086.cn", "ah10086@1017.10086.cn", "ah10086@1018.10086.cn", "ah10086@1019.10086.cn", "ah10086@1020.10086.cn", "ah10086@1021.10086.cn", "ah10086@1022.10086.cn", "ah10086@1023.10086.cn", "ah10086@1024.10086.cn", "ah10086@1025.10086.cn", "ah10086@1026.10086.cn", "ah10086@1027.10086.cn", "ahyd12580@139.com", "anhui12580@139.com", "annuity_counter@service.pingan.com", "annuity_cspi@service.pingan.com", "annuity_repay@service.pingan.com", "annuity_shanghai@service.pingan.com", "apservice@139.com", "auction@trade.alibaba-inc.com", "base@139.com", "bei_jing10086@bj.chinamobile.com", "beijing10086@bj.chinamobile.com", "beijing_10086@bj.chinamobile.com", "bill@139.com", "bills@szgas.com.cn", "bj10086@0001.10086.cn", "bj10086@0002.10086.cn", "bj10086@0003.10086.cn", "bj10086@0004.10086.cn", "bmaster@icbc.com.cn", "call@139.com", "card@cgbchina.com.cn", "care139@139.com", "care@139.com", "ccb0573@139.com", "checkoo@139.com", "chezhuyouxiang@139.com", "chinamobile@hi.chinamobile.com", "citiccard@139.com", "citiccard@citiccard.com", "citiccard@citiccards.com", "club@139.com", "cmcc12599@139.com", "cmccsr@139.com", "cmpassport139@139.com", "cmpassport@139.com", "cmpay@139.com", "cmpay_bill@139.com", "cmpay_vip@139.com", "cntv2012@139.com", "cooling8@139.com", "cp500wan@139.com", "cq.10086@139.com", "cq10086@0001.10086.cn", "cq10086@0002.10086.cn", "cq10086@0003.10086.cn", "cq10086@0004.10086.cn", "cq10086@cq.chinamobile.com", "creditcard@promotion.pingan.com", "creditcard@service.pingan.com", "csgajj@139.com", "customer@information.pingan.com", "customer@kxg.mobi", "customer@message.pingan.com", "customer@promotion.pingan.com", "daikuan1@promotion.pingan.com", "daikuan@promotion.pingan.com", "data.u@139.com", "dev10086cn@139.com", "dg10086@139.com", "dg95598@vip.gd.csg.cn", "dzq@cmpay.10086.cn", "e-report@139.com", "e10086@139.com", "easytooccs@139.com", "easytooclw@139.com", "easytoodyp@139.com", "easytoosdf@139.com", "ecloud_service@139.com", "editcard@cgbchina.com.cn", "editcard@message.cib.com.cn", "ehr_manager@139.com", "erpdzzd@sz.csg.cn", "ersonalService@bank-of-china.com", "estmtservice@eb.spdbccc.com.cn", "ewc@139.com", "fanli139@139.com", "fetion_lbs@139.com", "fetion_pc1@139.com", "fetion_pc2@139.com", "fetion_pc3@139.com", "fetion_pc5@139.com", "fetion_pc6@139.com", "fetion_pc7@139.com", "fh_sfzhangdan@139.com", "fj10086@0001.10086.cn", "fj10086@0002.10086.cn", "fj10086@0003.10086.cn", "fj10086@0004.10086.cn", "fj10086@0005.10086.cn", "fj10086@0006.10086.cn", "fj10086@0007.10086.cn", "fj10086@0008.10086.cn", "fj10086@0009.10086.cn", "fj10086@0010.10086.cn", "fj10086@0011.10086.cn", "fj10086@0012.10086.cn", "fj10086@0013.10086.cn", "fj10086@0014.10086.cn", "fj10086@0015.10086.cn", "fj10086@0016.10086.cn", "fj10086@0017.10086.cn", "fj10086@0018.10086.cn", "fj10086@0019.10086.cn", "fj10086@0020.10086.cn", "fj10086@0021.10086.cn", "fj10086@0022.10086.cn", "fj10086@0023.10086.cn", "fj10086@0024.10086.cn", "fj10086@0025.10086.cn", "fj10086@0026.10086.cn", "fj10086@0027.10086.cn", "fj10086@0028.10086.cn", "fj10086@1001.10086.cn", "fj10086@1002.10086.cn", "fj10086@1003.10086.cn", "fj10086@1004.10086.cn", "fj10086@1005.10086.cn", "fj10086@1006.10086.cn", "fj10086@139.com", "flow@139.com", "fs95598@gdfs.csg.cn", "fs95598@vip.gd.csg.cn", "fsczms01@139.com", "fsczms02@139.com", "fsczms03@139.com", "fsczms77@139.com", "fsgajj@139.com", "fsxlclns@139.com", "fsxxt_jzlf@139.com", "fund@service.pingan.com", "fxtc@0001.10086.cn", "fxtc@0002.10086.cn", "fxtc@0003.10086.cn", "fxtc@0004.10086.cn", "fxtc@0005.10086.cn", "fzyd01@139.com", "g3_139shequ@139.com", "game@49you.com", "game@js.chinamobile.com", "gamenotice@139.com", "gd.10086.cn@139.com", "gd10086@0001.10086.cn", "gd10086@0002.10086.cn", "gd10086@0003.10086.cn", "gd10086@0004.10086.cn", "gd10086@0005.10086.cn", "gd10086@0006.10086.cn", "gd10086@1001.10086.cn", "gd10086@1002.10086.cn", "gd10086@1003.10086.cn", "gd10086@1004.10086.cn", "gd10086@1005.10086.cn", "gd10086@1006.10086.cn", "gd10086@1007.10086.cn", "gd10086@1008.10086.cn", "gd10086@1009.10086.cn", "gd10086@1011.10086.cn", "gd10086@1012.10086.cn", "gd10086@1013.10086.cn", "gd10086@1014.10086.cn", "gd10086@1015.10086.cn", "gd10086@1016.10086.cn", "gd10086@1017.10086.cn", "gd10086@1018.10086.cn", "gd10086@1019.10086.cn", "gd10086@1020.10086.cn", "gd10086@1021.10086.cn", "gd10086@1022.10086.cn", "gd10086@1023.10086.cn", "gd10086@1030.10086.cn", "gd10086@2001.10086.cn", "gd10086@batch001.10086.cn", "gd10086@gd.chinamobile.com", "gdbnetfax@mail.bnetdata.net", "gdhz_rq01@139.com", "gdxxt@139.com", "gfqh@gf.com.cn", "girl@sisfun.com", "girls@sisfun.com", "gs10086@0001.10086.cn", "gs10086@0002.10086.cn", "gs10086@0003.10086.cn", "gs10086@0004.10086.cn", "gs10086@0005.10086.cn", "gs10086@0006.10086.cn", "gs10086@0007.10086.cn", "gs10086@0008.10086.cn", "gs10086@1001.10086.cn", "guangdong12580@139.com", "guangxihd@139.com", "gx10086@0001.10086.cn", "gx10086@0002.10086.cn", "gx10086@0003.10086.cn", "gx10086@0004.10086.cn", "gx10086@0005.10086.cn", "gx10086@0006.10086.cn", "gx10086@0007.10086.cn", "gx10086@0008.10086.cn", "gx10086@1001.10086.cn", "gx10086@1002.10086.cn", "gx95598@gx.csg.cn", "gx95601@gx.csg.cn", "gxlcwater@139.com", "gxyd@139.com", "gz10086@0001.10086.cn", "gz10086@0002.10086.cn", "gz10086@0003.10086.cn", "gz10086@0004.10086.cn", "gz10086@0005.10086.cn", "gz10086@0006.10086.cn", "gz10086@0007.10086.cn", "gz10086@0008.10086.cn", "gz10086@0009.10086.cn", "gz10086@1010.10086.cn", "gz10086@139.com", "gzczfw@139.com", "gzd@139.com", "ha10086@0001.10086.cn", "ha10086@0002.10086.cn", "ha10086@0003.10086.cn", "ha10086@0004.10086.cn", "ha10086@0005.10086.cn", "ha10086@0006.10086.cn", "ha10086@0007.10086.cn", "ha10086@0008.10086.cn", "ha10086@0009.10086.cn", "ha10086@0010.10086.cn", "ha10086@0011.10086.cn", "ha10086@0012.10086.cn", "ha10086@0013.10086.cn", "ha10086@0014.10086.cn", "ha10086@0015.10086.cn", "ha10086@0016.10086.cn", "ha10086@0017.10086.cn", "ha10086@0018.10086.cn", "ha10086@0019.10086.cn", "ha10086@0020.10086.cn", "ha10086@0021.10086.cn", "ha10086@0022.10086.cn", "ha10086@0023.10086.cn", "ha10086@0024.10086.cn", "ha10086@0025.10086.cn", "ha10086@0026.10086.cn", "ha10086@0027.10086.cn", "ha10086@0028.10086.cn", "ha10086@0029.10086.cn", "ha10086@0030.10086.cn", "ha10086@0031.10086.cn", "ha10086@0032.10086.cn", "ha10086@0033.10086.cn", "ha10086@0034.10086.cn", "ha10086@0035.10086.cn", "ha10086@1001.10086.cn", "ha10086@1002.10086.cn", "ha10086@1003.10086.cn", "ha10086@1004.10086.cn", "ha10086@1005.10086.cn", "ha10086@1006.10086.cn", "ha10086@1007.10086.cn", "ha10086@1008.10086.cn", "ha10086@10086.cn", "ha10086@1009.10086.cn", "ha10086@1010.10086.cn", "ha10086@1011.10086.cn", "ha10086@1012.10086.cn", "ha10086@1013.10086.cn", "ha10086@1014.10086.cn", "ha10086@1015.10086.cn", "ha10086@1016.10086.cn", "ha10086@1017.10086.cn", "ha10086@1018.10086.cn", "ha10086@1019.10086.cn", "ha10086@1020.10086.cn", "ha10086@1021.10086.cn", "ha10086@2001.10086.cn", "ha10086@3001.10086.cn", "ha10086@3002.10086.cn", "hanzhanyuan@qq.com", "haoze@mtinsure.net", "happymail@139.com", "hb-10086@139.com", "hb10086@0001.10086.cn", "hb10086@0002.10086.cn", "hb10086@0003.10086.cn", "hb10086@0004.10086.cn", "hb10086@0005.10086.cn", "hb10086@0006.10086.cn", "hb10086@0007.10086.cn", "hb10086@0008.10086.cn", "hb10086@1003.10086.cn", "hb10086@1005.10086.cn", "hb10086@1006.10086.cn", "hb10086@1007.10086.cn", "hb10086@1008.10086.cn", "hb10086@1009.10086.cn", "hb10086@1010.10086.cn", "hb10086@1012.10086.cn", "hb10086@1013.10086.cn", "hb10086@1014.10086.cn", "hb10086@1017.10086.cn", "hbmc10086@139.com", "hbwcity@139.com", "hbylgh@139.com", "hddx3333@126.com", "he10086@0001.10086.cn", "he10086@0002.10086.cn", "he10086@0003.10086.cn", "he10086@0004.10086.cn", "he10086@0005.10086.cn", "he10086@0006.10086.cn", "he10086@1001.10086.cn", "he10086@1002.10086.cn", "he10086@1003.10086.cn", "he10086@1004.10086.cn", "he10086@1005.10086.cn", "he10086@1006.10086.cn", "he10086@1007.10086.cn", "he10086@1008.10086.cn", "he10086@1010.10086.cn", "he10086@1011.10086.cn", "he10086@1012.10086.cn", "he10086@1013.10086.cn", "he10086@1014.10086.cn", "he10086@1015.10086.cn", "he10086@1016.10086.cn", "he10086@1019.10086.cn", "he10086@1020.10086.cn", "he10086@3001.10086.cn", "hebei10086@139.com", "hebeixxt@139.com", "hesw@richinfo.cn", "hf@cmpay.10086.cn", "hi10086@0001.10086.cn", "hi10086@0002.10086.cn", "hi10086@0003.10086.cn", "hi10086@0004.10086.cn", "hi10086@0005.10086.cn", "hi10086@0010.10086.cn", "hl10086@0001.10086.cn", "hl10086@0002.10086.cn", "hl10086@0003.10086.cn", "hl10086@0004.10086.cn", "hl10086@0005.10086.cn", "hl10086@0006.10086.cn", "hl10086@0007.10086.cn", "hl10086@0008.10086.cn", "hl10086@0009.10086.cn", "hl10086@0010.10086.cn", "hl10086@0011.10086.cn", "hl10086@0012.10086.cn", "hl10086@0013.10086.cn", "hl10086@0014.10086.cn", "hl10086@0015.10086.cn", "hl10086@0016.10086.cn", "hl10086@1001.10086.cn", "hl10086@1003.10086.cn", "hl10086@1004.10086.cn", "hl10086@2002.10086.cn", "hlc_smpost@139.com", "hlcmpay@139.com", "hlj.10086@139.com", "hlj10086@139.com", "hlj_10086@139.com", "hn10086@0001.10086.cn", "hn10086@0002.10086.cn", "hn10086@0003.10086.cn", "hn10086@0004.10086.cn", "hn10086@0005.10086.cn", "hn10086@0006.10086.cn", "hn10086@0007.10086.cn", "hn10086@0008.10086.cn", "hn10086@1001.10086.cn", "hn10086@1002.10086.cn", "hn10086@1003.10086.cn", "hn10086@1004.10086.cn", "hn10086@1005.10086.cn", "hn10086@1006.10086.cn", "hn10086@1007.10086.cn", "hn10086@1008.10086.cn", "hn10086@1009.10086.cn", "hn10086@1010.10086.cn", "hn10086@1011.10086.cn", "hn10086@1012.10086.cn", "hn10086@1013.10086.cn", "hn10086@1014.10086.cn", "hn10086@1015.10086.cn", "hn10086@1016.10086.cn", "hn10086@1017.10086.cn", "hn10086@2001.10086.cn", "hn10086@5001.10086.cn", "hn10086@5002.10086.cn", "hn10086@5003.10086.cn", "hn10086@batch001.10086.cn", "hngdj@139.com", "hnmcc.com@139.com", "hnsnyj@139.com", "hnzls@139.com", "homemail@139.com", "homemail_cc_ranqi@139.com", "homemail_cc_shuifei@139.com", "homemail_fs_dianfei@139.com", "homemail_gm_dianfei@139.com", "homemail_gm_ranqi@139.com", "homemail_gm_shuifei@139.com", "homemail_nh_dianfei@139.com", "homemail_nh_ranqi@139.com", "homemail_sd_shuifei@139.com", "homemail_ss_dianfei@139.com", "homemail_ss_shuifei@139.com", "hotyecard@139.com", "hotyecredit@139.com", "hotyegajj@139.com", "hotyejf@139.com", "hotyenp@139.com", "hotyetax@139.com", "hubei12580@139.com", "hubeixxt@139.com", "hulianwangluo@139.com", "hunan139@139.com", "hy95598@vip.gd.csg.cn", "hywater@139.com", "hyzls@139.com", "hz95598@vip.gd.csg.cn", "hzbnetfax@mail.bnetfax.net", "hzdl@139.com", "hzdyyy@139.com", "hzfyyy@139.com", "hzgzj01@139.com", "hzhkyy@139.com", "hzinfor1@139.com", "hzinfor@139.com", "hzzls01@139.com", "hzzlsgg@139.com", "i-che@service.pingan.com", "ipay@mail.alipay.com", "jayd01@139.com", "jfbill@139.com", "jh95598@139.com", "jh_10086@139.com", "jiangxidianli@jx.sgcc.com.cn", "jiaotongzu1@163.com", "jinqianbao@goldenjaguar.com", "jinyutianxia1638@163.com", "jl10086@0001.10086.cn", "jl10086@0002.10086.cn", "jl10086@0003.10086.cn", "jl10086@0004.10086.cn", "jl10086@0005.10086.cn", "jl10086@0006.10086.cn", "jl10086@0007.10086.cn", "jl10086@1001.10086.cn", "jl10086@2001.10086.cn", "jl10086@batch001.10086.cn", "jlwxcs@139.com", "jlwxcs_fw@139.com", "jm95598@vip.gd.csg.cn", "jrcx@139.com", "js-xxt@139.com", "js10086@0001.10086.cn", "js10086@0002.10086.cn", "js10086@0003.10086.cn", "js10086@0004.10086.cn", "js10086@0020.10086.cn", "js10086@1001.10086.cn", "js10086@1002.10086.cn", "jx10086@0001.10086.cn", "jx10086@0002.10086.cn", "jx10086@0003.10086.cn", "jx10086@0004.10086.cn", "jx10086@0005.10086.cn", "jx10086@0006.10086.cn", "jx10086@0007.10086.cn", "jx10086@0008.10086.cn", "jx10086@0009.10086.cn", "jx10086@0010.10086.cn", "jxadmin02@139.com", "jxccb0573@139.com", "jxdzzd@139.com", "jxgdj@139.com", "jxwxcs@139.com", "jxxytw@139.com", "kaixueji2012@139.com", "konkachangqing@163.com", "life-TM@promotion.pingan.com", "lmaq@139.com", "ln-10086@ln.chinamobile.com", "ln10086@0001.10086.cn", "ln10086@0002.10086.cn", "ln10086@0003.10086.cn", "ln10086@0004.10086.cn", "ln10086@0005.10086.cn", "ln10086@0006.10086.cn", "ln10086@0007.10086.cn", "ln10086@0008.10086.cn", "ln10086@0009.10086.cn", "ln10086@0012.10086.cn", "ln_10086@ln.chinamobile.com", "ln_xxt@139.com", "lnwxcs@139.com", "lufax@service.pingan.com", "lvsechuxing_sz@139.com", "lvsechuxingsz@139.com", "mail139-diy@139.com", "mail139-edu@139.com", "mail139-fun@139.com", "mail139-idea@139.com", "mail139-joy@139.com", "mail139-lol@139.com", "mail139-new@139.com", "mail139-sev@139.com", "mail139@139.com", "mail139_01@139.com", "mail139_holiday@139.com", "mail139_port@139.com", "mail139_vip@139.com", "mail@139.com", "mailbox@yuwangtianxia.com", "marketing@wxcs.cn", "mcloud-noreply@139.com", "mcloud_noreply@139.com", "member@promotion.pingan.com", "member@service.pingan.com", "migoo.music@139.com", "mm@139.com", "mmvip_mail@139.com", "mnote@139.com", "mobilemarket@139.com", "mobilemarketa@139.com", "mobilemarketb@139.com", "mobilemarketc@139.com", "mobilemarketd@139.com", "music@mail.139.com", "nbxgrq@139.com", "nbyd_139mail@139.com", "nbzls@139.com", "ncyd@139.com", "netbox@139.com", "newcard@49you.com", "njyd@139.com", "nm10086@0001.10086.cn", "nm10086@0002.10086.cn", "nm10086@0003.10086.cn", "nm10086@0004.10086.cn", "nm10086@0005.10086.cn", "nm10086@0006.10086.cn", "nm10086@0007.10086.cn", "nm10086@0008.10086.cn", "nm10086@0010.10086.cn", "nm10086@1002.10086.cn", "nm10086@1004.10086.cn", "nm10086@1007.10086.cn", "nm10086@1009.10086.cn", "nm10086@1015.10086.cn", "nm10086@1017.10086.cn", "nm10086@1018.10086.cn", "notice@lefeng.com", "npxxt599@139.com", "nsgongan@139.com", "nx10086@0001.10086.cn", "nx10086@0002.10086.cn", "nx10086@0003.10086.cn", "nx10086@0004.10086.cn", "nx10086@0005.10086.cn", "nx10086@0006.10086.cn", "nx10086@0007.10086.cn", "nx10086@0008.10086.cn", "nx10086@0009.10086.cn", "nx10086@0010.10086.cn", "nx10086@0011.10086.cn", "nx10086@2001.10086.cn", "nx10086@batch001.10086.cn", "onlineshop@promotion.pingan.com", "onlineshop@service.pingan.com", "pa_annuity@service.pingan.com", "pa_annuity_wangxiao@service.pingan.com", "palic_notice@service.pingan.com", "passport@139.com", "paxinbao@service.pingan.com", "paxintuo@service.pingan.com", "pe-service@139.com", "pension@service.pingan.com", "personalservice@bank-of-china.com", "peservice@139.com", "phaoarh1@gmail.com", "piaoliuping2012@139.com", "pinganbank@service.pingan.com", "pinganzizhuka@service.pingan.com", "pinghushebao@139.com", "port@139.com", "post-team@139.com", "pub_PAZQ@service.pingan.com", "pxydgf_139@139.com", "qdzhzcxt@139.com", "qh10086@0001.10086.cn", "qh10086@0002.10086.cn", "qh10086@0003.10086.cn", "qh10086@0004.10086.cn", "qh10086@0005.10086.cn", "qh10086@0006.10086.cn", "qh10086@0007.10086.cn", "qh10086@0008.10086.cn", "qh10086@0009.10086.cn", "qh10086@0010.10086.cn", "qh10086@0011.10086.cn", "qh10086@2001.10086.cn", "qiangliquan2012@139.com", "qinsh@richinfo.cn", "rdservice@cmbc.com.cn", "recruit@service.pingan.com", "register@vip.mail.taobao.com", "register@wxcs.cn", "renrenedm@renren.com", "safe@service.weibo.com", "sanshui_ranqi@139.com", "sbbszn@139.com", "sbcjwt@139.com", "sbjbqk@139.com", "sbjfmx@139.com", "sbtzgg@139.com", "sbxfjfmx@139.com", "sbxfmx@139.com", "sc10086@0001.10086.cn", "sc10086@0002.10086.cn", "sc10086@0003.10086.cn", "sc10086@0004.10086.cn", "sc10086@0005.10086.cn", "sc10086@0011.10086.cn", "sc10086@0012.10086.cn", "sc10086@0013.10086.cn", "sc10086@0014.10086.cn", "sc10086@0015.10086.cn", "sc10086@0016.10086.cn", "sc10086@0017.10086.cn", "sc10086@0018.10086.cn", "sc10086@1001.10086.cn", "sc10086@1002.10086.cn", "sc10086@1003.10086.cn", "sc10086@1004.10086.cn", "sc10086@2001.10086.cn", "sc10086@2002.10086.cn", "scwxcs@139.com", "sd10086123@139.com", "sd10086@0001.10086.cn", "sd10086@0002.10086.cn", "sd10086@1001.10086.cn", "sd10086@1002.10086.cn", "sd10086@1003.10086.cn", "sd10086@1004.10086.cn", "sd10086@1005.10086.cn", "sd10086@1006.10086.cn", "sd10086@1007.10086.cn", "sd10086@5001.10086.cn", "sdchoujinmail@139.com", "sdczfu@139.com", "sdjtwz@139.com", "seccs@gfgroup.com.hk", "service@citiccard.com", "service@creditcard.ecitic.com", "service@cs.dangdang.com", "service@haixin.com", "service@itaoo.com", "service@mangouw.com", "service@message.jsbchina.cn", "service@newletter.szzfgjj.com", "service@sisfun.com", "service@skyworth.com", "service@vip.ccb.com", "service@wxcs.cn", "service@youmi.net", "sg10086@139.com", "sh-139huodong@139.com", "sh10086@0001.10086.cn", "sh10086@0002.10086.cn", "sh10086@0003.10086.cn", "sh10086@0004.10086.cn", "sh10086@0005.10086.cn", "sh10086@0006.10086.cn", "sh10086@0007.10086.cn", "sh10086@0008.10086.cn", "sh10086@0009.10086.cn", "sh10086@0010.10086.cn", "sh10086@0011.10086.cn", "sh10086@0012.10086.cn", "sh10086@0013.10086.cn", "sh10086@0014.10086.cn", "sh10086@0015.10086.cn", "sh10086@0016.10086.cn", "sh10086@0017.10086.cn", "sh10086@0018.10086.cn", "sh10086@0020.10086.cn", "sh10086@1001.10086.cn", "sh10086@1002.10086.cn", "sh10086@1003.10086.cn", "sh10086@1004.10086.cn", "sh10086@1006.10086.cn", "sh10086@1007.10086.cn", "sh10086@1008.10086.cn", "sh10086@1009.10086.cn", "sh10086@1010.10086.cn", "sh10086@1011.10086.cn", "sh10086@1012.10086.cn", "sh10086@1013.10086.cn", "sh10086@1014.10086.cn", "sh10086@1015.10086.cn", "sh10086@1016.10086.cn", "sh10086@1019.10086.cn", "sh10086@1020.10086.cn", "shangh10086@139.com", "shaoxing139@139.com", "shequ139@139.com", "shmcity@139.com", "shuoke139@139.com", "signals@dailyfx.com", "simple_mail@139.com", "sisfun-bill@139.com", "sjzf@0001.10086.cn", "sjzf@0002.10086.cn", "sms@sms.com", "sn10086@0001.10086.cn", "sn10086@0002.10086.cn", "sn10086@0003.10086.cn", "sn10086@0004.10086.cn", "sn10086@0005.10086.cn", "sn10086@0006.10086.cn", "solar-terms@139.com", "st13901@139.com", "st13902@139.com", "st13907@139.com", "statement@creditcard.abchina.com", "studysky@139.com", "subscribe-service@139.com", "subscribe-topic@139.com", "subscribe@139.com", "suggestion@139.com", "svc@message.cmbchina.com", "sx10086@0001.10086.cn", "sx10086@0002.10086.cn", "sx10086@0003.10086.cn", "sx10086@0004.10086.cn", "sx10086@0005.10086.cn", "sx10086@0006.10086.cn", "sx10086@0007.10086.cn", "sx10086@0008.10086.cn", "sx10086@0009.10086.cn", "sx10086@0010.10086.cn", "sx10086@0011.10086.cn", "sx10086@1001.10086.cn", "sx10086@1002.10086.cn", "sx10086@1003.10086.cn", "sx95598@139.com", "sx_dtzd@139.com", "sx_wxcs01@139.com", "sx_wxcs@139.com", "sxhuodong2012@139.com", "sxxxt_system@139.com", "sxyd@sx.chinamobile.com", "sz_aidianying@139.com", "sz_edu@139.com", "sz_lvsechuxing@139.com", "szchuxing@139.com", "szlvsechuxing@139.com", "szmb2012@szmb.gov.cn", "szrcw@139.com", "szxxt_system001@139.com", "szxxt_system007@139.com", "szxxt_system018@139.com", "szxxt_system@139.com", "szydbm@139.com", "szyl_maila@139.com", "szyuyuegh@163.com", "taizmobile@139.com", "tbsmpt@139.com", "tianjin_xxt@139.com", "tianshangrenjian@139.com", "ticcard@citiccard.com", "tixing@139.com", "tj-pe-huodong@139.com", "tj10086@0001.10086.cn", "tj10086@0002.10086.cn", "tj10086@0003.10086.cn", "tj10086@0004.10086.cn", "tj10086@0015.10086.cn", "tj10086@1001.10086.cn", "tjmcmall@139.com", "tmtservice@eb.spdbccc.com.cn", "ttzls@139.com", "tx500wan@139.com", "tz12580@139.com", "tzgh@139.com", "tzjj95598@139.com", "tzjjzls@139.com", "tzlhwater@139.com", "tzlqzls@139.com", "tzyd0576@139.com", "vip_bj@139.com", "wangzengjian1@139.com", "wap@promotion.pingan.com", "wbh@chinamobile.com", "webmaster@es.mail.10086.cn", "webmaster@shfft.com", "wlansport@139.com", "wlansupport@139.com", "wlceleron@139.com", "wlt@service.pingan.com", "wmb@139.com", "wmb_hlj@139.com", "wugongyi_zj@139.com", "wxcs_gdfx01@139.com", "wxcs_sfzd@139.com", "wxcsgz@139.com", "wz95598@139.com", "wzchinamobile@139.com", "wzj.510@163.com", "wzj3-1@139.com", "wzj3-2@139.com", "wzj3-3@139.com", "wzj520999@139.com", "wzj@sina.com", "wzjq1@sina.com", "wzjqp1@sina.com", "wzjqp2@sina.com", "wzjqp@sina.com", "wzjyyy1@sina.com", "wzjyyy@sina.com", "wzyd_139mail@139.com", "wzyoukantou@139.com", "wzyy@139.com", "xa-nfc@139.com", "xiangyang_gx@139.com", "xj10086@0001.10086.cn", "xj10086@0002.10086.cn", "xj10086@0003.10086.cn", "xj10086@0005.10086.cn", "xj10086@0006.10086.cn", "xj10086@0007.10086.cn", "xj10086@1001.10086.cn", "xj10086@1002.10086.cn", "xj10086@1003.10086.cn", "xj10086@1004.10086.cn", "xj10086@1005.10086.cn", "xj10086@1006.10086.cn", "xj10086@1007.10086.cn", "xj10086@1008.10086.cn", "xj10086@1009.10086.cn", "xj10086@1010.10086.cn", "xj10086@1011.10086.cn", "xjwater@139.com", "xszls@139.com", "xytpos@cib.com.cn", "yanzheng@xj.10086.cn", "yd4G_xyzc@139.com", "ydkf@10086.ah.chinamobile.com", "ydmm@139.com", "yewuhezuo_dongman@139.com", "ykwdk@139.com", "yn10086@0001.10086.cn", "yn10086@0002.10086.cn", "yn10086@0003.10086.cn", "yn10086@0004.10086.cn", "yn10086@0005.10086.cn", "yn10086@0006.10086.cn", "yn10086@0007.10086.cn", "yn10086@0008.10086.cn", "yn10086@0009.10086.cn", "yn10086@0010.10086.cn", "yn10086@0011.10086.cn", "yn10086@0012.10086.cn", "yn10086@0013.10086.cn", "yn10086@0014.10086.cn", "yn10086@1001.10086.cn", "yn10086@1002.10086.cn", "yn10086@1003.10086.cn", "yn10086@1004.10086.cn", "yn10086@1005.10086.cn", "yn10086@1006.10086.cn", "yn10086@1007.10086.cn", "yn10086@1008.10086.cn", "yn10086@1009.10086.cn", "yn10086@1010.10086.cn", "yn10086@1011.10086.cn", "yn10086@1012.10086.cn", "yn10086@5001.10086.cn", "yn10086@5002.10086.cn", "yn10086@5003.10086.cn", "yn_netbox@139.com", "youhui001@139.com", "youhui002@139.com", "youhui@139.com", "youhui_gd01@139.com", "youhui_gd@139.com", "youhui_jd@139.com", "youhui_jdhlw@139.com", "youhui_jdyl01@139.com", "youhui_jdyl@139.com", "youhui_jdyy01@139.com", "youhui_jdyy@139.com", "youhui_jt@139.com", "youhui_notice@139.com", "yuecheng@139.com", "yyt@mtair.net", "zd500wan@139.com", "zh08009@139.com", "zh10086@139.com", "zhejiantj@139.com", "zhongyh@139.com", "zipmind@163.com", "zipmind@gmail.com", "zizhuka@service.pingan.com", "zj-xxt@139.com", "zj-xxtczqk@139.com", "zj10086@0001.10086.cn", "zj10086@0002.10086.cn", "zj10086@0003.10086.cn", "zj10086@0004.10086.cn", "zj10086@0005.10086.cn", "zj10086@0006.10086.cn", "zj10086@0007.10086.cn", "zj10086@0008.10086.cn", "zj10086@0009.10086.cn", "zj10086@0010.10086.cn", "zj10086@0011.10086.cn", "zj10086@0012.10086.cn", "zj10086@1001.10086.cn", "zj10086@1002.10086.cn", "zj10086@1003.10086.cn", "zj12580@139.com", "zjlx_sf@139.com", "zjyd0571@139.com", "zjyd0576@139.com", "zouxueyong@126.com", "zs95598@139.com", "zswater@139.com", "zsyh@mtasia.net"], a = t.concat(i), s = !0, o = 0, n = a.length; n > o; o++) if (a[o].toLowerCase() == e.toLowerCase()) {
                s = !1;
                break
            }
            return s
        }, sendSysSms: function (e, t) {
            var a = "/mw2/sms/sms?func=sms:sendSysSms&sid=" + top.$App.getSid() + "&rnd=" + Math.random(), s = ["<object>", '<int name="type">3</int>', '<int name="attr">', e.msgContent, "</int>", "</object>"].join("");
            i.RichMail.API.call(a, s, function (e) {
                return e.responseData ? "S_OK" == e.responseData.code ? (top.M139.UI.TipMessage.show("发送成功", { delay: 2e3 }), void (t && t())) : void ("WAPSEND_LIMIT" == e.responseData.code && (t && t(), top.M139.UI.TipMessage.show("操作过于频繁，请稍后再试！", {
                    delay: 2e3,
                    className: "msgRed"
                }))) : void 0
            })
        }
    }))
}(jQuery, _, M139),

//Zan_View
function (e, t, i) {
    var a = i.View.ViewBase, s = "Zan_View";
    i.namespace(s, a.extend({
        name: s,
        el: "",
        initialize: function (e) {
            this.options = e, this.el = e.el || "#mailListContainer", this.mid = e.mid || "", this.share = e.share || "", this.block = e.block || "", this.area = e.area || 2, this.type = e.type || 1, this.UI = i.UI || top.M139.UI, this.checkCode = e.checkCode || "", this.toAndcc = e.toAndcc || ""
        },
        template1: ['<div class="subinfo-box" user={user}>', '<div class="subinfo-nav">', '<a href="javascript:;"><i class="icons i-comment"></i>{redDotComment}评论<var class="discussNum">{discussNum}</var></a>', '<span class="v-line"></span>', "<!-- 已点赞i-lauded -->", '<a href="javascript:;"><i class="icons i-laud {lauded}"></i>{redDotLike}赞<var class="like">{zanNum}</var></a>', '<span class="v-line" style="display:{share}"></span>', '<a href="javascript:;" style="position:relative;display:{share};"><i class="i-subinfo-share"></i>分享</a>', "</div>", '<div class="subinfo-com" style="display:{isShow}">', '<i class="icons i-arr-up"></i>', '<div class="subinfo-main">', '<div class="subinfo-com-list" style="display:{display}">', "{list}", "</div>", '<div class="modBox new-quick-reply discuss-box clearfix">', '<div class="readMailReplyMes-w reply_textarea">', '<textarea class="readMailReplyMes" id="reply_textarea" style="color:#000;" placeholder="写下你的评论，Enter键确认" maxlength="255"></textarea>', "</div>", '<div class="btnBox btnNewGreen disscuss icoG">评论</div>', "</div>", "</div>", "</div>", "</div>"].join(""),
        template2: ['<div class="subinfo-com-item clearfix">', '<div class="subinfo-photo">', '<img src="{src}" alt="">', "</div>", '<dl class="subinfo-message">', "<dt></dt>", '<dd><span class="subinfo-name">{name}</span><span class="subinfo-time c_999" title="{tip}">{time}</span></dd>', "<dd>{content}</dd>", "</dl>", "</div>"].join(""),
        getArrMid: function () {
            var t = this, i = [], a = e(t.el).parents(".mailList_dynamic").length;
            a > 0 ? e(t.el).find("[dynamic=true]").each(function (t, a) {
                var s = e(a).attr("talkid");
                i.push(s), e(a).attr("dynamic", "false")
            }) : e(t.el).find("[discuss=true]").each(function (t, a) {
                var s = e(a).attr("mid");
                i.push(s), e(a).attr("discuss", "false")
            });
            var s = { ids: i.join(","), isUpdateReadTime: "0" };
            return s
        },
        getRequest: function (e, t, a, s) {
            var o, n, r, l, c = this;
            2 == c.area ? (l = "bmail", o = "mail:queryCommentAndLikesByIds", n = e, r = "") : (l = "outland", o = "mail:queryCommentAndLikesForOther", n = null, r = { urlParam: "&checkCode=" + a + "&isUpdateReadTime=" + s }), i.HttpRouter.addRouter(l, [o]), i.RichMail.API.call(o, n, function (e) {
                e.responseData && e.responseData.code && "S_OK" == e.responseData.code && e.responseData["var"] ? t && t(e.responseData["var"]) : (e.responseData && e.responseData.code && "PML10404002" == e.responseData.code && c.UI.TipMessage.show("参数不合法", { delay: 3e3 }), e.responseData && e.responseData.code && "PML10407002" == e.responseData.code && c.UI.TipMessage.show("系统错误", { delay: 3e3 }), e.responseData && e.responseData.code && "PML10406003" == e.responseData.code && c.UI.TipMessage.show("链接已失效", { delay: 3e3 }), e.responseData && e.responseData.code && "PML10406002" == e.responseData.code && c.UI.TipMessage.show("无对应的邮件信息", { delay: 3e3 }))
            }, r)
        },
        commentAndLike: function (e, t, a, s) {
            var o, n, r, l, c = this;
            2 == c.area ? (l = "bmail", o = "mail:commentAndLike", n = e, r = "") : (l = "outland", o = "mail:commentAndLikeForOther", n = e, r = { urlParam: "&checkCode=" + a }), i.HttpRouter.addRouter(l, [o]), i.RichMail.API.call(o, n, function (e) {
                if (e && e.responseData && e.responseData.code) if ("S_OK" == e.responseData.code) t && t(); else {
                    s && s();
                    var i = "";
                    switch (e.responseData.code) {
                        case "PML10406021":
                            i = "所输入的内容包含敏感信息";
                            break;
                        case "PML10404002":
                            i = "参数不合法";
                            break;
                        case "PML10407002":
                            i = "系统错误";
                            break;
                        case "PML10406003":
                            i = "链接已失效";
                            break;
                        case "PML10406002":
                            i = "无对应的邮件信息";
                            break;
                        default:
                            i = "网络异常，发送失败，请稍后重试"
                    }
                    c.UI.TipMessage.show(i, { delay: 1500, className: "msgRed" })
                }
            }, r)
        },
        renderDOM: function (e, t) {
            var i = this, a = i.mid || e || i.getArrMid(), s = t || !1;
            i.getRequest(a, function (e) {
                i.renderHtml(e, s)
            }, i.checkCode, "0")
        },
        getAllContact: function (e) {
            if (!top.M2012.Contacts || !e.userNumber) {
                var t = {
                    name: e.userNumber.split("@")[0],
                    email: e.userNumber,
                    src: "/m2015/images/module/welcome/mybeKnow.png"
                };
                return t
            }
            var i = top.M2012.Contacts.getModel().getContactsByMobile(e.userNumber);
            if (!(i.length > 0)) {
                var t = {
                    name: e.userNumber.split("@")[0],
                    email: e.userNumber,
                    src: "/m2015/images/module/welcome/mybeKnow.png"
                };
                return t
            }
            for (var a = 0; a < i.length; a++) {
                var s = i[a], o = { name: s.name, email: s.emails[0], src: s.ImageUrl };
                return o
            }
        },
        friendlyTime: function (e) {
            var t = $Date.parse(e.commentTime), i = $Date.getServerTime();
            return $Date.getFriendlyString(t, i)
        },
        getList: function (e) {
            for (var t = this, i = "", a = e.comments.reverse(), s = 0; s < a.length; s++) {
                var o = a[s];
                if ("" !== o.content) {
                    var n = t.getAllContact(o);
                    i += $T.Utils.format(t.template2, {
                        src: n.src,
                        name: $T.Html.encode(n.name),
                        tip: o.commentTime,
                        time: t.friendlyTime(o),
                        content: $T.Html.encode(o.content)
                    })
                }
            }
            return i
        },
        renderList: function (e, t) {
            var i = this;
            i.getRequest(e, function (e) {
                e && e.commentAndLike[0] && t && t(i.getList(e.commentAndLike[0]), e)
            }, i.checkCode, "1")
        },
        renderRedDot: function (e) {
            if ("1" === e) {
                var t = '<i class="i-red-dot"></i>';
                return t
            }
        },
        renderHtml: function (t, i, a) {
            for (var s = this, o = t && t.commentAndLike ? t.commentAndLike : [], n = 0; n < o.length; n++) {
                var r = "", l = o[n];
                r = $T.Utils.format(s.template1, {
                    user: t.userNumber,
                    redDotComment: s.renderRedDot(l.hasNewComment),
                    discussNum: 0 != l.totalComments ? "(" + l.totalComments + ")" : "",
                    zanNum: 0 != l.totalLikes ? "(" + l.totalLikes + ")" : "",
                    lauded: "1" == l.myLike ? "i-lauded" : "",
                    redDotLike: s.renderRedDot(l.hasNewLike),
                    share: s.share,
                    isShow: i ? "block" : "none",
                    display: s.block || (l.totalComments > 0 ? "block" : "none")
                });
                var c = e(s.el).find("[talkid=" + l.id + "]").length;
                if (c > 0) var d = e(s.el).find("[talkid=" + l.id + "]").find(".subinfo"); else var d = e(s.el).find("[mid=" + l.id + "]").find(".subinfo");
                d.length > 0 && "true" == d.attr("load") && "" !== r && (d.html("").append(r), d.attr("load", "false"))
            }
        },
        getFrom: function (e, t) {
            if (3 == e) var i = t.parents(".outland-main").find("#discuss").find("div[account]").attr("account"); else if (2 == e) var i = t.parents("#leftbox").find("#leftPart").find("a[email]").attr("email"); else var i = t.parents("li[mid]").find("i[addr]").attr("addr");
            return i
        },
        getSubject: function (e, t) {
            if (3 == e) var i = t.parents(".outland-main").find("#header").find("h1").text(); else if (2 == e) var i = t.parents("#leftbox").find("#leftPart").find(".emailTitle").text(); else var i = t.parents("li[mid]").find("strong[name=subject]").text();
            return i
        },
        getQueryMid: function (e, t) {
            var i = "";
            return i = 1 == e ? t.parents("li[mid]").attr("mid") : t.parents("div[querymid]").attr("querymid")
        },
        getData: function (e, t, i, a) {
            var s = this, o = {};
            return 2 == s.area ? (e ? o.content = e : "", t ? o.like = t : "", o.id = i, o.subject = s.getSubject(s.type, a), o.from = s.getFrom(s.type, a), o.queryMid = s.getQueryMid(s.type, a)) : (e ? o.content = e : "", t ? o.like = t : "", o.from = s.getFrom(s.type, a), o.queryMid = s.getQueryMid(s.type, a)), o
        },
        showQrcode: function (t) {
            var a = this, s = t.target, o = e(s).parents(".subinfo-nav").find("a").eq(2), n = e(t.target).closest("li"), r = n.attr("mid");
            top.Package.require("qrcode_ext", function () {
                a.qrcodeContainer = new top.M2012.CreateQrcode.View({
                    mid: r,
                    target: o[0],
                    scrollHeight: e(document).scrollTop(),
                    shortShare: !0,
                    desc: n.find("span[name='summary']").text(),
                    subject: n.find("[name='subject']").text(),
                    QQFriend_BH: "welcomeshare-onKeyShare-QQFriend",
                    QQSpace_BH: "welcomeshare-onKeyShare-QQSpace",
                    SINAWB_BH: "welcomeshare-onKeyShare-sinaWB",
                    RR_BH: "welcomeshare-onKeyShare-RR",
                    YDY_BH: "welcomeshare-onKeyShare-YDY"
                })
            }), i.Event.stopEvent(t), e(document).scroll(function () {
                a.qrcodeContainer && a.qrcodeContainer.remove()
            })
        },
        refreshList: function (t, i, a) {
            var s = this;
            2 == s.type && BH("read_discuss"), s.commentAndLike(t, function () {
                1 == s.type && (e("#div_scroller_inter").hasClass("mailList_dynamic") ? BH("dynamic_success") : BH("dis_success")), a.find("div.disscuss").removeClass("forbid"), a.find(".readMailReplyMes").val("").blur(), s.UI.TipMessage.show("发送成功", { delay: 2e3 }), s.renderList({
                    ids: i,
                    isUpdateReadTime: "1"
                }, function (e, t) {
                    0 != t.commentAndLike[0].totalComments && a.find("var.discussNum").text("(" + t.commentAndLike[0].totalComments + ")"), a.find(".subinfo-com-list").html("").html(e).show(), s.fit(), s.setDefaultImage()
                })
            }, s.checkCode, function () {
                1 == s.type && (e("#div_scroller_inter").hasClass("mailList_dynamic") ? BH("dynamic_fail") : BH("dis_fail"))
            })
        },
        setDefaultImage: function () {
            e(".subinfo-photo>img").each(function () {
                e(this)[0].onerror = function () {
                    var t = e(this).attr("src"), i = top.getRootPath() + "/images/module/welcome/mybeKnow.png";
                    e(this).attr("src", i).attr("orgiSrc", t)
                }
            })
        },
        fit: function () {
            var t = this;
            if (e(t.el).hasClass("mailListCon")) {
                var i = e(".welcomeNewSon_left").width();
                e(".subinfo-box").width(i - 67 - 10), e(".subinfo-com-list").width(i - 67 - 10 - 22 - 5), e(".subinfo-com-item").width(i - 67 - 10 - 25 - 5), e(".subinfo-message").width(i - 67 - 10 - 25 - 40 - 25 - 3), e(".discuss-box").width(i - 67 - 10 - 39), e(".subinfo-main .readMailReplyMes-w").width(i - 67 - 10 - 39 - 62 - 16), e(".reply_textarea").width(i - 67 - 10 - 39 - 62 - 16)
            }
        },
        initEvent: function () {
            var t = this;
            e(window).resize(function () {
                t.fit()
            }), e(t.el).find(".subinfo").off("click").on("click", ".subinfo-nav a", function (i) {
                i.preventDefault();
                var a = e(this), s = a.parents("[mid]"), o = a.parents(".subinfo-box"), n = a.index();
                if (0 == n) {
                    if (s.siblings("li").find(".subinfo-com").hide(), a.find("i").hasClass("i-red-dot") && a.find(".i-red-dot").remove(), 1 == t.type && (e("#div_scroller_inter").hasClass("mailList_dynamic") ? BH("dynamic_dis") : BH("first_dis")), 2 == t.type && BH("read_dis"), "block" == o.find(".subinfo-com").css("display")) {
                        if (3 == t.type) return;
                        return void o.find(".subinfo-com").hide()
                    }
                    if ("undefined" != String(s.attr("talkid"))) var r = s.attr("talkid"); else var r = s.attr("mid");
                    var l = { ids: r, isUpdateReadTime: "1" };
                    t.renderList(l, function (e, i) {
                        0 != i.commentAndLike[0].totalComments && a.find("var.discussNum").text("(" + i.commentAndLike[0].totalComments + ")"), "" !== e && (o.find(".subinfo-com-list").html("").html(e).show(), t.fit()), t.setDefaultImage()
                    }), o.find(".subinfo-com").show(), t.fit()
                }
                if (2 == n) {
                    if (a.find("i").hasClass("i-red-dot") && a.find(".i-red-dot").remove(), a.find("i").hasClass("i-lauded")) return;
                    if (1 == t.type && (e("#div_scroller_inter").hasClass("mailList_dynamic") ? BH("dynamic_zan") : BH("first_zan")), 2 == t.type && BH("read_zan"), "undefined" != String(s.attr("talkid"))) var c = s.attr("talkid"); else var c = s.attr("mid");
                    var d = t.getData("", 1, c, o);
                    t.commentAndLike(d, function () {
                        a.find("i").addClass("i-lauded"), t.getRequest({
                            ids: s.attr("mid"),
                            isUpdateReadTime: "1"
                        }, function (e) {
                            0 != e.commentAndLike[0].totalLikes && a.find("var.like").text("(" + e.commentAndLike[0].totalLikes + ")")
                        }, t.checkCode, "1")
                    }, t.checkCode)
                }
                4 == n && (1 == t.type && (e("#div_scroller_inter").hasClass("mailList_dynamic") ? BH("dynamic_share") : BH("first_share")), t.showQrcode(i))
            }), e(t.el).find("[mid]").on("focus", ".readMailReplyMes", function () {
                e(this).val();
                1 == t.type && (e("#div_scroller_inter").hasClass("mailList_dynamic") ? BH("dynamic_focus") : BH("dis_focus")), 2 == t.type && BH("read_focus"), e(this).val() == e(this).attr("placeholder") && e(this).val(""), e(this).attr("placeholder", "")
            }).on("blur", ".readMailReplyMes", function () {
                "" == e(this).val() && e(this).attr("placeholder", "写下你的评论，Enter键确认")
            }).on("click", "div.disscuss", function () {
                var i = e.trim(e(this).siblings().find(".readMailReplyMes").val()), a = e(this).parents(".subinfo-box");
                if ("" != i && !e(this).hasClass("forbid")) {
                    if (a.find("div.disscuss").addClass("forbid"), "undefined" != String(e(this).parents("[mid]").attr("talkid"))) var s = e(this).parents("[mid]").attr("talkid"); else var s = e(this).parents("[mid]").attr("mid");
                    var o = t.getData(i, 0, s, a);
                    t.refreshList(o, s, a)
                }
            }).on("keydown", ".readMailReplyMes", function (i) {
                if (13 == i.keyCode) {
                    i.preventDefault();
                    var a = e.trim(e(this).val()), s = e(this).parents(".subinfo-box");
                    if ("" == a) return void e(this).blur();
                    e(this);
                    if (s.find("div.disscuss").hasClass("forbid")) return;
                    if (s.find("div.disscuss").addClass("forbid"), "undefined" != String(e(this).parents("[mid]").attr("talkid"))) var o = e(this).parents("[mid]").attr("talkid"); else var o = e(this).parents("[mid]").attr("mid");
                    var n = t.getData(a, 0, o, s);
                    t.refreshList(n, o, s)
                }
            })
        },
        getActualMidByTid: function (t) {
            var a = this, s = { mid: this.mid.ids, sort: 0, start: 0, total: 50 };
            i.RichMail.API.call("mbox:getDeliverStatus", s, function (o) {
                if (o && o.responseData && o.responseData["var"] && o.responseData["var"][0] && o.responseData["var"][0].tid) {
                    var n = o.responseData["var"][0].tid;
                    delete s.mid, s.tid = n
                }
                i.RichMail.API.call("mbox:getDeliverStatus", s, function (i) {
                    if (i && i.responseData && i.responseData["var"] && i.responseData["var"][0] && i.responseData["var"][0].mid) {
                        var s = i.responseData["var"][0].mid;
                        a.mid.ids = s, e(a.el).find("[mid]").attr("mid", s)
                    }
                    t()
                })
            })
        },
        render: function (e) {
            function t() {
                i.renderDOM(), i.initEvent(), e && e()
            }

            var i = this;
            if (this.options && this.options.mid && this.options.mid.ids) var a = this.mid.ids.slice(12, 16); else var a = "";
            "0000" == a ? this.getActualMidByTid(function () {
                t()
            }) : t()
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.Normal.Model
function (e, t, i) {
    i.namespace("M2012.ReadMail.Normal.Model", Backbone.Model.extend({
        defaults: {
            fid: null,
            mid: null,
            win: !1,
            mailListData: null,
            currFid: null,
            showToolBar: !0,
            popup: null
        }, logger: new i.Logger({ name: "M2012.ReadMail" }), savePrintData: function (e) {
            var t = $App.getTopPageApp().sessionMail, a = e.omid;
            if (i.PageApplication.getTopApp().print || (i.PageApplication.getTopApp().print = {}), i.PageApplication.getTopApp().print[a] || (i.PageApplication.getTopApp().print[a] = e), t && t[a] && !this.get("win")) {
                var s = t[a].parentmid;
                a !== s && this.closeSessionTab(s)
            }
        }, closeSessionTab: function (e) {
            var t = "readmail_" + e;
            $App.getTabByName(t) && $App.closeTab(t)
        }, isFromMyself: function (e) {
            var t = $Email.getEmail(e.account), i = !1;
            return $($User.getAccountList()).each(function (e, a) {
                a.name == t && (i = !0)
            }), i
        }, getAttrObj: function (e) {
            for (var t, i, a, s = {}, o = /(\w+)=['"](.*?)['"]/g; t = o.exec(e) ;) i = t[1], a = t[2], s[i] = a;
            return s
        }, saveCalendarData: function (e) {
            top.calendar_mailInfo = { email: "", mobile: "", title: e.title }
        }, importEmlAttach: function (e, t) {
            i.HttpRouter.addRouter("webapp", ["mbox:importEmlAttach"]), i.RichMail.API.call("mbox:importEmlAttach", e, function (e) {
                e && e.responseData && t(e.responseData)
            })
        }, getDataSource: function (e) {
            function t() {
                $Msg.alert("读取信件失败，请稍后再试。"), i.UI.TipMessage.hide(), $App.close()
            }

            var a = this, s = this.get("currFid"), o = this.get("sessionInterface"), n = {
                fid: s,
                mid: this.get("mid"),
                autoName: 1,
                markRead: 1,
                returnHeaders: { Sender: "", "X-RICHINFO": "" },
                filterStylesheets: 0,
                filterImages: 0,
                filterLinks: 0,
                keepWellFormed: 0,
                header: 1,
                supportTNEF: 1,
                returnAntispamInfo: 1
            };
            o && (n.sessionId = this.get("mailListData").mailSession, n.readFlag = 0, n.start = 0, n.total = 199, n.folderPass = "", n.mode = "html", n.currFid = s), o ? $RM.readSessionMail(n, function (i) {
                i.code && "S_OK" == i.code ? (e && e(i["var"]), a.savePrintData(i["var"])) : (t(), a.logger.error("readsessionmail returndata error", "[mbox:readSessionMail]", i))
            }) : $RM.readMail(n, function (i) {
                i.code && "S_OK" == i.code ? (e && e(i["var"]), a.savePrintData(i["var"])) : (t(), a.logger.error("readmail returndata error", "[mbox:readMail]", i))
            })
        }, getQrcodeUrl: function (e, t) {
            i.HttpRouter.addRouter("bmail", ["mail:getShareUrl"]), i.RichMail.API.call("mail:getShareUrl", e, function (e) {
                e && e.responseData && t(e.responseData)
            })
        }, getAttachShareUrl: function (e, t) {
            i.HttpRouter.addRouter("bmail", ["mail:getAttachShareUrl"]), i.RichMail.API.call("mail:getAttachShareUrl", e, function (e) {
                e && e.responseData && t(e.responseData)
            })
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.Normal.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.Normal.View", s.extend({
        name: "M2012.ReadMail",
        template: {
            mailHeader: ['<div class="readMail">', '<div class="hTitle clearfix">', '<h2 style="{titleColor}">{starAttributeNew}{titleIco}{denyforwardIco}<span class="emailTitle">{title}</span><i class="icons i-scan-ma showQrcode"></i></h2>{otherLink}{reCall}', '<span class="readTagdiv" style="display:none" data="{labelIds}">{tagHtml}</span> ', "</div>", '<span class="readmialTool2"></span> ', '<span id="readMailIcons" class="readmialTool" style="display:none;">', '<a name="tagMenu_read" href="javascript:;" bh="readmail_icons_disk" class="J_backupMail " title="备份至“彩云网盘”"><i class="{cloudClass}"></i></a>', "{cloud139Pocket}", "{cloudNote}", '<a href="javascript:;" name="remark_add" mid="{mid}" bh="readmail_addremark" class="" title="邮件备注"><i class="{remarkClass}"></i></a>', "{printMail}", "{newWinUrl}", '<a id="readMailMoreBtn" href="javascript:;" class=""><i class="i-Launch"></i></a>', '<input type="radio" class="autofocus" style="margin-left: -25px;">', "</span></div>", '<div class="new-readMail-left-con">', '<div class="readMailInfo">', "{fromHtml}", "{toHtml}", "{ccHtml}", "{bccHtml}", "{dateHtml}", "{attachHtml}", "{strokeSaveTips}", '<div id="readremark_{mid}" class="rMList jstoggle" name="remark" style="display:none"></div>', '<div class="rMList jstoggle" id="deliverystatus_div_{mid}"  style="display:none"></div>', '<div class="rMList jstoggle" id="Encryptedtip_div_{mid}"  style="display:none"></div>', '<div class="mt_2">', '<div class="rMr p_relative J_iconDesc" style="display: none;">', '<a href="javascript:;" bh="readmail_desc_disk" class="J_backupMail">备份至彩云网盘</a> | ', '<a href="javascript:;" bh="readmail_139pocket" class="J_139pocket">备份至云口袋</a> | ', '<a href="javascript:;" bh="readmail_desc_note" class="J_saveNote">保存到和笔记</a> | ', '<a href="javascript:;" bh="readmail_desc_tip" name="remark_add">邮件备注</a> | ', '<a href="javascript:;" bh="readmail_desc_print" class="J_printMail">打印</a> | ', '<a href="javascript:;" bh="readmail_desc_newwin" class="i_2win">新窗口读信</a> | ', '<a href="javascript:;" bh="readmail_desc_export" class="J_exportMail">导出邮件</a> | ', '<a href="javascript:;" bh="readmail_desc_original" class="J_showOriginalLetter">显示邮件原文</a> | ', '<a href="javascript:;" bh="readmail_desc_garbled" class="J_errorCode">邮件有乱码？</a>', "</div>", "</div>", "</div>", "</div>"].join(""),
            readmailbody: ['<div class=" new-main-topbar"><div class="p_relative ptblr_s2 receiver-topbar clearfix" id="toolbar_{mid}" ></div></div>', '<div class=" new-main-inner J-readMailArea" autofocus="autofocus" id="readmail_container" style="+zoom:1;visibility:hidden;overflow-y: auto">', '<div class="p_relative new-main-data horizon_full horizon_dragon" id="realreadcon_{mid}">', '<a href="javascript:;" class="p_absolute switch-expand" {contactStyle} hidefocus="true" ></a>', '<div id="leftbox" class="new-inbox clearfix" >', '<div class="lineDn clearfix" id="leftPart">', '<div class="readMail-left" id="readmail_{mid}" mid="{mid}"></div>', "</div>", '<div class="mialContent" id="mailContent_{mid}">', '<div class="mailText"> ', '<span class="fontZoom" id="fontzoom_{mid}" style="display:none" > <a href="javascript:;" rel="increase"  title="放大字号" bh="readmail_bigfont"><span>A</span><sup>+</sup></a><a href="javascript:;" title="原来字号大小" rel="normal" bh="readmail_normalfont">原</a><a href="javascript:;" title="缩小字号" rel="reduce" bh="readmail_smallfont"><span style="font-size:10px;">A</span><sub>-</sub></a><a href="javascript:;" rel="close" title="关闭" class="fz-colse"></a></span> ', '<div id="contentText" rel="14">', "<div>{mailContentHtml}</div>", "</div>", "</div>", "</div>", "{discuss}", "{quickReplyHtml}", "</div>", "</div>", "</div>", '<a href="javascript:;" class="i-backTop" style="display:none;" title="回到顶部" hidefocus=""></a>'].join(""),
            tag: ["<span href='{tagLink}' class='tag'>", "<span class='tagBody'>", "<span>{tagName}</span>", "<a href='{tagCloseLink}'><i class='i_cl_w'></i></a>", "</span>", "</span>"],
            from: ["<div class='rMList' {display}>", "<span class='rMl'>发件人：</span>", "<div class='rMr p_relative'>", "<div class='light-blue-border-box br10'>", "{name}", "<em class='gAddrE'>&lt;{email}&gt;</em>", '<i class="fst">&gt;</i>', "</div>", "{agent}", "</div>", "</div>"],
            receiver: ["<div class='rMList'{display} id='{id}' >", "<span class='rMl'>{name}：</span>", "<div class='rMr p_relative' style='margin-right: 95px;'>{emails}{strokeVIcon}{agent}{refuse}{notify}</div>", "</div>"],
            email: ["<a class='light-blue-border-box br10 showAddr' email='{2}' addr='{3}' type='{6}' style='{5}'>", "{0}", "{1}", "{4}", '<i class="fst">&gt;</i>', "</a>"],
            sliceUp: [' | <a href="javascript:;" ><i id="togglemoreinfo" class="i_2trid i_2tridd" title="收起"></i></a>'],
            date: ["<div id='sendDate{typeId}' class='rMList' {display}><span class='rMl'>时　间：</span><div class='rMr p_relative'>{date}</div></div>"],
            quickreply: ['<div id="readMailAdment" style="margin-bottom:10px;padding:5px;display:none"></div>', '<div class="new-quick-reply quick-reply ptb_10 plr_10 br4  clearfix" style="{0}" id="quickreply_{1}">', "</div>", '<div class="readMailReplyDone" style="display:none">此邮件已经快捷回复。<a href="javascript:;" class="dropDownA">再回一封</a></div>'],
            attach: ["<div class='rMList'{display}>", "<span class='rMl'>附　件：</span>", "<div class='rMr'><span>{num}个({attachList})</span></div>", "</div>"],
            headAttach: ['<div class="rMList">', '<span class="rMl">附　件：</span>', '<div class="rMr convattrlist" id="headAttach">{0}</div>', "</div>"].join(""),
            safeTipTemplate: ['<div class="tips question-tips" id="question-tips" style="position:absolute;top:230px;right:383px;width: 306px; z-index:9001;display:none;">', '<a href="javascript:" class="delmailTipsClose" style="display:none;"><i class="i_u_close"></i></a>', '<div class="tips-text">', '<div class="norTips">', '<span class="norTipsIco"><i class="icons i-question"></i></span>', '<dl class="norTipsContent">', '<dt class="norTipsTitle MB_MessageBox_Title" style="display:none"></dt>', '<dd class="norTipsLine ">真实发送地址和宣称的发件人地址不一致，请谨慎审视邮件内容的真实性！</dd>', "</dl>", "</div>", "</div>", '<div class="diamond tipsTop" style="left:26px;display:block;"></div>', "</div>"].join(""),
            encryptedTiphtml: ['<div class="rMList clearfix">', '<span class="rMl">加密说明：</span>', '<div class="rMr p_relative">这是一封加密邮件。<span id="encryptedpwd_{0}">{1}</span><a href="javascript:" id="lookEncrypwd" mid={0}>{2}</a></div>', "</div>"].join(""),
            encryptedKeyBox: ["<style>.mailSecret{padding:20px;background:#ffffe1;border:1px solid #e1e1c9;margin-top:10px;color:#444;font-size:14px;font-family:microsoft yahei}.mailSecret .iText{height:15px;padding:4px 5px;border:1px solid #c5c5c5;border-radius:4px;height:20px;width:220px;margin-right:10px}.mail_secret_content .icoG{display:inline-block;padding:0;font-size:14px;vertical-align:middle;overflow:hidden;zoom:1;cursor:pointer;color:#fff;text-align:center;white-space:nowrap;border:1px solid #00a513;border-radius:4px;background-color:#00bd16;background:-moz-gradient(linear,0 0,0 100%,from(#00c417),to(#00b615));background:-webkit-gradient(linear,0 0,0 100%,from(#00C417),to(#00b615));background:linear-gradient(#00c417 0,#00b615 100%);height:24px;line-height:24px}.mail_secret_content .icoG span{display:inline-block;padding:0 14px;text-align:center;vertical-align:top;cursor:pointer;height:24px;line-height:24px}.mailSecret .icoG{height:24px;line-height:24px}.mailSecret .icoG span{height:24px;line-height:24px}.secretWord{color:#999;line-height:16px;padding-top:9px}.secretWord a{font-weight:700;color:#3486d2;text-decoration:none}.mailSecret .secretRed{border:1px solid #de0202}.mailSecret .secretRed:focus{border:1px solid #de0202!important}.mail_secret_content b{font-weight:400;line-height:29px;color:#de0202;padding-left:10px}</style>", '<div class="mailSecret" id="EncryptDiv">', '<div class="mail_secret_content">', '<span>请输入邮件密码：</span><input type="password" class="iText" id="keycodeCon"><a href="javascript:;" class="icoG" id="decryptBtn"><span class="p_relative">确定<i class="r-line"></i></span></a><b id="decryptBtntips"></b>', "</div>", '<p class="secretWord">这是一封来自139邮箱的加密邮件，需要解密才能查看邮件内容，您可以向发件人 <a href="javascript:;" id="encryptedSms">发短信</a> 询问密码。</p>', "</div>"].join(""),
            EncryptedSms_tpl: ["您发给我的是加密邮件（邮件主题为：{0}），请回复告知我邮件密码哦！谢谢"].join(""),
            tipslogoCe: ["<div class='rMList clearfix' sendId={0}>", "<div class='module-security'>", "<p>请认准此标志<i class='icons i-security_sm'></i>，拥有此标志才是经过139邮箱验真的行程邮件</p>", "</div>", "</div>"].join("")
        },
        events: {
            "click a.J_newwin": "onNewWinReadMailClick",
            "mouseover ul.attrList li": "onPreviewAttachImgMouseOver",
            "click #spammail": "onNotSpammailClick",
            "mouseover div.mailText": "onFontZoomMouseOver",
            "mouseover div.showAddr": "onReceiverAddrMouseOver",
            "click a#addmailnotify": "onAddMailNotify",
            "click a.J_printMail": "onPrintMailClick",
            "click i.Vip": "onVipClick",
            "click a.J_errorCode": "onErrorCodeLinkClick",
            "click a.J_showOriginalLetter": "showOriginalLetter",
            "click a.J_exportMail": "onExportMailClick",
            "click a#readMailMoreBtn": "onMoreBtnClick",
            "click a#saveToNote": "onSelectNote",
            "click .showQrcode": "showQrcode",
            "click #lookEncrypwd[mid]": "lookencryptCode"
        },
        initialize: function (e) {
            return this.model = new M2012.ReadMail.Normal.Model, e && e.mainView && (this.mainView = e.mainView), this.initSonView(e), this.mailboxModel = $App.getView("mailbox").model, this.mailTagEvent(), s.prototype.initialize.apply(this, arguments)
        },
        initSonView: function (e) {
            this.sonview = !0, this.quickreplyview = new M2012.ReadMail.View.QuickReply, this.readmailcontentview = new M2012.ReadMail.View.ReadMailContent({
                model: this.model,
                parentView: this
            }), this.readmailcontentview.parentView = this, e && e.mainView && (this.readmailcontentview.mainView = e.mainView), this.filepreview = new M2012.ReadMail.View.FilePreview, this.deliverystatusview = null, this.readreceiptview = new M2012.Receipt.View, this.recallview = null, this.risktipsview = new M2012.ReadMail.RiskTips.View, this.remindview = appView.getView("remind")
        },
        lookencryptCode: function (e) {
            var t = this;
            top.BH("encry_sendedpagelook");
            var i = a(e.currentTarget), s = i.attr("mid"), o = i.text(), n = "密码:" + t.model.get("Encrypted_mailPass");
            "隐藏密码" == o ? (i.text("查看密码"), a("#encryptedpwd_" + s).text("")) : (i.text("隐藏密码"), a("#encryptedpwd_" + s).text(n))
        },
        getAgentHtml: function (e) {
            var t = "";
            try {
                if (e.sender && void 0 != e.sender) {
                    var a = (i.Text.Email.getEmail(e.account), $Email.getEmail(e.sender)), s = a;
                    a.length > 30 && (s = a.slice(0, 21) + "..."), t = '<span class="issuing-name gray"><em title="' + a + '">（由' + s + '代发）</em><i class="i_icoQue questionMark"></i></span>'
                }
            } catch (o) {
            }
            return t
        },
        getVipHtml: function (e) {
            var t = $Email.getEmail(e.account), i = {}, s = "";
            i.isVip = 0;
            var o = top.Contacts.getContactsByEmail(t);
            if (o && o.length > 0) {
                i.isVip = 2;
                var n = o[0];
                i.serialId = n.SerialId, i.name = n.name;
                var r = top.Contacts.getVipInfo(), l = a.inArray(i.serialId, r.vipSerialIds.split(","));
                l > -1 && (i.isVip = 1)
            }
            return s = 1 == i.isVip ? '<i class="Vip user_vip" bh="readmail_delvip" title="取消“VIP联系人”" href="javascript:;"></i>' : 2 == i.isVip ? '<i class="Vip user_gray_vip" bh="readmail_addvip" title="添加“VIP联系人”,其邮件将同时标记为“VIP邮件”" href="javascript:;"></i>' : '<i class="Vip" style="display:none;" href="javascript:;"></i>', this.model.set("accountInfo", i), s
        },
        getRefuseHtml: function (e, t) {
            var i = this, a = "", s = i.model.get("mailListData"), o = 0;
            s && (o = s.logoType);
            var n = $Email.getEmail(e.account);
            return n && (mailboxComplaintView.model.set({ from: n }), 5 != t && 0 == o && top.mailboxComplaintView.isSpamMail() && (a = '<span class="pl_10"><a href="javascript:;" onclick=\'top.$App.trigger("mailCommand", { command: "refuseMail", email: "' + n + "\" });'>[拒收]</a></span>")), ""
        },
        getTagHtml: function (e) {
            if (e) {
                var t = M2012.Mailbox.View.MailTag.prototype.createInstance();
                return t.render(e, !1)
            }
            return ""
        },
        renderTag: function (e, t) {
            t && e.html(t), e.hide(), e.find(".TagDiv").length > 0 && e.find(".tag").unwrap(), e.show()
        },
        emptyTag: function (e) {
            e.html("")
        },
        getReceiverEmail: function (e, t, a) {
            var s = this, o = s.template.email.join(""), n = /<([\w]+)@/.exec(t), r = (n && n[1], []), l = a && a.vip, c = $App.getMailboxView().model.get("fromType");
            if (t) {
                var d = t.split(",");
                d = this.remendAddress(d, t);
                for (var p = 0; p < d.length; p++) {
                    var m = i.Text.Email.getEmail(d[p]), u = d[p];
                    u = $T.Html.encode(u);
                    var h = $App.getAddrNameByEmail(d[p]);
                    a && "from" == a.type && "sender" == c && (h = i.Text.Email.getName(d[p])), h = $T.Html.encode(h);
                    var f = m.split("@")[0], g = d[p].split(" ")[0];
                    g = g.replace(/\"/g, "");
                    var v = ($T.Email.isEmail(g) || $Mobile.isMobile(g) || "" == g || g == f || g == m) && a && "from" == a.type && m.indexOf("@139.com") > -1, b = $App.getAddrNameByEmail(m), y = $Mobile.isMobile(b) || "" == b || $T.Email.isEmail(b) || b == f || b == m;
                    v && y && (o = o.replace("light-blue-border-box", "light-green-border-box"));
                    var w = $Email.getEmail(d[p]) || h;
                    w = $T.Html.encode(w);
                    var _ = "", M = $T.Utils.format(o, [h, _, w, u, l ? l : "", "", a && a.type]);
                    r.push(e ? m : M)
                }
            }
            return r.length > 0 ? e ? r : r.join("") : ""
        },
        remendAddress: function (e, t) {
            var a = !1;
            if (e && e.length) for (var s = 0; s < e.length; s++) {
                var o = i.Text.Email.getEmail(e[s]);
                if (!$Email.isEmailAddr(o)) {
                    a = !0;
                    break
                }
            }
            return a && (i.Logger.sendClientLog({
                level: "ERROR",
                name: "remendAddress",
                errorMsg: "remendAddress: " + t
            }), e = t.match(/(?:"[^"]*"\s?|[^;,，；"]*|'[^']*')<([^<>]+)>/g)), e
        },
        getAddContactsList: function (e) {
            var t = [];
            if (e) for (var i = e.split(","), a = 0; a < i.length; a++) {
                var s = $App.getAddrNameByEmail(i[a]), o = $Email.getEmail(i[a]) || s, n = $App.getModel("contacts").getContactsByEmail(o);
                $Email.isEmail(o) && t.push({ serialId: n.length <= 0 ? "" : n[0].SerialId, name: s, email: o })
            }
            return t
        },
        showBatchAddLink: function (e) {
            var t = this, i = '<a href="javascript:;" title="批量添加联系人" name="batch_addr" style="display: ' + (this.isBriefMode ? "none" : "") + '">批量添加</a>';
            if (e && e.data && e.type) {
                var s = t.getAddContactsList(e.data), o = 0;
                if (a.each(s, function () {
                    "" == this.serialId && o++
                }), o > 1) {
                    var n = e.context || t, r = a(n.el).find("#receiver_" + e.type);
                    r.find(".rMr").append(i);
                    var l = a(r.find("a:last"));
                    l.click(function () {
                        BH("readmail_batchaddcontacts");
                        var e = new M2012.UI.Dialog.ContactsEditor({ addContacts: s, alink: l });
                        e.batchrender(), e.on("success", function () {
                            BH("addr_batch_add_success")
                        })
                    })
                }
            }
        },
        getColor: function (e) {
            var t = $App.getMailDataByMid(e);
            return t && t.color ? createMailboxRenderFunctions().getSubjectColor(t.color) : ""
        },
        getTitleIco: function (e) {
            var t = $App.getMailDataByMid(e);
            return t && 1 == t.priority ? '<i class="i_exc mr_5"></i>' : ""
        },
        denyforwardIco: function (e) {
            var t = $App.getMailDataByMid(e);
            return t && 1 == t.denyForward ? '<i class="i-transmited mr_5"></i>' : ""
        },
        getAtRemind: function (e) {
            var t = $App.getMailDataByMid(e);
            return t.atRemind = 1, t && 1 == t.atRemind ? '<div style="background-color:#ffaa23;">有人@我，点击查看@我的内容</div>' : ""
        },
        getReceiverHtml: function (e, t, i) {
            var a = this, s = a.template.receiver.join(""), o = "";
            void 0 != t && (o = a.getReceiverEmail(!1, t, i));
            var n = "", r = "", l = "", c = "", d = "", p = "";
            i && i.agent && (n = i.agent), i && i.vip && (l = i.vip), i && i.refuse && (c = i.refuse), i && i.notify && (d = i.notify), i && i.strokeVIcon && (p = i.strokeVIcon), i && i.type && (r = "receiver_" + i.type);
            var m = {
                display: "",
                id: r,
                name: e,
                emails: o,
                strokeVIcon: p,
                agent: n,
                refuse: c,
                notify: d
            }, u = $T.Utils.format(s, m);
            return "" == o ? "" : u
        },
        getReplyAllEmails: function (e) {
            var t = this, i = t.getReceiverEmail(!0, e.account), s = t.getReceiverEmail(!0, e.to), o = t.getReceiverEmail(!0, e.cc), n = [], r = s.concat(o);
            r = r.concat(i);
            var l = $User.getAccountList();
            if (l) for (var c = 0; c < l.length; c++) n.push(l[c].name);
            var d = $App.getFolders("pop");
            if (d) for (var c = 0; c < d.length; c++) n.push(d[c].name.toLowerCase());
            for (var p = [], c = 0; c < r.length; c++) {
                var m = r[c];
                -1 == a.inArray(m.toLowerCase(), n) && "" != m && p.push(m)
            }
            return 0 == p.length && p.push(l[0].name), p.join(",")
        },
        getAttachHtml: function (e) {
            var t = this, i = '<div class="rMList" id="headAttach" >{0}</div>', a = e.attachments, s = "", o = "";
            return a && a.length > 0 && (s = t.filepreview.getSessionAttach(e.subject, a, e.omid), o = $T.Utils.format(i, [s])), o
        },
        getDateHtml: function (e) {
            var t = this, i = e.sendDate, a = t.template.date.join(""), s = $Date.format("yyyy-MM-dd hh:mm:ss", new Date(1e3 * i)), o = {
                display: "",
                date: s,
                typeId: e.typeId || ""
            }, n = $T.Utils.format(a, o);
            return void 0 == i ? "" : n
        },
        getTagMenuHtml: function () {
            return this.getTagMenuIco()
        },
        getRemindHtml: function (e, t) {
            return this.getRemindIco(e, t)
        },
        getRemindIco: function (e, t) {
            var i = 0;
            e.flag && e.flag.taskFlag && (i = e.flag.taskFlag);
            var a = ["add", "update", "finish"][i], s = {
                add: "i_tx",
                update: "i_tx_y",
                finish: "i_tx_b"
            }, o = { add: "i-Clock", update: "i-Clocked", finish: "i-Clock" }, n = {
                aclass: s[a],
                mid: e.omid,
                status: a,
                taskdate: e.taskDate || 0,
                from: $T.Html.encode(e.account),
                senddate: e.sendDate,
                subject: $T.Html.encode(e.subject),
                iclass: o[a]
            };
            return $T.Utils.format(t, n)
        },
        getTagMenuIco: function () {
            var e = '<a href="javascript:;" name="tagMenu_read" class="i_tagfor"></a>';
            return e
        },
        getQuickReplyHtml: function () {
            var e = this, t = "display:;", i = e.model.get("mid"), a = $T.Utils.format(e.template.quickreply.join(""), [t, i]);
            return a
        },
        starAttributeNew: function (e) {
            var t = 1 == e.starFlag ? 1 : 0, i = '<i class="i_starM" name="read_starmail"></i>';
            return t ? i.replace("i_starM", "i_star_y") : i
        },
        getRemarkClass: function (e) {
            return e && e.flag && 1 == e.flag.memoFlag ? "i-Noted" : "i-Note"
        },
        get139pocket: function (e) {
            return e && e.flag && 1 == e.flag.memoFlag ? "i-baked" : "i-bak"
        },
        getCloudClass: function (e) {
            return e && e.headers && 1 == e.headers.bakDisk ? "i-Clouded" : "i-Cloud"
        },
        getNoteClass: function (e) {
            return e && e.headers && 1 == e.headers.saveNote ? "i-Writed" : "i-Write"
        },
        newWinUrl: function (e, t) {
            var i = '<a href="javascript:;" mid="{0}" name="newwin" class="J_newwin" title="新窗口读信" bh="readmail_newwin"><i class="i-Paper"></i></a>';
            return $T.Utils.format(i, [e])
        },
        cloud_139Pocket: function (e) {
            var t = top.$App.getConfig("UserData") || {}, i = t.orderInfoList, a = "", s = [];
            for (var o in i) {
                var a = i[o].serviceId, n = i[o].orderStatus;
                s.push({ serviceId: a, orderStatus: n })
            }
            for (var r = 0; r < s.length; r++) if ("400" == s[r].serviceId && ("0" == s[r].orderStatus || "4" == s[r].orderStatus)) {
                var l = this.get139pocket(e), c = '<a href="javascript:;" bh="readmail_139pocket" class="J_139pocket" id="cloud139Pocket" title="备份至云口袋"><i class="' + l + '"></i></a>';
                return c
            }
        },
        cloudNote: function (e, t, i) {
            var a = ['<ul class="u-saveNoteSlider" style="top:0px;right:0px;border:none;"><li>', '<a href="javascript:;" mid="{0}" name="saveNote" class="lnk J_saveNote" title="保存到“和笔记”" bh="readmail_icons_note">', '<i class="ico ico1"></i>存和笔记</a></li>', '<li><a href="javascript:;" class="lnk J_saveEvernote" bh="evernote_readmail_entry" title="保存到“印象笔记”"><i class="ico ico2"></i>存印象笔记</a></li></ul>'].join("");
            this.popTemp = $T.Utils.format(a, [e]);
            var s = this.getNoteClass(i);
            return '<a href="javascript:;" id="saveToNote" class="" title="保存到笔记"><i class="' + s + '"></i></a>'
        },
        onSelectNote: function () {
            var e = this, t = e.model.get("popup");
            return t ? void e.model.unset("popup") : (t = i.UI.Popup.create({
                name: "selectNotePop",
                width: 102,
                height: 43,
                autoHide: !0,
                target: this.$el.find("#saveToNote")[0],
                content: e.popTemp
            }), e.model.set("popup", t), t.render(), t.on("close", function () {
                e.model.unset("popup")
            }), a("a.J_saveNote").one("click", function () {
                e.onCloudNoteClick()
            }), void a("a.J_saveEvernote").one("click", function () {
                top.addBehaviorExt({ actionId: 106905, thingId: 11 }), e.onEverNoteClick()
            }))
        },
        printMail: function (e) {
            var t = '<a href="javascript:;" mid="{0}" name="saveNote" class="J_printMail " title="打印" bh="readmail_icons_print"><i class="i-Print"></i></a>';
            return $T.Utils.format(t, [e])
        },
        showQrcode: function (e) {
            var t = this, s = t.model.get("mid") || a(e.target).parents("tr[mid]").attr("mid"), o = t.model.get("dataSource").subject;
            top.BH("showShareQcode"), Package.require("qrcode_ext", function () {
                var t = i.PageApplication.getTopApp().print[s];
                new M2012.CreateQrcode.View({
                    mid: s,
                    target: e.target,
                    subject: o,
                    needPrefix: !0,
                    shortShare: !0,
                    desc: t && t.html ? t.html.content : ""
                })
            }), i.Event.stopEvent(e)
        },
        showmoreinfo: function () {
            var e = this, t = e.template.sliceUp.join("");
            a(e.el).find(".mailSectionTitle .rMList").length > 6 && a(e.el).find(".readmialTool").append(t)
        },
        showContactCard: function (e) {
            var t = this, i = e.find(".showAddr");
            a.each(i, function (e) {
                var i = this;
                a(this).mouseover(function () {
                    var e = a(i).attr("addr"), s = $T.Html.decode(e) || a(i).attr("email");
                    "" != s && M2012.UI.Widget.ContactsCard.show({
                        dockElement: a(i),
                        email: s,
                        dy: 4,
                        callback: t.modifyInputUserName
                    })
                })
            })
        },
        modifyInputUserName: function (e, t) {
            function i(t, i) {
                var o = "", n = "";
                if ("" !== t && void 0 !== t) for (var r = 0, l = t.length; l > r; r++) (s = a(t[r])).attr("email") === i && (o = a(s).contents().first(function () {
                    return 3 === this.nodeType
                }).text(), n = a(s).html(), a(s).html(n.replace(o, e)))
            }

            var s, o = a("#receiver_to a"), n = a("#receiver_from a"), r = a("#receiver_cc a");
            i(o, t), i(n, t), i(r, t)
        },
        onNewWinReadMailClick: function () {
            var e = this.model.get("mid");
            $App.openNewWin(e)
        },
        onCloudNoteClick: function () {
            var e = this, t = this.model.get("mid"), a = i.PageApplication.getTopApp().print[t];
            if (a && a.html) {
                var s = a.subject || "";
                s = s.slice(0, 65);
                var o = a.html.content || ""
            }
            var n = { title: s || "邮件标题", content: o || "邮件内容", attachmentDirId: "" };
            top.M139.RichMail.API.call("mnote:createNote", n, function (t) {
                t.responseData && "S_OK" == t.responseData.code ? (i.UI.TipMessage.show("邮件已转存至和笔记 <a href='javascript:top.$App.show(\"note\")'>查看</a>"), e.onNoteOrDevSave("saveNote")) : i.UI.TipMessage.show("保存失败，请重试"), setTimeout(function () {
                    i.UI.TipMessage.hide()
                }, 3e3)
            })
        },
        onEverNoteClick: function () {
            var e = this.model.get("mid"), t = i.PageApplication.getTopApp().print[e];
            if (t && t.html) {
                var a = t.subject || "";
                a = a.slice(0, 65);
                var s = t.html.content || ""
            }
            s = s.replace(/\\/gi, "\\\\").replace(/(\r)?\n/gi, "\\n").replace(/\"/gi, '\\"').replace(/\//gi, "\\/");
            var o = { title: a || "邮件标题", content: s || "邮件内容" };
            top.M139.RichMail.API.call("evernote:createNote", o, function (e) {
                e.responseData && e.responseData.code ? "OAUTH_BINDING" == e.responseData.code || "TOKEN_EXPIRED" == e.responseData.code ? top.$App.showOauthDialog({
                    func: function () {
                    }
                }) : "S_OK" == e.responseData.code && (i.UI.TipMessage.show("操作成功，邮件内容已保存到印象笔记", { delay: 2e3 }), top.addBehaviorExt({
                    actionId: 106906,
                    thingId: 4
                }), self.onNoteOrDevSave("saveNote")) : i.UI.TipMessage.show("遇到异常，保存失败，请稍后重试", {
                    delay: 2e3,
                    className: "msgRed"
                })
            })
        },
        onNoteOrDevSave: function (e) {
            var t = this, i = t.model.get("mid"), s = {};
            s.type = e, s.value = 1, s.ids = [i], top.M139.RichMail.API.call("mbox:updateMessagesStatus", s, function (i) {
                i.responseData && "S_OK" == i.responseData.code && ("bakDisk" == e ? a(t.el).find("a[name=tagMenu_read]") && a(t.el).find("a[name=tagMenu_read] i").addClass("i-Clouded").removeClass("i-cloud") : a(t.el).find("#saveToNote") && a(t.el).find("#saveToNote i").addClass("i-Writed").remove("i-Write"))
            })
        },
        onPrintMailClick: function () {
            top.addBehaviorExt({ actionId: 104928, thingId: 0 });
            var e = this.model.get("mid");
            window.open(top.getRootPath() + "/html/printmail.html?mid=" + e)
        },
        onPreviewAttachImgMouseOver: function (e) {
            e.target.bindHover || (a(e.target).hover(function () {
                a(this).addClass("lihover")
            }, function () {
                a(this).removeClass("lihover")
            }).addClass("lihover"), e.target.bindHover = 1)
        },
        onNotSpammailClick: function (e) {
            var t = this.model.get("mid"), i = [];
            i.push(t);
            var a = { command: "move", fid: 1, mids: i, comefrom: "spammail" };
            $App.trigger("mailCommand", a)
        },
        onTagMenuClick: function (e) {
            var t = this.model.get("mid"), i = [{
                html: "<i class='i_star_y'></i><span class='tagText'>星标</span>",
                command: "mark",
                args: { type: "starFlag", value: 1 }
            }, { isLine: !0 }];
            i = i.concat($App.getView("mailbox").model.getTagMenuItems()), M2012.UI.PopMenu.create({
                dockElement: e.target || e.srcElement,
                direction: "auto",
                items: i,
                onItemClick: function (e) {
                    var i = e.args || {};
                    e.command && (i.command = e.command, i.mids = [t], $App.trigger("mailCommand", i))
                }
            })
        },
        onFontZoomMouseOver: function (e) {
            function t() {
                s.find("span.fontZoom").show()
            }

            function i() {
                s.find("span.fontZoom").hide()
            }

            if (!this.model.get("isSubscribeaction") && !e.target.bindHover) {
                var s = a(e.target);
                s.hover(t, i), t(), e.target.bindHover = 1
            }
        },
        onReceiverAddrMouseOver: function (e) {
            function t() {
                var e = s.attr("email");
                "" != $Email.getEmail(e) && s.addClass("SgAddr")
            }

            function i() {
                s.removeClass("SgAddr")
            }

            if (!e.target.bindHover) {
                var s = a(e.target);
                s.hover(t, i), t(), e.target.bindHover = 1
            }
        },
        onAddMailNotify: function (e) {
            this.$el.find("a#addmailnotify");
            $App.show("notify_new")
        },
        onVipClick: function () {
            var e = this.model.get("accountInfo"), t = this, i = { serialId: e.serialId, name: e.name };
            1 == e.isVip ? (i.success = function (i) {
                e.isVip = 2, a(t.el).find("i.Vip").removeClass("user_vip").addClass("user_gray_vip").attr("bh", "readmail_addvip").attr("title", "添加“VIP联系人”,其邮件将同时标记为“VIP邮件”"), $App.trigger("vipDataChange", i), console.dir(i)
            }, top.Contacts.delSinglVipContact(i)) : 2 == e.isVip && (i.success = function (i) {
                e.isVip = 1, a(t.el).find("i.Vip").removeClass("user_gray_vip").addClass("user_vip").attr("bh", "readmail_delvip").attr("title", "取消“VIP联系人”"), $App.trigger("vipDataChange", i), console.dir(i)
            }, top.Contacts.addSinglVipContact(i))
        },
        onResize: function () {
            var e = this, t = a(e.el), i = t.find("div.J-readMailArea:eq(0)");
            if (i.length > 0) {
                var s = $App.getBodyHeight(), o = s - 150;
                o = Math.max(200, o), !t.attr("addclass") && t.attr("addclass", 1), e.mailboxModel.isApproachMode() && "left" == $App.getLayout() || (i.height(o - 4).css({
                    "overflow-x": "hidden",
                    position: "relative"
                }), $B.is.ie && $B.getVersion() < 9 && i.css({ "overflow-y": "auto" }))
            }
            this.model.get("mid");
            this.readmailcontentview.resize;
            var n = this.$el.find(".J_iconDesc"), r = this.$el.find("#readMailIcons");
            n.is(":visible") && r.css("bottom", n.height() + 13 + "px"), this.contactRecordView && this.contactRecordView.setContactsMailConH(), document.documentMode && document.documentMode <= 8 || e.CutBriefReceiver()
        },
        showBriefMode: function (e, t, i) {
            t = t || "";
            var a = i || this, s = a.$el.find("#receiver_to" + t), o = a.$el.find("#receiver_cc" + t);
            e ? (a.isBriefMode = !0, o.hide(), a.$el.find("#sendDate" + t).hide(), a.$el.find("#receiver_to" + t + " span").html("于&nbsp;" + a.$el.find("#sendDate" + t + " div").html() + "&nbsp;发送至&nbsp;"), a.$el.find("[name=batch_addr]").hide()) : (a.isBriefMode = !1, s.find(".showAddr[type='to" + t + "']").show(), s.find(".showAddr[type='cc" + t + "']").hide(), o.show().find(".showAddr").show(), a.$el.find("#sendDate" + t).show(), a.$el.find("#receiver_to" + t + " span").html("收件人："), a.$el.find("[name=batch_addr]").show(), a.$el.find("#receiver_to" + t + "_rest").hide())
        },
        CutBriefReceiver: function (e) {
            var t, i, s, o = e && e.context || this, n = e && e.typeId || "", r = o.$el.find("#receiver_to" + n), l = r.find(".showAddr"), c = r.find(".rMl"), d = r.width() - c.width() - 450, p = e ? e.to + (e.cc ? "," + e.cc : "") : o.dataSource.to + (o.dataSource.cc ? "," + o.dataSource.cc : ""), m = top._.map(p.split(","), function (e) {
                return e.split(" ")[0]
            }), u = 0, h = 0, f = null, g = !1, v = "";
            for (t = 0, i = l.length; i > t; t++) f = a(l[t]), 0 != t && g ? f.hide() : (s = t + 1, u += f.width(), f.css("display", ""), h = d - (u + a(l[s]).width()), 0 > h && 0 != t && u > 0 && (f.hide(), g = !0));
            if (g) {
                if (r.length > 0 && 0 == o.$el.find("#receiver_to" + n + "_rest").length && (r.find("div.p_relative").append('<a herf="javascript:void;" style="display: none; cursor: pointer;" id="receiver_to' + n + '_rest"></a>'), o.$el.find("#receiver_to" + n + "_rest").click(function () {
                    o.$el.find("#btn_switchBrief" + n).trigger("click")
                })), o.$el.find("#receiver_to" + n + "_rest").length > 0) {
                    for (o.$el.find("#btn_switchBrief" + n).show(), t = s - 1, i = m.length; i > t; t++) v += ", " + m[t];
                    o.$el.find("#receiver_to" + n + "_rest").text("还有" + (m.length - s + 1) + "个人...").attr("title", v.slice(2)).show()
                }
                o.isBriefMode = !0, e ? o.readmailview.addBriefModeSwitcher(e) : o.addBriefModeSwitcher()
            } else o.$el.find("#receiver_to" + n + "_rest").hide(), o.$el.find("#btn_switchBrief" + n).trigger("click").hide(), r.find(".showAddr[type='cc" + n + "']").hide()
        },
        resizeSwitchBtn: function () {
            if (!(document.documentMode && document.documentMode <= 8)) {
                var e = a(this.el), t = e.find(".switch-expand"), i = e.find("div.J-readMailArea:eq(0)");
                if (e.hasClass("inboxflOff")) {
                    if (i[0] && i[0].scrollHeight > i.height()) {
                        var s = $B.is.ie && $B.getVersion() < 8 ? "16px" : "0px";
                        t.css("right", s)
                    }
                } else t.css("right", "")
            }
        },
        checkLoadImg: function () {
            var e = this, t = top.getRootPath() + "/images/global/nopic.jpg", i = a(e.el).find("img.imgLink");
            i.length > 0 && a.each(i, function (i) {
                var s = this;
                a(this).error(function () {
                    a(this).attr("src", t).attr("rel", 2);
                    var i = a(this).attr("data-url");
                    s = null, e.logger.error("readmail prewImages load error", "[mbox:getThumbnail]", i)
                })
            })
        },
        splitToolbarMore: function (e, t) {
            if ("left" == $App.getLayout() || "top" == $App.getLayout()) {
                var i = a(".toolBarArray #btn_more"), s = i.find(".menuPop");
                s.length > 0 && s.remove(), i.show().click(function () {
                    e.createMoreToolMenu(t, i)
                })
            }
        },
        getMailNotifyLink: function (e, t) {
            var i = "";
            return t && -1 == a.inArray(t, [5, 6, 9, 11, 12]) && (i = '<span style="padding-left:10px;"><a href="javascript:;" style="zoom:1" onClick="return false" id="addmailnotify" data-from="' + $T.Utils.htmlEncode(e) + '">[来邮短信提醒]</a></span>'), ""
        },
        mailTagEvent: function () {
            var e = this;
            appView.on("readmailControl", function (t) {
                var i = e.model.get("mid");
                t.mids && a.inArray(i, t.mids) > -1 && ("tag" == t.command ? setTimeout(function () {
                    var s = $App.getMailDataByMid(i).label;
                    -1 == a.inArray(t.args.labelId, s) && (s.push(t.args.labelId), appView.trigger("mailboxDataChange", { render: !0 })), e.renderTag(a(e.el).find(".readTagdiv"), e.getTagHtml(s))
                }, 500) : "emptyTag" == t.command && setTimeout(function () {
                    appView.trigger("mailboxDataChange", { render: !0 }), e.emptyTag(a(e.el).find(".readTagdiv"))
                }, 500))
            })
        },
        keywordLinkToCalendarTips: function (e, t) {
            var i = new M2012.ReadMail.CalendarWord.View,
                a = this.model.get("mid");
            return i.matchWord(e, t, a)
        },
        showCalendarNotify: function (e, t) {
            this.activity_popup.show(e, t)
        },
        showSaveToDiskTips: function (e) {
            var t = a("#saveDiskTipsLayer"), i = a(e).position();
            0 == t.length && (t = ['<div id="saveDiskTipsLayer" class="tipsLayer" style="z-index:9999;display:none;">', '	<div class="tipsLayerMain">', '		<div class="tipsLayerMainInner" style="padding-left:58px;">', '			<i class="i-tipsNetworkDisk"></i>', "			<dl>", "				<dd>附件存云盘，重要文件不丢失，管理更方便哦~</dd>", "			</dl>	", "		</div>", "	</div>", '	<i class="i-tipsLayerArrow tipsTopArrow"></i>', '	<a href="javascript:;" class="closeTipsLayerBtn" title="关闭"><i class="i-closeTipsLayer"></i></a>', "</div>"].join(""), t = a(t).appendTo("#headAttach")), i && (BH("readmail_savedisk_tips"), t.css({
                top: i.top + 24 + "px",
                left: i.left + 10 + "px"
            }).show(), t.one("click", ".closeTipsLayerBtn", function () {
                t.hide()
            }), a(document).one("click", ".sdLink", function () {
                t.hide()
            }))
        },
        renderHeader: function () {
            var e = this, t = a(e.el), s = this.model.get("mid"), o = $T.Html.encode(this.model.get("dataSource").subject), n = this.model.get("dataSource"), r = e.model.get("mailListData"), l = e.model.get("currFid"), c = l, d = [], p = $App.getMailDataByMid(s), m = e.template.mailHeader, u = 0 == l, h = n.headers || {}, f = a("#readmail_" + s);
            e.dataSource = n, t.find(".J_toggleTriangle").die("click").live("click", function () {
                e.toogleIconsDesc()
            }), t.find(".J_backupMail").die("click").live("click", function () {
                e.backupMail()
            }), t.find(".J_139pocket").die("click").live("click", function () {
                e.mail139Pocket()
            }), this.el && this.setElement(this.el), r && r.fid && (c = r.fid, l = c, e.model.set("currFid", c));
            var g = $App.isSessionMode() && $App.isSessionFid(c), v = !!h["X-RICHINFO"];
            h.taskDate && (n.taskDate = h.taskDate), e.model.set({ isSubscribeaction: v }), p && p.label && (d = p.label), e.model.set({
                dataSource: n,
                label: d
            }), 3 == c && e.recallview.model.set({ fid: c, dataSource: n });
            var b = "" == n.subject ? "(无)" : n.subject;
            "interface" == e.model.get("source") && (b = b.replace(/&nbsp;/i, ""), $App.setTitle(b));
            var y = {};
            $User.isChinaMobileUser() && 4 != l && 5 != l && 11 != l && (y = e.keywordLinkToCalendarTips(b, n.sendDate)), 0 != h.subscriptionFlag && a(e.el).find("#leftPart").hide(), 0 == Number(h.billFlag) || $User.getTrueName() || top.$App.showOnce("billSynName", function () {
                !function (e) {
                    $RM.call("bill:getSynName", null, function (t) {
                        var i = t.responseData || {};
                        "S_OK" == i.code && e(i["var"])
                    })
                }(function (e) {
                    if (e.billName) {
                        var t = ['<div class="boxIframeText" style="height:auto;overflow:hidden;">', '<div class="imgInfo imgInfo-rb">', '<a class="imgLink" href="javascript:void(0);" title="图片"><i class="i_warn"></i></a>', "<dl>", '<dt class="fz_16"><strong>您是否将账单中的姓名同步到邮箱发件人姓名？</strong></dt>', '<dd class="gray">设置发件人姓名可以让别人轻松识别你是谁</dd>', '<dd class="pt_10">姓名：<input type="text" class="iText" value="' + e.billName + '" maxlength="16" style="color:gray;" disabled></dd>', "</dl>", "</div>", "</div>"].join("");
                        top.BH("billname_sync_box_show");
                        var a = !1, s = $Msg.showHTML(t, function () {
                            var e = $TextUtils.htmlEncode(s.$el.find("input").val());
                            a = !0, top.BH("billname_sync"), top.M2012.Contacts.getModel().modifyUserInfo({ AddrFirstName: e }, function (e) {
                                "0" == e.ResultCode ? i.UI.TipMessage.show("同步成功", { delay: 3e3 }) : i.UI.TipMessage.show("同步失败", {
                                    delay: 3e3,
                                    className: "msgYellow"
                                })
                            })
                        }, {
                            dialogTitle: "系统提示", buttons: ["确定"], onClose: function () {
                                0 == a && top.BH("billname_sync_box_close")
                            }
                        })
                    }
                })
            });
            var w = !0, _ = a("#toolbar_" + s);
            if (("readWrap" == a(e.el).attr("id") || $App.isNewWin()) && (w = !1), w) {
                var M = new M2012.ReadMail.ToolBar.View({
                    el: "#toolbar_" + s,
                    dataSource: n,
                    currFid: l,
                    getSessionPrevNextMail: g,
                    mailListData: r,
                    searchMode: u
                }), C = M.render();
                _.html(C), M.initEvents(), r && r.flags && (r.flags.read = 0);
                var x = { mid: s, mail: r }, $ = new M2012.Mailbox.View.MailMenu({
                    el: "#toolbar_" + s + " .toolBarUl_v3",
                    model: new M2012.Mailbox.Model.Mailbox,
                    readmail: x
                }).render();
                $App.registerView("currentMailMenu-" + s, $), e.splitToolbarMore(M, s)
            } else _.hide();
            var k = $TextUtils.htmlEncode(b);
            y.keyword && (k = k.replace(y.keyword, '<a class="calNotifyLink" href="javascript:;" style="color:#fe6600;border-bottom: dashed 1px #999;text-decoration: none;">' + y.keyword + "</a>"));
            var T = 3 == c ? e.recallview.render() : "", A = e.getSaveLogo(n), I = {
                mid: s,
                titleIco: e.getTitleIco(s),
                titleColor: e.getColor(s),
                denyforwardIco: e.denyforwardIco(s),
                reCall: T,
                title: k,
                tagHtml: e.getTagHtml(d),
                fromHtml: e.getReceiverHtml("发件人", n.account, {
                    type: "from",
                    vip: e.getVipHtml(n),
                    agent: e.getAgentHtml(n),
                    refuse: "",
                    notify: e.getMailNotifyLink(n.account, c),
                    strokeVIcon: A.strokeVIcon
                }),
                toHtml: e.getReceiverHtml("收件人", n.to, { type: "to" }),
                ccHtml: e.getReceiverHtml("抄　送", n.cc, { type: "cc" }),
                bccHtml: e.getReceiverHtml("密　送", n.bcc, { type: "bcc" }),
                dateHtml: e.getDateHtml(n),
                attachHtml: e.getAttachHtml(n),
                cloudClass: e.getCloudClass(n),
                remarkClass: e.getRemarkClass(n),
                starAttributeNew: e.starAttributeNew(n.flag),
                tagMenuHtml: e.getTagMenuHtml(),
                newWinUrl: $App.isNewWin() ? "" : e.newWinUrl(s, l),
                cloud139Pocket: e.cloud_139Pocket(n),
                cloudNote: e.cloudNote(s, l, n),
                printMail: e.printMail(s),
                strokeSaveTips: A.strokeSaveTips
            };
            f.html($TextUtils.format(m, I) || ""), f.find(".allgetdown").click(function (e) {
                e.stopPropagation()
            });
            var S = null, D = "", B = "";
            if (a("#question-tips").remove(), f.find(".questionMark").hover(function () {
                0 == a("#question-tips").length && (a(document.body).append(e.template.safeTipTemplate), D = a(this).offset().top + 25 + "px", B = a(this).offset().left - 27 + "px"), S = setTimeout(function () {
                    a("#question-tips").css({ top: D, left: B }).show()
            }, 500)
            }, function () {
                clearTimeout(S), a("#question-tips").hide()
            }), $App.getMailboxView().model.isSubscriptionMail() || t.find("#readMailIcons").show(), t.find("div.J-readMailArea").css({ visibility: "visible" }), k.indexOf("</a>") > 0 && top.Package.require("readmail_ext", function () {
                function t() {
                    a(".tips.tips-shcdule.form-addtag-tips").remove(), y.isMonthView ? e.activity_popup = new M2012.ReadMail.PopupActivity.Month(r).render() : y.isWeekView ? e.activity_popup = new M2012.ReadMail.PopupActivity.Week(r).render() : e.activity_popup = new M2012.ReadMail.PopupActivity.Normal(r).render()
            }

                var i = null, s = new Date(Number(y.datetime)), o = new Date;
                o.setHours(9);
                var n = new Date > s ? new Date(o.setMinutes(0, 0, 0)) : s, r = {
                container: f,
                title: y.subject,
                week: y.week,
                mid: y.mid,
                datetime: n,
                attr: "themeKey"
            }, l = a('<span style="position:absolute;z-index:9999;display:none;"><a class="btnNormal" href="javascript:;"><span>+ 添加到日历</span></a></span>');
                f.find(".calNotifyLink").live("click", function () {
                    t(), BH("readmail_themekey");
                    var i = a(this).position();
                    e.showCalendarNotify(i.left + 15, i.top + 24), l.fadeOut(0)
            }).live("mouseover", function () {
                    var t;
                    e.activity_popup && e.activity_popup.$el.is(":visible") || (t = a(this).position(), l.stop(!0).css({
                top: t.top + 24 + "px",
                left: t.left + "px"
            }).show().animate({ opacity: 1 }, 50))
            }).live("mouseout", function () {
                    clearTimeout(i), i = setTimeout(function () {
                        l.fadeOut(200)
            }, 300)
            }), l.on("click", function () {
                    t(), BH("readmail_click_addcalendar2"), BH("readmail_themekey");
                    var i = a(this).position();
                    e.showCalendarNotify(i.left + 15, i.top), l.fadeOut(0)
            }).on("mouseenter", function () {
                    clearTimeout(i), l.stop(!0).show().animate({ opacity: 1 }, 50)
            }).on("mouseleave", function () {
                    i = setTimeout(function () {
                        l.fadeOut(200)
            }, 300)
            }), f.find(".calNotifyLink").length > 0 && (BH("readmail_show_addcalendar"), BH("readmail_themekey"));
                var c = !0;
                if (c) {
                    var d = f.find(".calNotifyLink").position();
                    l.css({
                top: d.top + 24 + "px",
                left: d.left + "px"
            }).stop(!0).show(), i = setTimeout(function () {
                        l.fadeOut(1e4)
            }, 1e3), $Cookie.set({
                name: "calendarNotifyShowed",
                value: 1,
                expries: new Date((new Date).getTime() + 864e5)
            })
            }
            }), e.renderTag(t.find(".readTagdiv")), t.find("#readMailIcons").prepend(e.getRemindHtml(n, '<a class="" href="javascript:;" bh="readmail_icons_task" name="mailtask" title="设置稍后处理" mid="{mid}" status="{status}" taskdate="{taskdate}" from="{from}" senddate="{senddate}" subject="{subject}"><i class="{iclass}"></i></a>')), t.find(".J_iconDesc").prepend(e.getRemindHtml(n, '<a href="javascript:;" bh="readmail_desc_task" name="mailtask" mid="{mid}" status="{status}" taskdate="{taskdate}" from="{from}" senddate="{senddate}" subject="{subject}">设置稍后处理</a> | ')), e.remindview.addEvent(t.find("#leftbox")), 3 == c && r && r.rcptFlag) {
                var L = "#deliverystatus_div_" + s;
                e.deliverystatusview.el = L, e.deliverystatusview.model.set({
                    mid: s,
                    rcptFlag: r.rcptFlag
                }), e.deliverystatusview.render()
            }
            var E = "#readmail_" + s, U = new M2012.Remark.View({ el: E });
            if (n.flag && 1 == n.flag.memoFlag ? (U.model.set({
                opType: "get",
                mid: s,
                subject: o
            }), U.render()) : U.model.set({
                mid: s,
                subject: o
            }), U.initEvents(), 1 == n.requestReadReceipt && 3 != c) {
                var F = new M2012.Receipt.View;
                F.model.set({
                    mailListData: r,
                    requestReadReceipt: 1,
                    readReceipt: n.readReceipt || null
                }), F.initEvents()
            }
            var j = !0, N = n.account;
            (v || "" == N) && (j = !1);
            var R = e.mailboxModel;
            if (R && "list" != $App.getLayout() && $App.getMailboxView().model.isApproachMode() && (j = !1), j && !e.model.isFromMyself(n)) {
                var P = $App.getModel("contacts").getContactsByEmail(N);
                this.contactRecordViewOptions = { el: e.el, keyword: N, mid: s, contactsInfo: P, parentView: e };
                var V = t.find(".switch-expand");
                V.click(function () {
                    t.hasClass("inboxflOff") ? BH("rmcontact_show") : BH("rmcontact_hide"), t.toggleClass("inboxflOff"), a(this).hasClass("switch-expand") ? (a(this).addClass("switch-shrink").removeClass("switch-expand"), $B.is.ie && document.documentMode && document.documentMode < 8 ? a(this).css({ right: "295px" }) : a(this).css({ right: "279px" })) : (a(this).addClass("switch-expand").removeClass("switch-shrink"), a(this).css({ right: "0px" }));
                    var i = t.find("#contactMails");
                    t.hasClass("inboxflOff") ? (BH("rmcontact_close"), i.hide()) : (BH("rmcontact_open"), i.show()), i.length || top.Package.require("readmail_ext", function () {
                        e.contactRecordView = new M2012.ReadMail.ContactRecord.View(e.contactRecordViewOptions), e.contactRecordView.render()
                    }), e.resizeSwitchBtn()
                }), $B.is.ie && 6 === $B.getVersion() && (V.css({
                    position: "absolute",
                    top: "31px",
                    right: 0
                }), t.find("div.J-readMailArea:eq(0)").scroll(function () {
                    var e = a(this).scrollTop();
                    V.css("top", e + 31)
                }))
            } else t.addClass("inboxflOff"), t.addClass("inboxflOff_skin"), t.find(".switch-expand").hide();
            t.addClass("inboxflOff"), t.addClass("inboxflOff_skin");
            var O = e.filepreview.getThumbnailsHtml(b, n.attachments, s);
            O = "", "" != O && a("#mailContent_" + s).append(O), setTimeout(function () {
            }, 1e3), e.checkLoadImg(), e.filepreview.el = t.find(".convattrlist,#attach_" + s), e.filepreview.initEvents(n, s), 3 == c && (e.recallview.el = t.find("#recall"), e.recallview.initEvents());
            var H = !0;
            if (v && (H = !1), H) {
                var z = e.getReplyAllEmails(n);
                e.quickreplyview.setElement(e.$el.find("#quickreply_" + s)), e.quickreplyview.model.set({
                    mid: s,
                    sender: n.account,
                    replyAll: z
                }), e.quickreplyview.render(), e.quickreplyview.initEvents()
            } else t.find(".quick-reply").hide();
            e.riskTipsEvent(), e.scrollTopEvent();
            var G = this.$el.find("#receiver_to"), q = this.$el.find("#receiver_cc");
            q.find(".showAddr").clone().hide().appendTo(G.find(".p_relative")), q.find(".showAddr").show(), e.onResize(), e.showBatchAddLink({
                data: n.to,
                type: "to"
            }), e.showBatchAddLink({ data: n.cc, type: "cc" }), e.addBriefModeSwitcher(), a(window).resize(function () {
                e.isHandleCurrentMail() && e.onResize()
            }), $App.isNewWin() || e.showContactCard(t), $App.off("marktask").on("marktask", function (e) {
                var i = t.find("#readMailIcons").find("a[name='mailtask'] i");
                i.attr("class", e.value ? "i-Clocked" : "i-Clock"), i.parent().attr("status", e.value ? "update" : "add")
            })
        },
        riskTipsEvent: function () {
            function e() {
                if (t.showRiskTips = !0, t.risktipsview.el = t.el, t.risktipsview.model.set({
                    fid: s,
                    dataSource: o
                }), t.risktipsview.model.isDisableImg()) {
                    var e = t.model.get("mid"), n = a("#mid_" + e)[0].contentWindow.document, r = !1;
                    a(n).find("img").each(function (e, t) {
                        var i = a(this).attr("src");
                        "hideEditorBar" != a(this).attr("name") && (i.match(/(\/\/image[\w\d].139cm.com)|(m201[25]\/images)/gi) || (a(this).attr("original", i).hide().removeAttr("src"), r = !0))
                    }), a(n).find("[style]").each(function (e, t) {
                        var i = this.style.background, s = this.style["background-image"];
                        i && i.indexOf("url") >= 0 && (a(this).attr("_background", i).css("background", ""), r = !0), s && s.indexOf("url") >= 0 && (a(this).attr("_background-image", s).css("background-image", ""), r = !0)
                    }), t.risktipsview.model.set("disableSuccess", r)
                }
                var l = t.risktipsview.render();
                l && (i.find("div.mialContent").prepend(l), t.risktipsview.initEvents())
            }

            var t = this, i = this.$el, s = t.model.get("currFid"), o = t.model.get("dataSource");
            t.letterDomReady && t.letterInfoReady && !t.showRiskTips && s && o && e()
        },
        initMailHeaderEvent: function () {
            function e(e, t) {
                if (t && (t.errorCode || 0 == t.errorCode)) e.logger.error("readmail letterInfo returndata error", "[view:readMessage]", t), e.readMailError(t, !0); else {
                    e.model.savePrintData(t), e.model.set({ dataSource: t });
                    var i = e.model.get("mailListData");
                    e.model.get("dataSource");
                    3 == e.model.get("currFid") || i && 3 == i.fid ? top.Package.require("readmail_ext", function () {
                        var t = e.model.get("dataSource").omid;
                        $App.getMailDataByMid(t) && 1 == $App.getMailDataByMid(t).read_track_enabled ? e.deliverystatusview = new M2012.Readmail.CheckScout.View({ view: e }) : e.deliverystatusview = new M2012.DeliveryStatus.View, e.recallview = new M2012.ReadMail.Recall.View, e.renderHeader(), e.encrypAssembling({ fid: i.fid })
                    }) : (e.renderHeader(), e.encrypAssembling())
                }
            }

            var t = this, a = this.model.get("mid"), s = "letterInfoReady_" + a;
            $App.off("letterInfoReady").on("letterInfoReady", function (s) {
                return s && s.omid !== a ? void (s && "FA_INVALID_SESSION" === s.code && ($App.showSessionOutDialog(), i.UI.TipMessage.hide())) : (t.letterInfoReady = !0, void e(t, s))
            }), $App.off(s).on(s, function (i) {
                t.letterInfoReady || (e(t, i), t.letterInfoReady = !0)
            })
        },
        encrypAssembling: function (e) {
            var t = this, i = t.model.get("mailListData");
            if (i && i.flags && "1" == i.flags.encrypted) {
                var s = t.model.get("dataSource"), o = t.model.get("mid"), n = s.attachments[0], r = s.headers.mailPass, l = {
                    mid: t.model.get("mid"),
                    fileSize: n.fileSize,
                    fileOffSet: n.fileOffSet,
                    encoding: n.encoding,
                    type: n.type,
                    fileName: n.fileName,
                    encryptCode: ""
                };
                if (e && "3" == e.fid) {
                    l.encryptCode = r, t.model.set("Encrypted_mailPass", r);
                    var c = "#Encryptedtip_div_" + o, d = $T.Utils.format(t.template.encryptedTiphtml, [o, "", "查看密码"]);
                    return t.$el.find(c).show().append(d), void t.getEncrypInfo({ detallattach: l })
                }
                clearTimeout(t.encrytimeout), t.encrytimeout = setTimeout(function () {
                    var e = t.model.get("dataSource");
                    t.$el.find("#headAttach").hide();
                    var i = t.$el.find("#contentText iframe[name]"), s = i[0].contentWindow.document;
                    a(s).find("body").html("").append(t.template.encryptedKeyBox);
                    var o = a(s).find("#EncryptDiv");
                    o.find("#encryptedSms").click(function () {
                        function i(e) {
                            var t = "";
                            if (e && e.account) {
                                var i = (e.account, $Email.getAccount(e.account));
                                $Mobile.isMobile(i) && (t = i)
                            }
                            return t
                        }

                        function a(e) {
                            var t = "";
                            return e.readmailDate && e.readmailDate.subject && (e.tpl = $T.Utils.format(e.tpl, [e.readmailDate.subject]), t = e.tpl), t
                        }

                        top.BH("encry_sms"), top.$Evocation.create({
                            to: 4,
                            type: 2,
                            specify: i(e),
                            content: a({ readmailDate: e, tpl: t.template.EncryptedSms_tpl })
                        })
                    }), o.find("#keycodeCon").focus(function () {
                        a(this).val("").removeClass("secretRed"), o.find("#decryptBtntips").text("")
                    }), o.find("#decryptBtn").click(function () {
                        top.BH("encry_submit");
                        var e = o.find("#keycodeCon").val().replace(/\s+/g, ""), i = a.trim(e), s = $T.Html.encode(i);
                        return 0 == s.length ? (o.find("#keycodeCon").val(""), o.find("#decryptBtntips").text("请输入密码,密码不支持空格"), void o.find("#keycodeCon").addClass("secretRed")) : void (s.length > 0 && (l.encryptCode = s, t.getEncrypInfo({
                            detallattach: l,
                            tml: "#EncryptDiv",
                            keycodeCon: "#keycodeCon",
                            classname: "secretRed",
                            decryptBtntips: "#decryptBtntips",
                            tips: "密码错误，请重新输入"
                        })))
                    })
                }, 120)
            }
        },
        getSaveLogo: function (e) {
            var t = this, i = "", s = "", o = ["1010001", "1010002", "1010003", "1010004", "1010005", "1010006", "1010007", "1000011"], e = e || t.model.get("dataSource"), n = e.headers && e.headers.sendId ? e.headers.sendId : "0";
            return a.inArray(n, o) > -1 ? (i = $T.Utils.format("<i class='icons i-security' sendId={0}></i>", [n]), s = $T.Utils.format(t.template.tipslogoCe, [n])) : (html = "", s = ""), {
                strokeVIcon: i,
                strokeSaveTips: s
            }
        },
        getEncrypInfo: function (e) {
            var t = this, i = t.$el.find("#contentText iframe[name]"), s = t.model.get("mid"), o = i[0].contentWindow.document;
            t.attachMessage(e.detallattach, function (n) {
                var r = n.responseData;
                if (r && "S_OK" == r.code) {
                    var l = r["var"], c = l.html.content;
                    a(o).find("body").html("").append(c);
                    var d = a(o).find("body").height();
                    i.css({ height: d + 20 + "px" });
                    var p = t.getAttachHtml(l);
                    t.$el.find("#headAttach").remove(), t.$el.find("#sendDate").after(p), t.filepreview = new M2012.ReadMail.View.FilePreview, t.filepreview.el = t.$el.find("#headAttach"), t.filepreview.initEvents(l, s, "encrymail")
                } else {
                    if (r && "FA_INVALID_PASSWORD" == r.code && 3 != e.fid) return a(o).find(e.tml).find(e.keycodeCon).addClass(e.classname), void a(o).find(e.tml).find(e.decryptBtntips).text(e.tips);
                    t.readMailError()
                }
            })
        },
        attachMessage: function (e, t) {
            top.M139.HttpRouter.addRouter("webapp", ["mbox:viewAttachMessage"]), i.RichMail.API.call("mbox:viewAttachMessage", e, function (e) {
                t && t(e)
            })
        },
        highlightWord: function (e) {
            function t(e, t) {
                for (var i = new Date, a = i.getFullYear(), s = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], o = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十", "二十一", "二十二", "二十三", "二十四", "二十五", "二十六", "二十七", "二十八", "二十九", "三十", "三十一"], n = 0; n < s.length; n++) s[n] == e && (e = n + 1);
                for (var n = 0; n < o.length; n++) o[n] == t && (t = n + 1);
                return $Date.parseValidDateStr(a + "-" + e + "-" + t)
            }

            function i(e) {
                var i = e, a = {}, s = (new Date).getFullYear();
                a.subject = i, a.mid = "";
                var o = new Date;
                if (matches = i.match(/(\d{4})年(\d\d?)月(\d\d?)日/)) {
                    if (a.keyword = matches.shift(), a.datetime = $Date.parseValidDateStr(matches.join("-")), a.datetime) return a.datetime.setHours(9), a
                } else if ((matches = i.match(/(\d{4})年(\d\d?)月/)) && matches[2] >= 1 && matches[2] <= 12) return a.keyword = matches[0], a.isMonthView = !0, a.datetime = o, a;
                if (matches = i.match(/(\d{1,2}[\.]){2}\d{4}/)) {
                    a.keyword = matches[0];
                    var n = matches[0].split("."), r = n.reverse().join("-");
                    if (a.datetime = $Date.parseValidDateStr(r), a.datetime) return a.datetime.setHours(9), a
                }
                if ((matches = i.match(/\d{4}([-\/\.]?\d{1,2}){2}/)) && (a.keyword = matches[0], a.datetime = $Date.parseValidDateStr(matches[0]), a.datetime)) return a.datetime.setHours(9), a;
                if (matches = i.match(/(\d{1,2}\/){2}\d{4}/)) {
                    a.keyword = matches[0];
                    var n = matches[0].split("/"), r = n.reverse().join("-");
                    if (a.datetime = $Date.parseValidDateStr(r), a.datetime) return a.datetime.setHours(9), a
                }
                if (matches = i.match(/(\d{1,2}\/){2}\d{2}/)) {
                    a.keyword = matches[0];
                    var n = matches[0].split("/"), r = "20" + n.reverse().join("-");
                    if (a.datetime = $Date.parseValidDateStr(r), a.datetime) return a.datetime.setHours(9), a
                }
                if ((matches = i.match(/([一二三四五六七八九]|[十][一二])月([一二三四五六七八九十]{1,3})日/)) && (a.keyword = matches[0], a.datetime = t(matches[1], matches[2]), a.datetime)) return a.datetime.setHours(9), a;
                if ((matches = i.match(/(\d\d?)月(\d\d?)日/)) && (a.keyword = matches.shift(), a.datetime = $Date.parseValidDateStr(s + "-" + matches.join("-")), a.datetime)) return a.datetime.setHours(9), a;
                if (matches = i.match(/\d{1,2}\/\d{1,2}/)) {
                    a.keyword = matches[0];
                    var l = s + "/" + matches[0];
                    if (a.datetime = $Date.parseValidDateStr(l), a.datetime) return a.datetime.setHours(9), a
                }
                return (matches = i.match(/会议|纪要|参与/g)) ? (a.keyword = matches.shift(), a.selectContent = !0, a) : void 0
            }

            function s(e) {
                if (!o) for (var t, n, r = e.childNodes, l = 0; l < r.length; l++) if (t = r[l], 1 == t.nodeType) s(t); else if (3 == t.nodeType) {
                    var c = $T.Html.encode(a(t).text());
                    if (n = i(c)) {
                        if (a(e).closest("#signContainer").length > 0 || a(e).closest(".b_size").length > 0 || a(e).closest(".atwho-inserted").length > 0) return;
                        if ("STYLE" == t.parentNode.tagName) return;
                        if ("发送时间:" == a(t).prevAll("b").text()) return;
                        o = !0;
                        var d = n.datetime ? n.datetime.getTime() : "";
                        return void a(t).replaceWith(c.replace(n.keyword, '<a class="calNotifyLink" date="' + d + '" href="javascript:;" style="color:#fe6600;border-bottom: dashed 1px #999;text-decoration: none;cursor: pointer;" >' + n.keyword + "</a>"))
                    }
                }
            }

            var o = !1;
            s(e)
        },
        getObjByUrl: function (e) {
            for (var t = e.lastIndexOf("?"), i = e.slice(t + 1).split("&"), a = {}, s = 0; s < i.length; s++) {
                var o = i[s].split("=");
                a[o[0]] = o[1]
            }
            return a
        },
        initMailContentEvent: function () {
            function e(e, t) {
                var a = !1;
                if (t && t.letterInfo && t.letterInfo.errorCode && (a = !0), !a && t.letterInfo && t.letterInfo.omid) {
                    var o = t.document.body.innerHTML;
                    i.PageApplication.getTopApp().print[t.letterInfo.omid].html = { content: o }, t.letterInfo.html = { content: o }, e.readmailcontentview.mailDomReady(t.letterInfo, t), e.riskTipsEvent(), e.hoverImage(), _letterInlineScript(t, s), i.UI.TipMessage.hide(), e.addHotWord(t)
                }
            }

            var t = this, s = t.model.get("fid"), o = t.model.get("mid"), n = "letterDomReady_" + o;
            this.el && this.setElement(this.el), $App.off("letterDomReady").on("letterDomReady", function (i) {
                if (!i || !i.letterInfo || i.letterInfo.omid === o) {
                    if (t.letterDomReady = !0, e(t, i),
                        t.isCoolMail()) {
                        var n = t.Browsesupport();
                        n && Package.require("cool_mail", function () {
                            var e = new M2012.coolMail.View({ parentview: t, win: i });
                            e.actionCool(i), e.model.updateLogotype({
                                type: "logoType",
                                ids: [o],
                                time: 0
                            }, function (e) {
                            })
                        })
                    }
                    setTimeout(function () {
                        if (t.highlightWord(i.document.body), "您的好友赠送了一张优惠券给您" === i.letterInfo.subject) {
                            var e = a(i.document).find(".btn-use-coupon");
                            Url = e.attr("href"), couponInfo = t.getObjByUrl(Url), couponId = couponInfo.couponId || "", couponSubId = couponInfo.couponSubId || "";
                            var n = "http://mail.10086.cn/sso.ashx?couponId=" + couponId + "&couponSubId=" + couponSubId + "&sid=" + $Url.getQueryObj().sid + "&_lv=66&id=wallet";
                            e.length > 0 && (e.attr("bh", "cloudyWallet"), e.attr("href", n))
                        }
                        t.$el.find("#readmail_container").scroll(function () {
                            0 != a(".tips.tips-shcdule.form-addtag-tips").length && a(".tips.tips-shcdule.form-addtag-tips").remove()
                        }), a(".calNotifyLink", i.document).live("click", function (e) {
                            a(this).css("cursor", "pointer"), BH("readmail_keyword");
                            var i = new Date(Number(a(e.target).attr("date"))), s = null, n = new Date;
                            n.setHours(9), "Invalid Date" == i ? (s = new Date, s.setHours(9), s = new Date(s.setMinutes(0, 0, 0)), date = new Date > s ? new Date(n.setMinutes(0, 0, 0)) : s) : date = new Date > i ? new Date(n.setMinutes(0, 0, 0)) : i;
                            var r = t.$el.find("#leftPart").height(), l = a(".new-main-topbar").height(), c = t.$el.find("#readmail_container"), d = t.$el.find("#risktips").outerHeight(), p = t.$el.find("#billMailForwardBar").outerHeight(!0), m = t.$el.find("#readmailAtTips").length ? 40 : 0, u = 214, h = 310;
                            a(".tips.tips-shcdule.form-addtag-tips").remove(), top.Package.require("readmail_ext", function () {
                                var e = {
                                    container: t.el,
                                    title: t.model.get("dataSource").subject,
                                    week: "",
                                    mid: o,
                                    datetime: date,
                                    attr: "wordKey"
                                };
                                t.activity_popup = new M2012.ReadMail.PopupActivity.Normal(e).render()
                            }), "list" === $App.getLayout() || "left" === $App.getLayout() ? e.clientY + u - c.scrollTop() > c.height() - r && e.clientX + h > c.width() ? (t.$el.find(".tipsTop.diamond").remove(), t.showCalendarNotify(c.width() - h, c.height() - 165)) : e.clientY + u - c.scrollTop() > c.height() - r ? (t.$el.find(".tipsTop.diamond").remove(), t.showCalendarNotify(e.clientX, c.height() - 165)) : e.clientX + h > c.width() ? (t.$el.find(".tipsTop.diamond").remove(), t.showCalendarNotify(c.width() - h, e.clientY + r + l + 20 - c.scrollTop())) : t.showCalendarNotify(e.clientX, e.clientY + r + m + l + 20 + d + p - c.scrollTop()) : "top" === $App.getLayout() && (e.clientX + h > c.width() ? (t.$el.find(".tipsTop.diamond").remove(), t.showCalendarNotify(c.width() - h, e.clientY + r + 20 - c.scrollTop())) : t.showCalendarNotify(e.clientX + 10, e.clientY + r + m + d + p + 20 - c.scrollTop())), e.stopPropagation()
                        }), t.disview = new Zan_View({
                            el: t.$el.find("#discuss"),
                            mid: { ids: o },
                            share: "none",
                            fid: s,
                            type: 2
                        }), t.disview.render(), new M2012.Readmail.Iframe.Event.View({
                            win: i,
                            currentTab: top.$App.getCurrentTab().element,
                            mid: o
                        }).render()
                    }, 200)
                }
            }), $App.off(n).on(n, function (i) {
                t.letterDomReady || (e(t, i), t.letterDomReady = !0)
            })
        },
        isCoolMail: function () {
            var e = this, t = e.model.get("currFid"), i = top.$App.getCurrentTab().name || "", a = i.indexOf("readmail") > -1, s = 0, o = e.model.get("mailListData");
            o && (s = o.logoType);
            var n = e.isEncryptedEmail(), r = e.isSubscribeactionEmail(), l = "list" == $App.getLayout();
            return s > 89 && 97 > s && l && 4 != t && !n && !r && a ? !0 : void 0
        },
        Browsesupport: function () {
            var e = $B.is.ie && $B.getVersion() <= 9;
            return e && i.UI.TipMessage.show("特效动画暂不支持IE10以下浏览器，建议您升级浏览器", { delay: 2e3, className: "msgYellow" }), !e
        },
        isEncryptedEmail: function () {
            var e = this, t = e.model.get("mailListData");
            return !(!t || !t.flags || "1" != t.flags.encrypted)
        },
        isSubscribeactionEmail: function () {
            var e = this, t = e.model.get("mailListData");
            return !(!t || !t.subscriptionFlag || "1" != t.subscriptionFlag)
        },
        isHandleCurrentMail: function () {
            var e = this, t = e.model.get("mid"), i = a("#divTab").find("li.on").attr("tabid").split("_")[1], s = $App.getAttrs("list_layout");
            return t == i || 0 != s
        },
        addBriefModeSwitcher: function (e) {
            var t = e && e.context || this, i = e && e.typeId || "", s = a("<div id='btn_switchBrief" + i + "' class='rMr_right' style='margin: " + (i ? "2" : "72") + "px 0 0 0;'><a href='javascript:' bh='readmail_showdetail'>完整信息<i class='g-down'></i></a></div>");
            if (t.isBriefMode) {
                e ? t.readmailview.showBriefMode(t.isBriefMode, i, t) : t.showBriefMode(t.isBriefMode, i);
                var o = t.$el.find("#btn_switchBrief" + i);
                if (o.length > 0) return o.find("a").attr("bh", "readmail_showdetail"), void o.find("a").html("完整信息<i class='g-down'></i>");
                t.$el.find("#receiver_to" + i).before(s), s.click(function () {
                    if (e || t.isHandleCurrentMail()) {
                        var s = a(this);
                        "readmail_showdetail" == s.find("a").attr("bh") ? (s.find("a").attr("bh", "readmail_showsimple"), s.find("a").html("精简信息<i class='g-up'></i>"), e && e.context ? t.readmailview.showBriefMode(!1, i, t) : t.showBriefMode(!1)) : (s.find("a").attr("bh", "readmail_showdetail"), s.find("a").html("完整信息<i class='g-down'></i>"), e && e.context ? t.readmailview.showBriefMode(!0, i, t) : t.showBriefMode(!0), e && e.context ? t.readmailview.CutBriefReceiver(e) : t.CutBriefReceiver())
                    }
                })
            }
        },
        addHotWord: function (e) {
            new M2012.ReadMail.HotWord.View({ win: e })
        },
        handleStyleForReadMailContent: function (e) {
            var t = e.document;
            if ($B.is.chrome) for (var i = t.getElementsByTagName("td"), a = 0, s = i.length; s > a; a++) {
                var o = i[a], n = o.style.borderWidth;
                n && (o.style.borderWidth = n.replace(/0\.\d+/g, 1))
            }
        },
        scrollTopEvent: function () {
            var e = this, t = 0, i = this.$el.find("div.J-readMailArea"), s = this.$el.find("a.i-backTop"), o = !1, n = 300;
            this.scrollTimer = null, s[0] && i.scroll(function () {
                var i = this;
                e.model.get("more_menu") && e.model.get("more_menu").hide(), o || (o = !0, s.fadeIn(0)), clearTimeout(e.scrollTimer), e.scrollTimer = setTimeout(function () {
                    t = a(i).scrollTop() || 0, t > 0 && "none" === s[0].style.display && s.fadeIn(0), 0 === t && (s.fadeOut(n), e.scrollTimer = null, o = !1)
                }, n)
            }), s.bind("click", function () {
                var e = this;
                i.animate({ scrollTop: 0 }, n), setTimeout(function () {
                    a(e).fadeOut(n)
                }, n)
            })
        },
        loadScript: function (e) {
            var t = e.doc || document, i = t.createElement("script");
            i.src = e.src + "?sid=" + top.$App.getSid(), t.getElementsByTagName("body")[0].appendChild(i)
        },
        readMailError: function (e, t) {
            i.UI.TipMessage.hide(), t && $App.close(), e && "FA_INVALID_SESSION" === e.code ? top.$App.showSessionOutDialog() : $Msg.alert("读取信件异常，请稍后再试。")
        },
        postByFrame: function (e, t, i, s) {
            function o() {
                t.unbind("load", arguments.callee);
                var e = "";
                try {
                    e = t[0].contentWindow.document.documentElement.innerHTML
                } catch (i) {
                }
                s && s(e), n.remove()
            }

            i = $Url.getQueryObj(e), e = e.replace(/sid=.+?[&$]/, "");
            var n = a("<form method='post' action='" + e + "'  target='" + t.attr("name") + "'></form>".format([e])).appendTo(document.body);
            for (var r in i) {
                var l = document.createElement("input");
                l.name = r, l.type = "hidden", l.value = i[r], n.append(l)
            }
            t.load(o);
            try {
                n[0].submit()
            } catch (c) {
                t.unbind("load", o), t.load(function () {
                    t.unbind("load", arguments.callee), t.load(o), n[0].submit()
                }), t.attr("src", top.stylePath + "/empty.htm")
            }
        },
        isRenderDiscuss: function (e, t) {
            return e ? 5 != e.fid && 68 != e.logoType && 2 != e.logoType && 66 != e.logoType && 67 != e.logoType && 2 != e.logoType && 1 != e.subscriptionFlag && "1000011" != e.sendId && "1000010" != e.sendId && "1000006" != e.sendId && "1000007" != e.sendId && "1000001" != e.sendId && "1000009" != e.sendId && "1000008" != e.sendId && "1000013" != e.sendId && "1000014" != e.sendId && "1010001" != e.sendId && "1010002" != e.sendId && "1010003" != e.sendId && "1010004" != e.sendId && "1010005" != e.sendId && "1010006" != e.sendId && "1010007" != e.sendId && "1010101" != e.sendId && 1 != e.billFlag ? '<div id="discuss" style="overflow:scroll;"><div mid=' + t + " querymid=" + t + '><div class="subinfo" load="true"><div class="subinfo-box"><div class="subinfo-nav"><a href="javascript:;"><i class="icons i-comment"></i>评论<var class="discussNum"></var></a><span class="v-line"></span><a href="javascript:;"><i class="icons i-laud"></i>赞<var class="like"></var></a></div><div class="subinfo-com"style="display:none"><i class="i-arr-up"></i><div class="subinfo-main"><div class="subinfo-com-list"style="display:none"></div><div class="modBox new-quick-reply clearfix"><div class="readMailReplyMes-w"><textarea class="readMailReplyMes" style="color:#000;" placeholder="写下你的评论，Enter键确认" maxlength="255"></textarea></div><div class="btnBox btnNewGreen disscuss icoG">评论</div></div></div></div></div></div></div></div>' : "" : void 0
        },
        render: function (e) {
            var t = this, s = this.model.get("mid"), o = this.model.get("guid"), n = this.model.get("readTime");
            if (!e) {
                i.UI.TipMessage.show("正在加载...", { after: 2e3 }), window.simpleMode && window.simpleMode() && (t.template.readmailbody = t.template.readmailbody.replace('class="fontZoom"', 'class=""'));
                var r = t.model.get("mailListData"), l = t.model.get("currFid"), c = l, d = $App.getMailDataByMid(s), p = t.template.readmailbody, m = {
                    mid: s,
                    mailListData: r,
                    fid: c,
                    mailData: d
                };
                t.readmailcontentview.options = m;
                var u = {
                    mid: s,
                    contactStyle: $App.isNewWin() || "top" == $App.getLayout() ? 'style="display:none"' : 'style="right:0px;z-index:9"',
                    discuss: t.isRenderDiscuss(r, s),
                    quickReplyHtml: t.getQuickReplyHtml(),
                    mailContentHtml: ""
                }, h = $T.Utils.format(p, u);
                a(t.el)[0].innerHTML = h, function () {
                    var e = $App.getAd("web_148"), i = e.content;
                    i && a(t.el).find("#readMailAdment").show().html(i)
                }(), "list" != top.$App.getLayout() && a("#toolbar_" + s).parent().remove(), i.Logger.getDefaultLogger().timeStart("view:readMessage");
                var f = t.readmailcontentview.getMailContentIframe(s, !0, null, o, n), g = this.model.getAttrObj(f);
                if (a.browser.msie && (!document.documentMode || document.documentMode <= 7)) var v = document.createElement("<iframe name='" + g.name + "'' />"); else var v = $App.getView("tabpage").getFrame("about:blank");
                var b = g.src;
                delete g.src, a(v).attr(g), a(t.el).find("#contentText div").empty().append(v);
                var y = !1;
                try {
                    !a.browser.msie && window.PreloadMailData && s == window.PreloadMailData.omid && (v.contentWindow.document.open(), v.contentWindow.document.write("<script>document.domain=window.location.host.match(/[^.]+.[^.]+$/)[0];</script><body>" + window.PreloadMailData.html.content + "</body>"), v.contentWindow.document.close(), y = !0)
                } catch (w) {
                    console.error(w.toString())
                }
                if (!y) {
                    var _ = setTimeout(function () {
                        i.Logger.sendClientLog({
                            level: "ERROR",
                            name: "HttpClient",
                            errorMsg: "view:readMessage LongTimeNoResponse",
                            url: b
                        }), i.UI.TipMessage.showSwitch("view:readMessage")
                    }, 1e4);
                    t.postByFrame(b, a(v), g, function () {
                        clearInterval(_)
                    })
                }
                this.initMailHeaderEvent(), this.initMailContentEvent();
                t.$el.find("div.J-readMailArea");
                i.Timing.setInterval("topList", function () {
                    "top" == $App.getLayout() && $App.getMailboxView() && $App.getMailboxView().listView && $App.getMailboxView().listView.onResize()
                }, 1e3), setTimeout(function () {
                    a.browser.msie || window.PreloadMailData && s == window.PreloadMailData.omid && (v.contentWindow.letterInfo = window.PreloadMailData, readMailReady(v.contentWindow, "json", window.PreloadMailData), readMailReady(v.contentWindow, "domready"), i.RichMail.API.call("mbox:updateMessagesStatus", {
                        ids: [s],
                        type: "read",
                        value: 0
                    }, function () {
                    }))
                }, 10)
            }
            $App.once("ContactsDataChange", function (e) {
                $App.isReadMail() && (t.model.get("mid").indexOf($App.getCurrentTab().name) >= 0 ? t.render() : $App.clearTabCache("readmail_" + t.model.get("mid")))
            })
        },
        hoverImage: function () {
            var e = this.model.get("mid"), t = a("#mid_" + e)[0].contentWindow.document, i = a(t.body).closest("html");
            new M2012.ReadMail.Image.View({ doc: t }).on("zoomIn", function () {
                i.css("overflowY", "auto")
            }).on("zoomOut", function () {
            }).on("zoomNone", function () {
                i.css("overflowY", "hidden")
            })
        },
        getNewWinData: function (e) {
            var t = this;
            this.model.getDataSource(function (a) {
                var s = a.omid, o = "" == a.subject ? "(无)" : a.subject, n = t.getSaveLogo(a), r = {
                    dataSource: a,
                    mid: s,
                    titleIco: t.getTitleIco(s),
                    titleColor: t.getColor(s),
                    title: i.Text.Utils.htmlEncode(o),
                    fromHtml: t.getReceiverHtml("发件人", a.account, {
                        agent: t.getAgentHtml(a),
                        strokeVIcon: n.strokeVIcon
                    }),
                    toHtml: t.getReceiverHtml("收件人", a.to),
                    ccHtml: t.getReceiverHtml("抄　送", a.cc),
                    bccHtml: t.getReceiverHtml("密　送", a.bcc),
                    dateHtml: t.getDateHtml(a),
                    attachHtml: t.getAttachHtml(a),
                    mailContentHtml: t.readmailcontentview.getMailContentIframe(s),
                    strokeSaveTips: n.strokeSaveTips
                };
                e && e(r)
            })
        },
        onErrorCodeLinkClick: function () {
            var e = top.getRootPath() + "/html/newwinreadmail.html?t=newwin&sid={0}&mid={1}&messycode=1";
            window.open($T.Utils.format(e, [sid, $App.getCurrMailMid()]))
        },
        showOriginalLetter: function () {
            var e = "/RmWeb/view.do?func=mbox:getMessageData&mode=text&part=0&sid={0}&mid={1}";
            window.open($T.Utils.format(e, [sid, $App.getCurrMailMid()])), BH("toolbar_mailcode")
        },
        onExportMailClick: function () {
            var e = getDomain("wmsvrPath2"), t = e + "/mail?func=mbox:downloadMessages&sid={0}&mid={1}";
            window.open($T.Utils.format(t, [sid, $App.getCurrMailMid()])), BH("toolbar_export")
        },
        onMoreBtnClick: function (e) {
            var t = a(e.target), i = this, s = t.offset(), o = this.model.get("more_menu"), n = $App.getCurrMailMid() || null, r = n ? Boolean($App.getMailDataByMid(n) && $App.getMailDataByMid(n).denyForward) : !1, l = [{
                text: "导出邮件",
                onClick: i.onExportMailClick
            }, { text: "显示邮件原文", onClick: i.showOriginalLetter }, { text: "邮件有乱码？", onClick: i.onErrorCodeLinkClick }];
            r && (l = [{ text: "显示邮件原文", onClick: i.showOriginalLetter }, {
                text: "邮件有乱码？",
                onClick: i.onErrorCodeLinkClick
            }]), o ? o.isHide() ? o.show() : o.hide() : (o = M2012.UI.PopMenu.create({
                items: l,
                width: 126,
                left: s.left - 102,
                top: s.top + 26,
                hideInsteadOfRemove: !0
            }), this.model.set("more_menu", o))
        },
        backupMail: function () {
            var e = this;
            $App.trigger("mailCommand", {
                command: "backupMail", mids: [$App.getCurrMailMid()], callback: function () {
                    e.onNoteOrDevSave("bakDisk")
                }
            }), BH("toolbar_backupMailSingle")
        },
        mail139Pocket: function () {
            $App.trigger("mailCommand", {
                command: "mail_139pocket",
                mids: [$App.getCurrMailMid()],
                callback: function () {
                }
            }), BH("toolbar_139pocket")
        },
        toogleIconsDesc: function () {
            var e = this.$el.find(".J_iconDesc"), t = this.$el.find("#readMailIcons"), i = this.$el.find(".J_toggleTriangle").find("i");
            e.is(":visible") ? (e.hide(), i.removeClass("g-up").addClass("g-down"), t.css("bottom", "13px")) : (e.show(), i.removeClass("g-down").addClass("g-up"), t.css("bottom", e.height() + 13 + "px"))
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.Model
function (e, t, i) {
    i.namespace("M2012.ReadMail.Model", Backbone.Model.extend({
        defaults: {
            fid: null,
            mid: null,
            win: !1,
            currFid: null,
            el: null
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.View", s.extend({
        initialize: function () {
            return this.model = new M2012.ReadMail.Model, s.prototype.initialize.apply(this, arguments)
        }, filterSubject: function (e) {
            return "" == e && (e = "(无)"), e = e.replace(/(&<{)|(}>&)/g, "")
        }, callReadMail: function (e, t, i, a) {
            function s(i) {
                if (i.view.model.get("mailListData")) o(i); else {
                    var a = [e];
                    $RM.getMessageInfo(a, function (e) {
                        if ("S_OK" == e.code && e["var"]) {
                            var a = e["var"][0];
                            d.mailData = a, n.model.set(d), i = n.render(), o(t ? !1 : i)
                        }
                    })
                }
            }

            function o(e) {
                if (e) {
                    var t = !1;
                    a && a.silence && (t = !0, n.model.silence = !0), $App.showPage({
                        name: e.name,
                        view: e.view,
                        silence: t
                    }), t || $App.setTitle(e.subject)
                }
            }

            var n = this, r = !1, t = t || !1, i = i, l = "", c = $App.getMailboxView().model.get("isSearchMode");
            (c || a && a.searchMode) && (i = 0, r = !0), a && a.source && (l = a.source);
            var d = { mid: e, win: t, currFid: i, searchMode: r, source: l, guid: a.guid, readTime: a.readTime };
            a && a.mailData && (d.mailData = a.mailData), n.model.set(d);
            var p;
            if ($App.isSessionMode() || a.subscribeSession) a.subscribeSession && n.model.set("subscribeSession", !0), top.Package.require("readmail_ext", function () {
                p = n.render(), s(p), a && (a.returnValue = p)
            }); else if (p = n.render(a.subscriptionFlag), s(p), t || "" != l) return p
        }, render: function (e) {
            var t = this, i = t.model.get("win"), s = t.model.get("mid"), o = t.model.get("fid"), n = t.model.get("el"), r = t.model.get("currFid"), l = t.model.get("searchMode"), c = t.model.get("source"), d = t.model.get("guid"), p = t.model.get("readTime");
            null == n && (n = "");
            var m = {}, u = $App.getMailDataByMid(s) || t.model.get("mailData"), h = this.model.get("subscribeSession");
            if (!i && "interface" != c && u) {
                var f = !1;
                if (r || (r = $App.getCurrentFid()), l && (r = 0, o = 0), u && u.mailSession && $App.isSessionMode() && $App.isSessionFid(r) ? f = !0 : h && (f = !0), f && u.mailNum > 1) {
                    BH("cMail_read");
                    var g = new M2012.ReadMail.Conversation.View({ el: n, subscribeSession: h, mainView: this });
                    g.model.set({
                        mid: s,
                        mailListData: u,
                        currFid: r,
                        sessionInterface: f,
                        guid: d,
                        readTime: p
                    }), $App.registerView("readSessionMail", g), m.name = "readmail_" + s, m.view = g, m.subject = t.filterSubject(u.subject)
                } else {
                    var v;
                    if (window.READMAIL_PRELOAD && window.READMAIL_PRELOAD.indexOf(s) >= 0) {
                        var b = $App.getTabByName("readmail_" + s);
                        b && (v = b.view, setTimeout(function () {
                            var e = document.getElementsByName("mid_" + s)[0];
                            e.style.height = e.contentWindow.document.documentElement.scrollHeight + "px"
                        }, 200))
                    }
                    if (!v) {
                        var y = $App.getTabByName("readmail_" + s);
                        y && a(y.view.el).off(), v = new M2012.ReadMail.Normal.View({ el: n, subFlag: e, mainView: this })
                    }
                    v.model.set({
                        mid: s,
                        mailListData: u,
                        currFid: r,
                        sessionInterface: f,
                        guid: d,
                        readTime: p
                    }), m.name = "readmail_" + s, m.view = v, m.subject = t.filterSubject(u.subject)
                }
            }
            if (i || "interface" == c || !u) {
                var v = new M2012.ReadMail.Normal.View({ el: n, subFlag: e, mainView: this });
                v.model.set({
                    mid: s,
                    mailListData: null,
                    win: !0,
                    currFid: 0,
                    source: c
                }), m.name = "readmail_" + s, m.view = v, m.subject = ""
            }
            this._readMailNormalView = v, this._readMailSessionView = g;
            var w = {};
            return u && (w = a.extend({}, u.flags, {
                billFlag: u.billFlag,
                subscriptionFlag: u.subscriptionFlag,
                mailFlag: u.mailFlag,
                rcptFlag: u.rcptFlag
            })), $App.trigger("readmail", { mid: s, fid: r, flags: w }), m
        }, disposeView: function () {
            this._readMailNormalView && this._readMailNormalView.undelegateEvents(), this._readMailSessionView && this._readMailSessionView.undelegateEvents()
        }
    }))
}(jQuery, _, M139),

//设置部分事件
$(function () {
    function e(e) {
        $.each(e, function (t) {
            $App.validateTab("readmail_" + e[t])
        })
    }

    window.readMailReady = function (e) {
        var t, i = arguments, a = /&guid=([0-9]*)/, s = /readTime=([0-9]*)/, o = e.location.href.match(a) ? e.location.href.match(a)[1] : "blank", n = e.location.href.match(s) ? e.location.href.match(s)[1] : new Date;
        if (3 === i.length && "json" === i[1]) {
            debugger;
            if (i[2].code && -1 == i[0].location.href.indexOf("isReload=true")) return i[0].location.href = i[0].location.href + "&isReload=true", void top.M139.Logger.sendClientLog({
                level: "ERROR",
                name: "ReadMessagesLoadError",
                url: i[0].location.href,
                errorMsg: "读信页加载失败再试一次"
            });
            i[2].code && "S_OK" != i[2].code && (M139.UI.TipMessage.showRetry(function (e) {
                t = e.location.href.match(/mid=(.+?)[&$]/)[1], $App.readMail(t)
            }, this, [i[0]]), top.M139.Logger.sendClientLog({
                level: "ERROR",
                name: "ReadMessages Error",
                url: i[0].location.href,
                errorMsg: "读信页加载失败"
            })), $App.trigger("letterInfoReady", i[2]), $App.trigger("letterInfoReady_global"), i[2] && i[2].omid && (t = i[2].omid), "list" === $App.getLayout() && t && !$App.isSessionMid(t) && setTimeout(function () {
                $App.trigger("letterInfoReady_" + t, i[2])
            }, 1500)
        }
        if (2 === i.length && "domready" === i[1] && (M139.Logger.getDefaultLogger().timeEnd("view:readMessage"), $App.trigger("letterDomReady", i[0]), o && n)) {
            var r = (new Date).getTime() - n, l = ["readmail", o, "S_OK", r];
            top.window.sendUData("webp_readmail_loaded", l)
        }
        try {
            e.alert = function () {
                setTimeout(function () {
                    var t = (e.document.documentElement || e.document.body).innerHTML, i = t.indexOf("alert");
                    i > -1 && (i = Math.max(0, i - 50), t = t.substr(i, 100)), M139.Logger.sendClientLog({
                        level: "ERROR",
                        name: "ReadMailXSS",
                        account: e.letterInfo && e.letterInfo.account,
                        subject: e.letterInfo && e.letterInfo.subject,
                        url: e.location.href,
                        content: encodeURIComponent(t)
                    })
                }, 2e3)
            }
        } catch (c) {
        }
        setTimeout(function (e) {
            $(".J-readMailArea:visible .autofocus", top.document).focus()
        }, 500)
    },
    $App.on("readmailControl", function (t) {
        var i = $App.getCurrentTab().name.indexOf("readmail") > -1;
        if (t) {
            var a = t.command, s = t.mids;
            "move" != a && "delete" != a || t.sessionIds && t.sessionIds.length > 0 && /readmail/gi.test($App.getCurrentTab().name);
            var o, n = ["starFlag", "priority", "read", "taskFlag"], r = !1;
            s && (t = t.args, "mark" == a && $.inArray(t.type, n) > -1 && (i ? (t.sessionIds && t.sessionIds[0] && (o = t.sessionIds[0]), "starFlag" == t.type && $App.trigger("markstar", {
                mid: s[0],
                sessionId: o,
                value: t.value
            }), "priority" == t.type && $App.trigger("mailimportant", {
                mid: s[0],
                sessionId: o,
                value: t.value
            }), "read" == t.type && $App.trigger("mailread", {
                mid: s[0],
                sessionId: o,
                value: t.value
            }), "taskFlag" == t.type && $App.trigger("marktask", {
                mid: s[0],
                sessionId: o,
                value: t.value
            })) : r = !0), "tag" == a && i && $App.trigger("mailtagschange", {
                mids: s,
                labelId: t.labelId
            }), "tag" != a || i || (r = !0), r && e(s))
        }
        $("#listremark").remove()
    }),
    $App.on("readMaiDataChange", function (t) {
        var i, a, s = { mark: !0, tag: !0 };
        t && (i = t.command, a = t.mids), i && s[i] && a && e(a)
    }),
    $App.on("readmail", function (e) {
        e.type && "split" == e.type && e.mid && $App.closeTab("readmail_" + e.mid)
    }),
    $App.on("removeTag", function (t) {
        t.mids && e(t.mids)
    }),
    $App.on("mailimportant", function (e) {
        try {
            var t = $("#readmail_" + e.mid);
            0 == t.find(".i_exc").length && 1 == e.value && t.find("h2").prepend('<i class="i_exc mr_5"></i>'), 5 == e.value && t.find(".i_exc").remove()
        } catch (e) {
        }
    });
    try {
    } catch (t) {
    }
}),

//M2012.ReadMail.View.ReadMailContent
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.View.ReadMailContent", s.extend({
        el: "",
        template: {
            quote: ['<p class="pt_10 pl_5 mb_10 showyi" >', '<a href="javascript:void(0)" id="quote" hidefocus="true" style="text-decoration:none;color:#666;">显示历史邮件 <i class="i_3trid"></i></a>', "</p>"],
            sessionStyle: ['<style type="text/css">', ".showyi a{text-decoration:none;color:#666;font-size:12px;}", ".i_3tridd{display:inline-block;width:0;height:0;overflow:hidden;line-height:0;font-size:0;vertical-align:middle;border-bottom:5px solid #666666;border-top:0 none;border-left:5px solid transparent;border-right:5px solid transparent;_color:#FF3FFF;_filter:chroma(color=#FF3FFF);}", ".i_3trid{display:inline-block;width:0;height:0;overflow:hidden;line-height:0;font-size:0;vertical-align:middle;border-top:5px solid #666666;border-bottom:0 none;border-left:5px solid transparent;border-right:5px solid transparent;_color:#FF3FFF;_filter:chroma(color=#FF3FFF);}", "</style>"].join("")
        },
        getMailContentIframe: function (e, t, i, a, s) {
            var e = e || this.options.mid, o = t ? this.getNewMailContentUrl(e, i, a, s) : this.getMailContentUrl(e), n = "<iframe name='{1}' rel='' id='{1}' src='{0}' frameborder='0' height='160' style='width:100%'></iframe>";
            return $T.Utils.format(n, [o, "mid_" + e])
        },
        detactAttachPlayerMark: function (e) {
            e && 0 !== a(e).find(".inserted_Mark").length && (top.loadCSS("module/atta/in_mail_atta_preview.css", e), top.loadScript(top.getRootPath() + "/js/packs/libs.pack.js", e), top.loadScript(top.getRootPath() + "/js/plugin/player.js", e), top.loadScript(top.getRootPath() + "/js/richmail/readmail/initReadMailAttachMedia.js", e))
        },
        mailDomReady: function (e, s) {
            function o() {
                return Math.max(a(r).find("body").height(), a(r).find("html").height())
            }

            var n = this, r = s.document, l = e.omid, c = "mid_" + l, d = a($T.Utils.format("iframe[id='{0}']", [c]))[0], p = n.hideQuoteFlag = !1;
            s && /csslink=cov/i.test(s.location.href) && (p = n.hideQuoteFlag = !0), BH("readmail_load"), BH("成功加载读信页"), n.replaceLinksSid(r.links), n.detactAttachPlayerMark(r);
            var m = a("img", r), u = m.length, h = 0;
            setTimeout(function () {
                u > h && n.resize(l)
            }, 5e3), m.each(function () {
                var e = this;
                e.onerror = function () {
                    h++
                }, e.onload = function () {
                    e.onload = null, h++, h >= u && n.resize(l)
                }
            });
            var f = a(r).find("body");
            if (n.initEvents(l, r), new i.Event.GlobalEventManager({ window: s }), $App.showImgEditor(f), $App.isSessionMid($App.getCurrMailMid())) {
                var g = a(r).find("hr[id=replySplit],div[id=reply139content],div[id=isForwardContent],blockquote[id=isReplyContent],div[id=mailcontent],div[id=origbody],blockquote[id=oriMsgHtmlSeperator],div.gmail_extra,div.gmail_quote,div.yahoo_quoted"), v = g[0];
                p = v ? n.hideQuoteFlag = !0 : n.hideQuoteFlag = !1
            }
            if (e.denyForward) {
                var b = top.$App.getLayout();
                n.setDenyCopy(f), "list" == b && a("#toolbar_" + e.omid).find("#btn_forward").remove(), a("#readmail_" + e.omid).find("a[name='tagMenu_read']").remove()
            }
            if (p) {
                var y, w, _, M = n.template.quote.join(""), C = a(r).find("#reply139content"), x = a(r).find("#replySplit"), $ = (a(r).find("div[id=reply139content]"), a(r).find("hr[id=replySplit]"), 0);
                x[0] && !C[0] && (p = n.hideQuoteFlag = !1), v && p && (g.hide(), a(v).before(M), y = a(r).find("#quote"), y.parents(".MsoNormal").css("text-align", "left"), a(r).find("body").append(n.template.sessionStyle), _ = y.offset().top, w = o(), $ = n.setChangeHeight = Math.max(_ + 30, w), $ = Math.max($, 270), y.attr("oldh", $), a(s).load(function () {
                    y.attr("oldh", o)
                }), y.click(function () {
                    if (a(this).html().indexOf("显示") > -1) a(this).html("收起历史邮件 <i class='i_3tridd'></i>"), g.show(), i.Timing.watchIframeHeight(d, 300), BH("cov_showhistorycontent"); else {
                        a(this).html("显示历史邮件 <i class='i_3trid'></i>"), g.hide();
                        var e = a(this).attr("oldh");
                        a(d).contents().height(e), a(d).height(e), i.Timing.watchIframeHeight(d, 300, p), BH("cov_hidehistorycontent")
                    }
                }))
            }
            i.Timing.watchIframeHeight(d, 300, p), setTimeout(function () {
                n.resize(l)
            }, 100), setTimeout(function () {
                n.parentView && n.parentView.resizeSwitchBtn()
            }, 500), setTimeout(function () {
                n.parentView && n.parentView.resizeSwitchBtn()
            }, 3e3), n.parentView && n.parentView.resizeSwitchBtn(), top.$App.off("handlerEditorAt").on("handlerEditorAt", function (i) {
                var s = top.$User.getAccountListArray().join(",").toLowerCase().split(",") || [];
                a(r).find("span.atwho-inserted").each(function () {
                    if (1 == a(this).closest("#reply139content").length) return console.warn && console.warn("is reply..."), !0;
                    var o = a(this).attr("id");
                    if (o) {
                        o = o.split("-")[1];
                        var n = o.trim() + "@" + mailDomain;
                        if (-1 != a.inArray(n, s) || "ateverybody" == o.trim().toLowerCase()) {
                            $Email.getEmail(e.account);
                            t.isFunction(i) && i(this)
                        }
                    } else console.warn && console.warn("not the 139email domain: " + a(this).text())
                })
            }), top.$App.off("showLocationTip").on("showLocationTip", function (e, t) {
                function i(e) {
                    return "color:#444;background:#fff;text-decoration:none;text-align: center;border-radius: 4px;box-shadow: 0 0 5px rgba(0,0,0,0.4);font-size:12px; font-family:'微软雅黑';line-height:24px;height:24px;padding:0 10px 0 28px;text-shadow:none;z-index:100;position: absolute;left:1px;top: " + s() + "px;width: " + e + "px;"
                }

                function s() {
                    var t = a(e).offset().top, i = a(e).height(), s = t + 24 > a(d.contentWindow.document.body).height() ? 0 - i : i;
                    return s
                }

                if (!a(e).find(".readmail_locationTip").length) {
                    var o = a(e).text(), n = (a(e).height(), ""), r = "", l = "position:absolute;left:10px;top:5px;width:12px;height:16px;border:0;";
                    "address" == t ? (r = ["http://map.baidu.com/?newmap=1&ie=utf-8&s=s%26wd%3D", encodeURIComponent(o)].join(""), n = '<a onmouseout="this.style.textDecoration=\'none\';" onmouseover="this.style.textDecoration=\'underline\';" class="readmail_locationTip" href="javascript:;" onclick="top.BH && top.BH(\'readmail_sign_viewMap\');window.open(\'' + r + "','_blank');\" style=\"" + i(90) + '"><img src="/m2015/images/global/i-map.png" style="' + l + '"/>在地图中查看</a>') : "email" == t ? n = '<a onmouseout="this.style.textDecoration=\'none\';" onmouseover="this.style.textDecoration=\'underline\';" class="readmail_locationTip" href="javascript:;" onclick="top.$App.trigger(\'openAddContactsDlg\',this,\'' + o + '\',event)" style="' + i(150) + '"><img src="/m2015/images/global/i-man.png" style="' + l + '"/>将该联系人添加到通讯录</a>' : "mobile" == t && (n = '<a onmouseout="this.style.textDecoration=\'none\';" onmouseover="this.style.textDecoration=\'underline\';" class="readmail_locationTip" href="javascript:;" onclick="top.$App.trigger(\'openSmsDlg\',this,\'' + o + '\')" style="' + i(170) + '"><img src="/m2015/images/global/i-iphone.png" style="' + l + '"/>可能是电话号码,是否拨号？</a>'), n && a(e).append(n)
                }
            }), top.$App.off("openAddContactsDlg").on("openAddContactsDlg", function (t, s, o) {
                function n(e) {
                    for (var t = 0; t < l.length; t++) if (-1 != e.indexOf($Email.getEmail(l[t]))) return $Email.getName(l[t]);
                    return $Email.getName(e)
                }

                var l = [];
                e.account && e.to && (l = [e.account].concat(e.to.split(","))), top.BH && top.BH("readmail_sign_addContact"), new M2012.UI.Dialog.ContactsEditor({
                    name: n(s),
                    email: s.trim()
                }).render().on("success", function () {
                    var e = a(r).find("body div[id='signContainer']").find("#forCard");
                    e.removeAttr("onmouseover"), e.removeAttr("onmouseout"), top.$App.trigger("hideCardAddrTips")
                }), i.Event.stopEvent(o)
            }), top.$App.off("openSmsDlg").on("openSmsDlg", function (e, t) {
                var a = top.$Msg.confirm("是否将该号码通过短信发送至您的手机？", function (e) {
                    top.BH && top.BH("readmail_sign_dialTelephone"), e.cancel = !0;
                    var s = "/mw2/sms/sms?func=sms:sendSysSms&sid=" + top.$App.getSid() + "&rnd=" + Math.random(), o = ["<object>", '<int name="type">2</int>', '<int name="attr">', t, "</int>", "</object>"].join("");
                    i.RichMail.API.call(s, o, function (e) {
                        return e.responseData ? "S_OK" == e.responseData.code ? (top.M139.UI.TipMessage.show("发送成功", { delay: 2e3 }), void (a.close && a.close())) : void ("WAPSEND_LIMIT" == e.responseData.code && (a.close && a.close(), top.$Msg.confirm("操作过于频繁，请稍后再试。", {
                            icon: "i_warn",
                            buttons: ["确定"],
                            dialogTitle: "发送确认"
                        }))) : void 0
                    })
                }, { dialogTitle: "发送确认", buttons: ["确定", "取消"], icon: "warn" })
            }), top.$App.off("hideLocationTip").on("hideLocationTip", function (e) {
                var t = e.toElement || e.relatedTarget;
                if (!a(t).closest("a").hasClass("readmail_locationTip")) {
                    var i = e || window.event;
                    a(e.currentTarget || i.srcElement || i.target).find(".readmail_locationTip").remove(), $B.is.ie && $B.getVersion() < 9 && a(e.currentTarget || i.srcElement || i.target).filter(".readmail_locationTip").remove()
                }
            }), setTimeout(function () {
                a(r).find("body div[id='signContainer']").each(function () {
                    function e(n) {
                        for (var c = 0; c < n.length; c++) {
                            var d = n[c], p = "";
                            if (d.hasChildNodes()) e(d.childNodes); else {
                                var m = d.innerText || d.textContent || d.nodeValue;
                                if (m) {
                                    m = o(m.trim());
                                    var u = m.suffix.trim();
                                    t(u) ? p = "address" : i(u) ? p = "mobile" : s(u) && (p = top.Contacts.getModel().isExistEmail(u) ? "email_exist" : "email"), p && ("email_exist" == p ? (r = m.prefix + "<a herf=\"javascript:;\" onclick=\"top.BH && top.BH('readmail_sign_addcontacts');top.$App.show('compose',null,{inputData:{receiver:'" + u + '\'}});" class="readmail_dashed_location" style="position: relative;border-bottom: 1px solid #1a8ad8;color:#1a8ad8;z-index: ' + l-- + ';">' + m.suffix + "</a>", a(d).closest("a.readmail_dashed_location").length || (a(d).parents("span").length && a(d).parents("span").css("cursor", "pointer"), r && a(d).replaceWith(r))) : "email" == p ? (r = m.prefix + '<a id="forCard" herf="javascript:;" onmouseover="top.$App.trigger(\'showLocationTip\',this,\'' + p + "');\" onclick=\"top.BH && top.BH('readmail_sign_addcontacts');top.$App.show('compose',null,{inputData:{receiver:'" + u + '\'}});" class="readmail_dashed_location" style="position: relative;border-bottom: 1px solid #1a8ad8;color:#1a8ad8;z-index: ' + l-- + ';" onmouseout="top.$App.trigger(\'hideLocationTip\',event);">' + m.suffix + "</a>", a(d).closest("a.readmail_dashed_location").length || (a(d).parents("span").length && a(d).parents("span").css("cursor", "pointer"), r && a(d).replaceWith(r))) : (r = m.prefix + "<span onmouseover=\"top.$App.trigger('showLocationTip',this,'" + p + '\');" class="readmail_dashed_location" style="position: relative;border-bottom: 1px dashed #ababab;z-index: ' + l-- + ';" onmouseout="top.$App.trigger(\'hideLocationTip\',event);">' + m.suffix + "</span>", a(d).closest("span.readmail_dashed_location").length || r && a(d).replaceWith(r)))
                                }
                            }
                        }
                    }

                    function t(e) {
                        var t = /(.*省)?.*市.*(区|县|镇|街道)/;
                        return t.test(e)
                    }

                    function i(e) {
                        var t = /(^((\d{11})|(\d{7,8})|(\d{4}|\d{3})-(\d{7,8}))$)/;
                        return t.test(e.trim())
                    }

                    function s(e) {
                        return $Email.isEmail(e)
                    }

                    function o(e) {
                        return e.split(":").length > 1 ? {
                            prefix: e.split(":")[0] + ":",
                            suffix: e.split(":")[1]
                        } : e.split("：").length > 1 ? {
                            prefix: e.split("：")[0] + "：",
                            suffix: e.split("：")[1]
                        } : { prefix: "", suffix: e }
                    }

                    var n = this.childNodes, r = "", l = 99;
                    e(n)
                }), new M2012.ReadMail.VCard.View({ el: a(r), parentView: n.parentView })
            }, 2e3);
            var k = a(r).find("body div[id='signContainer']"), T = k.find("#dzmp_table");
            k.attr("style", ""), k.find("p[class='otherInfo']").css("overflow", ""), T.find("img[class='avatar-ry avatar-image']").css("border-radius", "50%"), T.css({ verticalAlign: "top" }), T.hover(function () {
                var e = a(this).find("#openSign");
                e.show(), e.find("a").show().css("cursor", "pointer").unbind("click").click(function () {
                    top.$App.showVcardEditView(function (e, t) {
                    })
                })
            }, function () {
                var e = a(this).find("#openSign");
                e.hide()
            })
        },
        writeContent: function (e, t) {
            var i = t.document, s = e.omid, o = "mid_" + s, n = (a($T.Utils.format("iframe[id='{0}']", [o]))[0], e.html.content);
            $B.is.webkit && n.indexOf("windowtext") > -1 && (n = n.replace(/windowtext 0.5pt solid/g, "windowtext 1pt solid")), i.write(n), this.mailDomReady(e, t)
        },
        getNewMailContentHtml: function (e, t) {
            var e = e || this.options.mid, s = "mid_" + e, o = a($T.Utils.format("iframe[id='{0}']", [s]))[0];
            i.Iframe.domReady(o, function () {
            }, { checkIframeHealth: !0, query: "letterInfo" })
        },
        getMailContentHtml: function (e, t) {
            var e = e || this.options.mid, s = "mid_" + e, o = a($T.Utils.format("iframe[id='{0}']", [s]))[0];
            i.Iframe.domReady(o, function () {
            }, { checkIframeHealth: !0, query: "writeContent" })
        },
        getNewMailContentUrl: function (e, t, i, a) {
            var s = "/RmWeb/view.do?func=view:readMessage&comefrom=" + $T.Url.queryString("comefrom");
            top.$User.isGrayUser() && (s = s.replace("/RmWeb/", "/RmWeb2/"));
            var o = this, n = o.options.fid;
            if (t && (s += "&csslink=" + t), 0 !== n && (n = n || 1), i) {
                var r = ["readmail", i, "", ""];
                top.window.sendUData("webp_readmail_click", r)
            }
            return this.mainView && this.mainView.model.silence && (s += "&markRead=0"), s = $T.Url.makeUrl(s, {
                sid: $App.getSid(),
                cguid: Math.random(),
                mid: o.options.mid || e,
                callback: "readMailReady",
                fid: n,
                guid: i,
                readTime: a
            })
        },
        getMailContentUrl: function (e) {
            var t = $App.getCurrentFid() || 1, i = top.getRootPath() + "/html/readmailcontent.html?d={0}#mid={1}&fid=" + t;
            return this.options && this.options.isSessionMail && (i += "&t=sessionmail"), $T.Utils.format(i, [top.$App.getSid().substring(0, 20), e])
        },
        replaceLinksSid: function (e) {
            for (var t = "", i = 0, a = e.length; a > i; i++) {
                t = e[i];
                try {
                    0 != t.href.indexOf("javascript:") && (t.target = "_blank"), t.href.indexOf("$sid") >= 0 && (t.href = t.href.replace("$sid", top.$App.getSid()))
                } catch (s) {
                }
            }
        },
        initialize: function (e) {
            return this.options = e || {}, this.model = this.options.model, this.parentView = this.options.parentView, s.prototype.initialize.apply(this, arguments)
        },
        initEvents: function (e) {
            var t = this;
            this.changeFontSize(e), $App.on("mailResize", function (i) {
                i && i.mid == e && t.resize(e)
            })
        },
        changeFontSize: function (e) {
            function t(e, t) {
                var i = t, a = p.length;
                if ("increase" == e) {
                    for (var s = 0; a >= s; s++) if (t < p[s]) {
                        i = p[s];
                        break
                    }
                } else for (var s = a - 1; s >= 0; s--) if (t > p[s]) {
                    i = p[s];
                    break
                }
                return i
            }

            function i(e) {
                a(l).height(e), a("#" + n).height(e)
            }

            function s(e) {
                return parseInt((e.css("font-size") || "14px").replace("px", ""))
            }

            var o = this, n = "mid_" + e, r = document.getElementById(n).contentWindow.document, l = r.body, c = a(l).find("*"), d = a("#fontzoom_" + e).find("a"), p = [12, 14, 16, 18, 20, 22, 24, 32], m = a(l).height();
            d.click(function () {
                var n = a(this).attr("rel");
                a(l).attr("prevHeight", a(l).height());
                var r = a(l).css("font-size") || "14px";
                parseInt(r.replace("px", ""));
                if ("close" == n) return void a(this).parent().remove();
                "normal" == n && i(a(l).attr("orignheight") || m), "reduce" == n && i(a(l).attr("prevHeight"));
                var d = s(a(l)), p = "";
                a(l).attr("data-size") || a(l).attr("data-size", d + "px"), "normal" == n ? a(l).css("font-size", a(l).attr("data-size")) : (p = t(n, d) + "px", a(l).css({ "font-size": p })), c.length > 0 && c.each(function (e) {
                    if (!/br|button|hr|img|input|link|style|script/i.test(a(this)[0].tagName)) {
                        var i = s(a(this)), o = s(a(this).parent()), r = i, l = !0;
                        i == o && (l = !1), !a(this).attr("data-size") && l && a(this).attr("data-size", i + "px"), "normal" == n ? a(this).attr("data-size") ? r = a(this).attr("data-size") : "" : l && (r = t(n, i) + "px"), a(this).css({
                            "font-size": r,
                            "line-height": "1.6"
                        })
                    }
                }), o.resize(e)
            })
        },
        createScrollBar: function () {
            var e = this, t = e.jContainer;
            if (t) {
                var i = $App.getLayout();
                "left" == i && t.css("position", "relative"), e.scrollBarView = new M2012.ReadMail.ScrollBar.View({
                    container: t,
                    widthEl: t,
                    contentIframe: t.find("iframe")[0]
                }), e.scrollBarView.render(), "top" != i && "list" != i || e.scrollBarView.$el.css("bottom", "3px")
            }
        },
        setDenyCopy: function (e) {
            e.bind("contextmenu copy", function () {
                return top.M139.UI.TipMessage.show("禁止转发的邮件不支持内容复制！", { delay: 2e3 }), !1
            })
        },
        resize: function (e) {
            var t = this, i = "mid_" + e, s = this.hideQuoteFlag ? 45 : 0, o = document.getElementsByName(i);
            o && o.length > 0 && a(o).each(function (o, n) {
                var r = n.contentWindow;
                "list" == $App.getLayout() ? t.jContainer = a("#toolbar_" + e).closest(".inboxflOff") : "left" == $App.getLayout() ? t.jContainer = a(".new-main-right-inner:visible") : t.jContainer = a("#toolbar_" + e).closest("#readWrap");
                var l = t.jContainer;
                s > 0 && $B.is.ie && 8 == $B.getVersion() && (s = 30);
                try {
                    if (!r) return;
                    var c, d = l.find("div.cov-list:eq(0)");
                    c = d.length > 0 ? d : l.find("div.J-readMailArea:eq(0)");
                    var p = $App.getBodyHeight();
                    if ("top" == $App.getLayout() || "left" == $App.getLayout()) c.height(p - l.find("#readWrap").offset().top - 4), l.height(p - 107); else {
                        l.height(p - 107);
                        var m = p - 155;
                        c.height(m)
                    }
                    var u = r.frameElement || document.getElementById(i), h = r.document.documentElement || document.getElementById(i).contentWindow.document.body;
                    if (!h) return;
                    if (h.scrollHeight > u.offsetHeight && (u.style.height = (h.scrollHeight - s).toString() + "px"), 0 === h.scrollHeight && 0 === u.offsetHeight && (u.style.height = "600px"), d.length > 0) return;
                    t.scrollBarView ? t.scrollBarView.update() : t.createScrollBar()
                } catch (f) {
                    console.log(f)
                }
            })
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.View.FilePreview
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.View.FilePreview", s.extend({
        el: "body",
        template: {
            thumbnails_li: ["<li>", "<div class='imgInfo'>", "{item}", "<dl>", "<dt><span class='attrlist-title' title='{fileName}' >{fileName}</span>({fileSize})</dt>", "<dd><a href='{downLoad}' bh='readmail_download'>下载</a>{preView}<a href='javascript:;' class='sdLink' data-id='{fileId}' bh='readmail_savedisk'>存彩云网盘</a></dd>", "</dl>", "</div>", "</li>"],
            thumbnails: ["<div class='attrBody' {display} id='{id}'>", "<div class='attrAll'>", "<span class='fr attrall-title' id='select_attach' style='display:none'></span>", "<span><strong>附件图片预览</strong>(共{num}个)</span>", "</div>", "<ul class='attrList'>", "{liList}", "</ul>", "</div>"],
            notimgItem: ["<span class='imgLink attrico'>", "<i class='{0}'></i>", "</span>"],
            imgItem: ['<img index="{2}" class="imgLink" src="{0}" data-url="{0}" width="58" height="58" title="{1}"  rel="" />'],
            sessionAttach: ['<span class="rMl">附&#12288;件：</span>', '<div class="rMr convattrlist">', '<div id="infoSta" {displayall} class="attachmentAll attachmentAll_on clearfix"><span class="fl">共{num}个附件</span> <span ><a href="{downLoadAll}" class="allgetdown ml_10 fl" bh="{bh_downloadall}">全部下载</a><a href="javascript:;" id="allsavetodisk" style="display: none;" bh="{bh_savediskall}">全部存彩云网盘</a></span><a href="javascript:void(0);" class="attachmentAll_right" data-cmd="operateAttachList"><i class="g-down" id="listUp" style="display:none;"></i><i class="g-up" id="listDown"></i></a></div>', '<ul class="attachmentAll_list">{data}</ul>', "</div>"],
            conversationAttach: ['<div class="covv-accessory">', '<div {displayall}><span>共{num}个附件</span> <span ><a href="{downLoadAll}" bh="{bh_downloadall}">全部下载</a> | <a href="javascript:;" id="allsavetodisk" bh="{bh_savediskall}">全部存彩云网盘</a>{savemcloud}</span></div>', '<ul class="attachmentAll_list">{data}</ul>', "</div>"],
            allMcloudLink: ' | <a href="javascript:;" id="readmail_allsavemcloud" bh="{0}">全部存彩云网盘</a>',
            mcloudLink: ' | <a href="javascript:;" data-mcloudid="{fileId}" bh="{bh_savemcloud}">存彩云网盘</a>',
            mcloudLinkImg: '<a href="javascript:;" data-mcloudid="{fileId}" bh="{bh_savemcloud}">存彩云网盘</a>',
            sessionLi: ['<li index="{index}" f="common"><i class="i_attachmentS" oldClass="i_file_16 {getFileIcoClass}"></i><span title="{fileName}" >&nbsp;{fileName}&nbsp;&nbsp;{fileSize}&nbsp;&nbsp;<a href="{downLoad}" bh="{bh_download}">下载</a>{preView} | <a href="javascript:;" class="sdLink" data-id="{fileId}" data-cmd="saveToDisk" bh="{bh_savedisk}">存彩云网盘</a> {attachEml}  | <a href="javascript:;" class="sdShare" data-fileid="{fileId}">分享</a></span></li>']
        },
        initialize: function () {
            return this.model = new M2012.ReadMail.Normal.Model, top.SiteConfig.colorCloudRelease || (console.log("彩云开关头没打开"), this.template.mcloudLink = "", this.template.mcloudLinkImg = "", this.template.allMcloudLink = ""), s.prototype.initialize.apply(this, arguments)
        },
        showQrcode: function (e) {
            top.BH("readmailShareClick"), top.BH("showShareQcode");
            var t = this, s = e.target, o = a(s).parent("").find("a:eq(0)").attr("href"), n = $Url.getQueryObj(o);
            n.fileId = a(s).attr("data-fileid"), t.model.getAttachShareUrl(n, function (e) {
                var t = e["var"] && e["var"].url;
                top.Package.require("qrcode_ext", function () {
                    new top.M2012.CreateQrcode.View({
                        url: t,
                        target: s,
                        scrollHeight: a(document).scrollTop(),
                        shortShare: !0,
                        subject: n.name,
                        QQFriend_BH: "attachshare-onKeyShare-QQFriend",
                        QQSpace_BH: "attachshare-onKeyShare-QQSpace",
                        SINAWB_BH: "attachshare-onKeyShare-sinaWB",
                        RR_BH: "attachshare-onKeyShare-RR",
                        YDY_BH: "attachshare-onKeyShare-YDY"
                    })
                })
            }), i.Event.stopEvent(e)
        },
        open: function (e) {
            var t = M2012.ReadMail.View.FilePreview.getUrl(e, this.model.get("currFid"));
            window.open(t)
        },
        checkFile: function (e, t) {
            if (t && t > 20971520) return -1;
            var i = /\.(?:doc|docx|xls|xlsx|ppt|pptx|pdf|txt|jpg|jpeg|jpe|jfif|gif|png|bmp|ico|rtf|eml|)$/i, a = /\.(?:rar|zip|7z)$/i, s = /\.(?:mp3)($|\?)/i, o = /\.(?:mp4|flv)($|\?)/i;
            return i.test(e) ? 1 : a.test(e) ? 2 : s.test(e) ? 3 : o.test(e) ? 4 : -1
        },
        getFileIcoClass: function (e, t) {
            return $T.Utils.getFileIcoClass(e, t)
        },
        isRelease: function () {
            return !0
        },
        isPreviewImg: function (e) {
            return /(?:\.jpg|\.gif|\.png|\.ico|\.jfif|\.bmp|\.jpeg|\.jpe)$/i.test(e)
        },
        getImgUrl: function (e, t) {
            var i = "&sid={sid}&mid={mid}&realsize={realsize}&size={size}&offset={offset}&name={name}&type={type}&width={width}&height={height}&quality={quality}&encoding=1", a = top.getProtocol() + location.host + "/RmWeb/mail?func=mbox:getThumbnail" + $T.Utils.format(i, {
                sid: $App.getSid(),
                mid: t,
                size: e.fileSize,
                realsize: e.fileRealSize,
                offset: e.fileOffSet,
                name: e.fileName,
                type: e.type,
                width: 58,
                height: 58,
                quality: 80
            });
            return a
        },
        getThumbnailsHtml: function (e, t, i) {
            for (var a = this, s = a.template.thumbnails.join(""), o = t.length, n = "attach_" + i, r = "", l = [], c = "", d = a.template.thumbnails_li.join(""), p = a.template.notimgItem.join(""), m = a.template.imgItem.join(""), u = (a.template.mcloudLinkImg, a.getDownloadAllUrl(i)), h = 0, f = 0; o > f; f++) {
                var g = t[f], v = !1, b = "", y = a.isPreviewImg(g.fileName);
                y && (v = !0, b = 'index="' + h + '"', c = a.getImgUrl(g, i), h++);
                var w = v ? $T.Utils.format(m, [c, g.fileName, h - 1]) : $T.Utils.format(p, [a.getFileIcoClass(1, g.fileName)]), _ = a.checkFile(g.fileName, g.fileRealSize), M = M2012.ReadMail.View.FilePreview.getDownloadAttachUrl(g, i), C = M2012.ReadMail.View.FilePreview.getUrl({
                    type: "email",
                    downloadUrl: M,
                    contextId: i,
                    fileName: encodeURIComponent(g.fileName),
                    fileSize: g.fileRealSize
                }, a.model.get("currFid")), x = "<a {3} href='{0}' target = '_self' bh='{2}'>{1}</a>", $ = "";
                1 == _ && ($ = $T.Utils.format(x, ["javascript:;", "预览", "readmail_previewattach1", b])), 2 == _ && ($ = $T.Utils.format(x, [C, "打开", "readmail_previewattach2", b])), 3 == _ && (b = "onclick=\"top.M2012.ReadMail.View.FilePreview.playMusic('" + g.fileId + "','" + g.fileName + "','" + M + "');return false;\"", $ = $T.Utils.format(x, ["javascript:;", "播放", "readmail_previewattach1", b])), 4 == _ && ($ = $T.Utils.format(x, ["javascript:;", "播放", "readmail_previewattach1", b]));
                var k = {
                    index: h - 1,
                    item: w,
                    fileId: g.fileId,
                    fileLink: "javascript:;",
                    fileName: $T.Html.encode(g.fileName),
                    fileSize: $T.Utils.getFileSizeText(g.fileRealSize),
                    downLoad: M2012.ReadMail.View.FilePreview.getDownloadAttachUrl(g, i),
                    preView: $,
                    saveWebDisk: "javascript:"
                };
                v && l.push($T.Utils.format(d, k))
            }
            if ("" == l.join("")) return "";
            var T = { display: r, id: n, num: h, liList: l.join(""), downLoadAll: u }, A = $T.Utils.format(s, T);
            return A || ""
        },
        getDownloadAllUrl: function (e) {
            var t = top.getProtocol() + location.host + "/RmWeb/mail?func=mbox:autoPack&sid={0}&mid={1}&taskId={2}&format=zip", i = $T.Utils.format(t, [$App.getSid(), e, Math.ceil(1e4 * Math.random())]);
            return i
        },
        getAllSaveToDiskUrl: function () {
            var e = this, t = e.get("title"), i = e.get("mid"), a = e.getDownloadAllUrl(i), s = /[\\\/:*?"<>|]/g, o = t.replace(s, "_").substring(0, 80) + ".zip";
            e.saveToDiskRequest(a, o)
        },
        getAllSaveToDiskName: function (e) {
            var t = /[\\\/:*?"<>|]/g;
            return (e || "附件").replace(t, "_").substring(0, 80) + ".zip"
        },
        saveToDiskRequest: function (e) {
            top.Package.require("readmail_ext", function () {
                var t = new M2012.UI.Dialog.SaveToDisk({
                    fileSize: e.fileSize,
                    fileName: e.fileName || "附件.zip",
                    downloadUrl: e.url || null,
                    saveToMcloud: e.saveToMcloud || null,
                    isreadmail: !0
                });
                e.saveToMcloud ? t.repareSaveToMcloud().on("success", function () {
                    e.packSave ? BH("readmail_savediskall") : BH("readmail_savedisk")
                }) : t.render().on("success", function () {
                    e.packSave ? BH("readmail_savediskall") : BH("readmail_savedisk")
                })
            })
        },
        initEvents: function (e, t, s) {
            function o(e) {
                for (var t = 0; t < r.length; t++) if (r[t].fileId == e) return r[t]
            }

            for (var n = this, r = e.attachments, l = 0, c = 0, d = r.length; d > c; c++) l += parseInt(r[c].fileRealSize);
            var p = a(this.el).find("ul"), m = a(this.el).find("#allsavetodisk"), u = a(this.el).find("#readmail_allsavemcloud"), h = n.getDownloadAllUrl(t), f = n.getAllSaveToDiskName(e.subject);
            this.mid = t, m.click(function () {
                n.saveToDiskRequest({ url: h, fileName: f, fileSize: l, packSave: !0 })
            }), u.click(function () {
                if (top.mcloudSaving) {
                    a("#icon_mcloudSaving").remove();
                    var e = '<span id="icon_mcloudSaving"><img src="../images/global/load.gif" class="mr_5 ml_5" alt="">正在保存</span>';
                    a(this).parent("div").append(e), top.mcloudSaving = !1
                }
                n.saveToDiskRequest({ url: h, fileName: f, packSave: !0, saveToMcloud: !0 })
            }), p.find("a[data-id]").click(function () {
                var e = a(this).attr("data-id"), i = M2012.ReadMail.View.FilePreview.getDownloadAttachUrl(o(e), t);
                n.saveToDiskRequest({ url: i, fileName: o(e).fileName, fileSize: o(e).fileRealSize })
            }), p.find("a[data-fileid]").click(function (e) {
                n.showQrcode(e)
            }), p.find("a[data-eml]").click(function () {
                top.BH("saveEml");
                var e = a(this).attr("data-eml"), t = {
                    fid: 1,
                    type: 1,
                    mid: n.mid,
                    fileName: o(e).fileName,
                    fileSize: o(e).fileSize,
                    fileOffset: o(e).fileOffSet,
                    encoding: o(e).encoding
                };
                if ("encrymail" == s) var t = {
                    fid: 1,
                    type: 4,
                    fileName: o(e).fileName,
                    fileId: o(e).fileId,
                    encoding: o(e).encoding
                };
                n.model.importEmlAttach(t, function (e) {
                    e && ("S_OK" == e.code && e["var"] ? top.$App.readMail(e["var"]) : i.UI.TipMessage.error("网络异常，稍后再试", { delay: 3e3 }))
                })
            }), p.find("a[data-mcloudid]").click(function () {
                var e = a(this).attr("data-mcloudid");
                if (top.mcloudSaving) {
                    a("#icon_mcloudSaving").remove();
                    var i = '<span id="icon_mcloudSaving"><img src="../images/global/load.gif" class="mr_5 ml_5" alt="">正在保存</span>';
                    a(this).parent("span").parent("li").append(i), top.mcloudSaving = !1
                }
                var s = M2012.ReadMail.View.FilePreview.getDownloadAttachUrl(o(e), t);
                n.saveToDiskRequest({ url: s, fileName: o(e).fileName, saveToMcloud: !0 })
            }), p.find("a[index],img[index]").click(function () {
                var e = a(this).attr("index");
                if ("" != e) if ("undefined" != typeof top.focusImagesView) top.focusImagesView.render({
                    data: n.previewImg,
                    index: parseInt(e)
                }); else {
                    top.M139.registerJS("M2012.OnlinePreview.FocusImages.View", "packs/focusimages.html.pack.js?v=20130603");
                    var t = a.browser.msie && 6 == a.browser.version ? 350 : 50;
                    setTimeout(function () {
                        top.M139.requireJS(["M2012.OnlinePreview.FocusImages.View"], function () {
                            top.focusImagesView = new top.M2012.OnlinePreview.FocusImages.View, top.focusImagesView.render({
                                data: n.previewImg,
                                index: parseInt(e)
                            })
                        })
                    }, t)
                }
            })
        },
        getConversationAttach: function (e, t, i) {
            return this.isSessionMail = !0, this.getSessionAttach(e, t, i)
        },
        getSessionAttach: function (e, t, i) {
            var s = this, o = !!this.isSessionMail, n = s.template.sessionAttach.join(""), r = s.template.sessionLi.join(""), l = (s.template.mcloudLink, s.template.allMcloudLink), c = t.length, d = [], p = [], m = i && $App.getMailDataByMid(i), u = m && m.denyForward ? 1 : 0, h = m && m.flags.encrypted ? 1 : 0;
            $User.isChinaMobileUser() && (top.mcloudSaving = !0);
            for (var f = 0; c > f; f++) {
                var g, v = t[f], b = s.checkFile(v.fileName, v.fileRealSize), y = M2012.ReadMail.View.FilePreview.getDownloadAttachUrl(v, i), w = M2012.ReadMail.View.FilePreview.getUrl({
                    type: "email",
                    downloadUrl: encodeURIComponent(y),
                    contextId: i,
                    fileName: encodeURIComponent(v.fileName),
                    denyforward: u,
                    fileSize: v.fileRealSize,
                    previewFileId: v.fileId
                }, s.model.get("currFid")), _ = "<a href='{0}' target = '{4}' bh='{2}' {3}>{1}</a>", M = "", C = "_blank";
                if (1 == b) {
                    var x = "", $ = w;
                    if (g = o ? "cov_preview" : "readmail_previewattach1", M = " | " + $T.Utils.format(_, [$, "预览", g, x, C]), h && t[f].fileName) {
                        var k = /\.jpg|\.gif|\.png|\.ico|\.jfif|\.bmp|\.jpeg|\.jpe|\.eml$/i.test(t[f].fileName);
                        k && (M = "")
                    }
                }
                if (2 == b && (g = o ? "cov_preview" : "readmail_previewattach2", M = " | " + $T.Utils.format(_, [w, "打开", g, "", C])), 3 == b) {
                    var x = "onclick=\"top.M2012.ReadMail.View.FilePreview.stopPropagation(event);top.M2012.ReadMail.View.FilePreview.playMusic('" + v.fileId + "','" + v.fileName + "','" + y + "');return false;\"", $ = "javascript:void(0);";
                    g = o ? "cov_preview" : "readmail_previewattach1", M = " | " + $T.Utils.format(_, [$, "播放", g, x, ""])
                }
                if (4 == b) {
                    var x = "", $ = w;
                    g = o ? "cov_preview" : "readmail_previewattach1", M = " | " + $T.Utils.format(_, [$, "播放", g, x, C])
                }
                var T = "";
                if (t[f].fileName) {
                    var A = t[f].fileName.match(/\.[^\.]*/g);
                    a.isArray(A) && ".eml" == A[A.length - 1] && (T = '| <a href="javascript:;"  data-eml="' + v.fileId + '"  class="sdLink" bh="">导入并打开</a>')
                }
                var I = {
                    fileId: v.fileId,
                    fileLink: "javascript:;",
                    getFileIcoClass: s.getFileIcoClass(0, v.fileName),
                    fileName: $T.Html.encode(v.fileName),
                    fileSize: $T.Utils.getFileSizeText(v.fileRealSize),
                    downLoad: y.replace("/RmWeb/", "/RmWeb3/"),
                    preView: M,
                    saveWebDisk: "javascript:;",
                    bh_savemcloud: o ? "cov_savetomcloud" : "readmail_savemcloud",
                    bh_download: o ? "cov_download" : "readmail_download",
                    bh_savedisk: o ? "cov_savetodisk" : "readmail_savedisk",
                    attachEml: T
                }, S = s.isPreviewImg(v.fileName);
                S && p.push({
                    imgUrl: s.getImgUrl(v, i),
                    fileName: v.fileName,
                    downLoad: M2012.ReadMail.View.FilePreview.getDownloadAttachUrl(v, i)
                }), d.push($T.Utils.format(r, I))
            }
            s.previewImg = p;
            var D = "readmail_savemcloud";
            l && (o && (D = "cov_allsavetomcloud"), l = $T.Utils.format(l, [D]));
            var B = $T.Utils.format(n, {
                num: c,
                mt_4: c > 1 ? "mt_4" : "",
                downLoadAll: s.getDownloadAllUrl(i),
                data: d.join(""),
                displayall: c > 1 ? "" : 'style="display:none"',
                bh_downloadall: o ? "cov_alldownload" : "readmail_downloadall",
                bh_savediskall: o ? "cov_allsavetodisk" : "readmail_savediskall"
            }), m = i && $App.getMailDataByMid(i);
            return u && (B = B.replace(/(全部下载|下载|存彩云网盘|\|)/g, "")), B
        }
    }, {
        getUrl: function (e, t) {
            var i = (top.getDomain("webmail"), $App.getSid()), a = "skin_green", s = top.getDomain("rmResourcePath"), o = top.getDomain("diskInterface"), n = top.getDomain("disk"), r = $User.getUid() || null, l = top.getRootPath() + "/html/onlinepreview/online_preview.html?fi={fileName}&mo={uid}&dl={downloadUrl}&sid={sid}&id={contextId}&rnd={rnd}&src={type}&loginName={loginName}&fid={fid}&comefrom={comefrom}&composeId={composeId}&previewFileId={previewFileId}";
            l += "&skin={skin}", l += "&resourcePath={resourcePath}", l += "&diskservice={diskService}", l += "&filesize={fileSize}", l += "&disk={disk}", l += "&callback={callback}", l += "&denyforward={denyforward}";
            var c = "";
            return -1 != $T.Url.getFileExtName(e.fileName).indexOf("eml") && (c = "previewEmlReady"), l = $T.Utils.format(l, {
                uid: r,
                sid: i,
                rnd: Math.random(),
                skin: a,
                resourcePath: encodeURIComponent(s),
                diskService: encodeURIComponent(o),
                type: e.type || "attach",
                fileName: encodeURIComponent(e.fileName),
                downloadUrl: encodeURIComponent(e.downloadUrl),
                contextId: e.contextId || "",
                fileSize: e.fileSize || "",
                encoding: 1,
                disk: n,
                loginName: $User.getLoginName(),
                fid: t,
                comefrom: e.comefrom || 54,
                composeId: e.composeId || "",
                denyforward: e.denyforward || 0,
                previewFileId: e.previewFileId,
                callback: c
            }), l.replace(/'/g, "")
        }, playMusic: function (e, t, i) {
            var a = [];
            a[0] = { id: e, url: i, text: t }, top.MusicBox.addMusic(e, a), top.MusicBox.show()
        }, stopPropagation: function (e) {
            e = e || window.event, e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0
        }, getDownloadAttachUrl: function (e, t) {
            var a = top.getProtocol() + location.host + "/RmWeb/view.do";
            return !(window.navigator.userAgent.indexOf("iPad") >= 0 || window.navigator.userAgent.indexOf("iPhone") >= 0) || -1 != e.fileName.indexOf(".") && e.fileName.match(/\.xls|\.xlsx|\.doc|\.docx|\.ppt|\.pptx|\.pps|\.png|\.gif|\.jpg|\.jpeg|\.bmp|\.wav|\.mp3|\.mp4|\.avi|\.3gp|\.mov|\.mpeg|\.mpg|\.txt|\.html|\.htm|\.pdf$/i) ? i.Text.Url.makeUrl(a, {
                func: "attach:download",
                mid: t,
                offset: e.fileOffSet,
                size: e.fileSize,
                sid: top.$App.getSid(),
                type: e.type,
                encoding: e.encoding ? e.encoding : 1
            }) + "&name=" + encodeURIComponent(e.fileName) : "javascript:$Msg.alert('对不起，该类型文件暂不支持下载')"
        }, getPreViewUrl: function (e) {
            if (e) {
                var t = "http://" + location.host + "/RmWeb/view.do";
                return i.Text.Url.makeUrl(t, {
                    func: "attach:download",
                    mid: e.mid,
                    offset: e.offset,
                    size: e.size,
                    sid: $App.getSid(),
                    type: e.attachType || e.type,
                    encoding: e.encode || e.encoding
                }) + "&name=" + encodeURIComponent(e.name)
            }
            return ""
        }
    }))
}(jQuery, _, M139),

//m2012.starOrRemindPopMenu.view
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("m2012.starOrRemindPopMenu.view", s.extend({
        direction: {
            rightBottom: { top: 18, left: -15 },
            rightTop: { top: -10, left: -15 },
            leftBottom: { top: 18, left: -205 }
        },
        funcMap: {
            11: "starClick",
            21: "remindFinished",
            22: "remindSettodo",
            23: "remindSetlater",
            24: "remindSettomorrow",
            25: "remindSetonedays",
            31: "remindBillDay0",
            32: "remindBillDay1",
            33: "remindBillDay2"
        },
        pageStyleHeight: { 3: 2, 1: 15, 2: 28, 32: 1, 12: 5, 22: 8 },
        initialize: function (e) {
            this.options = e || {}, this.render(), this.invertFuncMap = t.invert(this.funcMap)
        },
        initEvents: function () {
            var e = this;
            a(document.body).click(function (t) {
                a(t.target).parents("#starOrRemindPopContainer").length || a(t.target).is("i") || a(t.target).parent().is("[taskDate]") || (e.hideMenu(), e.hideTips())
            }), e.$el.click(function () {
                e.hideTips()
            }), e.$el.find(".setstarlist li").click(function (t) {
                var i = a(t.target).parents("li").attr("order");
                if (i) switch (i) {
                    case "11":
                        e.starClick();
                        break;
                    case "21":
                        e.remindFinished();
                        break;
                    case "22":
                        e.remindSettodo();
                        break;
                    case "23":
                        e.remindSetlater();
                        break;
                    case "24":
                        e.remindSettomorrow();
                        break;
                    case "25":
                        e.remindSetonedays();
                        break;
                    case "31":
                        e.remindBillDays(0);
                        break;
                    case "32":
                        e.remindBillDays(1);
                        break;
                    case "33":
                        e.remindBillDays(2)
                }
            }), e.$el.find("#backToList").click(function (t) {
                BH("mailList_remindSetonedays_back"), e.timeSelectReturn()
            }), e.$el.find("#remindSave").click(function (t) {
                BH("mailList_remindSetonedays_save");
                var i = e.$el.find("#remindDate").data("time");
                if (!i) return e.$el.find("#remindDate").click(), !1;
                var a = e.TimePicker.getData(), s = new Date(i);
                if (s.setHours(a.hour), s.setMinutes(a.minute), s.setSeconds(0), s < new Date) return e.showTips("提醒时间不能早于当前时间", e.$el.find("#remindTime")), !1;
                var o = e.options, n = {
                    content: o.subject,
                    startAndEndTime: a.time,
                    status: o.status,
                    subject: o.subject,
                    time: s.getTime(),
                    mid: o.mid,
                    isAllDay: !0
                };
                "hasremind" != n.status && (n.sms = !1), e.saveMailRemind(n), e.hideMenu()
            })
        },
        render: function () {
            this.$el = a(this.template.container), this.$el.append(this.template.menu), a("body").append(this.$el), this.initEvents()
        },
        initTimePicker: function () {
            var e = this;
            this.$el.find("#remindTime").html(""), this.TimePicker = new M2012.UI.Picker.TimePicker({
                container: this.$el.find("#remindTime"),
                style: "MAIN"
            }), this.$el.find("#remindTime input").click(function () {
                BH("mailList_remindSetonedays_hoverTime")
            }), this.$el.find("#remindTime").click(function (e) {
                a(e.target).is("input") || a(e.target).find("[name=minute]").select()
            }), this.$el.find("#remindDate").off("click");
            var i = this.$el.find("#remindDate").offset().left, s = this.$el.find("#remindDate").offset().top, o = new M2015.UI.Picker.Calendar.create({
                bindInput: this.$el.find("#remindDate"),
                value: new Date((new Date).getTime()),
                dy: s,
                dx: i - 62,
                stopPassDate: !0
            });
            o.on("select", function (i) {
                if (BH("mailList_remindSetonedays_clickCal"), t.isNaN(i.value.getTime())) return !1;
                var a = i.value.format("MM月dd日");
                e.selectedDate = i.value, e.$el.find("#remindDate").data("time", i.value.getTime()), e.$el.find("#remindDate").val(a + " " + e.getDayOfWeek(i.value))
            })
        },
        setPosition: function (e, t) {
            e = e || this.$el, e = a(e);
            var i, s, o = t || this.options, n = 0, r = 0, l = 0, c = { top: 0, left: 0 }, d = this.getPageStyleHeight();
            o.top && o.left ? (c.top = o.top, c.left = o.left) : c = a(o.element).offset(), -1 != o.direction.toLowerCase().indexOf("top") && (l = e.height() || e.children().height()), o.dtop && (n = o.dtop), o.dleft && (r = o.dleft), i = c.top + this.direction[o.direction].top - l + n + d + "px", s = c.left + this.direction[o.direction].left + r + "px", e.css("top", i).css("left", s)
        },
        fixHeight: function (e) {
            e = e || this.$el, e = a(e);
            var t, i = (this.options, e.height() || e.children().height()), s = e.height() || e.children().width(), o = parseInt(e.css("top"), 10), n = parseInt(e.css("left"), 10), r = a(window).height(), l = a(window).width();
            o + i > r && (t = "rightTop"), n + s > l && (t = "leftBottom"), this.setOptions({ direction: t }), this.setPosition(e)
        },
        showMenu: function (e) {
            this.hideMenuSmart() && (e && (this.setOptions(e), 1 == parseInt(this.options.flag.taskFlag, 10) && parseInt(this.options.taskDate, 10) ? this.options.status = "hasremind" : 1 == parseInt(this.options.flag.taskFlag, 10) ? this.options.status = "trunToCal" : this.options.status = "add"), this.showTimeText(e), this.hideMenuItem(e), this.getTodayText() ? this.setTimeText("remindSetlater") : this.displayToday(!1), this.setTimeText("remindSettomorrow"), this.setPosition(null, e), this.$el.show(), this.fixHeight(), this.timeSelectReturn(), this.showValid())
        },
        showTimeText: function (e) {
            function t(e) {
                if (this.$el.find(".cur").removeClass("cur"), e) {
                    var t = this.invertFuncMap[e];
                    this.$el.find("[order=" + t + "]").find(".dib").addClass("cur")
                }
            }

            if (1 == parseInt(e.flag.taskFlag, 10)) {
                this.$el.find("#setMarked").show(), this.displayToday(!0);
                var i = "";
                if (this.setTimeText("remindSetonedays", !0), parseInt(e.taskDate, 10)) {
                    var a = new Date(1e3 * e.taskDate);
                    switch (e.from) {
                        case "bankBill":
                            1 == $Date.diffTime(a, this.getTime("remindBillDay0")) ? i = "remindBillDay0" : 1 == $Date.diffTime(a, this.getTime("remindBillDay1")) ? i = "remindBillDay1" : 1 == $Date.diffTime(a, this.getTime("remindBillDay2")) && (i = "remindBillDay2");
                            break;
                        default:
                            1 == $Date.diffTime(a, this.getTime("today")) ? i = "remindSetlater" : 1 == $Date.diffTime(a, this.getTime("tomorrow")) ? i = "remindSettomorrow" : (i = "remindSetonedays", this.setTimeText("remindSetonedays"))
                    }
                } else i = "remindSettodo";
                t.call(this, i)
            } else this.$el.find("#setMarked").hide(), this.setTimeText("remindSetonedays", !0), t.call(this)
        },
        hideMenuItem: function (e) {
            t.isUndefined(e.flag.starFlag) ? this.$el.find("[type=star]").addClass("hide") : "0" != parseInt(e.flag.starFlag, 10) ? (this.$el.find("li[type=star]").eq(0).addClass("hide"), this.$el.find("li[type=star]").eq(1).removeClass("hide")) : (this.$el.find("li[type=star]").eq(0).removeClass("hide"), this.$el.find("li[type=star]").eq(1).addClass("hide")), "bankBill" === e.from ? (this.$el.find("li[type=bankbill]").removeClass("hide"), this.$el.find("li[type=default]").addClass("hide")) : (this.$el.find("li[type=bankbill]").addClass("hide"), this.$el.find("li[type=default]").removeClass("hide"))
        },
        displayToday: function (e) {
            var t = this.invertFuncMap.remindSetlater, i = this.$el.find("li[order=" + t + "]");
            e ? i.show() : i.hide()
        },
        showTips: function (e, t) {
            var i = this, a = this.$el.find("#starOrRemindPopTip");
            a.length && a.remove();
            var s = $T.Utils.format(this.template.tipTemp, { text: e });
            t.append(s), clearTimeout(this.tipsId), this.tipsId = setTimeout(function () {
                i.hideTips()
            }, 3e3)
        },
        hideTips: function () {
            this.$el.find("#starOrRemindPopTip").remove()
        },
        showTimeSelect: function () {
            this.hideStarList(), this.initTimePicker();
            var e = this.$el.find("#timeSelectPopMenu");
            e.show();
            var t = new Date;
            this.$el.find("#remindDate").data("time", t.getTime()), this.$el.find("#remindDate").val(t.format("MM月dd日") + " " + this.getDayOfWeek(t))
        },
        timeSelectReturn: function () {
            var e = this.$el.find("#timeSelectPopMenu"), t = this.$el.find("#setstarlist");
            e.hide(), t.show()
        },
        showValid: function () {
            var e = a("#testValidImg"), t = "http://imgnews.mail.10086.cn/getimage?clientid=1&rnd=", i = parseInt(1e3 * Math.random(), 0);
            e.attr("src", t + i)
        },
        setOptions: function (e) {
            e = e || {}, e.direction = e.direction || "rightBottom", e.top = e.top || 0, e.left = e.left || 0, e.dtop = e.dtop || 0, e.dleft = e.dleft || 0, e.from = e.from || "";
            var i = {};
            if (e.mid) {
                var a = $App.getMailDataByMid(e.mid);
                a || (a = $App.getSessionMailDataByMid(e.mid)), t.extend(i, a)
            }
            t.extend(i, e), i.taskDate && (i.taskDate = parseInt(i.taskDate, 10)), t.extend(this.options, i)
        },
        hideMenu: function () {
            this.$el.hide()
        },
        hideMenuSmart: function () {
            var e = this.$el.find("#timeSelectPopMenu");
            return e.is(":visible") ? !1 : (this.$el.hide(), !0)
        },
        hideStarList: function () {
            var e = this.$el.find("#setstarlist");
            e.hide()
        },
        starClick: function () {
            this.hideMenu();
            var e = {
                command: "mark",
                mailType: "",
                mids: [this.options.mid],
                sessionIds: this.options.sessionId,
                type: "starFlag",
                value: 1 - parseInt(this.options.flag.starFlag, 10)
            };
            e.value ? BH("mailList_starHover_clickStarOn") : BH("mailList_starHover_clickStarOff"), $App.trigger("mailCommand", e)
        },
        remindFinished: function (e) {
            BH("mailList_starHover_done"), this.hideMenu();
            var t = this.options, i = parseInt(t.taskDate, 10);
            0 != i ? $App.trigger("remindFinish", { mid: this.options.mid, taskDate: i, cb: e }) : this.remindSettodo(0)
        },
        remindSettodo: function (e) {
            function t() {
                e = 0 == e ? 0 : 1;
                var t = { mid: this.options.mid, taskDate: 0, value: e };
                $App.trigger("setTask", t)
            }

            if (BH("mailList_starHover_remindSettodo"), "trunToCal" == this.options.status && 0 != e) return void this.hideMenuSmart();
            var i = this;
            this.hideMenu(), parseInt(this.options.taskDate, 10) ? this.remindFinished(function () {
                t.call(i)
            }) : t.call(i)
        },
        remindSetlater: function (e) {
            BH("mailList_starHover_remindSetlater"), this.hideMenu();
            var t = this.options, e = e || t.status, i = this.getTime("today"), a = {
                content: t.subject,
                startAndEndTime: $Date.format("hhmm", i),
                status: e,
                subject: t.subject,
                time: i.getTime("today"),
                mid: t.mid,
                isAllDay: !0
            };
            "hasremind" != a.status && (a.sms = !1), this.saveMailRemind(a)
        },
        remindSettomorrow: function (e) {
            BH("mailList_starHover_remindSettomorrow"), this.hideMenu();
            var e = e || this.options.status, t = this.getTime("tomorrow"), i = {
                content: this.options.subject,
                startAndEndTime: $Date.format("hhmm", t),
                status: e,
                subject: this.options.subject,
                time: t.getTime("tomorrow"),
                mid: this.options.mid,
                isAllDay: !0
            };
            "hasremind" != i.status && (i.sms = !1), this.saveMailRemind(i)
        },
        remindSetonedays: function () {
            BH("mailList_starHover_remindSetonedays"), this.showTimeSelect(), this.$el.find("#remindDate").click(function () {
                BH("mailList_remindSetonedays_clickCalIcon")
            })
        },
        remindBillDays: function (e) {
            var t, i = this, a = this.options;
            switch (e) {
                case 0:
                    t = this.getTime("remindBillDay0");
                    break;
                case 1:
                    t = this.getTime("remindBillDay1");
                    break;
                case 2:
                    t = this.getTime("remindBillDay2")
            }
            var s = {
                content: a.subject,
                startAndEndTime: $Date.format("hhmm", t),
                status: a.status,
                subject: a.subject,
                time: t.getTime(),
                mid: a.mid,
                isAllDay: !0
            };
            "hasremind" != s.status && (s.sms = !1), i.hideMenu(), new Date > t ? $Msg.confirm("提醒时间早于当前实际时间，请确认是否继续添加提醒", function () {
                i.saveMailRemind(s)
            }) : this.saveMailRemind(s)
        },
        changeRemind: function (e) {
            this.hideMenu();
            var i = $App.getView("remind").model.get("data");
            t.isEmpty(i) && (i = {});
            var a = t.extend(i, e);
            a.status = "hasremind", this.saveMailRemind(a)
        },
        saveMailRemind: function (e) {
            $App.trigger("saveMailRemind", e)
        },
        getTime: function (e) {
            e = e || "today";
            var t, i = this.options, a = new Date, s = a.getHours(), o = a.getMinutes(), n = 60 * s + o;
            switch (e) {
                case "today":
                    t = n > 0 && 420 >= n ? this.setTime(a, "09:00") : n > 420 && 990 >= n ? this.setTime(a, "17:00") : a;
                    break;
                case "tomorrow":
                    t = this.setTime(a.setDate(a.getDate() + 1), "09:00");
                    break;
                case "remindBillDay0":
                    t = this.setTime(i.payDate, "10:00");
                    break;
                case "remindBillDay1":
                    var r = new Date(i.payDate);
                    t = this.setTime(r.setDate(r.getDate() - 1), "10:00");
                    break;
                case "remindBillDay2":
                    var r = new Date(i.payDate);
                    t = this.setTime(r.setDate(r.getDate() - 2), "10:00");
                    break;
                case "other":
                    t = new Date(1e3 * this.options.taskDate)
            }
            return t
        },
        setTimeText: function (e, t) {
            t = t || 0;
            var i = this.invertFuncMap[e], a = this.$el.find("li[order=" + i + "] .i-texttips");
            if (t) a.text(""); else switch (e) {
                case "remindSetlater":
                    a.text(this.getTodayText());
                    break;
                case "remindSettomorrow":
                    a.text(this.getTomorrowText());
                    break;
                case "remindSetonedays":
                    a.text(this.getOnedaysText());
                    break;
                case "remindBillDay0":
                    a.text(this.getOnedaysText());
                    break;
                case "remindBillDay1":
                    a.text(this.getOnedaysText());
                    break;
                case "remindBillDay2":
                    a.text(this.getOnedaysText());
                    break;
                default:
                    return !1
            }
        },
        getTodayText: function (e) {
            e || (e = this.getTime("today"));
            var t = e.getHours(), i = e.getMinutes();
            return 9 == t && 0 == i ? "早上9:00" : 17 == t && 0 == i ? "下午5:00" : ""
        },
        getTomorrowText: function (e) {
            e || (e = this.getTime("tomorrow"));
            var t = e.getHours(), i = "";
            return i += $Date.format("周w ", e), i += $Date.getHelloString(e), i += t % 12 + $Date.format(":mm", e)
        },
        getPageStyleHeight: function () {
            var e = $App.getMailboxView().model.get("showSummary");
            return this.options && this.options.direction && -1 != this.options.direction.indexOf("Bottom") && "readMail" != this.options.from ? e ? this.pageStyleHeight[$App.getMailboxView().model.get("pageStyle")] : this.pageStyleHeight[$App.getMailboxView().model.get("pageStyle") + "2"] : 0
        },
        getOnedaysText: function (e) {
            e || (e = this.getTime("other"));
            var t = e.getHours(), i = (e.getMinutes(), "");
            return i += $Date.format("MM月dd日 ", e), i += $Date.getHelloString(e), i += t % 12 + $Date.format(":mm", e)
        },
        getDayOfWeek: function (e) {
            var t = ["周日", "周一", "周二", "周三", "周四", "周五", "周六"];
            return t[e.getDay()]
        },
        setTime: function (e, t) {
            var i = t.split(":"), a = new Date(e);
            return a.setHours(i[0]), a.setMinutes(i[1]), a.setSeconds(0), a.setMilliseconds(0), a
        },
        template: {
            container: '<div id="starOrRemindPopContainer" style="position:absolute;top:0px;left:0px;z-index:9001;display:none;"></div>',
            menu: ['<div id="starOrRemindPopMenu" class="menuPop shadow setstarlayer" style="position:absolute">', '<div class="setstarlist">', '<ul id="setstarlist">', '<li order="11" type="star" class="setstartool"><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-starClick"></i></span><span class="dib">标记星标</span></span></a></li>', '<li order="11" type="star" class="setstartool"><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-starMo"></i></span><span class="dib">取消星标</span></span></a></li>', '<li order="21" type="default" id="setMarked"><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-seticon i-setmarked"></i></span><span class="dib">标为处理完毕</span></span></a></li>', '<li order="22" type="default" ><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-seticon i-settodo"></i></span><span class="dib">稍后处理</span></span></a></li>', '<li order="23" type="default"><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-seticon i-setlater"></i></span><span class="i-texttips">下午6:00</span><span class="dib">今天晚点处理</span></span></a></li>', '<li order="24" type="default"><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-seticon i-settomorrow"></i></span><span class="i-texttips">周三 上午9:00</span><span class="dib">明天处理</span></span></a></li>', '<li order="25" type="default"><a href="javascript:;"><span class="text"><span class="i-iconwidth">', '<i class="i-seticon i-setonedays"></i></span><span class="i-texttips">10月18日 上午9:00</span><span class="dib">指定一天</span></span></a></li>', '<li order="31" type="bankbill"><a href="javascript:;"><span class="text">', '<span class="i-texttips"></span><span class="dib">还款日当天提醒</span></span></a></li>', '<li order="32" type="bankbill"><a href="javascript:;"><span class="text">', '<span class="i-texttips"></span><span class="dib">提前一天提醒</span></span></a></li>', '<li order="33" type="bankbill"><a href="javascript:;"><span class="text">', '<span class="i-texttips"></span><span class="dib">提前两天提醒</span></span></a></li>', "</ul>", '<div id="timeSelectPopMenu" class="tips delmailTips setstarlayermore" style="position:static;display:none;width: 225px;border:none;box-shadow: none;">', '<a href="javascript:" class="delmailTipsClose" style="display:none;"><i class="i_u_close"></i></a>', '<div class="mailFlag"><a id="backToList" href="javascript:void(0)" class="mail-flag">返回</a>请选择日期和时间</div>', '<div class="tips-text">', '<div class="norTips-news" style="padding:10px 6px;">', '<ul class="setstarlayermorelist mail_flag_text">', '<li><span class="i-iconwidth"><i class="icons i-mail-flag"></i></span><span class="dib mailSapn" style="margin-left: 5px;"><input type="text" class="ipt-text" id="remindDate" readonly="readonly"></span></li>', '<li><span class="i-iconwidth"><i class="i-seticon i-settiming"></i></span><span class="dib"><div id="remindTime"></div></span></li>', "</ul>", "</div>", '<div name="buttons" class="delmailTipsBtn"><span class="mail_flag_left">同步至日历</span><a id="remindSave" href="javascript:void(0)" class="btnSure icoG icoG-s"><span>保存</span></a><a href="javascript:void(0)" class="btnNormal icoTb icoTb-s" style="display:none;"><span>取消</span></a></div>', "</div>", '<div class="diamond tipsTop" style="left:26px;display:none;"></div>', "</div>", "</div>", "</div>"].join(""),
            tipTemp: ['<div style="top: -35px; left: 22px;padding: 0 6px;" id="starOrRemindPopTip" class="tips">', '<div class="tips-text" style="font-size: 12px;">', "{text}", "</div>", '<div class="tipsBottom2 diamond"></div>', "</div>"].join("")
        }
    })),
    a(function () {
        $App.registerView("starOrRemindPopMenu", new m2012.starOrRemindPopMenu.view({}))
    })
}(jQuery, _, M139),

//M2012.ChangeStar.Model
function (e, t, i) {
    i.namespace("M2012.ChangeStar.Model", Backbone.Model.extend({
        defaults: { ids: [], type: "starFlag", value: 0 },
        UpdatStar: function (e, t) {
            var e = e || {
                ids: this.get("ids"),
                sessionIds: this.get("sessionIds"),
                type: this.get("type"),
                value: this.get("value")
            };
            e.ids || delete e.ids, e.sessionIds || delete e.sessionIds, i.RichMail.API.call("mbox:updateMessagesStatus", e, function (e) {
                e.responseData.code && "S_OK" == e.responseData.code && t && t(e.responseData["var"])
            })
        }
    }))
}(jQuery, _, M139),

//M2012.ChangeStar.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ChangeStar.View", s.extend({
        el: "body",
        events: {
            "click [name=stardel]": "deleteStar",
            "click [name=list_starmail]": "clickStar",
            "click [name=read_starmail]": "clickStar",
            "click [name=voiceMailBtn]": "clickVoiceEvent",
            "mouseover [name=list_starmail]": "readyToShowMenu",
            "mouseout [name=list_starmail]": "cancelShowMenu"
        },
        initialize: function () {
            var e = this;
            return this.model = new M2012.ChangeStar.Model, this.initPopMenuEvent(), $App.on("markstar", function (t) {
                var i = t.mid;
                if (e.el = "#list_star_" + i + ",#rsession_star_" + i + ",#rsm_star_" + i + ",#list_left_star_" + i, 1 == t.value) {
                    var s = a("#readmail_" + i + " h2").find("[name=read_starmail]")[0];
                    s && (s.className = "i_star_y"), $App.isSessionMode() ? (a("#readmail_" + i + " h2").find("[name=read_starmail]")[0].className = "i_star_y", e.addStar()) : (a("#readmail_" + i + " h2").find("[name=read_starmail]")[0].className = "i_star_y", BH("mailbox_markStar"))
                } else e.removeStar(), a("#readmail_" + i + " h2").find("[name=read_starmail]")[0].className = "i_starM"
            }), $App.off("changeCovStar").on("changeCovStar", function (t) {
                if (t) {
                    var i = t.options, a = t.callback;
                    e.model.UpdatStar(i, function () {
                        a && a(), appView.trigger("changeStar", {}), appView.trigger("reloadFolder", { reload: !0 })
                    })
                }
            }), s.prototype.initialize.apply(this, arguments)
        },
        hoverStar: function (e) {
            var t = e.srcElement || e.target;
            "tag_starmail" != a(t).attr("name") && (t = a(t).parents("[name=tag_starmail]")), a(t).hasClass("stardel-on") ? a(t).removeClass("stardel-on") : "tag_starmail" == a(t).attr("name") && a(t).addClass("stardel-on")
        },
        deleteStar: function (e) {
            i.Event.stopEvent(e);
            var t = e.srcElement || e.target, s = a(t).parents("[mid]").attr("mid"), o = a(t).parents("[sessionId]").attr("sessionId");
            $App.isSessionMode() && "mailbox" === $App.getCurrentTab().group && o ? this.model.set({
                ids: null,
                sessionIds: [Number(o)],
                value: 0
            }) : this.model.set({ ids: [s], sessionIds: null, value: 0 });
            var n = function () {
                $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView")
            };
            this.update(n), a(t).parents("[name=tag_starmail]").remove(), a("#readmail_" + s + " [name=tag_starmail]").remove()
        },
        getSourceHead: function () {
            var e = top.location.protocol, t = location.host, i = "";
            return t.indexOf("10086.cn") > -1 && top.$User.isGrayUser() ? i = "{0}//image0.139cm.com" : t.indexOf("10086.cn") > -1 && !top.$User.isGrayUser() ? i = "{0}//images.139cm.com" : t.indexOf("10086ts") > -1 ? i = "{0}//rm.mail.10086ts.cn" : t.indexOf("10086rd") > -1 && (i = "{0}//static.rd139cm.com"), i.replace("{0}", e)
        },
        clickVoiceEvent: function (e) {
            var t = this, s = a(e.currentTarget);
            s.attr("title"), s.attr("fileType");
            BH("voiceBtn_star_click");
            var o = this.getSourceHead();
            i.core.utilCreateScriptTag({
                id: "playerJs",
                src: o + top.getRootPath() + "/js/plugin/player.js",
                charset: "utf-8"
            }, function () {
                t.showVoicePlay(s)
            }), a(e.target).is("[name=voiceMailBtn]")
        },
        showVoicePlay: function (e) {
            function t() {
                n.firstChild.className = "i-voi-start"
            }

            function i() {
                n.firstChild.className = "i-voi-y", top.BH({ key: "stopReadmail_previewVoice_audio" })
            }

            function s(e) {
                var t = Math.floor(e / 60), i = Math.floor(e % 60), a = "";
                return isNaN(e) || !isFinite(e) ? a : (t > 0 && (a += t + "'"), a += (10 > i ? "0" : "") + i + '"')
            }

            var o = e.attr("title"), n = null, r = window.player = new AVPlayer(null, {
                settings: {
                    autoplay: !0,
                    loop: !1,
                    preload: "auto"
                }, callbacks: {
                    onLoadError: function (e) {
                    }, onLoad: t, onLoadStarted: function () {
                        s(this.duration)
                    }, onUpdatePlayhead: function () {
                        var e = s(this.duration);
                        a(n).find(".text_suffix").html(e)
                    }, onPlay: t, onPause: i, onTrackEnded: i
                }
            });
            r.setFlashSource(top.getRootPath() + "/flash/Mp3Player.swf");
            var l = /^\.(?:mp3|m4a|wma|wav|ogg)($|\?)/i, c = e.find(".text_suffix, .ext").text(), d = e.find("i:first").attr("id") || "common", p = this.getAttaObjByName(o, d), m = e.parents("h3[mid]").attr("mid");
            this.getVoiceCommandApi(p, m, function (a) {
                l.test(c) && (resURL = a + "&range=1", e.on("click", function (e) {
                    return e.stopPropagation(), top.BH({ key: "readmail_previewVoice_audio" }), this == n ? r.playPause() : (n && i(), n = this, t(), r.load(resURL, ".mp3")), !1
                }))
            })
        },
        getAttaObjByName: function (e, t) {
            var i = window.voiceMailData.attachments || [];
            if ("common" == t) {
                for (var a = 0, s = i.length; s > a; a++) if (i[a].fileName.toLowerCase() === e) return i[a]
            } else if (("keepFolder" == t || "netDisk" == t) && window.largeAttachList) {
                i = window.largeAttachList;
                for (var a = 0, s = i.length; s > a; a++) if (i[a].fileName.toLowerCase() === e) return i[a]
            }
            return null
        },
        getUrlHead: function () {
            var e = top.location.protocol, t = top.location.host;
            return e + "//" + t
        },
        getVoiceCommandApi: function (e, t, i) {
            var a = "", e = e || {};
            if ("attach" == e.type) {
                var s = this.getUrlHead() + "/RmWeb/view.do";
                a = top.M139.Text.Url.makeUrl(s, {
                    func: "attach:download",
                    mid: t,
                    offset: e.fileOffSet,
                    size: e.fileSize,
                    sid: top.$App.getSid(),
                    type: e.type,
                    encoding: e.encode || e.encoding || 1
                }) + "&name=" + encodeURIComponent(e.fileName), i && i(a)
            }
        },
        clickStar: function (e) {
            var t, i = this, s = a(e.currentTarget);
            BH("mailList_star_click");
            var o = s.parents("[sessionId]").attr("sessionId");
            if ("read_starmail" == s.attr("name") ? (t = s.parents("div[mid]").attr("mid"), BH("readmail_star")) : (t = s.parents("tr").attr("mid"), BH("mailbox_star2")), "1" != a(e.target).attr("taskFlag")) {
                var n;
                n = a(e.target).is("[name=read_starmail]") ? s.hasClass("i_starM") ? 1 : 0 : "0" == a(e.target).attr("starFlag") ? 1 : 0, this.starCommand(t, o, n), i.popMenu && i.popMenu.hideMenuSmart()
            }
        },
        starCommand: function (e, t, i) {
            var a = { type: "starFlag", value: i };
            a.command = "mark", a.mids = [e], a.mailtype = "", a.sessionIds = t, $App.trigger("mailCommand", a)
        },
        addStar: function () {
            var e = this;
            a(e.el).addClass("i_star_y"), a(e.el).attr("val", 1), BH("mailbox_markStar")
        },
        removeStar: function () {
            var e = this;
            a(e.el).removeClass("i_star_y"), a(e.el).attr("val", 0), BH("mailbox_markStar"), $App.trigger("changeStar")
        },
        update: function (e) {
            var t = this, i = t.model.get("value");
            t.model.UpdatStar(null, function (a) {
                a > 0 && (0 == i ? t.removeStar() : t.addStar()), e && e()
            })
        },
        initPopMenuEvent: function () {
            var e = this;
            this.popMenu = $App.getView("starOrRemindPopMenu"), this.popMenu.$el.hover(function () {
                e.readyShowMenu = !0
            }, function () {
                e.readyShowMenu = !1, clearTimeout(e.showMenuTimeoutId), setTimeout(function () {
                    e.readyShowMenu || e.popMenu && e.popMenu.hideMenuSmart()
                }, 300)
            })
        },
        readyToShowMenu: function (e) {
            var t = this;
            t.readyShowMenu = !0, t.showMenuTimeoutId = setTimeout(function () {
                BH("mailList_star_hover"), a("#div_maillist").find("[menuType=on]").attr("menuType", "off"), a(e.target).attr("menuType", "on"), t.readyShowMenu && t.showMenu(e, {
                    flag: {
                        taskFlag: a(e.target).attr("taskflag"),
                        starFlag: a(e.target).attr("starFlag")
                    },
                    taskDate: a(e.target).attr("taskDate"),
                    mid: a(e.target).parents("tr").attr("mid"),
                    sessionid: a(e.target).parents("tr").attr("sessionid")
                })
            }, 400)
        },
        showMenu: function (e, i) {
            var s = this;
            return "list_starmail" != a(e.target).attr("name") ? !1 : (i = t.extend(i, { element: e.target }), void s.popMenu.showMenu(i))
        },
        cancelShowMenu: function (e) {
            var t = this;
            t.readyShowMenu = !1, clearTimeout(t.showMenuTimeoutId), setTimeout(function () {
                t.readyShowMenu || t.popMenu && t.popMenu.hideMenuSmart()
            }, 300)
        }
    })), a(function () {
        $App.registerView("starView", new M2012.ChangeStar.View)
    })
}(jQuery, _, M139),

//M2012.ReadMail.Model.QuickReply
function (e, t, i) {
    i.namespace("M2012.ReadMail.Model.QuickReply", Backbone.Model.extend({
        tips: {
            replySuccess: "邮件回复成功",
            replyFail: "系统繁忙,请稍后重试。",
            replyContentError: "请输入要回复的内容。",
            replyMailError: "请输入正确的邮件地址。",
            replyMailNull: "请输入回复的邮件地址。"
        }, compose: function (e, t) {
            i.RichMail.API.call("mbox:compose&comefrom=5&categroyId=103000000", e, function (e) {
                e.responseData.code && "S_OK" == e.responseData.code ? t && t(!0) : t && t()
            })
        }, replyMessage: function (e, t, a) {
            var s, o, n = this, r = a, l = $User.getDefaultSender(), c = $App.getCurrMailMid(), d = $("#mid_" + c).attr("src");
            if (d && d.indexOf("fid")) {
                var p = d.indexOf("fid=");
                if (o = d.substring(p + 4), o = parseInt(o), -3 == $App.getFolderType(o)) {
                    s = $App.getFolderById(o).email;
                    for (var m = top.$App.getPopList(), u = [], p = 0; p < m.length; p++) u.push(m[p].email);
                    $.inArray(s, u) > -1 && (l = s)
                }
            }
            var h = function () {
                for (var e = $(".readMail").filter("[mid='" + top.$App.getCurrMailMid() + "']").find("#receiver_to").children("div").children(".gAddr"), t = [], i = 0; i < e.length; i++) t.push(top.$Email.getEmail($(e[i]).attr("addr")));
                for (var a = top.$App.getPopList(), s = $.map(a, function (e) {
                    return e.email
                }), o = 0; o < t.length; o++) if ($.inArray(t[o], s) > -1) return t[o];
                return ""
            }();
            l = "" == h ? $User.getDefaultSender() : h, i.RichMail.API.call("mbox:replyMessage", t, function (t) {
                if (t.responseData.code && "S_OK" == t.responseData.code) {
                    var i = e.content, a = t.responseData["var"], s = a.id;
                    $("<div id='replyEmailContent' style='display:none;'></div>").appendTo(document.body);
                    var o = $("#replyEmailContent");
                    o.html(a.content), o.find("table[id='attachAndDisk']").remove(), a.content = o.html(), o.remove();
                    var c = e.list, d = {
                        attrs: {
                            account: l,
                            to: c,
                            cc: "",
                            bcc: "",
                            showOneRcpt: 0,
                            isHtml: 1,
                            subject: a.subject,
                            content: i + a.content,
                            priority: 3,
                            requestReadReceipt: 0,
                            saveSentCopy: 1,
                            inlineResources: 1,
                            scheduleDate: 0,
                            normalizeRfc822: 0,
                            id: s
                        }, action: "deliver", returnInfo: 1
                    };
                    a.messageId && (d.attrs.messageId = a.messageId), r && r(d)
                } else $Msg.alert(n.tips.replyFail, { icon: "fail" })
            })
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.View.QuickReply
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.View.QuickReply", s.extend({
        el: "",
        template: { replyAreaHtml: ['<table width="100%">', "<tbody><tr>", '<td width="100" height="26" valign="top" id="quickReplyMenu">', "</td>", '<td valign="top" height="26">', '<div class="readMailReplyMes-w">', '<textarea class="readMailReplyMes" id="reply_textarea">来信已阅，我会尽快回复！</textarea>', "</div>", "</td>", '<td align="right" height="26" valign="top" width="80" ><a id="quickreply_send" href="javascript:;" bh="readmail_quicksend" class="icoTb ml_5"><span>发 送</span></a></td>', "</tr>", "</tbody>", "</table>"] },
        events: { "click #quickreply_send": "replySend" },
        initialize: function () {
            return this.model = new M2012.ReadMail.Model.QuickReply, s.prototype.initialize.apply(this, arguments)
        },
        initEvents: function () {
            var e = this, t = a(e.el).find(".readMailReplyMes");
            t.focus(function () {
                a(this).addClass("focus-on")
            }).blur(function () {
                "" == a.trim(t.val()) && a(this).removeClass("focus-on")
            });
            try {
                i.Timing.watchInputChange(t[0], function () {
                    "" != a.trim(t.val()) ? t.addClass("focus-on") : t.removeClass("focus-on")
                })
            } catch (s) {
            }
            var o = (e.model.get("replyAll"), [{ text: "回复发件人", myData: 0 }]);
            o.push({ text: "回复全部", myData: 1 });
            var n = a(e.el).find("#quickReplyMenu"), r = M2012.UI.DropMenu.create({
                defaultText: "回复发件人",
                menuItems: o,
                container: n
            });
            a(e.el).find("#quickReplyMenu>div").width(100), a(e.el).find(".dropDownText").attr("rel", "0"), r.on("change", function (t) {
                a(e.el).find(".dropDownText").attr("rel", t.myData), "0" == t.myData ? BH("readmail_quickreply") : BH("readmail_quickreplyall")
            })
        },
        replySend: function () {
            var e = this, t = e.model.get("mid"), s = e.model.get("sender"), o = e.model.get("replyAll"), n = a(e.el).find("#reply_textarea").val(), r = a(e.el).find(".dropDownText").attr("rel"), l = { mid: t };
            if ("" == a.trim(n)) return void $Msg.alert(e.model.tips.replyContentError);
            var c = 1 == $App.getConfig("UserAttrs").replyWithQuote;
            n = i.Text.Utils.htmlEncode(n), n = n.replace(/\r/gm, "").replace(/\n/gm, "<br>"), c && (n += '<br/><br/><br/><br/><hr id="replySplit"/>');
            var d = { list: 0 == r ? s : o, mid: t, content: n }, l = { mid: t };
            i.UI.TipMessage.show("正在发送邮件..."), e.model.replyMessage(d, l, function (t) {
                if (c) {
                    var a = t.attrs.content, s = '<hr id="replySplit"/>';
                    a.indexOf(s) > -1 && (a = a.replace(s, s + '<div id="reply139content">'), a += "</div>", t.attrs.content = a)
                } else t.attrs.content = n;
                t && e.model.compose(t, function (t) {
                    if (t) e.showSuccessBar(); else {
                        var a = e.model.tips.replyFail;
                        i.UI.TipMessage.show(a, { delay: 3e3 })
                    }
                })
            })
        },
        showSuccessBar: function () {
            var e = this, t = a(e.el), s = t.siblings(".readMailReplyDone"), o = e.model.tips.replySuccess;
            t.hide(), setTimeout(function () {
                i.UI.TipMessage.show(o, { delay: 3e3 })
            }, 500), s.show().find("a:eq(0)").click(function () {
                t.show(), s.hide()
            })
        },
        render: function () {
            var e = this, t = $Email.getEmail(this.model.get("sender"));
            if (a.inArray(t, $App.getSysAccount()) > -1) a(e.el).removeClass().html(""); else {
                var i = e.template.replyAreaHtml.join("");
                a(e.el).html(i)
            }
        }
    }))
}(jQuery, _, M139),

//M2012.Receipt.Model
function (e, t, i) {
    i.namespace("M2012.Receipt.Model", Backbone.Model.extend({
        defaults: {
            mailListData: null,
            requestReadReceipt: !1,
            askMe: 1,
            notSend: 2,
            alwaysSend: 3,
            readReceipt: null
        }, getAttrs: function (e) {
            var t = { server: 1 };
            i.RichMail.API.call("user:getAttrs", t, function (t) {
                t.responseData.code && "S_OK" == t.responseData.code && e && e(t.responseData["var"])
            })
        }, setAlwaysSend: function (e) {
            var t = this, a = t.get("alwaysSend"), s = { attrs: { preference_receipt: a } };
            i.RichMail.API.call("user:setAttrs", s, function (t) {
                t.responseData.code && "S_OK" == t.responseData.code && e && e(t.responseData["var"])
            })
        }, setNotSend: function (e) {
            var t = this, a = t.get("notSend"), s = { attrs: { preference_receipt: a } };
            i.RichMail.API.call("user:setAttrs", s, function (t) {
                t.responseData.code && "S_OK" == t.responseData.code && e && e(t.responseData["var"])
            })
        }, sendMDN: function (e) {
            var t = this, a = t.get("readReceipt");
            a.to = $Email.getEmail(a.to), console.log(a), i.RichMail.API.call("mbox:sendMDN", a, function (t) {
                t.responseData.code && "S_OK" == t.responseData.code && e && e(t.responseData["var"])
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Receipt.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Receipt.View", s.extend({
        el: "body",
        events: {},
        template: { poptips: ['<div class="norTips">', '<span class="norTipsIco">', '<i style="display:none" class="MB_Icon">', "</i>", "</span>", '<dl class="norTipsContent">', '<dd class="norTipsLine MB_MessageBox_Content">', "对方要求发送已读回执,是否发送?<br />", "<label for='returnReceipt'>", "<input id='returnReceipt'  type='checkbox' />", "&nbsp;以后都按本次操作", "</label>", "</dd>", "</dl>", "</div>"] },
        initialize: function () {
            var e = this;
            this.model = new M2012.Receipt.Model;
            e.model.get("readReceipt");
            return s.prototype.initialize.apply(this, arguments)
        },
        initEvents: function () {
            var e = this;
            e.model.get("mailListData").fid;
            e.model.getAttrs(function (t) {
                var i = t.preference_receipt;
                i != e.model.get("askMe") && null !== i || e.render(), i == e.model.get("alwaysSend") && window.setTimeout(function () {
                    e.model.sendMDN()
                }, 500)
            })
        },
        render: function () {
            var e = this, t = e.template.poptips.join("");
            $Msg.showHTML(t, function (t) {
                a("#returnReceipt").attr("checked") && e.model.setAlwaysSend(function (e) {
                }), e.model.sendMDN(function (e) {
                    i.UI.TipMessage.show("发送回执成功", { delay: 3e3 })
                })
            }, function () {
                a("#returnReceipt").attr("checked") && e.model.setNotSend(function (e) {
                    i.UI.TipMessage.show("发送回执设置成功", { delay: 3e3 })
                })
            }, { buttons: ["确定", "取消"], dialogTitle: "发送回执", icon: "warn" })
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.ToolBar.Model
function (e, t, i) {
    i.namespace("M2012.ReadMail.ToolBar.Model", Backbone.Model.extend({ defaults: { dataSource: null } }))
}(jQuery, _, M139),

//M2012.ReadMail.ToolBar.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.ToolBar.View", s.extend({
        el: "",
        events: {},
        template: { toolbar: ['<ul class="toolBarUl_v3">', "</ul>", '<div class="toolBarSet p_relative">', '<span class="toolBarArray" style="display:{1};">', '<a class="one rdCl mr_5" href="javascript:void(0)"></a>', "</span>", '<div class="p_relative fr mtb_3 jumppageslink">{0}</div>', "</div>"].join("") },
        initialize: function (e) {
            return this.dataSource = e.dataSource, this.parentview = e.parentview, this.currFid = e.currFid, this.searchMode = e.searchMode, this.isSessionMail = e.isSessionMail, this.getSessionPrevNextMail = e.getSessionPrevNextMail, this.mailListData = e.mailListData, s.prototype.initialize.apply(this, arguments)
        },
        initEvents: function () {
            var e = this, t = e.dataSource.omid, i = (a(e.el).find("a.iconPrev"), a(e.el).find("a.iconNext"), a(e.el).find("span.toolBarPaging"));
            a(e.el).find(".toolBarArray").click(function () {
                e.createMoreToolMenu(t, a(e.el).find(".toolBarSet"))
            }), a(e.el).delegate("a.iconPrev", "click", function () {
                e.parentview && e.parentview.hasUnsavedComposeframe() ? window.confirm("未保存的内容将会丢失，是否跳转？") && (BH("cMail_toolbar_prev"), e.goToPrevMail()) : (BH($App.isReadSessionMail() ? "cMail_toolbar_prev" : "toolbar_premail"), e.goToPrevMail())
            }), a(e.el).delegate("a.iconNext", "click", function () {
                e.parentview && e.parentview.hasUnsavedComposeframe() ? window.confirm("未保存的内容将会丢失，是否跳转？") && (BH("cMail_toolbar_next"), e.goToNextMail()) : (BH($App.isReadSessionMail() ? "cMail_toolbar_next" : "toolbar_nextmail"), e.goToNextMail())
            }), a(e.el).find("#btn_setting").click(function () {
                $Event.stopEvent(), new M2012.ReadMail.View.ConversationSetting({ el: e.el }).render(), BH("cMail_toolbar_set")
            }), $App.isSessionMode() && $App.isSessionFid(this.currFid) && !this.searchMode && !this.isSessionMail && this.getSessionPrevNextMailData(function (t) {
                var a;
                t && (t.prev && (e.dataSource.prev = t.prev), t.next && (e.dataSource.next = t.next), this.getSessionPrevNextMail = !1, a = e.getPrevNextMailHtml(), i.html(a))
            }), $App.on("readNextMail", function (i) {
                i.mid && i.mid == t && setTimeout(function () {
                    e.goToNextMail()
                }, 200)
            })
        },
        createMoreToolMenu: function (e, t) {
            var a = $App.getSid();
            M2012.UI.PopMenu.create({
                items: [{
                    text: "新窗口打开", onClick: function () {
                        $App.openNewWin(e), BH("toolbar_newwin")
                    }
                }, { isLine: !0 }, {
                    text: "保存到和笔记", onClick: function () {
                        top.addBehaviorExt({ actionId: 104705, thingId: 1 });
                        var t = i.PageApplication.getTopApp().print[e];
                        if (t && t.html) {
                            var a = t.subject || "";
                            a = a.slice(0, 65);
                            var s = t.html.content || ""
                        }
                        var o = { title: a || "邮件标题", content: s || "邮件内容", attachmentDirId: "" };
                        top.M139.RichMail.API.call("mnote:createNote", o, function (e) {
                            e.responseData && "S_OK" == e.responseData.code ? i.UI.TipMessage.show("邮件已转存至和笔记 <a href='javascript:top.$App.show(\"note\")'>查看</a>") : i.UI.TipMessage.show("保存失败，请重试"), setTimeout(function () {
                                i.UI.TipMessage.hide()
                            }, 5e3)
                        })
                    }
                }, {
                    text: "导出邮件", onClick: function () {
                        var t = (getDomain("wmsvrPath2"), "/RmWeb/mail?func=mbox:downloadMessages&sid={0}&mid={1}");
                        window.open($T.Utils.format(t, [a, e])), BH("toolbar_export")
                    }
                }, {
                    text: "打印", onClick: function () {
                        window.open(top.getRootPath() + "/html/printmail.html?mid=" + e), BH("toolbar_print")
                    }
                }, {
                    text: "显示邮件原文", onClick: function () {
                        var t = "/RmWeb/view.do?func=mbox:getMessageData&mode=text&part=0&sid={0}&mid={1}";
                        window.open($T.Utils.format(t, [a, e])), BH("toolbar_mailcode")
                    }
                }, {
                    text: "邮件有乱码？", onClick: function () {
                        var t = top.getRootPath() + "/html/newwinreadmail.html?t=newwin&sid={0}&mid={1}&messycode=1";
                        window.open($T.Utils.format(t, [a, e]))
                    }
                }], container: t, top: "22px", left: "-115px", onItemClick: function (e) {
                }
            })
        },
        goToPrevMail: function () {
            function e() {
                $App.trigger("reloadFolder", { reload: !0 }), $App.off("reloadFolder", e)
            }

            var t = this.dataSource, i = "readmail_" + t.omid;
            setTimeout(function () {
                $App.closeTab(i)
            }, 200), t.prev && t.prev.mid && ($App.readMail(t.prev.mid, !1, this.currFid, { searchMode: this.searchMode }), $App.on("letterInfoReady", e))
        },
        goToNextMail: function () {
            function e() {
                $App.trigger("reloadFolder", { reload: !0 }), $App.off("reloadFolder", e)
            }

            var t = this.dataSource, i = "readmail_" + t.omid;
            setTimeout(function () {
                $App.closeTab(i)
            }, 200), t.next && t.next.mid && ($App.readMail(t.next.mid, !1, this.currFid, { searchMode: this.searchMode }), $App.on("letterInfoReady", e))
        },
        getPrevNextMailHtml: function () {
            var e = this.dataSource, t = '<a class="{0} mr_6" href="javascript:;" onClick="return false;" mid="{1}" title="{2}"  ></a>', i = [], a = "", s = "";
            return e.prev && e.prev.subject && (a = "上一封：" + $T.Utils.htmlEncode(e.prev.subject)), e.next && e.next.subject && (s = "下一封：" + $T.Utils.htmlEncode(e.next.subject)), e.prev && e.prev.mid && i.push($T.Utils.format(t, ["iconPrev", e.prev.mid, a])), e.next && e.next.mid && i.push($T.Utils.format(t, ["iconNext", e.next.mid, s])), i.join("")
        },
        getSessionPrevNextMailData: function (e) {
            var t, i = (this.dataSource, this.dataSource.omid);
            this.mailListData && (t = this.mailListData.mailSession);
            var a = {
                fid: this.currFid,
                mid: i,
                sessionId: t,
                readFlag: 0,
                start: 0,
                total: 1,
                folderPass: "",
                showhtml: 0,
                currFid: this.currFid
            };
            $RM.readSessionMail(a, function (t) {
                "S_OK" === t.code && t["var"] ? e && e(t["var"]) : e && e(null, t)
            })
        },
        render: function () {
            var e = this.getSessionPrevNextMail, t = this.getPrevNextMailHtml(e), i = this.template.toolbar;
            $App.isReadSessionMail() && (i += '<div style="margin-top:0px;" class="toolBarArray fr mr_5 p_relative"> <a href="javascript:" id="btn_setting"><i class="i-fits c-pointer"></i></a></div>');
            var a = "none";
            return $T.Utils.format(i, [t, a])
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.VCard.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.VCard.View", s.extend({
        template: {
            addTips: '<div contenteditable="false" style="display:block;margin:0;padding: 0;height:24px;line-height: 24px; width:{width}px;" id="showAddSign">                            <a href="javascript:;" style="display:block;float:right;font-size: 12px;color:#1a8ad8;text-decoration: none;">一键添加联系人&nbsp;>></a>                        </div>',
            updateTips: '<div contenteditable="false" style="display:block;margin:0;padding: 0;height:24px;line-height: 24px; width:{width}px;" id="showUpdateSign">                            <a href="javascript:;" style="display:block;float:right;font-size: 12px;color:#1a8ad8;text-decoration: none;">一键同步到通讯录&nbsp;>></a>                        </div>'
        },
        events: {
            "click #showAddSign": "onAddContact",
            "click #showUpdateSign": "onUpdateContact",
            "click #signInfoCode img": "onClickVCode"
        },
        initialize: function (e) {
            return this.options = e || {}, this.initData(), this.initEvents(), this.render(), s.prototype.initialize.apply(this, arguments)
        },
        initData: function () {
            this.parentView = this.options.parentView, this.$signContainer = this.$("body div[id='signContainer']"), this.$firstSignContainer = this.$signContainer.eq(0), this.$dzmp_table = this.$firstSignContainer.find("#dzmp_table"), this.collection = this.getCardInfo(this.$signContainer);
            var e = this.$firstSignContainer.parents("blockquote");
            this.cardData = e.length > 0 ? null : this.collection[0], this.sender = this.getSenderEmail()
        },
        initEvents: function () {
            var e = this;
            top.$App.off("hideCardAddrTips").on("hideCardAddrTips", function (t) {
                e.$signContainer.find("#showAddSign").hide(), e.hideEmailTipsInCard(), setTimeout(function () {
                    top.$App.off("ADDR_DATA_REFRESH").on("ADDR_DATA_REFRESH", function () {
                        e.renderAddrTips()
                    })
                }, 1500)
            })
        },
        render: function () {
            this.renderAddrTips(), this.resetVCodeStyle()
        },
        getCardInfo: function (e) {
            if (!e.length) return [];
            var i = this, s = {}, o = [], n = {
                company: /[^\.]0(\.0)?(px)?\s-2/,
                address: /15(\.0)?(px)?\s-2/,
                email: /-30(\.0)?(px)?\s0/,
                mobile: /-45(\.0)?(px)?\s-2/
            };
            return a(e).each(function (e, r) {
                var l = a(this).find("#dzmp_table p"), c = l.length, d = l.first();
                if (d.length) {
                    var p = d.find("span");
                    p.first().length && (s.name = p.first().text()), p.last().length && (s.job = p.last().text())
                }
                if (c > 1) for (var m = 1; c > m; m++) if (l.eq(m).length) {
                    var u = l.eq(m).find("i:first");
                    if (u.length) {
                        var h = u.prop("outerHTML");
                        t.each(n, function (e, t) {
                            if (e.test(h) && (s[t] = u.next().length && u.next().text(), "email" == t && "discuss" == i.options.comefrom)) {
                                var o = "<a herf=\"javascript:;\" onclick=\"top.BH && top.BH('readmail_sign_addcontacts');top.$App.show('compose',null,{inputData:{receiver:'" + s[t] + '\'}});" class="readmail_dashed_location" style="position: relative;border-bottom: 1px solid #1a8ad8;color:#1a8ad8;">' + s[t] + "</a>";
                                u.next().html(a(o).css("cursor", "pointer"))
                            }
                        })
                    }
                }
                var f = "";
                s.company = s.company || "", s.job = s.job || "", f = s.company + "__" + s.job;
                var g = {
                    AddrFirstName: s.name || "",
                    Email: [{ FamilyEmail: s.email || "" }],
                    Mobile: [{ FamilyMobile: s.mobile || "" }],
                    Address: [{ Addr: s.address && "___" + s.address + "_" || "" }],
                    Job: [{ Position: f }]
                };
                o.push(g)
            }), o
        },
        getSenderEmail: function () {
            var e = this;
            if (!e.parentView) return "";
            var t, i = e.parentView.dataSource && e.parentView.dataSource.account || "", a = $Email.getEmail(i);
            return a || (t = e.parentView.$el.length && e.parentView.$el.find("#receiver_from a[type='from']") || [], a = t.length && t.attr("email") || ""), a
        },
        updateContact: function (e) {
            e = e || {}, top.M2012.Contacts.API.addNewContacts({
                data: e.data, success: function () {
                    t.isFunction(e.success) && e.success(), top.M139.UI.TipMessage.show("操作成功", { delay: 1500 })
                }, fail: function () {
                    top.M139.UI.TipMessage.show("网络错误，请稍后重试", { delay: 1500 })
                }
            })
        },
        contrastInAddr: function (e) {
            e = e || {};
            var i = e.email;
            if (!i) return "2";
            var a = top.M2012.Contacts.getModel(), s = e.data;
            if (!s) return "2";
            if (a) {
                var o = a.getContactsByEmailV2(i), n = [], r = [], l = [], c = s.AddrFirstName, d = s.Email[0].FamilyEmail, p = s.Mobile[0].FamilyMobile;
                return o.length ? (t.each(o, function (e) {
                    e = e || {}, n.push(e.name || ""), r = t.union(r, e.emails || []), l = t.union(l, e.mobiles || [])
                }), c && d && p ? t.indexOf(n, c) > -1 && t.indexOf(r, d) > -1 && t.indexOf(l, p) > -1 ? "2" : "1" : !c && d && p ? t.indexOf(r, d) > -1 && t.indexOf(l, p) > -1 ? "2" : "1" : c && d && !p ? t.indexOf(n, c) > -1 && t.indexOf(r, d) > -1 ? "2" : "1" : c || !d || p ? "2" : t.indexOf(r, d) > -1 ? "2" : "1") : d ? a.isExistEmail(d) ? "2" : "0" : "2"
            }
        },
        operateCardContacts: function (e) {
            e = e || {};
            var t = "2", i = e.data && e.data.Email[0].FamilyEmail || "", s = e.cardEmail && e.cardEmail || this.sender || i, o = {
                0: e.addContact || a.noop,
                1: e.updateContact || a.noop,
                2: e.existContact || a.noop
            };
            "1" !== top.$App.getUserCustomInfo("readAutoSave") ? s && (t = this.contrastInAddr({
                email: s,
                data: e.data
            }), console.log(t), o[t]()) : e.isClickVCardCode && top.M139.UI.TipMessage.show("联系人已存在", { delay: 1500 })
        },
        hideEmailTipsInCard: function () {
            var e = this.$signContainer.find("#forCard");
            e.removeAttr("onmouseover"), e.removeAttr("onmouseout")
        },
        renderAddrTips: function () {
            var e = this, t = this.cardData;
            if (!t) return !1;
            var i = this.sender, a = t.Email[0].FamilyEmail || i, s = this.options.comefrom ? a : "";
            this.operateCardContacts({
                addContact: function () {
                    e.$firstSignContainer.length && e.$firstSignContainer.prepend($T.format(e.template.addTips, { width: e.$dzmp_table.width() }))
                }, updateContact: function () {
                    e.$firstSignContainer.length && e.$firstSignContainer.prepend($T.format(e.template.updateTips, { width: e.$dzmp_table.width() }))
                }, data: t, cardEmail: s
            })
        },
        resetVCodeStyle: function () {
            var e = this.$signContainer, t = e.find("#signInfoCode");
            t.css("float", "left"), t.each(function (e, t) {
                a(this).attr("index", e);
                var i = a(this).find("div:nth-child(2)"), s = i.find("p");
                2 == s.length && (i.css("margin-left", "-12px"), s.eq(0).text("扫描或点击二维码，添加"), s.eq(1).text("联系人到手机或通讯录"))
            })
        },
        onAddContact: function () {
            var e = this, i = this.cardData, a = i.Email[0].FamilyEmail || senderEmail, s = i.Mobile[0].FamilyMobile || "", o = i.AddrFirstName || $Email.getName(a);
            new M2012.UI.Dialog.ContactsEditor({
                name: o,
                email: a,
                mobile: s,
                fromCardData: t.extend(i, { AddrFirstName: o })
            }).render().on("success", function () {
                e.$("#showAddSign").hide(), e.hideEmailTipsInCard()
            }), top.BH && top.BH("readmail_signtips_addcontacts")
        },
        onUpdateContact: function () {
            var e = this, i = this.cardData, a = this.sender, s = i.Email[0].FamilyEmail || a, o = i.AddrFirstName || $Email.getName(s), n = a == s ? [{ FamilyEmail: s }] : [{ FamilyEmail: s }, { FamilyEmail: a }];
            this.updateContact({
                data: t.extend(i, { AddrFirstName: o, Email: n }), success: function () {
                    e.$("#showUpdateSign").hide()
                }
            })
        },
        onClickVCode: function (e) {
            var i = this, s = a(e.currentTarget).closest("#signInfoCode"), o = s.attr("index"), n = this.collection[o];
            if (n) {
                var r = n.Email[0].FamilyEmail || i.sender, l = n.Mobile[0].FamilyMobile || "", c = n.AddrFirstName || $Email.getName(r);
                r && (this.operateCardContacts({
                    addContact: function () {
                        new M2012.UI.Dialog.ContactsEditor({
                            name: c,
                            email: r,
                            mobile: l,
                            fromCardData: t.extend(n, { AddrFirstName: c })
                        }).render().on("success", function () {
                            i.$("#showAddSign").hide(), i.hideEmailTipsInCard()
                        })
                    }, updateContact: function () {
                        i.updateContact({
                            data: t.extend(n, { AddrFirstName: c }), success: function () {
                                i.$("#showUpdateSign").hide()
                            }
                        })
                    }, existContact: function () {
                        top.M139.UI.TipMessage.show("联系人已存在", { delay: 1500 })
                    }, data: n, cardEmail: r, isClickVCardCode: !0
                }), top.BH && top.BH("readmail_signCode_addcontacts"))
            }
        }
    }))
}(jQuery, _, M139),

//M2012.Readmail.Iframe.Event.Model
function (e, t, i) {
    var a = e;
    i.View.ViewBase;
    i.namespace("M2012.Readmail.Iframe.Event.Model", Backbone.Model.extend({
        el: "",
        events: {},
        name: "M2012.Readmail.Iframe.Event.Model",
        readMeetingStatus: function (e, t) {
            i.HttpRouter.addRouter("calendar", ["calendar:getInviterStatus"]), this.callApi("calendar:getInviterStatus", e, function (e) {
                var i = a.parseJSON(e.responseText);
                i && "S_OK" == i.code && t(i["var"].status)
            })
        },
        reMetting: function (e, t) {
            this.callApi("calendar:updateInviteStatus", e, function (e) {
                var i = a.parseJSON(e.responseText);
                i && "S_OK" == i.code && t("S_OK")
            })
        },
        callApi: i.RichMail.API.call
    }))
}(jQuery, _, M139),

//M2012.Readmail.Iframe.Event.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Readmail.Iframe.Event.View", s.extend({
        el: "",
        events: "",
        name: "M2012.Readmail.Iframe.View",
        useScoutTemplate: ['<div id="useScoutTemplate" class="menuPop shadow menuShow " style="top: {top}; left: {left}; z-index: 9001; position: absolute;">', "<ul>", '<li data-selectopt="forwardSelect"><a href="javascript:;"><span class="text">转发选中</span></a></li>', '<li><span class="line"></span></li>', '<li data-selectopt="addTask"><a href="javascript:;"><span class="text">添加待办</span></a></li>', '<li><span class="line"></span></li>', '<li data-selectopt="saveToNote"><a href="javascript:;"><span class="text">转存笔记</span></a></li>', "</ul>", "</div>"].join(""),
        initialize: function (e) {
            return this.options = e, this.el = a(e.currentTab).find("iframe")[0], this.iframeDoc = e.win.document, this.contentJson = e.win.letterInfo, this.model = new M2012.Readmail.Iframe.Event.Model, s.prototype.initialize.apply(this, arguments)
        },
        render: function () {
            this.contentJson && this.contentJson.meetingInfo && (this.meetingData = this.contentJson.meetingInfo, this.showMeeting()), this.bindEvent()
        },
        bindEvent: function () {
            var e = this;
            $App.getCurrentTab().element;
            a("#changenumber_sendmail", this.iframeDoc).click(function (t) {
                return e.changenumber(), !1
            }), a(this.options.currentTab).on("click", "#importActBtn,#importRefuBtn", function (t) {
                var i = t.target;
                return e.reMeeting(i), !1
            }), a("#enterStrokeList", this.iframeDoc).length > 0 && top.BH("readSendStroke"), a("#enterStrokeList", this.iframeDoc).click("#enterStrokeList", function () {
                return top.BH("enterStrokeList"), top.$App.searchMail({
                    fid: 1,
                    exceptFids: [4],
                    isFullSearch: 0,
                    condictions: [{ field: "sendId", operator: "=", value: 1000011 }]
                }), !1
            }), a(this.iframeDoc).mouseup(function (t) {
                var s = 1 == top.$App.getCustomAttrs("forward_mc");
                if (s) {
                    e.options.currentTab = top.$App.getCurrentTab().element;
                    var o = e.options.win;
                    setTimeout(function () {
                        if (e.getSelection().replace(/\s/g, "")) {
                            var s = e.getSelectionHtml(o);
                            e.model.set("selectionHtml", s), e.mouseOffset = e.initMouseOffset(t), a(e.options.currentTab).find("#useScoutTemplate").length ? a(e.options.currentTab).find("#useScoutTemplate").css(e.mouseOffset).show() : (a(e.options.currentTab).find("#contentText").before(i.Text.Utils.format(e.useScoutTemplate, e.mouseOffset)), e.initSelectEvent())
                        }
                    }, 100)
                }
            }).click(function (t) {
                a(e.options.currentTab).find("#useScoutTemplate").hide()
            })
        },
        showMeeting: function () {
            var e = this, t = $Date.format("yyyy/MM/dd hh:mm", new Date(1e3 * this.meetingData.meetingStart)), i = $Date.format("yyyy/MM/dd hh:mm", new Date(1e3 * this.meetingData.meetingEnd)), s = {
                noStatus: "none",
                acct: "none",
                refuse: "none",
                meetMain: "none"
            }, o = { tid: this.meetingData.uid, organizer: this.meetingData.organizer.slice(7) };
            this.model.readMeetingStatus(o, function (o) {
                var n = a("#meetingInviteRefuseDiv", e.iframeDoc).length;
                if (!e.mailIsUser() && 0 == n) {
                    switch (o) {
                        case 0:
                            s.noStatus = "block";
                            break;
                        case 1:
                            s.acct = "block";
                            break;
                        case 2:
                            s.refuse = "block";
                            break;
                        default:
                            s.noStatus = "block"
                    }
                    s.meetMain = "block"
                }
                var r = ['<div class="sectionInvitation" style="display: ' + s.meetMain + '">', '<div class="sectionInvitation-l">', '<p class="sectionInvitation-p">时间：', t, " - ", i, "</em></p>", '<p class="sectionInvitation-p">地点：', e.meetingData.location, "</p>", "</div>", '<div class="sectionInvitation-r">', '<span class="bibBtn" style="display:' + s.noStatus + '"><span class="loadDing" id="loading" style="display: none;"></span><a class="icoG btnSure MB_But_0 YesButton" rel="0" href="javascript:void(0);" id="importActBtn"><span>接受</span></a> <a class="icoTb btnNormal MB_But_1 CancelButton" rel="1" href="javascript:void(0);" id="importRefuBtn"><span>谢绝</span></a></span>', '<div class="sectionInvitation-rp" style="display:' + s.acct + ";\">您已接受，<a href=\"javascript:top.BH('checkMeeting');top.$App.showChannel('calendar')\">去日历查看该活动</a></div>", '<div class="sectionInvitation-rp" style="display:' + s.refuse + ';">您已谢绝</div>', "</div>", "</div>"].join("");
                a(e.el).parents("#contentText").parent().css("position", "relative"), a(r).insertBefore(a(e.el).parents("#contentText").parent())
            })
        },
        mailIsUser: function () {
            for (var e = top.UserData.uidList || [], t = top.$Email.getName(this.contentJson.meetingInfo.organizer.replace(/mailto:/i, "")), i = 0; i < e.length; i++) if (t == e[i]) return !0;
            return !1
        },
        reMeeting: function (e) {
            var t = 0;
            "importRefuBtn" == a(e).parent().attr("id") ? (t = 1,
                top.BH("meetingReq")) : top.BH("meetingAct");
            var i = {
                tid: this.meetingData.uid,
                actionType: t,
                subject: this.meetingData.subject,
                location: this.meetingData.location,
                organizer: this.meetingData.organizer.slice(7),
                meetingStart: this.meetingData.meetingStart,
                meetingEnd: this.meetingData.meetingEnd
            };
            this.model.reMetting(i, function (e) {
                if ("S_OK" == e) {
                    var i = $App.getCurrentTab().element;
                    a(i).find(".sectionInvitation-rp:eq(" + t + ")").show().siblings().hide()
                }
            })
        },
        changenumber: function () {
            var e = a(this.el).find("span:eq(0)").text();
            top.BH && top.BH("ChangeNumber");
            var t = Contacts.getData(), i = "", s = "", o = "您的好友" + $User.getSendName() + "变更了Email地址，请更新", n = "<p style='margin:0;'>Hi，</p><p style='margin:0;padding-left:20px;'>我的139邮箱地址已经变更，新的Email地址为：</p><span style='color:#00B615;font-weight:bold;'>" + e + "</span>，旧的号码邮箱已不能收取邮件，请及时更新你的通迅录，有空常联系哦~";
            if (a("#chkemail:checked", this.iframeDoc).length > 0) if (t.vip.contacts.length > 0) {
                var r = [];
                a(t.vip.contacts).each(function (e, i) {
                    a(t.contacts).each(function (e, t) {
                        i == t.SerialId && r.push(t.FamilyEmail)
                    })
                }), s = r.join()
            } else if (t.lastestContacts.length > 0) {
                var i = [];
                a(t.lastestContacts).each(function (e, t) {
                    5 > e && i.push(t.AddrContent)
                }), s = i.join()
            }
            $Evocation.create("type=1&to=4&specify=" + s + ";&subject=" + o + "&content=" + n + "&sendTime=2015-12-12 18:22:22")
        },
        getSelectionHtml: function (e) {
            var t = "";
            if ("undefined" != typeof e.getSelection) {
                var i = e.getSelection();
                if (i.rangeCount) {
                    for (var a = e.document.createElement("div"), s = 0, o = i.rangeCount; o > s; ++s) a.appendChild(i.getRangeAt(s).cloneContents());
                    t = a.innerHTML
                }
            } else "undefined" != typeof e.document.selection && "Text" == e.document.selection.type && (t = e.document.selection.createRange().htmlText);
            return t
        },
        getSelection: function () {
            var e, t = this.options.win;
            return t.getSelection ? e = t.getSelection().toString() : t.document.selection && t.document.selection.createRange && (e = t.document.selection.createRange().text), e
        },
        initMouseOffset: function (e) {
            var t = this.options.win, i = e.pageX - a(t).scrollTop(), s = e.pageY - a(t).scrollLeft(), o = a(this.options.currentTab).find("#readmail_container"), n = o.height() + o.scrollTop() - a(this.options.currentTab).find("#leftPart").height() - 10, r = (a(t).width(), {}), l = a(this.options.currentTab).find("#contentText").parent()[0].offsetTop;
            return 274 > i ? r.left = i + 10 + "px" : r.left = i - 261 + "px", n - s > 38 ? r.top = s + l + 15 + "px" : r.top = s + l - 42 + "px", r
        },
        initSelectEvent: function (e) {
            var t = this, i = this.options.mid, s = e;
            a(t.options.currentTab).find("#useScoutTemplate").click(function (e) {
                var o = t, n = e.target, r = a(n).closest("li").data().selectopt, l = t.model.get("selectionHtml") || s, c = $App.getMailDataByMid(i).subject;
                switch (r) {
                    case "forwardSelect":
                        $App.show("compose", {
                            mid: i,
                            type: "forward",
                            lastTabName: "mailbox_1"
                        }, { inputData: { replaceOldContent: l } });
                        break;
                    case "addTask":
                        top.Package.require("readmail_ext", function () {
                            var e = new Date;
                            e.setHours(9), e.setMinutes(0);
                            var t = {
                                container: a($App.getCurrentTab().element).find("#contentText"),
                                title: o.getSelection() || s,
                                week: "",
                                mid: i,
                                datetime: new Date(e),
                                attr: "wordKey",
                                tipHtml: "添加成功"
                            }, n = a(o.options.currentTab).find("#readmail_container"), r = n.height() + n.scrollTop() - a(o.options.currentTab).find("#leftPart").height() - 10, l = parseInt(o.mouseOffset && o.mouseOffset.left), c = parseInt(o.mouseOffset && o.mouseOffset.top);
                            if (230 > r - c && (c -= 220), !o.mouseOffset) {
                                var d = a(".calNotifyLink", o.iframeDoc).eq(0);
                                l = d.offset().left, c = d.offset().top + d.height() + 12
                            }
                            o.activity_popup = new M2012.ReadMail.PopupActivity.Normal(t).render(), o.activity_popup.$el.find(".tipsTop.diamond").remove(), o.activity_popup.show(l, c)
                        });
                        break;
                    case "saveToNote":
                        c && (c = c.replace(/Fw:|Re:/gi, "")), $App.show("note", { mid: i }, {
                            inputData: {
                                content: l,
                                title: c,
                                hasNote: !0
                            }
                        })
                }
            })
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.RiskTips.Model
function (e, t, i) {
    i.namespace("M2012.ReadMail.RiskTips.Model", Backbone.Model.extend({
        defaults: {
            fid: null,
            mid: null,
            dataSource: null
        },
        isEnable: function () {
            var e = this, t = this.get("fid"), i = this.get("dataSource"), a = $Email.getEmail(i.account);
            if ($.inArray(a, e.getMyAccount()) > -1) return !1;
            if ($.inArray(a, e.getSysAccount()) > -1) return !1;
            for (var s = ["_cmpost", "_smpost", "servicedm.com", "jinrongedm.com", "licaiedm.com", "baoxianedm.com"], o = 0; o < s.length; o++) {
                var n = s[o];
                if (a.indexOf(n) >= 0) return !1
            }
            return i.headers && (i.headers["X-RICHINFO"] || i.headers.subscriptionFlag > 0 || i.headers.billFlag > 0) ? !1 : i.sessionMails && i.sessionMails.length > 1 ? !1 : 9 == t && $App.isLocalDomainAccount(i.account) ? !1 : !i.headers || "" == i.headers.Sender
        },
        isDisableImg: function () {
            var e = this, t = this.get("fid");
            if (e.isEnable()) {
                if (5 == t || 11 == t) return !0;
                if (this.isStranger(this.get("dataSource").account)) return this.set("stranger", !0), !0
            }
        },
        getReadGroupId: function () {
            for (var e = Contacts.getModel().getGroupList(), t = 0; t < e.length; t++) if ("读信联系人" == e[t].name) return e[t].id
        },
        isStranger: function (e) {
            if (e = $Email.getEmail(e), this.set("contactEmail", e), $.inArray(e, this.getMyAccount()) > -1) return !1;
            var t = this.getContactType(e);
            return "common" != t && "readmail" != t
        },
        getContactType: function (e) {
            var t = Contacts.getContactsByEmail(e);
            if (t && t.length > 0) {
                this.set("contactId", t[0].SerialId);
                var i = Contacts.getContactsGroupById(t[0].SerialId), a = i.length > 0 ? i[0] : null, s = this.getReadGroupId();
                return a && a == s ? (this.set("readGroupId", a), "readmail") : "common"
            }
            return "none"
        },
        getMyAccount: function () {
            return $User.getAccountListArray().join(",").toLowerCase().split(",")
        },
        getSysAccount: function () {
            return $App.getSysAccount() || []
        },
        isBcc: function () {
            var e = !0, t = this.getMyAccount();
            if (1 == t.length && ("@139.com" == t[0].name || "" == t[0])) return !1;
            var i = this.get("dataSource"), a = i.to || "", s = i.cc || "", o = [];
            if (o = "" != a && "" != s ? a.split(",").concat(s.split(",")) : a.split(","), -1 != a.indexOf("_group@" + top.$App.getMailDomain())) return !1;
            for (var n = 0; n < o.length; n++) {
                var r = o[n], l = $Email.getEmail(r).toLowerCase();
                if ($.inArray(l, t) > -1) {
                    e = !1;
                    break
                }
            }
            return e
        },
        markMail: function (e, t, i) {
            top.M139.RichMail.API.call("mbox:updateMessagesStatus", {
                ids: e,
                type: t.type,
                value: t.value
            }, function (e) {
                i && i(e)
            })
        },
        isPropertySafe: function () {
            var e = [5, 6, 9, 11], t = this.get("fid") / 1;
            if ($.inArray(t, e) > -1) return !1;
            var i = this.get("dataSource");
            return !(!i.headers || 0 == i.headers.fraudFlag)
        },
        config: {
            1: [{ text: "您不在收件人里，可能这封邮件是密送或者自动转发给您的。", style: "color:gray" }],
            5: [{ text: "这是一封垃圾箱中的邮件，请勿轻信密保、汇款、中奖信息，请勿轻易拨打陌生电话。", trust: !0, refuse: !0 }, {
                text: "为了保护邮箱安全，内容中的图片未被显示。",
                showpic: !0,
                trust: !0,
                refuse: !0
            }, { text: "该邮件中包含附件，为保护邮箱安全，请勿轻易打开附件。", trust: !0, refuse: !0 }],
            6: [{ text: "这是一封病毒文件夹中的邮件，可能会损害您的电脑及帐号安全！", style: "color:red", refuse: !0 }],
            9: [{ text: "为营造健康的邮件环境，如果不是您订阅的邮件，请点击", style: "color:red", refuse: !0 }],
            11: [{
                text: "这是一封广告文件夹中的邮件，请勿轻信密保、汇款、中奖信息，请勿轻易拨打陌生电话。",
                trust: !0,
                refuse: !0
            }, {
                text: "这是一封广告文件夹中的邮件，内容中的图片未被显示。",
                showpic: !0,
                trust: !0,
                refuse: !0
            }, { text: "这是一封广告文件夹中的邮件，为保护邮箱安全，请勿轻易打开附件。", trust: !0, refuse: !0 }],
            propertySafe: [{ text: "邮件中可能有涉及账号或财产安全的操作，请先对发件人身份进行核实。", spam: "true" }],
            stranger: [{ text: "为了保护你的邮箱安全，我们对内容中的图片进行了屏蔽处理，你可以&nbsp;", showpic: !0, contact: !0, refuse: !0 }]
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.RiskTips.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.ReadMail.RiskTips.View", s.extend({
        template: {
            tips: ['<div id="risktips" class="mail-shield" style="{style}">', '<span class="rMl" style="display:none">提　醒：</span>', '<div class="rMr">', "{tips}", "</div>", "</div>"].join(""),
            line: '<span class="line"> | </span>',
            trust: '<a href="javascript:;" id="trust" key="white">信任此人</a>',
            contact: '<a href="javascript:;" id="contact" key="contact">信任此人</a>',
            refuse: '<a href="javascript:;" id="refuse" key="black" >拒收此人</a>',
            showpic: '<a href="javascript:;" id="showpic" >显示图片</a>',
            spam: '<a href="javascript:;" id="spam" key="spam">点击举报</a>'
        }, initialize: function (e) {
            var i = this;
            return this.model = new M2012.ReadMail.RiskTips.Model, i.off("showEditorTips").on("showEditorTips", function (e) {
                top.$App.trigger("handlerEditorAt", function (s) {
                    var o = ["", '<div id="readmailAtTips" class="rMList clearfix mb_10" bh="compose_clickAtTip">', '<a href="javascript:;" class="read-remind">有人@我，点击查看@我的内容</a>', "</div>"].join(""), n = o;
                    setTimeout(function () {
                        a(i.el).find("div#readmailAtTips").unbind("click").click(function (e) {
                            var t = a(this);
                            if (t.length) {
                                var o = a(i.el).find("#readmail_container"), n = o.offset().top, r = a(s).offset().top, l = i.model.get("dataSource").omid;
                                i.model.markMail([l], { type: "atRemind", value: 0 }, function () {
                                    o.animate({ scrollTop: r - n }, 100), $App.trigger("reloadFolder", { reload: !0 })
                                }), top.BH("compose_atremind_look"), t.remove()
                            }
                        })
                    }, 100), t.isFunction(e) && e(n)
                })
            }), s.prototype.initialize.apply(this, arguments)
        }, showContentImg: function () {
            function e(e) {
                return e.match(/(javascript)|(expression)/gi) ? "" : e
            }

            var t = this, i = this.model.get("dataSource"), s = (this.model.get("fid"), "mid_" + i.omid), o = a($T.Utils.format("iframe[id={0}]", [s])).contents();
            o.find("img").each(function () {
                var t = a(this).attr("original");
                t && a(this).attr("src", e(t)).show()
            }), o.find("[_background]").each(function () {
                a(this).css("background", e(a(this).attr("_background")))
            }), o.find("[_background-image]").each(function () {
                a(this).css("background-image", e(a(this).attr("_background-image")))
            }), a(t.el).find("#showpic").remove()
        }, addBlackAndWhite: function (e, t) {
            var i = this.model.get("dataSource"), a = $Email.getEmail(i.account);
            if (a) {
                var s = { name: a, comefrom: "readmail" };
                $App.addBlackWhite(e, s, t)
            }
        }, refuse: function (e, t) {
            var a = this.model.get("dataSource"), s = i.Text.Email.getEmail(a.account);
            top.$App.trigger("mailCommand", { command: "refuseMail", email: s })
        }, spam: function () {
            var e = this;
            $App.trigger("mailCommand", {
                command: "spam",
                mids: [e.model.get("dataSource").omid],
                comefrom: "risktips_spam"
            })
        }, moveMessage: function (e) {
            var t = this;
            $App.trigger("mailCommand", { command: "move", fid: e, mids: [t.model.get("dataSource").omid] })
        }, contact: function () {
            var e = this;
            if ("readmail" == this.model.getContactType(this.model.get("contactEmail"))) Contacts.deleteContactsFromGroup(this.model.get("readGroupId"), this.model.get("contactId"), function () {
                e.showContentImg(), a(e.el).find("#risktips").remove(), i.UI.TipMessage.show("操作成功", { delay: 3e3 })
            }); else {
                BH("contactscard_add");
                var t = this.model.get("dataSource").account, s = $Email.parseEmail(t);
                M2012.Contacts.API.addContacts({ name: s[0].name, email: s[0].addr }, function (t) {
                    if (t.success) top.M139.UI.TipMessage.show("操作成功", { delay: 3e3 }), e.showContentImg(), a(e.el).find("#risktips").remove(); else {
                        var i = "操作失败，请重试";
                        t.msg && (i = t.msg), top.M139.UI.TipMessage.show(i, { className: "msgRed", delay: 3e3 })
                    }
                })
            }
        }, trust: function (e, t) {
            top.$App.trigger("mailCommand", { command: "unSpam" })
        }, initEvents: function () {
            var e = this, t = a(e.el).find("#risktips .rMr");
            t.find("a[id=trust]").click(function (t) {
                e.trust(t)
            }), t.find("a[id=refuse]").click(function (t) {
                e.refuse(t)
            }), t.find("a[id=showpic]").click(function () {
                e.showContentImg()
            }), t.find("a[id=spam]").click(function (t) {
                e.spam(t)
            }), t.find("a[id=contact]").click(function (t) {
                e.contact(t)
            })
        }, hasImg: function () {
            this.model.get("dataSource");
            return !!this.model.get("disableSuccess")
        }, hasAttach: function () {
            var e = this.model.get("dataSource");
            return e.attachments.length > 0
        }, render: function () {
            var e = this, t = this.model.get("fid"), s = this.model.config, o = "", n = this.model.get("dataSource").headers.atRemind;
            1 == n && top.BH && top.BH("maillist_click_atMe");
            var r = $Email.getEmail(this.model.get("dataSource").account);
            return a.inArray(r, e.model.getMyAccount()) > -1 && 1 == n ? (e.trigger("showEditorTips", function (e) {
                o = e
            }), o) : (e.model.isEnable() && (5 == t || 11 == t ? o = e.hasImg() ? e.getItemHtml(s[t][1]) : e.hasAttach() ? e.getItemHtml(s[t][2]) : e.getItemHtml(s[t][0]) : 6 == t || 9 == t ? o = e.getItemHtml(s[t][0]) : e.model.isPropertySafe() ? (top.BH("readmail_showpropertysafetip"), o = e.getItemHtml(s.propertySafe[0])) : this.model.get("stranger") ? e.hasImg() ? (o = e.getItemHtml(s.stranger[0]), setTimeout(function () {
                i.Dom.flashElement(a($App.getCurrentTab().element).find("#risktips"))
            }, 200)) : e.model.isBcc() && (o = e.getItemHtml(s[1][0])) : 1 == t ? (e.model.isBcc() && (o = e.getItemHtml(s[1][0])), 1 == n && e.trigger("showEditorTips", function (e) {
                o = e
            })) : t > 10 && 1 == n && e.trigger("showEditorTips", function (e) {
                o = e
            })), o)
        }, getAgentHtml: function () {
            var e = this, t = e.model.get("dataSource"), a = "";
            try {
                if (t.sender && void 0 != t.sender) {
                    var s = i.Text.Email.getEmail(t.account), o = $Email.getEmail(t.sender), n = o;
                    o.length > 30 && (n = o.slice(0, 21) + "..."), s != o && (a = '<span class="issuing-name gray"><em title="' + o + '">（由' + n + '代发）</em><i class="i_icoQue questionMark"></i></span>')
                }
            } catch (r) {
            }
            return a
        }, getItemHtml: function (e) {
            var t = this, i = t.template.tips, a = t.template.refuse, s = t.template.trust, o = t.template.contact, n = t.template.showpic, r = t.template.spam, l = t.template.line, c = [];
            c.push("<em>" + e.text + "</em>"), e.showpic && c.push(n), e.trust && (e.showpic ? c.push(l + s) : c.push(s)), e.contact && (e.showpic ? c.push(l + o) : c.push(o)), e.refuse && (e.trust || e.contact ? c.push(l + a) : c.push(a)), e.spam && c.push(r);
            var d = { style: e.style || "", tips: c.join("") };
            return $T.Utils.format(i, d)
        }
    }))
}(jQuery, _, M139),

//M2012.ReadMail.ScrollBar.View
function (e, t, i) {
    var a = i.View.ViewBase, s = !1;
    i.namespace("M2012.ReadMail.ScrollBar.View", a.extend({
        initialize: function (e) {
            this.options = e || {};
            var t = $(this.template);
            this.setElement(t), this.widthEl = $(this.options.widthEl), this.contentChild = $(this.el.firstChild);
            var i = e.contentIframe.contentWindow;
            return this.scrollContent = i.document.documentElement, $(e.contentIframe).addClass("ReadMailContentIframe"), $B.is.ie && $B.getVersion() < 9 || $B.is.firefox ? (i.document.body.style.overflowX = "hidden", i.document.documentElement.style.overflowX = "hidden", i.document.getElementsByTagName("html")[0].style.overflowX = "hidden") : s || $B.is.webkit && (i.document.getElementsByTagName("html")[0].style.overflowX = "hidden"), a.prototype.initialize.apply(this, arguments)
        },
        template: ['<div class="M2012_ReadMail_ScrollBar_View" style="position:absolute;left:0px;padding-left:20px;bottom:0;overflow-x:scroll;overflow-y:hidden;height:25px;">', "<div>&nbsp;</div>", "</div>"].join(""),
        render: function () {
            var e = this;
            "left" == $App.getLayout() && $(".M2012_ReadMail_ScrollBar_View").remove(), this.$el.appendTo(this.options.container);
            var t = setInterval(function () {
                i.Dom.isRemove(e.el) || !e.options.contentIframe.contentWindow ? (clearInterval(t), e.update = new Function) : i.Dom.isHide(e.el, !0) || e.update()
            }, 2e3);
            return this.bindEvents(), a.prototype.render.apply(this, arguments)
        },
        update: function () {
            var e = this.widthEl.width() - 55;
            this.$el.width(e);
            var t = this.getIframeScrollWidth();
            this.contentChild.width(t), this.el.scrollLeft = this.getIframeScrollLeft(), 20 > t - e ? this.hide() : this.show()
        },
        isIframeScrollInView: function () {
            var e = this.getIFrameScrollParent();
            return console.log("div.scrollHeight" + e.scrollHeight + "div.scrollTop" + e.scrollTop + "$(div).height()" + $(e).height()), e.scrollHeight - (e.scrollTop + $(e).height()) < 100
        },
        getIFrameScrollParent: function () {
            if (!this.iframeScrollParent) for (var e = this.options.contentIframe; e;) {
                if (e.style && "auto" == e.style.overflowY) {
                    this.iframeScrollParent = e;
                    break
                }
                e = e.parentNode
            }
            return this.iframeScrollParent
        },
        getIframeScrollWidth: function () {
            var e = this.options.contentIframe, t = e.contentWindow.document;
            return Math.max(e.scrollWidth, t.documentElement.scrollWidth, t.body.scrollWidth)
        },
        getIframeScrollLeft: function () {
            var e = this.options.contentIframe, t = e.contentWindow.document;
            return Math.max(t.documentElement.scrollLeft, t.body.scrollLeft, t.getElementsByTagName("html")[0].scrollLeft)
        },
        setIframeScrollLeft: function (e) {
            var t = this.options.contentIframe;
            if (t.contentWindow) {
                var i = t.contentWindow.document;
                i.documentElement.scrollLeft = e, i.body.scrollLeft = e, i.getElementsByTagName("html")[0].scrollLeft = e
            }
        },
        bindEvents: function () {
            var e = this;
            this.$el.bind("scroll", function () {
                e.setIframeScrollLeft(e.el.scrollLeft)
            }), $B.is.ie && $B.getVersion() >= 9 && $(this.getIFrameScrollParent()).bind("scroll", function () {
                e.isIframeScrollInView() ? e.$el.css("visibility", "hidden") : e.$el.css("visibility", "")
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Myapp.Model
function (e, t, i) {
    i.namespace("M2012.Myapp.Model", Backbone.Model.extend({
        defaults: {
            userData: null,
            offsetTop: null,
            joinList: !1,
            AppAll: [{
                order: 0,
                key: "14",
                icon: "i-appicon i-app-invoicing",
                text: "电子发票",
                behavior: "invoice_myapp",
                link: "javascript:top.$App.showBill(7);",
                desc: "电子发票",
                ext: "1",
                id: "invoice_link",
                alwaysShow: !0
            }, {
                order: 1,
                key: "1",
                icon: "i-appicon i-app-texting",
                text: "发短信",
                behavior: "left_sms",
                link: "sms",
                desc: "在邮箱发短信，打字更快更方便",
                id: "sms_link",
                ext: "1",
                alwaysShow: !0
            }, {
                order: 2,
                key: "2",
                icon: "i-appicon i-apps-sendmms",
                text: "发彩信",
                behavior: "left_mms",
                link: "mms",
                desc: "在邮箱发彩信，可添加动画及音乐",
                id: "mms_link",
                ext: "1",
                alwaysShow: !0,
                order: 2
            }, {
                order: 3,
                key: "3",
                icon: "i-appicon i-apps-sendcards",
                text: "发贺卡",
                behavior: "left_grettingcard",
                link: "greetingcard",
                desc: "精美的FLASH贺卡，为朋友送去最真诚的祝福",
                id: "greetingcard_link",
                order: 3
            }, {
                order: 4,
                key: "4",
                icon: "i-appicon i-apps-chargecalls",
                text: "充话费",
                behavior: "left_charge",
                link: "javascript:top.$App.show('mpostOnlineService', null, {title:'邮箱营业厅', key:'38159', inputData:{urlParams:{oct:'ipos', oac:'iposorder'}, key:'38159', columnId:'38159', columnName:'邮箱营业厅'}});",
                desc: "话费充值",
                ext: "1",
                id: "mobile_charge"
            }, {
                order: 5,
                key: "5",
                icon: "i-appicon i-apps-writenotes",
                text: "写笔记",
                behavior: "left_note",
                link: "javascript:$App.show('note')",
                desc: "记录瞬间想法，跨平台同步",
                id: "note_link"
            }, {
                order: 7,
                key: "6",
                icon: "i-appicon i-apps-transferphone",
                text: "传到手机",
                behavior: "left_sendToPhone",
                link: "javascript:top.$App.show('sendToPhone');",
                desc: "发送文件到好友手机",
                id: "quicklyShare_link"
            }, {
                order: 11,
                key: "7",
                icon: "i-appicon i-apps-leavemessage",
                text: "和留言",
                behavior: "voicemail_entry",
                link: "voiceMail",
                desc: "漏接电话或主动拒接电话时，为您提供语音留言和来电提醒服务",
                id: "voiceMail_link",
                alwaysShow: !1
            }, {
                order: 6,
                key: "8",
                icon: "i-appicon i-apps-attfolder",
                text: "附件夹",
                behavior: "left_attach",
                link: "javascript:$App.show('diskDev', {from:'attachment'})",
                desc: "管理邮件中的所有附件",
                id: "attach_link"
            }, {
                order: 7,
                key: "9",
                icon: "i-appicon i-apps-cabinet",
                text: "暂存柜",
                behavior: "left_quicklyShare",
                link: "javascript:$App.show('diskDev', {from:'cabinet'})",
                desc: "可上传G级超大文件，快递到任意邮箱、中国移动手机",
                id: "quicklyShare_link"
            }, {
                order: 10,
                key: "10",
                icon: "i-appicon i-apps-birthday",
                text: "生日管理",
                behavior: "left_colorfulEgg",
                link: "javascript:top.$App.show('colorfulEgg');",
                desc: "生日来临之际，有机会获得来自139邮箱或好友赠送的生日彩蛋",
                ext: "1",
                id: "colorfulEgg_link"
            }, {
                order: 9,
                key: "12",
                icon: "i-appicon i-apps-postcard",
                text: "明信片",
                behavior: "left_postcard",
                link: "javascript:top.$App.show('postcard');",
                desc: "免费精致的明信片，给亲朋好友送去温馨祝福",
                ext: "1",
                id: "postcard_link"
            }]
        }, initialize: function () {
            var e = this;
            i.Timing.waitForReady('$App.getAttrs("uid")', function () {
                e.getMyapp()
            })
        }, getMyapp: function (e) {
            var t = this, i = $App.getCustomAttrs("myAppList").trim().split(",");
            t.set("myAppList", i), e && e()
        }, setMyApp: function (e, i) {
            var a = this, s = a.get("myAppList") || [];
            t.indexOf(s, e) > -1 ? (s = t.without(s, e), "14" == e && BH("invoice_pin_cancel")) : (s.push(e), "14" == e && BH("invoice_pin")), $App.setCustomAttrs("myAppList", s.join(","), function (o) {
                a.set("myAppList", s), o && "S_OK" == o.code ? (top.M139.UI.TipMessage.show("操作成功", { delay: 1e3 }), i()) : (top.M139.UI.TipMessage.error("网络异常，操作失败，请稍后重试", {
                    classsName: "msgRed",
                    delay: 1e3
                }), t.indexOf(s, e) > -1 ? s = t.without(s, e) : s.push(e), a.set("myAppList", s))
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Myapp.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Myapp.View", s.extend({
        el: "body",
        template: {
            link: ['<li type="myapp">', '<a href="{link}" title="{title}" bh="{behavior}">', '<i class="{icon}"></i>', "<span>{text}</span>", "</a>", "</li>"].join(""),
            popitem: ['<dd class="{showState}" key = "{key}" bh="{behavior}">', '<i class="i-brooch"></i>', '<a class="afixed" href="javascript:;" title="固定在导航栏显示" >固定显示</a>', '<a class="acancel" href="javascript:;" title="取消在导航栏显示">取消显示</a>', '<a href="{link};" title="{title}">', '<i class="{icon}"></i>', '<span class="appname">{text}</span>', "</a>", "</dd>"].join(""),
            popdiv: ['<div class="featuredapp" id="adminMyApp" style="position:absolute;{0};z-index:9999;width:169px;padding:0;">', '<div class="list" style="height:347px;">', "<dl>{1}</dl>", "</div>", "</div>"].join("")
        },
        events: {
            "click #listAppsSwitch": "switchMyappList",
            "click #adminMyApp .afixed": "setMyApp",
            "click #adminMyApp .acancel": "setMyApp",
            "click #commonSms,#commonSmstext": "gocommonSms",
            "click #newyearSms": "gonewyearSms"
        },
        initialize: function () {
            return this.model = new M2012.Myapp.Model, s.prototype.initialize.apply(this, arguments)
        },
        initEvents: function () {
            var e = this;
            a("#listAppsSwitch").parent().hover(function () {
                e.showPopDiv(), a("#adminMyApp").hover(function () {
                    clearTimeout(e.timeoutId)
                }, function () {
                    a("#adminMyApp").remove()
                })
            }, function () {
                e.timeoutId = setTimeout(function () {
                    a("#adminMyApp").remove()
                }, 50)
            }), $App.on("folderRendered", function () {
                e.render()
            })
        },
        switchMyappList: function () {
            var e = this;
            a("#adminMyApp").length ? a("#adminMyApp").remove() : (e.showPopDiv(), a("#adminMyApp").hover(function () {
                clearTimeout(e.timeoutId)
            }, function () {
                a("#adminMyApp").remove()
            }))
        },
        setMyApp: function (e) {
            var t = this;
            this.model.setMyApp(a(e.target).parents("dd[key]").attr("key"), function () {
                t.render()
            })
        },
        initPopEvent: function () {
            var e = this;
            i.Dom.bindAutoHide({
                action: "click", element: a("#adminMyApp")[0], callback: function (t) {
                    e.removePopDiv()
                }
            }), a("#adminMyApp dd").live("mouseover", function () {
                a(this).addClass("hover")
            }), a("#adminMyApp dd").live("mouseleave", function () {
                a(this).removeClass("hover")
            }), a("#adminMyApp dd a").live("click", function () {
            })
        },
        getOffsetTop: function () {
            var e = a("#listAppsSwitch").offset().top, t = a("#adminMyApp").height(), i = e - t;
            return i > 10 ? i : 10
        },
        showPopDiv: function () {
            for (var e = this, i = e.template.popdiv, s = "z-index:999;left:14px;", o = e.model.get("AppAll"), n = e.model.get("myAppList"), r = e.template.popitem, l = [], c = o.length, d = 0; c > d; d++) {
                var p = "javascript:$App.jumpTo('{0}')", m = "", u = o[d].link;
                m = /javascript/i.test(u) || o[d].target ? u : /https?:/i.test(u) ? u : $T.Utils.format(p, [o[d].link]), l.push($T.Utils.format(r, {
                    link: m,
                    text: o[d].text,
                    key: o[d].key,
                    icon: o[d].icon,
                    title: o[d].desc,
                    behavior: o[d].behavior,
                    showState: t.indexOf(n, o[d].key) > -1 ? "choose" : ""
                }))
            }
            i = $T.Utils.format(i, [s, l.join("")]), a("#adminMyApp").length < 1 && a("body").append(i);
            var h = e.getOffsetTop();
            a("#adminMyApp").css("top", h), e.initPopEvent()
        },
        removePopDiv: function () {
            a("#adminMyApp").remove()
        },
        findIndex: function (e, t) {
            for (var i = 0; i < e.length; i++) if (e[i].key == t) return i;
            return -1
        },
        addListElem: function (e) {
            var t = this, i = t.model.get("AppAll"), s = t.findIndex(i, e), o = t.template.link;
            if (s > -1) {
                var n = i[s], r = "javascript:$App.jumpTo('{0}')", l = "", c = n.link;
                l = /javascript/i.test(c) || n.target ? c : /https?:/i.test(c) ? c : $T.Utils.format(r, [n.link]), a("#folder_main li:last").before($T.Utils.format(o, {
                    link: l,
                    text: n.text,
                    key: n.key,
                    icon: n.icon,
                    title: n.desc,
                    behavior: n.behavior
                }))
            }
        },
        render: function () {
            var e = this, t = e.model.get("myAppList");
            a("#folder_main").find("[type=myapp]").remove();
            var i = $App.getCustomAttrs("folderSet"), s = i.substr(9, 2);
            "00" == s && 1 == t.length ? a("#folder_main").find("#bottomLi-td").hide() : a("#folder_main").find("#bottomLi-td").show();
            for (var o = 0; o < t.length; o++) e.addListElem(t[o]);
            var n = $App.getView("folder");
            n && n.resizeSideBar(), e.afterrender(), top.$App.showOnce("smsNewyear", function () {
                if (console.log("新增需求,短信入口默认开启一次"), "" == t) {
                    e.model.set("myAppList", ["1"]);
                    var i = ['<li id="gosmsSend" style=""><a bh="" hidefocus="" title="发短信" href="javascript:;"><i class="i-appicon i-app-texting" id="commonSms"></i><span id="commonSmstext">发短信</span><i class="i-appicon i-app-fu" id="newyearSms"></i></a></li>'].join("");
                    a("#folder_main li:last").before(i)
                }
            })
        },
        afterrender: function () {
            var e = ['<div id="gosmsSend" style=""><a bh="" hidefocus="" title="发短信" href="javascript:;"><i class="i-appicon i-app-texting" id="commonSms"></i><span id="commonSmstext">发短信</span><i class="i-appicon i-app-fu" id="newyearSms"></i></a></div>'].join(""), t = a("#folder_main").find("li[type=myapp]").find("a[bh=left_sms]").length || 0;
            t > 0 && (a("#folder_main").find("#gosmsSend").remove(), a("#folder_main").find("a[bh=left_sms]").parent().html(e))
        },
        gocommonSms: function () {
            top.$App.show("sms")
        },
        gonewyearSms: function () {
            top.BH("smswin_fu"), top.$App.show("sms", "&newYear=1")
        }
    }))
}(jQuery, _, M139),

//M2015.Myapp.Model
function (e, t, i) {
    i.namespace("M2015.Myapp.Model", Backbone.Model.extend({
        defaults: {
            userData: null,
            offsetTop: null,
            joinList: !1,
            AppAll: [{
                order: 1,
                key: "1",
                icon: "i-app-fdx",
                text: "发短信",
                behavior: "left_sms",
                link: "javascript:$App.jumpTo('sms')",
                desc: "在邮箱发短信，打字更快更方便",
                id: "sms_link",
                ext: "1",
                alwaysShow: !0
            }, {
                order: 2,
                key: "2",
                icon: "i-app-fcx",
                text: "发彩信",
                behavior: "left_mms",
                link: "javascript:$App.jumpTo('mms')",
                desc: "在邮箱发彩信，可添加动画及音乐",
                id: "mms_link",
                ext: "1",
                alwaysShow: !0,
                order: 2
            }, {
                order: 3,
                key: "3",
                icon: "i-app-fhk",
                text: "发贺卡",
                behavior: "left_grettingcard",
                link: "javascript:$App.jumpTo('greetingcard')",
                desc: "精美的FLASH贺卡，为朋友送去最真诚的祝福",
                id: "greetingcard_link",
                order: 3
            }, {
                order: 4,
                key: "4",
                icon: "i-app-chf",
                text: "充话费",
                behavior: "left_charge",
                link: "javascript:top.$App.show('mpostOnlineService', null, {title:'邮箱营业厅', key:'38159', inputData:{urlParams:{oct:'ipos', oac:'iposorder'}, key:'38159', columnId:'38159', columnName:'邮箱营业厅'}});",
                desc: "话费充值",
                ext: "1",
                id: "mobile_charge"
            }, {
                order: 5,
                key: "5",
                icon: "i-app-xbj",
                text: "写笔记",
                behavior: "left_note",
                link: "javascript:$App.show('note')",
                desc: "记录瞬间想法，跨平台同步",
                id: "note_link"
            }, {
                order: 7,
                key: "6",
                icon: "i-app-fsj",
                text: "传到手机",
                behavior: "left_sendToPhone",
                link: "javascript:top.$App.show('sendToPhone');",
                desc: "发送文件到好友手机",
                id: "quicklyShare_link"
            }, {
                order: 11,
                key: "7",
                icon: "i-app-hly",
                text: "和留言",
                behavior: "voicemail_entry",
                link: "javascript:$App.jumpTo('voiceMail')",
                desc: "漏接电话或主动拒接电话时，为您提供语音留言和来电提醒服务",
                id: "voiceMail_link",
                alwaysShow: !1
            }, {
                order: 6,
                key: "8",
                icon: "i-app-fjj",
                text: "附件夹",
                behavior: "left_attach",
                link: "javascript:$App.show('diskDev', {from:'attachment'})",
                desc: "管理邮件中的所有附件",
                id: "attach_link"
            }, {
                order: 7,
                key: "9",
                icon: "i-app-zcg",
                text: "暂存柜",
                behavior: "left_quicklyShare",
                link: "javascript:$App.show('diskDev', {from:'cabinet'})",
                desc: "可上传G级超大文件，快递到任意邮箱、中国移动手机",
                id: "quicklyShare_link"
            }, {
                order: 10,
                key: "10",
                icon: "i-app-srgl",
                text: "生日管理",
                behavior: "left_colorfulEgg",
                link: "javascript:top.$App.show('colorfulEgg');",
                desc: "生日来临之际，有机会获得来自139邮箱或好友赠送的生日彩蛋",
                ext: "1",
                id: "colorfulEgg_link"
            }, {
                order: 9,
                key: "12",
                icon: "i-app-mxp",
                text: "明信片",
                behavior: "left_postcard",
                link: "javascript:top.$App.show('postcard');",
                desc: "免费精致的明信片，给亲朋好友送去温馨祝福",
                ext: "1",
                id: "postcard_link"
            }, {
                order: 0,
                key: "14",
                icon: "i-app-fp",
                text: "电子发票",
                behavior: "invoice_myapp",
                link: "javascript:top.$App.showBill(7);",
                desc: "电子发票",
                ext: "1",
                id: "invoice_link",
                alwaysShow: !0
            }, {
                order: 0,
                key: "15",
                icon: "i-app-sys",
                text: "实验室",
                behavior: "left_lab",
                link: "javascript:top.$App.show('uecLab');",
                desc: "实验室",
                ext: "1",
                id: "lib_link"
            }, {
                order: 0,
                key: "16",
                icon: "i-app-paper",
                text: "问卷调研",
                behavior: "",
                link: "javascript:top.$App.showQuestionSurvey();",
                desc: "轻度的问卷制作，深度的行业调研",
                ext: "1",
                id: "questionSurvey_link"
            }, {
                order: 0,
                key: "17",
                icon: "i-app-vote",
                text: "在线投票",
                behavior: "voteSpecial",
                link: "javascript:top.$App.showVote();",
                desc: "简单、便捷的统计在线投票活动",
                ext: "1",
                id: "vote_link"
            }],
            myapp: null,
            mySettingApp: null,
            defaultApp: [1, 2, 3, 16, 17],
            defaultLastApp: 1,
            maxApp: 7,
            minApp: 1
        }, initialize: function () {
        }, getMyapp: function (e) {
            var i = this;
            if (!this.get("myapp") || e) {
                var a = $App.getCustomAttrs("myAppList").trim();
                if (!top.$User.isChinaMobileUser()) {
                    for (var s = i.get("defaultApp"), o = new Array, n = 0; n < s.length; n++) 1 != s[n] && 2 != s[n] && 4 != s[n] && 7 != s[n] && 7 != s[n] && o.push(s[n]);
                    s = o
                }
                if (!a) return this.set("myapp", this.get("defaultApp")), this.get("myapp");
                a = a.split(","), a = t.map(a, function (e) {
                    return parseInt(e, 10)
                }), a = i.deleteNoneKey(t.compact(a));
                var r = t.indexOf(a, this.getDefaultLastAppKey());
                (-1 == r || r > this.getMaxAppNum() - 1) && a.unshift(this.getDefaultLastAppKey()), a.length < this.getMinAppNum() ? this.set({ myapp: s }) : a.length > this.getMaxAppNum() ? this.set({ myapp: a.slice(0, this.getMaxAppNum()) }) : this.set("myapp", a)
            }
            return this.get("myapp")
        }, getMySettingApp: function (e) {
            return this.get("mySettingApp") && !e || this.set("mySettingApp", t.clone(this.getMyapp())), this.get("mySettingApp")
        }, deleteNoneKey: function (e) {
            var i = this;
            return t.filter(e, function (e) {
                return i.getAppByKey(e)
            })
        }, getDefaultLastAppKey: function () {
            return this.get("defaultLastApp")
        }, getSecSafeSwitch: function () {
            return this.get("secSafeSwitch") || this.set("secSafeSwitch", top.$App.getCustomAttrs("secSafeSwitch")), this.get("secSafeSwitch")
        }, getMyappString: function () {
            return this.getMySettingApp().join(",")
        }, getAppByKey: function (e) {
            var t = this, i = t.getAllApp();
            if (!top.$User.isChinaMobileUser()) {
                for (var a = t.get("defaultApp"), s = new Array, o = 0; o < a.length; o++) 1 != a[o] && 2 != a[o] && 4 != a[o] && 7 != a[o] && 7 != a[o] && s.push(a[o]);
                a = s
            }
            for (var n in i) if (i.hasOwnProperty(n)) {
                var r = i[n];
                if (r.key == e) return r
            }
            return !1
        }, getAllApp: function () {
            var e = this, t = e.get("AppAll");
            if (!top.$User.isChinaMobileUser()) {
                for (var i = new Array, a = 0; a < t.length; a++) {
                    var s = t[a];
                    1 != s.key && 2 != s.key && 4 != s.key && 7 != s.key && 14 != s.key && i.push(s)
                }
                t = i
            }
            return t
        }, getUnSetApp: function () {
            var e = this.getMySettingApp(), i = this.get("AppAll"), a = [];
            return t.each(i, function (i) {
                -1 == t.indexOf(e, parseInt(i.key, 10)) && a.push(parseInt(i.key, 10))
            }), a
        }, getMaxAppNum: function () {
            return this.get("maxApp")
        }, getMinAppNum: function () {
            return this.get("minApp")
        }, removeApp: function (e) {
            var i = this.get("mySettingApp");
            this.set("mySettingApp", t.without(i, e))
        }, setSecSafeSwitch: function (e) {
            this.set("secSafeSwitch", e)
        }, setMySettingApp: function (e, i) {
            var a = this.get("mySettingApp"), s = t.indexOf(a, e);
            -1 != s && (a[s] = !1), a.splice(i - 1, 0, e), this.set("mySettingApp", t.compact(a))
        }, setDefault: function () {
            this.set("mySettingApp", t.clone(this.get("defaultApp")))
        }, setAppForTest: function (e) {
            var t = this;
            $App.setCustomAttrs("myAppList", e, function () {
                t.getMyapp(!0), top.M139.UI.TipMessage.show("修改成功", { delay: 3e3 })
            })
        }
    }))
}(jQuery, _, M139),

//M2015.Myapp.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2015.Myapp.View", s.extend({
        initialize: function () {
            this.$el = a("#appSpecial"), this.initEvents()
        },
        renderIcon: function () {
            top.BH("appListIcon_load");
            var e = this.model.getSecSafeSwitch();
            "0" == e ? a("#appListIcon").hide() : a("#appListIcon").show()
        },
        renderMiniBox: function (e) {
            var i = this;
            e = t.isUndefined(e) ? !0 : e;
            var s = "", o = t.template(this.template.miniBox), n = this.model.getMyapp();
            t.each(n, function (e) {
                var t = this.model.getAppByKey(e);
                t && (s += o(this.model.getAppByKey(e)))
            }, this), s += this.template.moreApp, this.$el.find("#appList_mini ul").html(s), this.appListHold = !0, e ? this.showAppList_mini() : this.$el.find("#appList_mini").show(), this.$el.find("#moreApp").off("click").click(function () {
                top.BH("appList_more_click"), i.renderFullBox()
            }), a("#appList_mini").find("li").off("click").click(function () {
                i.hideAppList_mini()
            })
        },
        renderFullBox: function () {
            var e = this, i = "", s = t.template(this.template.fullBox), o = this.model.getAllApp();
            t.each(o, function (e) {
                i += s(e)
            }, this), this.$el.find("#appList_full ul").html(i), this.showAppList_full(), this.$el.find(".i-app-reduce").off("click").click(function () {
                e.hideAppList_full(!0, function () {
                    e.renderMiniBox(!1)
                })
            }), a("#appList_full").find("li").off("click").click(function () {
                e.hideAppList_full()
            })
        },
        initEvents: function () {
            var e = this;
            a("#appListIcon").click(function () {
                return top.BH("appListIcon_click"), a("#appList_mini").is(":visible") ? void e.hideAppList_mini() : a("#appList_full").is(":visible") ? void e.hideAppList_full() : void e.renderMiniBox()
            }), this.$el.find(".i-app-set").click(function () {
                top.BH("appList_more_setting"), top.$App.show("preference_secSafe"), e.$el.find("#appList_full").hide(), e.$el.find("#appList_mini").hide()
            });
            var t = function (t) {
                t.parents("#appSpecial").length || t.is(".i-icon-app") || (e.hideAppList_full(), e.hideAppList_mini())
            };
            top.$App.on("documentClick", function (e) {
                t(a(e))
            })
        },
        showAppList_mini: function () {
            var e = this;
            if (!this.hideMiniLock && !this.showMiniLock) {
                this.showMiniLock = !0, this.$el.find("#appList_mini").show();
                var t = a("#appList_mini").height(), i = a("#appList_mini").width();
                a("#appList_mini").css("height", 0), a("#appList_mini").css("width", 0), a("#appList_mini ul").hide();
                var s = 200;
                this.setHeight(a("#appList_mini"), [0, t], s), this.setWidth(a("#appList_mini"), [0, i], s, function () {
                    a("#appList_mini ul").show(), a("#appList_mini").css("height", "auto"), e.showMiniLock = !1
                })
            }
        },
        hideAppList_mini: function () {
            if (!a("#appList_mini").is(":hidden")) {
                var e = this;
                if (!this.hideMiniLock && !this.showMiniLock) {
                    this.hideMiniLock = !0;
                    var t = a("#appList_mini").height(), i = a("#appList_mini").width();
                    a("#appList_mini ul").hide();
                    var s = 150;
                    this.setHeight(a("#appList_mini"), [t, 0], s), this.setWidth(a("#appList_mini"), [i, 0], s, function () {
                        a("#appList_mini ul").show(), a("#appList_mini").hide(), a("#appList_mini").css("height", "auto"), a("#appList_mini").css("width", i + "px"), e.hideMiniLock = !1
                    })
                }
            }
        },
        showAppList_full: function () {
            var e = this;
            if (!this.showFullLock && !this.hideFullLock) {
                this.showFullLock = !0, this.$el.find("#appList_full").show();
                var t = a("#appList_full").height(), i = a("#appList_full").width(), s = a("#appList_mini").height(), o = a("#appList_mini").width();
                a("#appList_full").css("height", s + "px"), a("#appList_full").css("width", o + "px"), a("#appList_full ul").hide();
                var n = 200;
                this.setHeight(a("#appList_full"), [s, t], n), this.setWidth(a("#appList_full"), [o, i], n, function () {
                    a("#appList_full ul").show(), e.showFullLock = !1
                })
            }
        },
        hideAppList_full: function (e, t) {
            if (!a("#appList_full").is(":hidden")) {
                var i = this;
                if (!this.showFullLock && !this.hideFullLock) {
                    this.hideFullLock = !0;
                    var s = a("#appList_full").height(), o = a("#appList_full").width(), n = a("#appList_mini").height(), r = a("#appList_mini").width();
                    a("#appList_full ul").hide();
                    var l = 150;
                    this.setHeight(a("#appList_full"), [s, e ? n : 0], l), this.setWidth(a("#appList_full"), [o, e ? r : 0], l, function () {
                        a("#appList_full ul").show(), a("#appList_full").hide(), a("#appList_full").css("height", s + "px"), a("#appList_full").css("width", o + "px"), i.hideFullLock = !1, t && t()
                    })
                }
            }
        },
        setHeight: function (e, t, i, s) {
            function o() {
                return p > r ? void (s && s()) : void setTimeout(function () {
                    a(e).css("height", l + d * p + "px"), p++, o()
                }, n)
            }

            var n = 10, r = i / 10, l = t[0], c = t[1], d = (c - l) / r, p = 1;
            o()
        },
        setWidth: function (e, t, i, s) {
            function o() {
                return p > r ? void (s && s()) : void setTimeout(function () {
                    a(e).css("width", l + d * p + "px"), p++, o()
                }, n)
            }

            var n = 10, r = i / 10, l = t[0], c = t[1], d = (c - l) / r, p = 1;
            o()
        },
        template: {
            moreApp: ["<li>", '<div id="moreApp" class="appsDiv">', '<i class="icons i-app-gdyy"></i><span>更多应用</span>', "</div>", "</li>"].join(""),
            miniBox: ["<li>", '<div onclick="<%= link %>" class="appsDiv" title="<%= desc %>" bh="<%= behavior %>">', '<i class="icons <%= icon %>"></i><span><%= text %></span>', "</div>", "</li>"].join(""),
            fullBox: ['<li class="clearfix">', '<div onclick="<%= link %>" class="apps_r" title="<%= desc %>"  bh="<%= behavior %>">', '<div class="apps_inner"><i class="icons <%= icon %>"></i></div>', "<span><%= text %></span>", "</div>", "</li>"].join("")
        }
    })), a(function () {
        var e = new M2015.Myapp.View({ model: new M2015.Myapp.Model });
        top.$App.registerView("myApp", e);
        top.$App.on("userAttrsAllLoaded", function (t) {
            e.renderIcon();
            e.model.getMyapp(!0);
            e.model.getMySettingApp(!0);
        });
    })
}(jQuery, _, M139),

//M2012.Contacts.HttpClient
function (e) {
    function t(e, t) {
        return "/sharpapi/addr/apiserver/" + e + "?sid=" + $App.getSid() + (t ? "&APIType=" + t : "") + "&r=" + Math.random()
    }

    function i(e) {
        return t("addrinterface.ashx", e)
    }

    var a = "M2012.Contacts.HttpClient";
    e.namespace(a, e.ExchangeHttpClient.extend({
        initialize: function (t) {
            e.ExchangeHttpClient.prototype.initialize.apply(this, arguments), this.router = e.HttpRouter, this.router.addRouter("addr", ["GetUserAddrJsonData", "AddLastContacts", "QueryUserInfo", "ModUserInfo", "QueryContactsImageUrl", "GetLastContactsDetail", "AddUserInfo", "WhoAddMe", "AddGroupList", "DelGroup", "DelGroupList", "AddCAndGToGroup", "EditGroupList", "DelContacts", "AddGroup", "AddBatchContacts", "GetDealList", "DelDealList", "ModDealStatus", "AgreeOrRefuseAll", "QueryContactsInGroup", "GetRepeatContacts", "AddContacts", "ModContacts", "DelLastContacts", "ModGroup", "MoveGroupList", "MergeContacts",
                "QueryMergeResult", "DelLCContacts", "ModContactsField", "GetNumWaitForCleaning", "QueryInfoWaitForCleaning", "OneKeyClean", "BatchQuery", "GetUncompletedContacts", "GetPrivacySettings", "SavePrivacySettings", "GetRepeatContactsNew", "AutoMergeContacts", "QueryContactsAndGroup", "GetBatchImageUrl", "WhoAddMeByPage", "GetHeComboGroupInfo", "GetHeComboGroupContacts", "GetHeComboContactDetailInfo", "GetGroupList", "GetContactsList", "AddNewContacts", "ModNewContacts", "QueryNewContacts", "DelNewContacts", "ModNewUserInfo", "QueryNewUserInfo", "ModMayKnowStatus", "GetMayKnowStatus", "MergeNewContacts",
                "WamBatchReq", "GetFinshImportList", "GetFinshImportResult", "GetRemindBirdays", "SetRemindBirdays", "AddContactsField", "GetUpdateContactsCount", "GetUpdatedContactsList", "NoPromptUpdated", "AutoUpdateContacts", "UpdatedContactsInfo", "UpdateHecomboFlag", "ResetUserImgURL", "GetInvalidContactsNum", "GetInvalidContacts", "SetEmailValid", "DelInvalidEmail", "GetOperList", "GetbackupInfo", "UndoOperation", "ModBatchContacts", "GetMergeContactsList", "ModNamesAndGroups", "GetRepeatContactsList", "OrderGroup", "AutoSaveReceivers"]), this.router.addRouter("addr2", []), this.router.addRouter("addr3", ["MergeFuzzyQuery", "GetHeSubOrgMemberList",
                    "GetHeMemberInfo", "CheckUserNumber", "WritePageGetAllSubList", "GetOrgTopNMerber", "FuzzyQuery"]), this.router.addRouter("addr_p3_gw", ["andAddr:readGroups", "andAddr:readGroupContacts", "andAddr:readContactDetail"]), this.router.addRouter("webdav", ["wangyisync", "googlesync", "qqsync", "sinasync", "139sync", "tomsync"]), this.router.addRouter("groupmail", ["gom:queryGroupList", "gom:getGroupInfo", "gom:getGomUser", "gom:createGroup", "gom:updateGroup", "gom:getUserList", "gom:exitGroup", "gom:invitationHandle", "gom:queryInvitedRecord", "gom:getGroupDynamicInfo"])
        },
        defaults: { name: a, requestDataType: "ObjectToXML2", responseDataType: "JSON2Object" },
        request: function (t, i) {
            return e.ExchangeHttpClient.prototype.request.apply(this, arguments), this
        },
        onResponse: function (t) {
            e.ExchangeHttpClient.prototype.onResponse.apply(this, arguments)
        }
    }));
    var s = {
        addfail: "添加失败",
        addsuccess: "联系人添加成功",
        addcontactfail: "联系人添加失败",
        addfailunknown: "添加失败,未知错误",
        addfailserver: "添加失败,服务器异常",
        editfail: "系统繁忙，请稍候再试",
        processing: "程序运行中,请稍候",
        ajax_othererror: "系统繁忙，请稍后再试",
        groupname_not_exists: "组名不能为空",
        group_alreadyexists: "组名已存在",
        groupadded: "添加组成功",
        groupmodified: "组修改成功",
        groupdeleted: "删除成功",
        contactdeleted: "删除成功",
        contactcopyed: "复制成功",
        contactmoved: "移动成功",
        groupsaved: "保存成功",
        contactreaded: "获取成功",
        contactsaved: "保存成功",
        saveing: "保存中……",
        memooverlimit: "您合并通讯录重复联系人资料，超过备注可显示的资料已发送到您的邮箱。",
        sysbusy: "系统繁忙，请稍候再试。",
        merging: "自动合并操作正在处理中，请不重复提交。",
        fail_commitmerge: "提交自动合并请求失败。",
        warn_contactexists: "通讯录已存在邮箱/手机相同的联系人",
        warn_emailRepeat: "该邮箱已存在，是否仍要保存？",
        warn_mobileRepeat: "该手机号已存在，是否仍要保存？",
        isAlwaysSave: "是否仍要保存？",
        sysUpdateing: "暂时无法处理该请求，请稍后再试",
        contactexisted: { 224: "手机号码已存在", 225: "商务手机已存在", 226: "电子邮箱已存在", 227: "商务邮箱已存在" },
        groupoverLimit: "联系人分组已达上限",
        groupcontactsoverlimit: "保存失败，分组联系人总数已达上限"
    }, o = "21", n = "23", r = "24", l = "28", c = ["224", "225", "226", "227"],
    d = {
        OVER_LIMIT: '保存失败，联系人数量已达上限。欢迎使用批量删除功能整理您的<a href="javascript:top.FF.close();top.$App.showChannel(\'addr\');" style="color:#0344AE">通讯录</a>。',
        REACH_LIMIT: '保存联系人部分成功，联系人数量超出上限部分未保存，你可以<a href="javascript:top.FF.close();top.$App.showOrderinfo();" style="color:#0344AE">升级邮箱</a>添加更多！',
        REPEAT: "保存联系人失败，联系人已存在。",
        NAME_LENGTH_ERROR: "联系人姓名太长了",
        EMAIL_ERROR: "邮箱格式不正确。<br/>应如zhangsan@139.com，长度6-90位",
        MOBILE_LENGTH_ERROR: "手机号码格式不正确，请输入3-20位数字"
    };
    e.core.namespace("M2012.Contacts.API", {
        cache: M2012.Contacts.getCache(), call: function (e, t, i, a) {
            a = a || {};
            var s = void 0 == a.async ? !0 : a.async, o = new M2012.Contacts.HttpClient({}), n = e.indexOf("/") > -1 ? e : o.router.getUrl(e);
            a.loadingMsg && a.loadingMsg && top.M139.UI.TipMessage.show(a.loadingMsg);
            var r = this;
            a && a.scope && (r = a.scope), o.on("error", function () {
                a.error ? a.error.apply(o, arguments) : i.call(r, {
                    responseData: null,
                    status: arguments[0].status,
                    responseText: arguments[0].responseText
                })
            }), o.on("timeout", function () {
                a.onTimeOut && a.onTimeOut.apply(o, arguments)
            });
            var l = "post";
            return a.httpMethod && (l = a.httpMethod), o.request({
                url: n,
                method: l,
                data: t,
                timeout: a.timeout || 2e4,
                requestDataType: a.requestDataType,
                responseDataType: a.responseDataType,
                async: s
            }, function (e) {
                if (a.loadingMsg) try {
                    top.M139.UI.TipMessage.hide()
                } catch (e) {
                }
                i.call(r, e)
            }), o
        }, validateAddContacts: function (t) {
            var i = {}, a = "", s = !0;
            return t.name && "" != t.name.trim() ? t.name.trim().getByteCount() > 100 ? (s = !1, a = d.NAME_LENGTH_ERROR) : t.email || t.mobile ? t.email && (e.Text.Email.isEmail(t.email) ? (t.email.length < 6 || t.email.length > 90) && (s = !1, a = d.EMAIL_ERROR) : (s = !1, a = d.EMAIL_ERROR)) : (s = !1, a = "电子邮箱和手机号码，请至少填写一项") : (s = !1, a = "请输入联系人姓名"), !a && t.mobile && (!/^\d([\d-])+\d$/.test(t.mobile) || t.mobile.replace(/\D/g, "").length > 20) && (s = !1, a = d.MOBILE_LENGTH_ERROR), t.newGroup && Contacts.getGroupByName(t.newGroup) && delete t.newGroup, i.error = a, i.success = s, i
        }, addSendContacts: function (i, a) {
            var o = this, n = [], r = i.type, l = i.list, c = i.subject, d = i.from || 0;
            "mobile" == r ? $(l).each(function (t, i) {
                var a = [];
                if (a = Contacts.getContactsByMobile(this.toString()), a.length > 0) {
                    var s = a[0];
                    n.push({ SerialId: s.SerialId, AddrName: s.name, AddrType: "M", AddrContent: this.toString() })
                } else {
                    var o = e.Text.Mobile.getNumber(i);
                    o = e.Text.Mobile.remove86(o), n.push({
                        SerialId: "0",
                        AddrName: o,
                        AddrType: "M",
                        AddrContent: o,
                        AddrMobile: o,
                        AddrId: "0",
                        AddrTitle: "",
                        ComeFrom: d || "1"
                    })
                }
            }) : "fax" == r ? $(l).each(function (e, t) {
                var i = [];
                if (i.length > 0) {
                    var a = i[0];
                    n.push({ SerialId: a.SerialId, AddrName: a.name, AddrType: "F", AddrContent: t })
                } else n.push({ SerialId: "0", AddrName: t, AddrType: "F", AddrContent: t })
            }) : $(l).each(function (t, i) {
                var a = [];
                if (a = Contacts.getContactsByEmail(e.Text.Email.getEmail(i)), a.length > 0) {
                    var s = a[0];
                    n.push({
                        SerialId: s.SerialId,
                        AddrType: "E",
                        ComeFrom: d,
                        AddrTitle: c,
                        AddrName: e.Text.Email.getName(i),
                        AddrContent: e.Text.Email.getEmail(i)
                    })
                } else {
                    var o = $Email.getAccount(i), r = $Mobile.isMobile(o) ? o : "";
                    n.push({
                        Name: e.Text.Email.getName(i),
                        SourceType: 2,
                        Email: e.Text.Email.getEmail(i),
                        MobilePhone: r,
                        GroupId: "",
                        SerialId: "0",
                        AddrType: "E",
                        ComeFrom: d,
                        AddrTitle: c,
                        AddrName: e.Text.Email.getName(i),
                        AddrContent: e.Text.Email.getEmail(i)
                    })
                }
            });
            var p = { AutoSaveReceivers: { Count: 1, ContactsInfo: n } };
            if (i.autoSave) var m = "/addrsvr/AutoSaveReceivers?formattype=json&sid=" + $App.getSid(); else var m = t("addlastcontacts.ashx");
            this.call(m, p, function (e) {
                var t = {}, i = e.responseData;
                i ? (t.code = i.ResultCode, "0" == i.ResultCode ? (t.success = !0, _.isArray(i.ContactsInfo) ? t.list = i.ContactsInfo : "object" == typeof i.ContactsInfo ? t.list = [i.ContactsInfo] : t.list = [], o.cache.addLastContacts({
                    contacts: n,
                    newContacts: t.list
                })) : (t.success = !1, t.error = s.sysbusy)) : (t.success = !1, t.error = "未知异常"), a && a(t)
            }, {})
        }, deleteContacts: function (e, t) {
            var i = this, a = e.serialId, o = { DelContacts: { SerialId: a } }, n = "/addrsvr/DelContacts?formattype=json&sid=" + $App.getSid();
            this.call(n, o, function (e) {
                var o = e.responseData, n = {};
                o && "0" == o.ResultCode ? (n.success = !0, n.msg = s.contactdeleted, i.cache.batchRemoveContacts({
                    serialId: a.split(","),
                    InterfaceName: "DelContacts"
                })) : (n.success = !1, n.error = s.sysbusy), t && t(n)
            }, { loadingMsg: "正在删除联系人..." })
        }, addContacts: function (e, t, i) {
            var a = this;
            i = i || {};
            var c = {}, c = this.validateAddContacts(e);
            if (c.error) return c.success = !1, void (t && t(c));
            var p = _.isArray(e.groupId) ? e.groupId.join(",") : e.groupId, m = {
                AddContacts: {
                    UserType: 1,
                    AddrFirstName: e.name,
                    MobilePhone: e.mobile,
                    FamilyEmail: e.email,
                    BusinessFax: e.fax,
                    GroupId: p,
                    AddGroupName: e.newGroup,
                    AddNewGroup: Boolean(e.newGroup),
                    DealStatus: e.DealStatus,
                    SecondUIN: e.SecondUIN
                }
            }, u = { loadingMsg: "正在添加联系人..." }, h = "/addrsvr/AddContacts?formattype=json&sid=" + $App.getSid();
            i.thingid && (h += "&thingid=" + i.thingid), e.DealStatus && e.SecondUIN && (u = {}), this.call(h, m, function (i) {
                var m = i.responseData;
                if (m) if (c.code = m.ResultCode, "0" == m.ResultCode) {
                    a.cache.batchAddContacts();
                    var u = m.ContactsInfo;
                    c.success = !0, c.msg = s.addsuccess;
                    var h = top.$T.Mobile;
                    if (u && u.length) for (var f = 0; f < u.length; f++) u[f].AddrFirstName = e.name, u[f].MobilePhone = e.mobile, u[f].FamilyEmail = e.email, u[f].BusinessFax = e.fax, u[f].GroupId = p, "" == e.email && h.isChinaMobile(e.mobile) && (u[f].FamilyEmail = e.mobile + "@139.com");
                    c.contacts = u, t && t(c)
                } else {
                    var g = "";
                    switch (m.ResultCode) {
                        case o:
                            g = d.OVER_LIMIT, g = g.replace("3000", "");
                            break;
                        case r:
                            g = d.REACH_LIMIT;
                            break;
                        case l:
                            g = d.REPEAT;
                            break;
                        case n:
                            g = s.groupcontactsoverlimit;
                            break;
                        default:
                            g = s.contactexisted[m.ResultCode], g || (g = s.addcontactfail)
                    }
                    c.success = !1, c.msg = g, c.error = g, t && t(c)
                } else c.success = !1, c.msg = s.addfailunknown, c.error = c.msg, t && t(c)
            }, u)
        }, addBatchContactsNew: function (e, t) {
            var i = e.sort ? e : [e], a = this.validateAddContacts(i[0]);
            if (a.error) return a.success = !1, void (t && t(a));
            var o = $.map(i, function (e) {
                var t = { Name: e.name, SourceType: 2 };
                return e.email && (t.Email = e.email), e.mobile && (t.MobilePhone = e.mobile), e.GroupId && (t.GroupId = e.GroupId), t
            }), n = {
                AutoSaveReceivers: {
                    Count: 1,
                    ContactsInfo: o
                }
            }, r = "/addrsvr/AutoSaveReceivers?formattype=json&sid=" + $App.getSid(), l = this;
            l.call(r, n, function (e) {
                var i = {};
                if (e.responseData) {
                    var a = e.responseData.ResultCode;
                    if ("0" == a) {
                        i.success = !0;
                        var n = e.responseData.ContactsInfo;
                        if (_.isArray(n)) {
                            for (var r = 0; r < n.length; r++) $.each(o, function (e, t) {
                                return t.Email == n[r].FamilyEmail ? (n[r].GroupId = t.GroupId, !1) : void 0
                            });
                            i.list = n
                        } else "object" == typeof n ? i.list = [n] : i.list = [];
                        t && t(i), l.cache.addLastContacts({
                            contacts: [],
                            newContacts: i.list
                        }), $(i.list).each(function (e, t) {
                            l.cache.addContacts({ data: t })
                        })
                    } else i.success = !1, i.msg = s.addfailunknown, i.code = a, t && t(i)
                }
            })
        }, addGroup: function (e, t) {
            var i = this;
            if ("" == e) return void (t && t({ success: !1, msg: s.groupname_not_exists }));
            var a = M2012.Contacts.getModel().getGroupByName(e);
            if (a) return void (t && t({ success: !1, msg: s.group_alreadyexists }));
            var o = { AddGroup: { GroupName: e } }, n = "/addrsvr/AddGroup?formattype=json&sid=" + $App.getSid();
            this.call(n, o, function (a) {
                var o = a.responseData, n = {};
                if (o) {
                    var r = o.ResultCode;
                    "0" == r ? (n.success = !0, n.msg = s.groupadded, n.groupId = o.GroupInfo[0].GroupId, n.groupName = e, i.cache.addGroup({
                        groupId: n.groupId,
                        groupName: n.groupName
                    })) : ("9" == r ? n.error = s.group_alreadyexists : n.error = s.addfailunknown, n.success = !1)
                } else n.success = !1, n.error = s.addfailunknown;
                t && t(n)
            }, { loadingMsg: "正在添加分组..." })
        }, getContactsDetail: function (e, t) {
            var i = {
                QueryContactsAndGroup: {
                    SerialId: e,
                    UserNumber: $User.getUid()
                }
            }, a = "/addrsvr/QueryContactsAndGroup?sid=" + $App.getSid();
            this.call(a, i, function (e) {
                var i = {};
                if (e.responseData) if ("0" == e.responseData.rc) {
                    var a = e.responseData.ci, s = M2012.Contacts.getModel().userInfoTranslate(a);
                    i.success = !0, i.data = s
                } else i.success = !1, i.error = e.responseData.rm || "未知异常"; else i.success = !1, i.error = "未知异常";
                t && t(i)
            }, { responseDataType: "XML2Object" })
        }, editContacts: function (e, t, i) {
            function a(e) {
                var t = { ModContacts: e }, a = "/addrsvr/ModContacts?formattype=json&sid=" + $App.getSid();
                o.call(a, t, function (t) {
                    var a = {};
                    if (t.responseData) {
                        var n = t.responseData.ResultCode;
                        "0" == n ? (a.success = !0, a.msg = s.contactsaved, a.data = t.responseData.ContactsInfo, Boolean(a.data.length) && (e.FirstWord = a.data[0].FirstWord, e.FirstNameword = a.data[0].FirstNameword, e.FullNameword = a.data[0].FullNameword), o.cache.updateContacts({ data: e }), top.$App && top.$App.trigger("ContactsDataChange", { type: "EditContacts" })) : (a.success = !1, n == l ? a.error = s.warn_contactexists : $.inArray(n, c) > -1 ? (a.holdon = !0, a.resultCode = n) : a.error = s.editfail || t.responseData.ResultMsg || "未知异常")
                    } else a.success = !1, a.error = "未知异常";
                    if (a.holdon) {
                        var r = s.contactexisted[a.resultCode] + "，" + s.isAlwaysSave;
                        return top.$Msg.confirm(r, function () {
                            top.Contacts.ModContactsField(e.SerialId, e, !0, function (e) {
                                "0" == e.resultCode ? (e.success = !0, e.msg = s.contactsaved, e.data = e.ContactInfo) : e.error = s.editfail || t.responseData.ResultMsg || "未知异常", i && i(e)
                            }, s.contactsaved)
                        }, function () {
                        }), !1
                    }
                    i && i(a)
                }, { loadingMsg: "正在保存联系人..." })
            }

            var o = this, n = this.validateAddContacts(t);
            return n.error ? (n.success = !1, void (i && i(n))) : void this.getContactsDetail(e, function (e) {
                if (e.success) {
                    var s = e.data;
                    s.AddrFirstName = t.name, s.FamilyEmail = t.email, s.MobilePhone = t.mobile, s.GroupId = _.isArray(t.groupId) ? t.groupId.join(",") : t.groupId || "", a(s)
                } else i && i(e)
            })
        }, modContactsPartial: function (e, t, i) {
            function a(a) {
                var n = {
                    AddrFirstName: t.name || "",
                    SerialId: e,
                    GroupId: _.isArray(t.groupId) ? t.groupId.join(",") : t.groupId || "",
                    Email: [{ Index: t.emailIndex || "0", Type: "", Value: t.email || "" }],
                    Mobile: [{ Index: "0", Type: "-1", Value: t.mobile || "" }],
                    SendEmail: t.SendEmail
                }, r = "/addrsvr/ModContactPartial?formattype=json&sid=" + $App.getSid();
                o.call(r, n, function (e) {
                    var t = {};
                    if (e.responseData) {
                        var n = e.responseData.code;
                        "S_OK" == n ? (t.success = !0, t.msg = s.contactsaved, t.data = e.responseData.contactsinfo, Boolean(t.data.length) && (a.FirstWord = t.data[0].firstword, a.FirstNameword = t.data[0].firstnameword, a.FullNameword = t.data[0].fullnameword), o.cache.updateContacts({ data: a }), top.$App && top.$App.trigger("ContactsDataChange", { type: "EditContacts" })) : (t.success = !1, n == l ? t.error = s.warn_contactexists : $.inArray(n, c) > -1 ? (t.holdon = !0, t.resultCode = n) : t.error = s.editfail || e.responseData.summary || "未知异常")
                    } else t.success = !1, t.error = "未知异常";
                    if (t.holdon) {
                        var r = s.contactexisted[t.resultCode] + "，" + s.isAlwaysSave;
                        return top.$Msg.confirm(r, function () {
                            top.Contacts.ModContactsField(a.SerialId, a, !0, function (t) {
                                "0" == t.resultCode ? (t.success = !0, t.msg = s.contactsaved, t.data = t.ContactInfo) : t.error = s.editfail || e.responseData.ResultMsg || "未知异常", i && i(t)
                            }, s.contactsaved)
                        }, function () {
                        }), !1
                    }
                    i && i(t)
                }, { requestDataType: "ObjectToXML", loadingMsg: "正在保存联系人..." })
            }

            var o = this, n = this.validateAddContacts(t);
            return n.error ? (n.success = !1, void (i && i(n))) : void this.getContactsDetail(e, function (e) {
                if (e.success) {
                    var s = e.data;
                    s.AddrFirstName = t.name;
                    var o = "FamilyEmail";
                    for (var n in s) if (s[n] == t.oldEmail) {
                        o = n;
                        break
                    }
                    s[o] = t.email, s.MobilePhone = t.mobile, s.GroupId = _.isArray(t.groupId) ? t.groupId.join(",") : t.groupId || "", a(s)
                } else i && i(e)
            })
        }, addBatchContacts: function (e, t) {
            for (var i = {}, a = e.sort ? e : [e], o = 0; o < a.length; o++) {
                var n = this.validateAddContacts(a[o]);
                if (!n) return i.success = !1, i.errorIndex = o, i.msg = this.validateAddContacts.error, void (t && t(i))
            }
            var r = $.map(a, function (e) {
                var t = { Name: e.name, SourceType: 2 };
                return e.email && (t.Email = e.email), e.mobile && (t.MobilePhone = e.mobile), e.GroupId && (t.GroupId = e.GroupId), t
            }), l = {
                AutoSaveReceivers: {
                    Count: 1,
                    ContactsInfo: r
                }
            }, c = "/addrsvr/AutoSaveReceivers?formattype=json&sid=" + $App.getSid(), d = this;
            d.call(c, l, function (e) {
                var i = {};
                if (e.responseData) {
                    var a = e.responseData.ResultCode;
                    if ("0" == a) {
                        i.success = !0;
                        var o = e.responseData.ContactsInfo;
                        if (_.isArray(o)) {
                            for (var n = 0; n < o.length; n++) $.each(r, function (e, t) {
                                return t.Email == o[n].FamilyEmail ? (o[n].GroupId = t.GroupId, !1) : void 0
                            });
                            i.list = o
                        } else "object" == typeof o ? i.list = [o] : i.list = [];
                        t && t(i), d.cache.addLastContacts({ contacts: [], newContacts: i.list })
                    } else i.success = !1, i.msg = s.addfailunknown, t && t(i)
                }
            })
        }, getContactsImage: function (e, t) {
            var i = this, a = i.contactsImageQueryCache, s = e[0], o = a[s];
            if (void 0 !== o) return void (t && t(o));
            var n = { QueryContactsImageUrl: { UserNumber: $User.getUid(), AddrInfo: e.join(",") } };
            M2012.Contacts.API.call("QueryContactsImageUrl", n, function (s) {
                if (s.responseData && "0" == s.responseData.ResultCode) {
                    var o = "", n = s.responseData;
                    if (n.ImageInfo) {
                        _.isArray(n.ImageInfo) || (n.ImageInfo = [n.ImageInfo]);
                        for (var r = n.ImageInfo, l = 0; l < r.length; l++) {
                            var c = r[l];
                            if (c.ImageUrl) {
                                o = i.getContactsImageUrl(c.ImageUrl);
                                break
                            }
                        }
                    }
                    _.each(e, function (e) {
                        a[e] = o
                    }), t && t(o)
                }
            })
        }, GetBatchImageUrl: function (e, t, i) {
            var a = this.contactsImageQueryCache, s = e.addressInfo[0], o = a[s];
            if (i = i || {}, o) return void (_.isFunction(t) && t(o));
            var n = {
                GetBatchImageUrl: {
                    ImageSrc: {
                        Name: e.info.name,
                        Email: e.info.email
                    }
                }
            }, r = void 0 == i.async ? !0 : i.async;
            M2012.Contacts.API.call("GetBatchImageUrl", n, function (i) {
                var s = i.responseData;
                if (!s || !s.ResultCode || "0" !== s.ResultCode) return void (console.error && s.ResultCode && console.error("errorCode: " + s.ResultCode));
                var o = "";
                o = s.ImageUrl ? s.ImageUrl[e.info.email].indexOf("http") > -1 ? s.ImageUrl[e.info.email] : getDomain("resource") + s.ImageUrl[e.info.email] : o, _.each(e.addressInfo, function (e) {
                    a[e] = o
                }), _.isFunction(t) && t(o)
            }, { async: r })
        }, contactsImageQueryCache: {}, getContactsImageUrl: function (t) {
            var i = e.Text.Url.makeUrl("/g2/addr/apiserver/httpimgload.ashx", { sid: $App.getSid(), path: t });
            return e.HttpRouter.getNoProxyUrl(i)
        }, batchQuery: function (e) {
            this.call("BatchQuery", e.requestData, function (t) {
                var i = t.responseData;
                200 === t.status && i ? $.isFunction(e.success) && e.success(i) : $.isFunction(e.error) && e.error(i, t)
            })
        }, updateCache: function (e) {
        }, shareContacts: function (e) {
            var t = this, a = i("ShareContacts"), s = { ShareContacts: { SendTo: e.sendto, SerialId: e.serialids } };
            t.call(a, s, function (t) {
                var i = t.responseData;
                return i && 0 == i.ResultCode ? void (e.success && e.success(i)) : void (e.error && e.error(i))
            }, { requestDataType: "ObjectToXML2_URL", responseDataType: "JSON2Object" })
        }, cloneContacts: function (e) {
            var t = i("CloneContacts");
            this.call(t, e.params, function (t) {
                e.callback && e.callback(t)
            }, { requestDataType: "ObjectToXML2_URL", responseDataType: "JSON2Object", error: e.error })
        }, getContactsInfoById: function (e, t) {
            var i = {}, a = "<QueryContactsAndGroup><SerialId>{0}</SerialId><UserNumber>{1}</UserNumber></QueryContactsAndGroup>";
            a = a.format(e, $User.getUid());
            var o = function (e) {
                t && t(e)
            };
            this.call("QueryContactsAndGroup", a, function (e) {
                var a = e.responseData;
                if ("0" == a.ResultCode) {
                    i.success = !0, i.msg = s.contactreaded, i.contacts = [];
                    var o = top.$App.getModel("contacts");
                    $.each(a.ContactsInfo, function () {
                        var e = o.userInfoTranslate(this), t = new M2012.Contacts.ContactsInfo(e);
                        i.contacts.push(t)
                    }), i.contactsInfo = i.contacts[0]
                } else i.ResultCode = a.ResultCode, i.success = !1, i.msg = s.sysbusy, i.contacts = [];
                t && t(i)
            }, { error: o })
        }, getWhoAddMePageData: function (e, t) {
        }, modDealStatus: function (e, t) {
            e.relationId = e.relationId.toString();
            var i = "<ModDealStatus><RelationId>{0}</RelationId><DealStatus>{1}</DealStatus><GroupId>{2}</GroupId><ReqMsg>{3}</ReqMsg><ReplyMsg>{4}</ReplyMsg><OperUserType>{5}</OperUserType><UserNumber>{6}</UserNumber></ModDealStatus>";
            i = i.format(e.relationId, e.dealStatus, e.groupId, e.reqMsg, e.replyMsg, e.operUserType, top.$User.getUid()), this.call("ModDealStatus", i, function (e) {
                var i = {}, a = e.responseData;
                i.info = a, i.success = !0, i.msg = s.contactreaded, "0" != a.ResultCode && (i.success = !1, delete i.msg), t && t(i)
            }, {
                error: function () {
                    alert("连接失败")
                }
            })
        }, addLastContacts: function (e) {
            var t = this, i = e.data || {}, a = "AddLastContacts", s = { AddLastContacts: { AddContactsInfo: [] } };
            $.each(i, function (e) {
                ({
                    SerialId: this.serialId,
                    AddrName: this.addrName || "",
                    AddrType: this.addrType || "",
                    AddrContent: this.addrContent || "",
                    AddrId: this.addrId || "",
                    AddrTitle: this.addrTitle || "",
                    ComeFrom: this.comeFrom || ""
                });
                s.AddLastContacts.AddContactsInfo.push(this)
            }), this.call(a, s, function (i) {
                var a = i.responseData;
                "0" == a.ResultCode ? (e.success(a), t.updateCache({
                    type: "AddSendContacts",
                    data: { items: s.AddLastContacts.AddContactsInfo }
                })) : e.error(a)
            })
        }
    })
}(M139),

//todo
function (e, t) {
    var i = M2012.Contacts.API, a = (M2012.Contacts.Model, M2012.Contacts.getCache()), s = {
        S_OK: "S_OK",
        SUCCESS: 0
    }, o = {
        S_OK: "操作成功",
        0: "操作成功",
        9: "组名已存在",
        19: "vip分组字段异常",
        21: "保存失败，联系人数量已达上限。",
        22: "联系人分组已达上限",
        23: "保存失败，分组联系人总数已达上限。",
        28: "通讯录已存在邮箱/手机相同的联系人",
        30: "名字编码转换失败",
        33: "用户号码不存在",
        34: "用户号码存在非法字符",
        42: "日期格式错误",
        85: "日期格式错误",
        88: "头像存在非法字符",
        224: "手机号码已存在",
        225: "商务手机已存在",
        226: "电子邮箱已存在",
        227: "商务邮箱已存在",
        2072: "暂时无法处理该请求，请稍后再试",
        4098: "用户姓名被保留",
        4099: "自动合并正在进行中",
        4100: "自动更新正在进行中",
        8193: "删除联系人失败",
        12293: "姓名不能为空",
        12298: "输入的ID不合法",
        12296: "组名超过最大长度",
        12309: "用户的联系人已经达到上限",
        12310: "用户的联系组已经达到上限",
        12311: "用户的组联系人已经达到上限",
        12316: "讯录已存在邮箱/手机相同的联系人",
        12320: "增加联系人操作太频繁，休息一会吧",
        12491: "手机号码格式不正确",
        16388: "获取头像失败",
        12816: "用户姓名非空，且手机号码或者邮件地址必填1项",
        12819: "xml解析失败",
        12833: "邮政编码格式错误",
        12835: "邮政编码格式错误",
        12864: "头像的邮件地址不存在",
        12865: "头像的邮件地址不存在",
        24577: "修改coremail用户真实姓名失败",
        24578: "修改rmail用户真实姓名失败"
    }, n = function (e) {
        this.init(e)
    };
    n.prototype.constructor = n, n.prototype.init = function (e) {
        e = void 0 === e ? 0 : e, this.code = e, this.data = this.data || null, this.status = this.status || 0, this.context = this.context || window, this.msg = this.getMsgByCode(this.code), this.success = this.code == s.S_OK || this.code == s.SUCCESS
    }, n.prototype.setCode = function (e) {
        this.init(e)
    }, n.prototype.addMsg = function (e) {
        this.msg += e
    }, n.prototype.setMsg = function (e) {
        this.msg = e
    }, n.prototype.setData = function (e) {
        this.data = e
    }, n.prototype.setContext = function (e) {
        this.context = e
    }, n.prototype.setStatus = function (e) {
        this.status = e || 0
    }, n.prototype.toJSON = function () {
        var e = { code: this.code, msg: this.msg, data: this.data, status: this.status, success: this.success };
        return e
    }, n.prototype.getMsgByCode = function (e) {
        switch (e) {
            case "214":
            case "215":
            case "216":
            case "217":
            case "218":
                top.$App.showSessionOutDialog()
        }
        return o[e] || "系统繁忙，请稍候再试。"
    };
    var r = function (e) {
        e = e || [];
        for (var i = [], a = e.length, s = 0; a > s; s++) i = i.concat(t.values(e[s]));
        return i
    }, l = function (e, i) {
        return e = e || "", i = i || ",", 0 == e.length ? [] : t.isString(e) ? e.split(i) : e
    }, c = function (e) {
        if (t.isObject(e)) for (var i in e) t.isArray(e[i]) && (e[i] = e[i].join(",")), t.isObject(e[i]) && arguments.callee(e[i]);
        return e
    };
    i.request = function (e, i, a, s) {
        var s = s || e, o = { error: a.error, timeout: a.timeout, onTimeOut: a.onTimeOut };
        a.isXML2 || (o.requestDataType = "ObjectToXML");
        var r = this.call(e, i, function (e) {
            var i = new n, o = e.responseData || {}, r = e.status;
            if (i.setData(o), i.setStatus(r), i.setContext(s), i.setMsg(o.summary || o.ResultMsg), i.setCode(o.code || o.ResultCode), 200 == r) {
                if (i.success) return void (a.parseData && a.parseData(i));
                if (t.isFunction(a.fail)) return void a.fail.call(s, i.toJSON());
                t.isFunction(a.error) && a.error.call(s, i.toJSON())
            }
            t.isFunction(a.error) && a.error.call(s, i.toJSON())
        }, o);
        return r
    }, i.getGroupList = function (e, t) {
        var i = "GetGroupList", a = { Random: Math.random() };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(i, a, e, t)
    }, i.getContactsList = function (e, t) {
        var i = e.data || {}, a = "GetContactsList", s = {
            GroupId: i.groupId || "",
            Keyword: i.keyword || "",
            Letter: i.letter || "",
            Filter: i.filter || "",
            Sort: i.sort || "",
            SortType: i.sortType || "",
            Start: i.start || "1",
            End: i.end || "100"
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    }, i.getContactsListBeta = function (e, t) {
        var i = e.data || {}, a = "GetContactsList", s = {
            GroupId: i.groupId || "",
            Keyword: i.keyword || "",
            Letter: i.letter || "",
            Filter: i.filter || "",
            Sort: i.sort || "",
            SortType: i.sortType || "",
            Start: i.start || "1",
            End: i.end || "300"
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    },
    i.getContactsListAll = function (e, t) {
        var i = e.data || {}, a = "GetContactsList", s = {
            GroupId: i.groupId || "",
            Keyword: i.keyword || "",
            Letter: i.letter || "",
            Filter: i.filter || "",
            Sort: "",
            SortType: "",
            Start: "-1",
            End: "-1"
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    }, i.getInvalidContactsNum = function (e, t) {
        var i = (e.data || {}, "GetInvalidContactsNum"), a = { Random: Math.random() };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(i, a, e, t)
    }, i.getInvalidContacts = function (e, t) {
        var i = e.data || {}, a = "GetInvalidContacts", s = { Page: i.page || "0" };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    },
    i.setEmailValid = function (e, t) {
        var i = e.data || {}, s = "SetEmailValid", o = { InvalidEmail: i.setValid || "" };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.removeInvalidEmails({ data: i.setValid || "" }), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.delInvalidEmail = function (e, t) {
        var i = e.data || {}, s = "DelInvalidEmail", o = { InvalidContacts: i.invalidEmail || [] };
        e.parseData = function (t) {
            t.setData(t.data["var"]);
            var i = t.data;
            a.batchRemoveContacts({ serialId: i.delsids.split(",") }), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.getOperList = function (e, t) {
        var i = e.data || {}, a = "GetOperList", s = { Page: i.pageIndex.toString() || "1" };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    },
    i.getbackupInfo = function (e, t) {
        var i = e.data || {}, a = "GetbackupInfo", s = { OperationId: i.operationId || "" };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    }, i.undoOperation = function (e, t) {
        var i = e.data || {}, s = "UndoOperation", o = { OperationId: i.operationId || "" };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.reload(), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.addNewContacts = function (e, t) {
        var i = e.data || {}, s = "AddNewContacts", o = {
            SerialId: "",
            UserType: "1",
            SourceType: "201",
            UserSex: i.UserSex || "",
            AddrFirstName: i.AddrFirstName || "",
            GroupId: i.GroupId || "",
            ImageUrl: i.ImageUrl || "",
            Email: i.Email || [],
            Mobile: i.Mobile || [],
            Phone: i.Phone || [],
            BirDay: i.BirDay || [],
            Fax: i.Fax || [],
            Im: i.Im || [],
            Site: i.Site || [],
            Address: i.Address || [],
            Job: i.Job || [],
            Memo: i.Memo || "",
            AddVip: i.AddVip || ""
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.addContacts({
                data: $.extend(t.data, {
                    groupId: i.GroupId,
                    extFax: r(i.Fax),
                    extEmail: r(i.Email),
                    extMobile: r(i.Mobile),
                    AddrFirstName: i.AddrFirstName
                })
            }), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.modNewContacts = function (e, t) {
        var i = e.data || {}, s = "ModNewContacts", o = {
            SerialId: i.SerialId || "",
            UserType: "1",
            SourceType: "2",
            UserSex: i.UserSex || "",
            AddrFirstName: i.AddrFirstName || "",
            GroupId: i.GroupId || "",
            ImageUrl: i.ImageUrl || "",
            Email: i.Email || [],
            Mobile: i.Mobile || [],
            Phone: i.Phone || [],
            BirDay: i.BirDay || [],
            Fax: i.Fax || [],
            Im: i.Im || [],
            Site: i.Site || [],
            Address: i.Address || [],
            Job: i.Job || [],
            isHecombo: i.isHecombo || 0,
            Memo: i.Memo || ""
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.updateContacts({
                data: $.extend(t.data, {
                    groupId: i.GroupId,
                    AddrFirstName: i.AddrFirstName,
                    extFax: r(i.Fax),
                    extEmail: r(i.Email),
                    extMobile: r(i.Mobile)
                })
            }), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    },
    i.modBatchContacts = function (e, t) {
        var i = e.data || {}, s = "ModBatchContacts", o = {
            GroupId: i.GroupId || "",
            CmdType: i.CmdType || "",
            Cmd: i.Cmd || ""
        };
        "2" == i.CmdType && (o.Content = i.Content || ""), e.parseData = function (t) {
            t.setData(t.data["var"]), a.reload(), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.modNamesAndGroups = function (e, t) {
        var i = e && e.data || [], s = i.length, o = [], n = "ModNamesAndGroups";
        if (!s) return void console.error("传入数据有误");
        for (var r = 0; s > r; r++) {
            var l = { SerialId: i[r].serialid };
            i[r].name && (l.Name = i[r].name), i[r].groupId && (l.GroupId = i[r].groupId), o.push(l)
        }
        var c = { ModNamesAndGroups: { Count: s, ContactsInfo: o } };
        this.request(n, c, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.reload(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.queryNewContact = function (e, t) {
        var i = e.data || {}, a = "QueryNewContacts", s = { SerialId: i.SerialId };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    },
    i.queryBatchContacts = function (e, t) {
        var i = e.data || {}, a = "QueryNewContacts", s = { SerialId: i.SerialId };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    }, i.delNewContacts = function (e, t) {
        var i = e.data || {}, s = "DelNewContacts", o = { SourceType: "2", SerialId: i.SerialId };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.removeContacts(i), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.modNewUserInfo = function (e, t) {
        var i = e.data || {}, s = "ModNewUserInfo", o = {
            FavoWord: i.FavoWord || "",
            UserType: "1",
            SourceType: "2",
            UserSex: i.UserSex || "",
            AddrFirstName: i.AddrFirstName || "",
            AddrNickName: i.AddrNickName || "",
            ImageUrl: i.ImageUrl || "",
            StartCode: i.StartCode || "",
            BloodCode: i.BloodCode || "",
            Marriage: i.Marriage || "",
            Character: i.Character || "",
            FavoPeople: i.FavoPeople || "",
            MakeFriend: i.MakeFriend || "",
            Brief: i.Brief || "",
            FavoBook: i.FavoBook || "",
            FavoMusic: i.FavoMusic || "",
            FavoMovie: i.FavoMovie || "",
            FavoTv: i.FavoTv || "",
            FavoSport: i.FavoSport || "",
            FavoGame: i.FavoGame || "",
            Email: i.Email || [],
            Mobile: i.Mobile || [],
            Phone: i.Phone || [],
            BirDay: i.BirDay || [],
            Fax: i.Fax || [],
            Im: i.Im || [],
            Site: i.Site || [],
            Address: i.Address || [],
            Job: i.Job || [],
            Memo: i.Memo || ""
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.updateUserInfo(), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.updateHecomboFlag = function (e, t) {
        var i = e.data || {}, a = "UpdateHecomboFlag", s = { HecomboFlag: i.HecomboFlag };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    },
    i.resetUserImgURL = function (e, t) {
        var i = (e.data || {}, "ResetUserImgURL"), a = {};
        e.parseData = function (t) {
            t.setData(t.data), e.success.call(t.context, t.toJSON())
        }, this.request(i, a, e, t)
    }, i.queryNewUserInfo = function (e, t) {
        var i = (e.data || {}, "QueryNewUserInfo"), a = { Random: Math.random() };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(i, a, e, t)
    }, i.mergeNewContacts = function (e, t) {
        var i = e.data || {}, s = "MergeNewContacts", o = {
            SerialId: i.SerialId || "",
            UserType: "1",
            SourceType: "2",
            UserSex: i.UserSex || "",
            AddrFirstName: i.AddrFirstName || "",
            GroupId: i.GroupId || "",
            ImageUrl: i.ImageUrl || "",
            Email: i.Email || [],
            Mobile: i.Mobile || [],
            Phone: i.Phone || [],
            BirDay: i.BirDay || [],
            Fax: i.Fax || [],
            Im: i.Im || [],
            Site: i.Site || [],
            Address: i.Address || [],
            Job: i.Job || [],
            Memo: i.Memo || ""
        };
        e.parseData = function (t) {
            t.setData(t.data["var"]), a.mergeContacts({
                serialId: i.SerialId.split(","),
                contacts: $.extend(i, t.data, {
                    groupId: i.GroupId,
                    AddrFirstName: i.AddrFirstName,
                    extFax: r(i.Fax),
                    extEmail: r(i.Email),
                    extMobile: r(i.Mobile)
                })
            }), e.success.call(t.context, t.toJSON())
        }, this.request(s, o, e, t)
    }, i.getUpdateContactsCount = function (e, t) {
        var i = (e.data || {}, "GetUpdateContactsCount"), a = { Random: Math.random() };
        this.request(i, a, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getUpdatedContactsList = function (e, t) {
        var i = "GetUpdatedContactsList", a = {};
        this.request(i, a, $.extend(e, {
            parseData: function (t) {
                t.setData({ updatelist: t.data.updatelist, count: t.data.count }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.noPromptUpdated = function (e, t) {
        var i = e.data || {}, a = "NoPromptUpdated", s = { SerialId: i.SerialId };
        this.request(a, s, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"] || {}), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.autoUpdateContacts = function (e, t) {
        var i, s = "AutoUpdateContacts";
        i = e.data ? { SerialIds: e.data || "" } : {
            Random: Math.random()
        }, this.request(s, i, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"]), a.autoUpdateContacts({}), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.updatedContactsInfo = function (e, t) {
        var i = e.data || {}, s = "UpdatedContactsInfo", o = { SerialId: i.SerialId || "" };
        this.request(s, o, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"] || {}), a.newUpdatedContacts({
                    serialId: i.SerialId,
                    email: t.data.Email,
                    mobile: t.data.Mobile,
                    isDelete: t.data.BeDeleted
                }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.addGroupList = function (e, t) {
        var i = e.data || {}, s = "AddGroupList", o = {
            AddGroupList: {
                GroupId: i.groupId || "",
                SerialId: i.serialId || "",
                GroupType: i.groupType || ""
            }
        };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.addContactsByGroup({
                    contacts: l(i.serialId),
                    groupId: i.groupId
                }), e.success.call(t.context, t.toJSON(), i.serialId)
            }
        }), t)
    },
    i.addVipContacts = function (e) {
        var t = M2012.Contacts.getModel(), i = t.get("data");
        e = e || {}, e.data = e.data || {}, e.data.groupType = "1", e.data.groupId = i.vip.groupId, this.addGroupList(e)
    }, i.removeVipContacts = function (e) {
        var t = M2012.Contacts.getModel(), i = t.get("data");
        e = e || {}, e.data = e.data || {}, e.data.groupId = i.vip.groupId, this.delGroupList(e)
    }, i.delGroupList = function (e, t) {
        var i = e.data || {}, s = "DelGroupList", o = {
            DelGroupList: {
                GroupId: i.groupId || "",
                SerialId: i.serialId || ""
            }
        };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.removeContactsByGroup({
                    contacts: l(i.serialId),
                    groupId: i.groupId
                }), e.success.call(t.context, t.toJSON(), i.serialId)
            }
        }), t)
    }, i.editGroupList = function (e, i) {
        var s = e.data || {}, o = "EditGroupList", n = {
            EditGroupList: {
                GroupId: s.groupId || "",
                GroupName: s.groupName || "",
                GroupType: s.groupType || "",
                SerialId: s.serialId || ""
            }
        };
        this.request(o, c(n), $.extend(e, {
            isXML2: !0, parseData: function (i) {
                i.setData(i.data.GroupInfo[0] || i.data), t.isEmpty(s.groupId) ? a.addGroup({
                    contacts: l(s.serialId),
                    groupId: i.data.GroupId,
                    groupName: s.groupName
                }) : a.updateGroup({
                    contacts: l(s.serialId),
                    groupId: s.groupId,
                    groupName: s.groupName
                }), e.success.call(i.context, i.toJSON())
            }
        }), i)
    },
    i.addContactsMuti = function (e, t) {
        var i = e.data || {}, s = "AddBatchContacts", o = {
            AddBatchContacts: {
                SourceType: "2",
                ContactsInfo: [],
                ImportType: 1,
                Count: i.contacts.length
            }
        };
        $.each(i.contacts, function (e) {
            var t = {
                AddrFirstName: this.name,
                MobilePhone: this.mobile || "",
                FamilyEmail: this.email || "",
                GroupId: this.groupId || "",
                WebId: e
            };
            this.newGroup && (t.AddNewGroup = !0, t.AddGroupName = this.newGroup), o.AddBatchContacts.ContactsInfo.push(c(t))
        }), this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.BatchOperId), a.batchAddContacts(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.addBatchAndGToGroup = function (e, t) {
        var i = e.data || {}, s = "AddCAndGToGroup", o = {
            AddCAndGToGroup: {
                AddrType: "0",
                SourceType: "2",
                NewGroupName: "",
                GroupId: i.groupId || "",
                NewContactsAddr: i.newContactsAddr || "",
                SerialId: i.serialId || "",
                UserType: "2",
                NewContactsName: i.NewContactsName || ""
            }
        };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo), a.batchAddContacts(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.autoSaveReceivers = function (e, t) {
        var i = e.data || {}, s = "AutoSaveReceivers", o = {
            AutoSaveReceivers: {
                ContactsInfo: [],
                Count: i.length,
                GroupId: i.groupId || ""
            }
        };
        $.each(i, function (e) {
            var t = {
                Name: this.name,
                Email: this.email || "",
                MobilePhone: this.mobile || "",
                SourceType: this.SourceType || "2",
                GroupId: this.groupid
            };
            o.AutoSaveReceivers.ContactsInfo.push(t)
        }), this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo), a.reload(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.modGroup = function (e, t) {
        var i = e.data || {}, s = "ModGroup", o = { ModGroup: { GroupId: i.groupId || "", GroupName: i.groupName || "" } };
        this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.updateGroupName({ groupId: i.groupId, groupName: i.groupName }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.delGroup = function (e, t) {
        var i = e.data || {}, s = "DelGroup", o = { DelGroup: { GroupId: i.groupId, DelContact: !!i.isDeleteContacts } };
        this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.removeGroup({
                    groupId: i.groupId,
                    isDeleteContacts: i.isDeleteContacts
                }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.orderGroup = function (e, t) {
        var i = e.data || "", s = "OrderGroup", o = { GroupId: i };
        this.request(s, o, $.extend(e, {
            parseData: function (t) {
                a.orderGroup({ groupId: i }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.moveGroupList = function (e, t) {
        var i = e.data || {}, s = "MoveGroupList", o = {
            MoveGroupList: {
                SerialId: i.serialId,
                OldGroupId: i.fromGroupId,
                NewGroupId: i.toGroupId
            }
        };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.moveContacts({
                    fromGroupId: i.fromGroupId,
                    toGroupId: i.toGroupId,
                    contacts: l(i.serialId)
                }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.appendContacts = function (e, t) {
        var i = e.data || {}, s = "AddContacts", o = { AddContacts: this.contactsCheck(i.contacts) };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo), a.addContacts({ data: $.extend(i.contacts, t.data[0]) }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.modContacts = function (e, t) {
        var i = e.data || {}, s = "ModContacts", o = { ModContacts: this.contactsCheck(i.contacts) };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo), a.updateContacts({ data: $.extend(i.contacts, t.data[0]) }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.modContactsField = function (e, t) {
        var i = e.data || {}, s = "ModContactsField", o = {
            ModContactsField: {
                SourceType: "2",
                SerialId: i.serialId,
                AddrFirstName: i.addrFirstName,
                FamilyEmail: i.familyEmail,
                MobilePhone: i.mobilePhone,
                BusinessEmail: i.businessEmail,
                BusinessMobile: i.businessMobile
            }
        };
        this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.updateContactsField({ data: o.ModContactsField }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getRepeatContacts = function (e, t) {
        var i = (e.data || {}, "GetRepeatContacts"), a = { GetRepeatContacts: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.RepeatInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getLastContactsDetail = function (e, t) {
        var i = e.data || {}, a = "GetLastContactsDetail", s = { GetLastContactsDetail: { Type: i.isClose ? "close" : "last" } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.LastContactsInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.queryUserInfo = function (e, t) {
        var i = (e.data || {}, "QueryUserInfo"), a = { QueryUserInfo: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                var i = M2012.Contacts.getModel(), a = i.userInfoTranslate(t.data.UserInfo[0]);
                t.setData(a), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.addContactsField = function (e, t) {
        var i = e.data || {}, s = "AddContactsField", o = {
            AddContactsField: {
                SerialId: i.serialId,
                MobilePhone: i.mobile || "",
                FamilyEmail: i.email || "",
                OtherFax: i.fax || ""
            }
        };
        this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.addContactsField(o.AddContactsField), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.addUserInfo = function (e, t) {
        var i = e.data || {}, a = "AddUserInfo", s = { AddUserInfo: {} };
        s.AddUserInfo = $.extend(i.contacts, {
            AddrSecondName: "",
            AddrFirstName: i.contacts.name || i.contacts.AddrFirstName
        }), this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.modUserInfo = function (e, t) {
        var i = e.data || {}, a = "ModUserInfo", s = { ModUserInfo: {} };
        s.ModUserInfo = $.extend(i.contacts, {
            AddrSecondName: "",
            AddrFirstName: i.contacts.name || i.contacts.AddrFirstName
        }), this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.modMayKnowStatus = function (e, t) {
        var i = "ModMayKnowStatus", a = e.data || {};
        this.request(i, a, $.extend(e, {
            parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getMayKnowStatus = function (e, t) {
        this.request("GetMayKnowStatus", {}, $.extend(e, {
            parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.mergeContacts = function (e, t) {
        e.data || {};
        e.success && e.success({ code: 0, success: !1, msg: "该接口已经停止使用" })
    }, i.autoMergeContacts = function (e, t) {
        e.data = e.data || {};
        var i = "AutoMergeContacts", a = { Type: e.data.type || "" };
        e.data.serialIds && (a.SerialIds = e.data.serialIds || "");
        var s = { AutoMergeContacts: a };
        this.request(i, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.MergeInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.getMergeContactsList = function (e, t) {
        var i = e.data || {}, a = "GetMergeContactsList", s = { Type: i.Type || "0" };
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(a, s, e, t)
    }, i.queryMergeResult = function (e, t) {
        var i = (e.data || {}, "QueryMergeResult"), s = { QueryMergeResult: {} };
        this.request(i, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo || {}), a.autoMerge(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getRepeatContactsList = function (e, t) {
        var i = "GetRepeatContactsList", a = {};
        e.parseData = function (t) {
            t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
        }, this.request(i, a, e, t)
    }, i.getRepeatContactsNew = function (e, t) {
        var i = "GetRepeatContactsNew", a = { GetRepeatContactsNew: { StartGet: "1" } };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t["var"]), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.getRepeatContactsResult = function (e, t) {
        var i = "GetRepeatContactsNew", a = { GetRepeatContactsNew: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData({
                    InfoNum: t.data.InfoNum,
                    EAndMRep: t.data.EAndMRep,
                    NameNum: t.data.NameNum,
                    NameRep: t.data.NameRep
                }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.addLastContacts = function (e) {
        var t = e.data || {}, i = "AddLastContacts", s = { AddLastContacts: { AddContactsInfo: [] } };
        $.each(t, function (e) {
            ({
                SerialId: this.serialId,
                AddrName: this.addrName || "",
                AddrType: this.addrType || "",
                AddrContent: this.addrContent || "",
                AddrId: this.addrId || "",
                AddrTitle: this.addrTitle || "",
                ComeFrom: this.comeFrom || ""
            });
            s.AddLastContacts.AddContactsInfo.push(this)
        }), this.request(i, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.addLastContacts({ contacts: s.AddLastContacts.AddContactsInfo }), e.success.call(t.context, t.toJSON())
            }
        }), {})
    }, i.delLastContacts = function (e, t) {
        var i = e.data || {}, s = "DelLastContacts", o = {
            DelLastContacts: {
                SerialId: i.serialId || "",
                Mobile: i.mobile || "",
                Fax: i.fax || "",
                Email: i.email || "",
                Type: i.type || "",
                LastId: i.lastId || ""
            }
        };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                var s = i.email || i.mobile || i.fax;
                "last" == e.type ? a.removeLastContacts({ addr: s }) : a.removeCloseContacts({ addr: s }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.delLCContacts = function (e, t) {
        var i = e.data || {}, s = "DelLCContacts", o = { DelLCContacts: { Type: i.type || "" } };
        this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                "last" == i.type ? a.emptyLastContacts() : a.emptyCloseContacts(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.whoAddMe = function (e, t) {
        var i = (e.data || {}, "WhoAddMe"), a = { WhoAddMe: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.UserInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.whoWantAddMe = function (e, t) {
        var i = (e.data || {}, "WhoWantAddMe"), a = { WhoWantAddMe: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.UserInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.wMAGroupList = function (e, t) {
        e.data || {};
        e.success && e.success({ code: 0, success: !1, msg: "该接口已经停止使用" })
    }, i.getUpdatedContactsNum = function (e, t) {
        var i = (e.data || {}, "GetUpdatedContactsNum"), a = { GetUpdatedContactsNum: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.UpdatedContactsNum), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.noPromptUpdate = function (e, t) {
        var i = e.data || {}, a = "NoPromptUpdate", s = { NoPromptUpdate: { SerialId: i.SerialId } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getUpdatedContactsDetailInfo = function (e, t) {
        var i = e.data || {}, a = "GetUpdatedContactsDetailInfo", s = "<GetUpdatedContactsDetailInfo Page='{0}' Record='{1}'></GetUpdatedContactsDetailInfo>";
        s = s.format(i.pageIndex, i.pageSize), this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo || {}), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.saveIncrementalUpdatedInfo = function (e, t) {
        var i = e.data || {}, s = "SaveIncrementalUpdatedInfo", o = { SaveIncrementalUpdatedInfo: { ContactsInfo: i } };
        this.request(s, o, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                a.updatedContacts({ data: o.SaveIncrementalUpdatedInfo }), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.saveAllUpdatedInfo = function (e, t) {
        var i = (e.data || {}, "SaveAllUpdatedInfo"), a = { SaveAllUpdatedInfo: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.querySaveAllUpdatedResult = function (e, t) {
        var i = (e.data || {}, "QuerySaveAllUpdatedResult"), s = { QuerySaveAllUpdatedResult: {} };
        this.request(i, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.SuccessNum), a.autoUpdate(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.queryContactsInGroup = function (e, t) {
        var i = e.data || {}, a = "QueryContactsInGroup", s = { QueryContactsInGroup: { SerialId: i.serialId } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.addCAndGToGroup = function (e, t) {
        var i = e.data || {}, s = "AddCAndGToGroup", o = {
            AddCAndGToGroup: {
                AddrType: i.addrType,
                SourceType: "2",
                NewGroupName: i.newGroupName,
                GroupId: i.groupId,
                NewContactsAddr: i.newContactsAddr,
                SerialId: i.serialId,
                SourceType: i.sourceType,
                UserType: i.userType
            }
        };
        this.request(s, c(o), $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ContactsInfo), a.reload(), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getDealList = function (e, t) {
        var i = (e.data || {}, "GetDealList"), a = { GetDealList: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.UserInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.delDealList = function (e, t) {
        var i = e.data || {}, a = "DelDealList", s = { DelDealList: { RelationId: i.relationId } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.wamBatchReq = function (e, t) {
        var i = e.data || {}, a = "WamBatchReq", s = {
            WamBatchReq: {
                RelationId: i.relationId,
                DealStatus: i.dealStatus,
                GroupId: i.groupId,
                ReqMsg: i.reqMsg,
                ReplyMsg: i.replyMsg,
                OperUserType: i.operUserType
            }
        };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.getColorCloudInfo = function (e, t) {
        var i = (e.data || {}, "GetColorCloudInfo"), a = { GetColorCloudInfo: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.ColorCloudInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getFinshImportList = function (e, t) {
        var i = e.data || {}, a = "GetFinshImportList", s = { GetFinshImportList: { ImportId: i.importId } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.FinishImportList), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getFinshImportListV2 = function (e, t) {
        var i = e.data || {}, a = "GetFinshImportList", s = { GetFinshImportList: { ImportId: i.importId } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getFinshImportResult = function (e, t) {
        var i = e.data || {}, a = "GetFinshImportResult", s = { GetFinshImportResult: { ImportId: i.importId } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.getRemindBirdays = function (e, t) {
        var i = (e.data || {}, "GetRemindBirdays"), a = { GetRemindBirdays: {} };
        this.request(i, a, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                t.setData(t.data.BirDayInfo), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.setRemindBirdays = function (e, t) {
        var i = e.data || {}, a = "SetRemindBirdays", s = { SetRemindBirdays: { ContactNumber: i.contactNumber } };
        this.request(a, s, $.extend(e, {
            isXML2: !0, parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.checkUserNumber = function (e, t) {
        var i = e.data || {}, a = "CheckUserNumber", s = { OrgID: i.orgID };
        this.request(a, s, $.extend(e, {
            parseData: function (t) {
                e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.GetHeMemberInfo = function (e, t) {
        var i = e.data || {}, a = "GetHeMemberInfo", s = {
            MemberID: i.MemberID || "",
            EnterpriseId: i.enterpriseId || ""
        };
        this.request(a, s, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.mergeFuzzyQuery = function (e, t) {
        var i = e.data || {}, a = "MergeFuzzyQuery", s = {
            heswitch: i.heswitch || "",
            GroupId: i.groupId || "",
            Keyword: i.keyword || "",
            Letter: i.letter || "",
            Start: i.start || "1",
            End: i.end || "100"
        };
        return this.request(a, s, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.writePageGetAllSubList = function (e, t) {
        var i = e.data || {}, a = "WritePageGetAllSubList", s = {
            OrgID: i.OrgID || "",
            EnterpriseId: i.EnterpriseId || ""
        };
        this.request(a, s, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.getOrgTopNMerber = function (e, t) {
        var i = e.data || {}, a = "GetOrgTopNMerber", s = { OrgID: i.OrgID, TopN: i.TopN, EnterpriseId: i.EnterpriseId };
        this.request(a, s, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"].list), e.success.call(t.context, t.toJSON())
            }
        }), t)
    }, i.fuzzyQuery = function (e, t) {
        var i = e.data || {}, a = "FuzzyQuery", s = {
            Keyword: i.Keyword,
            PageIndex: i.PageIndex,
            MaxRecInPage: i.MaxRecInPage,
            CurrentTime: i.CurrentTime,
            RangeType: i.RangeType || ""
        };
        this.request(a, s, $.extend(e, {
            parseData: function (t) {
                t.setData(t.data["var"]), e.success.call(t.context, t.toJSON())
            }
        }), t)
    },
    i.contactsCheck = function (e) {
        for (var i = ["SerialId", "UserType", "SourceType", "AddrFirstName", "AddrSecondName", "AddrNickName", "UserSex", "CountryCode", "ProvCode", "AreaCode", "CityCode", "StreetCode", "ZipCode", "HomeAddress", "MobilePhoneType", "BirDay", "MobilePhone", "BusinessMobile", "BusinessPhone", "FamilyPhone", "BusinessFax", "FamilyFax", "OtherPhone", "OtherMobilePhone", "OtherFax", "FamilyEmail", "BusinessEmail", "OtherEmail", "PersonalWeb", "CompanyWeb", "OtherWeb", "OICQ", "MSN", "OtherIm", "CPCountryCode", "CPProvCode", "CPAreaCode", "CPCityCode", "CPStreetCode", "CPZipCode", "CPAddress", "CPName", "CPDepartName", "Memo", "StartCode", "BloodCode", "StateCode", "ImageUrl", "SchoolName", "BokeUrl", "UserJob", "GroupId", "AddGroupId", "AddGroupName", "AddNewGroup", "OverWrite", "FavoWord"], a = {}, s = 0; s < i.length; s++) {
            var o = i[s], n = e[o];
            t.isEmpty(n) || (a[o] = n)
        }
        return $.extend(a, { SourceType: "2", AddrSecondName: "", AddrFirstName: e.name || e.AddrFirstName })
    }
}(M139, _),

//settingsIndexView信息
window.settingsIndexView = function () {
    var e = {
        $el: null,
        currentSetting: null,
        iframeViews: {
            preference: "preferenceView",
            account: "accountSetting",
            settingsaddr: "addrSetView",
            settingscalendar: "calendarSetView",
            settingsdisk: "diskSetView",
            settingsmms: "mmsSetView"
        },
        settingIdMap: {
            set_addr: "settingsaddr",
            set_calendar: "settingscalendar",
            set_disk: "settingsdisk",
            set_mms: "settingsmms",
            type_new: "type_new",
            spam_new: "spam_new"
        },
        options: {
            container: "#mainContentBox",
            template: ['<div id="setNavcontainer" class="inAside" style="overflow-y: auto;">', '<div class="subList subListSet">', '<ul class="big subListScrollLast">', '<li class="nav-item" nav-key="preference">', '<a class="groupToggleShow" hidefocus="" href="javascript:;"><i name="i_unfold" class="triangle t_blackRight"></i><span class="fz_14">常规设置</span></a>', '<ul class="small" style="display: none;">{classicSetItems}</ul>', "</li>", '<li class="nav-item" nav-key="account">', '<a class="groupToggleShow" hidefocus="" href="javascript:;"><i name="i_unfold" class="triangle t_blackRight"></i><span class="fz_14">帐户与安全</span></a>', '<ul class="small" style="display: none;">{accountSetItems}</ul>', "</li>", "</ul>", '<ul id="subListSingles" class="big"><li class="bottomLi"></li>{singleSetItems}</ul>', '<ul id="subListOthers" class="big"><li class="bottomLi"></li>{otherItems}</ul>', "</div>", "</div>"].join(""),
            items: {
                classicSetItems: {
                    itemTemplate: '<li class="subNav-item" subNav-anchor="{key}"><a href="javascript:;" bh="{bh}"><span class="otheMail">{title}</span></a></li>',
                    data: [{ title: "显示设置", key: "preference_dispSet", bh: "set_nav_preference" }, {
                        title: "读信设置",
                        key: "preference_readSet",
                        bh: "set_nav_preference"
                    }, { title: "回复与转发", key: "preference_forwardSet", bh: "set_nav_preference" }, {
                        title: "键盘快捷键",
                        key: "preference_shortcutKey",
                        bh: "set_nav_preference"
                    }, {
                        title: "文件夹清理",
                        key: "preference_foldersClean",
                        bh: "set_nav_preference",
                        conditionFn: function () {
                            return top.$App.getFolderById(4) && top.$App.getFolderById(11)
                        }
                    }, { title: "邮件TIPS提醒", key: "preference_onlinetips", bh: "set_nav_preference" }, {
                        title: "邮箱触点",
                        key: "preference_secSafe",
                        bh: "set_nav_preference"
                    }]
                },
                accountSetItems: {
                    itemTemplate: '<li class="subNav-item" subNav-anchor="{key}"><a href="javascript:;" bh="{bh}"><span class="otheMail">{title}</span></a></li>',
                    data: [{ title: "帐户信息", key: "account_accountSet", bh: "set_nav_account" }, {
                        title: "修改密码",
                        key: "account_mailPwd",
                        bh: "set_modify_password"
                    }, { title: "手机登录设置", key: "account_mobileLogin", bh: "health_logindirectly" }, {
                        title: "邮件签名",
                        key: "account_areaSign",
                        bh: "set_nav_account"
                    }, { title: "个人资料", key: "account_userInfo", bh: "set_nav_account" }, {
                        title: "文件夹加锁",
                        key: "account_secSafe",
                        bh: "set_account_lock_set"
                    }, { title: "邮箱协议设置", key: "account_clientSet", bh: "set_nav_account" }, {
                        title: "邮箱安全",
                        key: "account_httpsSet",
                        bh: "set_nav_safe"
                    }]
                },
                singleSetItems: {
                    itemTemplate: '<li class="nav-item" openMethod="{method}" nav-key="{key}"><a class="groupToggleShow" hidefocus="" href="javascript:;"><span class="fz_14">{title}</span></a></li>',
                    data: [{ title: "文件夹与标签", key: "tags", bh: "set_nav_tags", method: "" }, {
                        title: "其他邮箱",
                        key: "popmail",
                        bh: "set_nav_pop",
                        method: ""
                    }, {
                        title: "邮件整理",
                        key: "type_new",
                        bh: "classifymailnormal_onclick",
                        method: ""
                    }, {
                        title: "邮件过滤及提醒",
                        key: "message_control",
                        bh: "messagecontrol_setting_click",
                        method: ""
                    }, {
                        title: "升级服务",
                        key: "goto_vipmailCenter",
                        bh: "",
                        method: "_blank",
                        condition: !$User.isNotChinaMobileUser()
                    }]
                },
                otherItems: {
                    itemTemplate: '<li class="nav-item" nav-key="{key}"><a href="javascript:;" bh="{bh}"><span class="fz_14">{title}</span></a></li>',
                    data: [{ title: "通讯录", key: "set_addr", bh: "set_addr_load" }, {
                        title: "日历",
                        key: "set_calendar",
                        bh: "set_calendar_load"
                    }, { title: "彩云网盘", key: "set_disk", bh: "set_disk_load" }, {
                        title: "云邮局",
                        key: "set_mpost",
                        bh: "set_mpost_load"
                    }, { title: "短彩信", key: "set_mms", bh: "set_mms_load" }]
                }
            }
        },
        openLinkConfig: {
            goto_vipmailCenter: function () {
                return top.$App.getVipMailCenterUrl("html/index.html")
            }
        },
        render: function () {
            function e() {
                for (var e in t.items) if (t.items.hasOwnProperty(e)) {
                    var i = t.items[e].data;
                    _.each(i, function (e, t) {
                        var a = _.isUndefined(e.condition) ? !0 : e.condition, s = _.isUndefined(e.conditionFn) ? !0 : e.conditionFn.call();
                        a && s || (i[t] = !1)
                    }, this), t.items[e].data = _.compact(i)
                }
            }

            var t = this.options, i = null, a = {}, s = "";
            e(), $User.isInternetUser() && t.items.singleSetItems.data.splice(3, 1, {
                title: "邮件过滤",
                key: "spam",
                bh: "set_nav_spam"
            });
            for (key in t.items) i = t.items[key], a[key] = $TextUtils.formatBatch(i.itemTemplate, i.data).join("");
            s = $TextUtils.format(t.template, a), this.$el = $(s).hide().css("marginLeft", 0), this.$el.appendTo(t.container), this.bindEvents()
        },
        bindEvents: function () {
            var e = this;
            $("#setNavcontainer li.nav-item").on("click", function (t) {
                var i = $(t.currentTarget), a = i.attr("nav-key"), s = i.attr("openMethod"), o = $("#" + e.currentSetting)[0] && $("#" + e.currentSetting)[0].contentWindow, n = e.iframeViews[e.currentSetting];
                return "_blank" == s ? void e.openLink(a) : void (a === e.currentSetting || e.settingIdMap[a] === e.currentSetting ? e.toggleSubNavItems(i) : e.checkIfSave(o, n, a))
            }), $("#setNavcontainer li.subNav-item").on("click", function (t) {
                t.stopPropagation();
                var i = $(t.currentTarget).attr("subNav-anchor");
                e.scrollToAnchor(i)
            })
        },
        openLink: function (e) {
            var t = this.openLinkConfig[e]();
            t && top.open(t)
        },
        scrollToAnchor: function (e) {
            var t = this, i = $("#" + t.currentSetting)[0] && $("#" + t.currentSetting)[0].contentWindow, a = t.iframeViews[t.currentSetting];
            e && e.indexOf(t.currentSetting) > -1 ? i[a] && i[a].scrollAnchorHelper.scrollToAnchors(e.split("_")[1]) : t.checkIfSave(i, a, e)
        },
        checkIfSave: function (e, t, i) {
            if (i) {
                var a = e && e[t];
                a && a.rcteStatus ? (top.$Config.set("viewObj.closeOrigin", i), top.$App.close()) : setTimeout(function () {
                    $App.show(i)
                }, 0)
            }
        },
        toggleSubNavItems: function (e, t) {
            var i = e.find(".triangle"), a = e.find(".small");
            return t ? void (i[0] && -1 === i[0].className.indexOf("t_blackDown") && (i.removeClass("t_blackRight").addClass("t_blackDown"), a.show())) : void (e.find(".triangle").length && (i[0] && i[0].className.indexOf("t_blackDown") > -1 ? i.removeClass("t_blackDown").addClass("t_blackRight") : i.removeClass("t_blackRight").addClass("t_blackDown"), a.toggle()))
        },
        switchItem: function (e) {
            this.currentSetting = this.settingIdMap[e] ? this.settingIdMap[e] : e.indexOf("_") > -1 ? e.split("_")[0] : e;
            var t = this.$el.find("li[nav-key=" + e + "]");
            t.length || (t = this.$el.find("li[subNav-anchor=" + e + "]")), this.$el.find("a.on").removeClass("on"), t.children("a").addClass("on"), t.is(".subNav-item") ? this.toggleSubNavItems(t.parents(".nav-item"), "open") : this.toggleSubNavItems(t, "open")
        },
        show: function () {
            this.$el.show()
        },
        hide: function () {
            this.$el && this.$el.hide()
        }
    };
    $(function () {
        $App.on({
            showPage: function (t) {
                var i = FrameModel.getLinkByKey(t.name);
                if (i && "setting" == i.group && e) {
                    e.switchItem(t.name);
                }
            }, showTab: function (t) {
                if (!(t && "setting" === t.group)) {
                    if (e) {
                        e.hide();
                    }
                }
            }
        })
    });
    return {
        getSettingsNav: function () {
            if (0 === $("#setNavcontainer").length) {
                e.render();
                setTimeout(function () {
                    $(window).resize(function () {
                        e.$el.css({ height: top.$D.getWinHeight() - e.$el.offset().top });
                        $("#skinBgSub").css({ top: e.$el.offset().top > 75 ? e.$el.offset().top : 105 });
                    }).resize();
                }, 200);
            }
            e && e.show();
            top.BH({ key: "setting_load" });
        },
        getNav: function () {
            return e
        }
    }
}(),

//M2012.MailComplaint.Model
function (e, t, i) {
    i.namespace("M2012.MailComplaint.Model", Backbone.Model.extend({
        defaults: {
            fid: null,
            mid: null,
            rubbishFid: 5,
            noReadMailFids: [2, 3, 4, 8, 9],
            noFids: [2, 3],
            noSpamMailFids: [2, 3, 4, 5, 8, 9],
            moveToFid: 5,
            isSessionMode: !1,
            selectData: null,
            sessionIds: [],
            ids: null,
            listData: null,
            dataSource: null,
            accountList: [],
            myAccounts: []
        },
        tips: {
            serverBusy: "系统繁忙，请稍后重试",
            warnSys: "系统邮件，不能举报",
            warnMe: "自己的邮件，不能举报",
            warnTask: "待办任务，不能举报",
            warnSpamSys: "不能对系统邮件地址进行拒收",
            warnSpamMe: "不能对自己的邮件地址进行拒收"
        },
        isNotRubbishMailBtn: function () {
            return this.get("fid") == this.get("rubbishFid")
        },
        isShowComplaintBtn: function () {
            try {
                return this.get("dataSource") ? this.isRMComplaintEntry() : this.isComplaintMailBox()
            } catch (e) {
                return !1
            }
        },
        isComplaintMailBox: function () {
            var e = this.get("noReadMailFids"), t = this.get("fid");
            return -1 == $.inArray(t, e)
        },
        isComplaintReadMailFid: function () {
            var e = this.get("noReadMailFids"), t = this.get("fid");
            return -1 == $.inArray(t, e)
        },
        isSpamMail: function () {
            var e = this.get("noSpamMailFids"), t = this.get("fid");
            return $.inArray(t, e) > -1 ? !1 : this.isRMComplaintEntry()
        },
        isAllowRefuseEmailaddr: function (e) {
            var t = this, a = this.get("mid"), s = 0;
            if (a) {
                var o = $App.getMailDataByMid(a), n = o && i.Text.Email.getEmail(o.from);
                e == n && (s = o.logoType)
            }
            return t.isHasSysAccount(e) || 1 == s ? (t.showWarnTips(t.tips.warnSpamSys), !1) : t.isHasMyAccount(e) ? (t.showWarnTips(t.tips.warnSpamMe), !1) : !0
        },
        isHasSysAccount: function (e) {
            var t = this.getSystemAccounts();
            return $.inArray(e, t) > -1
        },
        isHasMyAccount: function (e) {
            var t = this.get("myAccounts");
            return $.inArray(e, t) > -1
        },
        isRMComplaintEntry: function () {
            var e = this.get("dataSource"), t = this.get("from");
            e && e.from && (t = e.from);
            var i = $Email.getEmail(t) || null;
            return $App.isSessionMode() ? !1 : 0 == this.get("myAccounts").length ? !1 : this.isComplaintReadMailFid() ? e && 1 == e.logoType ? !1 : e && e.flags && 1 == e.flags.taskFlag ? !1 : this.isHasMyAccount(i) || this.isHasSysAccount(i) ? !1 : !e || 1 != e.subscriptionFlag : !1
        },
        getSystemAccounts: function () {
            return $App.getSysAccount() || []
        },
        callSpamMailRequest: function (e, t) {
            var i = { opType: 2, needFilterHistoryMail: e.check ? 1 : 0, listType: 2, list: e.list };
            this.requestReportSpamMails(i, t)
        },
        callComplaintRequest: function (e, t) {
            var i = {
                opType: 1,
                newFid: this.get("moveToFid"),
                needFilterHistoryMail: e.check ? 1 : 0,
                list: e.check ? this.get("accountList") : [],
                ids: this.get("ids")
            };
            this.requestReportSpamMails(i, t)
        },
        callNotRubbishMailRequest: function (e, t) {
            var i = {
                opType: 3,
                newFid: 1,
                needFilterHistoryMail: e.check ? 1 : 0,
                listType: 3,
                list: this.get("accountList"),
                ids: this.get("ids")
            };
            this.requestReportSpamMails(i, t)
        },
        requestReportSpamMails: function (e, t) {
            i.RichMail.API.call("mbox:reportSpamMails", e, function (e) {
                var i = e.responseData;
                t && t(i)
            })
        },
        checkListSelect: function () {
            var e = this, t = this.get("ids"), i = !0, a = [], s = {}, o = this.get("fid"), n = 0, r = $App.getMailboxView().model, l = r.superSelectResult || {};
            t[0] && $.each(t, function (t, a) {
                var r = $App.getMailDataByMid(a) || l[a];
                if (r) {
                    var c = r.logoType, d = r.subscriptionFlag, p = $Email.getEmail(r.from);
                    if (p) {
                        if (5 != o) {
                            if (e.isHasSysAccount(p) || 1 == c || 1 == d) return e.showWarnTips(e.tips.warnSys), i = !1, !1;
                            if (e.isHasMyAccount(p)) return e.showWarnTips(e.tips.warnMe), i = !1, !1
                        }
                        s[p] = p
                    } else n++
                }
            });
            for (var c in s) a.push(c);
            return this.set({ accountList: a }), this.set({ noAccountCount: n }), i
        },
        showFailTips: function () {
            this.showWarnTips(this.tips.serverBusy)
        },
        showWarnTips: function (e) {
            e && i.UI.TipMessage.show(e, { colour: "msgRed", prior: !0, delay: 3e3 })
        }
    }))
}(jQuery, _, M139),

//M2012.MailComplaint.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.MailComplaint.View", s.extend({
        el: "",
        template: {
            complaint: ['<dl class="norTipsContent">', '<dt class="norTipsLine formLine"><strong>您举报的邮件将被移动到垃圾邮件文件夹</strong></dt>', '<dd class="formLine gray">通过举报垃圾邮件，可以协助139邮箱更有效的抵制垃圾邮件。感谢您的支持！</dd>', '<dd class="formLine"><input type="checkbox" id="checkbox"> 将发件人的历史邮件移入垃圾邮件文件夹</dd>', "</dl>"].join(""),
            spam: ['<dl class="norTipsContent">', '<dt class="norTipsLine">拒收后，您将不再收到此地址的邮件:</dt>', '<dd class="txt_ellipsis mt_5" title="{1}"><strong>{0}</strong></dd>', '<dd class="norTipsLine mt_10">', '<input type="checkbox" id="checkbox" checked="checked" class="mr_5"><label for="chk_20">将发件人的历史邮件移入垃圾邮件文件夹</label>', "</dd>", "</dl>"].join(""),
            notRubbish: ['<dl class="norTipsContent">', '<dt class="norTipsLine"><strong>所选邮件将被移到收件箱</strong></dt>', '<dd class="norTipsLine {0}">', '<input type="checkbox" id="checkbox" checked="checked" class="mr_5"><label for="chk_20">把垃圾箱中该发件人的历史邮件全部转移到收件箱</label>', "</dd>", "</dl>"].join(""),
            complaintSuccess: '举报成功，邮件移动到垃圾文件夹。<a href="javascript:$App.showMailbox(5)">查看</a>',
            spamMailAndMoveSuccess: '拒收成功，{0}邮件移动到垃圾文件夹，并拒收发件人的邮件。<a href="javascript:$App.showMailbox(5)">查看</a>',
            spamMailSuccess: "拒收成功。",
            notRubbishSuccess: "邮件已移动到收件箱。"
        },
        initialize: function (e) {
            return this.model = new M2012.MailComplaint.Model, this.initEvents(), s.prototype.initialize.apply(this, arguments)
        },
        initEvents: function () {
            var e = this;
            top.M139.Timing.waitForReady('$App.getConfig("UserData")', function () {
                e.model.set({ myAccounts: $User.getAccountListArray() || [] })
            })
        },
        mailComplaint: function () {
            var e = this.checkListSelect();
            e && this.showComplaintPop()
        },
        spamMail: function () {
            this.showSpamMailPop()
        },
        showPop: function (e) {
            var t = $Msg.confirm(e.temp, function () {
                var i = a(t.el).find("#checkbox:checked");
                e.callBack(i[0])
            }, null, { dialogTitle: e.title, icon: "warn", isHtml: !0 })
        },
        showSuccessTips: function (e) {
            var t = this, i = e.temp, a = e.response > 1 ? "已将" + e.response + "封" : "", s = $T.Utils.format(i, [a]);
            this.model.showWarnTips(s), setTimeout(function () {
                var e = t.model.get("commandCallback");
                e && e()
            }, 200)
        },
        showComplaintPop: function () {
            var e = this;
            this.showPop({
                title: "邮件举报", temp: e.template.complaint, callBack: function (t) {
                    i.UI.TipMessage.show("邮件举报中..."), e.model.callComplaintRequest({
                        check: t,
                        ids: e.model.get("ids")
                    }, function (t) {
                        if ("S_OK" == t.code) {
                            var i = e.model.get("noAccountCount") || 0;
                            e.complaintSuccess(t["var"] + i);
                            var s = $App.getCurrentTab().element;
                            a(s).find("#inboxHeader").find("#btn_leadShow").remove(), a(s).find("#inboxHeader").find(".createReType").show()
                        } else e.model.showFailTips()
                    })
                }
            })
        },
        complaintSuccess: function (e) {
            this.showSuccessTips({ temp: this.template.complaintSuccess, response: e })
        },
        showSpamMailPop: function () {
            var e = this, t = this.model.get("from"), i = $App.getAddrNameByEmail(t), a = $Email.getEmail(t), s = $T.Html.encode(i) + "&lt;" + $T.Html.encode(a) + "&gt;";
            e.showPop({
                title: "邮件拒收", temp: $T.Utils.format(e.template.spam, [s, a]), callBack: function (t) {
                    e.model.callSpamMailRequest({ check: t, list: [a] }, function (i) {
                        "S_OK" == i.code ? e.spamMailSuccess(i["var"], t) : e.model.showFailTips()
                    })
                }
            })
        },
        spamMailSuccess: function (e, t) {
            var i = t ? this.template.spamMailAndMoveSuccess : this.template.spamMailSuccess;
            this.showSuccessTips({ temp: i, response: e })
        },
        notRubbishMail: function () {
            var e = this, t = this.checkListSelect();
            t && e.showNotRubbishPop()
        },
        showNotRubbishPop: function () {
            var e = this;
            e.showPop({
                title: "这不是垃圾邮件", temp: e.template.notRubbish, callBack: function (t) {
                    e.model.callNotRubbishMailRequest({ check: t }, function (t) {
                        "S_OK" == t.code ? e.notRubbishSuccess(t["var"]) : e.model.showFailTips()
                    })
                }
            })
        },
        notRubbishSuccess: function (e) {
            this.showSuccessTips({ temp: this.template.notRubbishSuccess, response: e })
        },
        checkListSelect: function () {
            return this.model.checkListSelect()
        },
        isSpamMail: function () {
            return this.model.isSpamMail()
        },
        isAllowRefuseEmailaddr: function (e) {
            return this.model.isAllowRefuseEmailaddr(e)
        },
        render: function () {
        }
    })), a(function () {
        mailboxComplaintView = new M2012.MailComplaint.View
    })
}(jQuery, _, M139),

//M2012.UI.Dialog.ContactsEditor
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M2012.UI.Dialog.ContactsEditor";
    i.namespace(o, s.extend({
        initialize: function (e) {
            return this.options = e || {}, this.filter = this.options.filter, this.contactsModel = top.M2012.Contacts.getModel(), s.prototype.initialize.apply(this, arguments)
        },
        name: o,
        template: ['<div class="boxIframeText">', '<p class="mt_10 Lbl_Tip" style="margin-left:25px; display:none;"></p>', '<ul class="form groupFenDiv" id="JSContactEditor">', '<li class="formLine ErrorTipContainer" style="display:none">', '<label class="label"></label>', '<div class="element">', '<div class="red LblErrorTip" style="width:280px;margin-left:-62px;">格式错误</div>', "</div>", "</li>", '<li class="formLine">', '<label class="label">姓名：</label>', '<div class="element">   ', '<input maxlength="16" id="AddContacts_Name" type="text" class="iText" /> <span class="red">*</span>', "</div>", "</li>", '<li class="formLine">', '<label class="label">邮箱：</label>', '<div class="element">       ', '<input maxlength="90" id="AddContacts_Email" type="text" class="iText" />', '<input maxlength="90" id="AddContacts_EmailIndex" data-oldEmail="" type="hidden" value="0" />', "</div>", "</li>", '<li class="formLine JSMobileLi">', '<label class="label">手机：</label>', '<div class="element">        ', '<input maxlength="20" id="AddContacts_Mobile" type="text" class="iText" />', "</div>", "</li>", '<li class="formLine JSGroupLi">', '<label class="label">分组：</label>', '<div class="element">  ', '<div class="groupFen">', '<div class="groupFenList GroupContainer">', "</div>	", '<div class="groupBtn">', '<a href="javascript:;" class="BtnShowAddGroup">新建分组</a>', '<div class="AddrGroupContainer" style="display:none">', '<input id="AddContacts_GroupName" maxlength="16" type="text" class="iText mr_5" value="" />', '<a hidefocus="1" href="javascript:;" class="btnMinOK mr_5 AddNewGroup" title="确定"></a>', '<a hidefocus="1" href="javascript:;" class="btnMincancel CancelAddGroup" title="取消"></a>', "</div>", "</div>", "</div>	", "</div>", "</li>", "</ul>", "</div>"].join(""),
        batchtemplate: ['<div class="boxIframeText">', '<p class="mt_10 Lbl_Tip" style="margin-left:25px; display:none;"></p>', '<ul class="form groupFenDiv">', '<li class="formLine ErrorTipContainer" style="display:none">', '<label class="label"></label>', '<div class="element">', '<div class="red LblErrorTip" style="width:280px;margin-left:-62px;">格式错误</div>', "</div>", "</li>", '<li class="formLine"><div style="padding-left:50px">你即将添加{0}个联系人，重复的联系人不再保存。</div></li>', '<li class="formLine">', '<label class="label">分组：</label>', '<div class="element">  ', '<div class="groupFen">', '<div class="groupFenList GroupContainer">', "</div> ", '<div class="groupBtn">', '<a href="javascript:;" class="BtnShowAddGroup">新建分组</a>', '<div class="AddrGroupContainer" style="display:none">', '<input id="AddContacts_GroupName" maxlength="16" type="text" class="iText mr_5" value="" />', '<a hidefocus="1" href="javascript:;" class="btnMinOK mr_5 AddNewGroup" title="确定"></a>', '<a hidefocus="1" href="javascript:;" class="btnMincancel CancelAddGroup" title="取消"></a>', "</div>", "</div>", "</div> ", "</div>", "</li>", "</ul>", "</div>"].join(""),
        GroupItemTemplate: '<p><input id="{chkId}" type="checkbox" value="{groupId}" class="mr_5"><label for="{chkId}">{name}</label></p>',
        events: {
            "click .AddNewGroup": "onAddNewGroupClick",
            "click .BtnShowAddGroup": "onShowAddGroupClick",
            "click .CancelAddGroup": "onCancelAddGroupClick"
        },
        render: function (e) {
            var t = this;
            this.options;
            return this.dialog = top.$Msg.showHTML(this.template, function (e) {
                t.onYesClick(), e.cancel = !0
            }, function () {
                t.onCancel()
            }, {
                buttons: ["确定", "取消"],
                dialogTitle: "添加联系人"
            }), this.setElement(this.dialog.el), this.renderGroupList(), this.renderContactsInfo(), this.initEvent(), a("#JSContactEditor").find(".formLine").css("margin-bottom", "10px"), "addrInvalid" == e && this.dialog.setDialogTitle("修改邮件地址"), s.prototype.render.apply(this, arguments)
        },
        batchrender: function () {
            var e = this, t = this.options, i = t.addContacts, o = 0;
            i.length > 0 && a.each(i, function () {
                "" == this.serialId && o++
            });
            var n = $T.Utils.format(this.batchtemplate, [o]);
            return this.dialog = $Msg.showHTML(n, function (t) {
                var i = e.$(".YesButton").attr("isDisabled");
                i || (e.onBatchYesClick(), t.cancel = !0)
            }, function () {
                e.onCancel()
            }, {
                buttons: ["确定", "取消"],
                dialogTitle: "批量添加联系人"
            }), this.setElement(this.dialog.el), this.renderGroupList(), this.renderContactsInfo(), this.initEvent(), s.prototype.render.apply(this, arguments)
        },
        renderGroupList: function (e) {
            var t = [];
            e = e || this.contactsModel.getGroupList();
            for (var a = 0; a < e.length; a++) {
                var s = e[a];
                t.push(i.Text.Utils.format(this.GroupItemTemplate, {
                    groupId: s.id,
                    name: i.Text.Html.encode(s.name),
                    chkId: "_groups_chk_" + s.id
                }))
            }
            this.$(".GroupContainer").append(t.join(""))
        },
        renderContactsInfo: function () {
            var e = this, i = this.options, s = {};
            if (i.serialId) {
                var o = this.contactsModel.getContactsById(i.serialId);
                if (o) {
                    top.M2012.Contacts.API.queryNewContact({
                        data: { SerialId: i.serialId }, success: function (e) {
                            if ("S_OK" == e.code) {
                                var s = e.data, o = "0";
                                if (null != s) {
                                    if (t.isArray(s) && s[0].Email && s[0].Email.length > 0) {
                                        var n = s[0].Email;
                                        t.each(n, function (e) {
                                            delete e.IsInvalid
                                        });
                                        for (var r, l = []; n.length > 0;) {
                                            r = n.shift();
                                            for (var c in r) l.push(r[c])
                                        }
                                        var d = l.length;
                                        if (d > 0) for (var p = 0; d > p; p++) if (l[p] == i.nowFromEmail) {
                                            o = p;
                                            break
                                        }
                                    }
                                    a("#AddContacts_EmailIndex").val(o)
                                }
                            }
                        }, error: function () {
                        }
                    });
                    var n = "0";
                    if (o.emails && o.emails.length > 0) for (var r = o.emails, l = r.length, c = 0; l > c; c++) if (r[c] == i.nowFromEmail) {
                        n = c;
                        break
                    }
                    s.name = o.name, s.mobile = o.getFirstMobile(), s.email = i.nowFromEmail, s.emailIndex = n;
                    var d = this.contactsModel.getContactsGroupId(i.serialId)
                }
                this.dialog.setDialogTitle("编辑联系人")
            } else s.name = i.name, s.email = i.email, s.mobile = i.mobile, s.email && this.setLabelTip("将<" + s.email + ">加到通讯录");
            this.$("#AddContacts_Name").val(s.name || ""), this.$("#AddContacts_Email").val(s.email || ""), this.$("#AddContacts_EmailIndex").val(s.emailIndex || "0"), this.$("#AddContacts_EmailIndex").attr("data-oldEmail", s.email || ""), this.$("#AddContacts_Mobile").val(s.mobile || ""), d && a(d).each(function (t, i) {
                e.checkedGroup(i)
            }), this.$el.find(".groupFenList label").each(function () {
                "读信联系人" != a(this).text() || a(this).prev("input").is(":checked") || a(this).parent().hide()
            })
        },
        setLabelTip: function (e) {
            this.$(".Lbl_Tip").text(e)
        },
        onAddNewGroupClick: function () {
            top.BH("contactsEditor_click_addNewGroup");
            var e = this, t = this.$("#AddContacts_GroupName").val().trim();
            top.M2012.Contacts.API.addGroup(t, function (t) {
                t.success ? e.appendGroup(t.groupName, t.groupId) : e.showError(t)
            })
        },
        showError: function (e) {
            var t = "";
            t = "string" == typeof e ? e : "21" == e.code ? "保存失败，联系人数量已达上限。欢迎使用批量删除功能整理您的<a href=\"javascript:top.FF.close();top.$App.showChannel('addr');top.BH('addr_click_beyondLimit_contactsEditor');\" style=\"color:#0344AE\">通讯录</a>。" : e.error || e.msg, this.$el.find(".LblErrorTip").html(t), this.$el.find(".ErrorTipContainer").show()
        },
        onShowAddGroupClick: function () {
            this.$(".AddrGroupContainer").show(), this.$("#AddContacts_GroupName").val("").focus(), this.$(".BtnShowAddGroup").hide()
        },
        onCancelAddGroupClick: function () {
            this.hideAddGroup()
        },
        hideAddGroup: function () {
            this.$(".AddrGroupContainer").hide(), this.$(".BtnShowAddGroup").show()
        },
        checkedGroup: function (e) {
            this.$("#_groups_chk_" + e).attr("checked", "checked")
        },
        appendGroup: function (e, t) {
            var i = { name: e, id: t };
            this.renderGroupList([i]), this.checkedGroup(t), this.$("#AddContacts_GroupName").val(""), this.$(".GroupContainer")[0].scrollTop = 1e4, this.hideAddGroup(), this.trigger("addGroupSuccess", i)
        },
        initEvent: function (e) {
            a("#AddContacts_Email").on("blur", function () {
                var e, t = a("#AddContacts_Email").val(), i = top.$T.Mobile;
                e = t, i.isChinaMobile(e) && a("#AddContacts_Email").val(e + "@139.com")
            })
        },
        onYesClick: function () {
            var e = this;
            if (!a(".JSMobileLi").is(":visible") && !a(".JSGroupLi").is(":visible")) {
                var i = this.$("#AddContacts_Email").val().trim();
                if ("" == i) return void e.showError("请输入邮箱")
            }
            var s = {};
            s.name = this.$("#AddContacts_Name").val(), s.email = this.$("#AddContacts_Email").val(), s.mobile = this.$("#AddContacts_Mobile").val(), s.groupId = [], this.$("input:checkbox:checked").each(function () {
                s.groupId.push(this.value)
            }), this.options.serialId ? (top.BH("contactsEditor_click_saveContact"), s.serialId = this.options.serialId, s.emailIndex = this.$("#AddContacts_EmailIndex").val(), s.oldEmail = this.$("#AddContacts_EmailIndex").attr("data-oldEmail"), top.M2012.Contacts.API.modContactsPartial(this.options.serialId, s, function (t) {
                t.success ? (top.M139.UI.TipMessage.show("修改成功", { delay: 3e3 }), e.options.callback && e.options.callback(s.name, s.oldEmail), e.onSuccess(t)) : e.showError(t)
            })) : this.options.fromCardData ? top.M2012.Contacts.API.addNewContacts({
                data: t.extend(this.options.fromCardData, { GroupId: s.groupId.join(",") }),
                success: function (t) {
                    e.onSuccess(t), top.M139.UI.TipMessage.show("操作成功", { delay: 1500 })
                },
                fail: function () {
                    top.M139.UI.TipMessage.show("网络错误，请稍后重试", { delay: 1500 })
                }
            }) : top.M2012.Contacts.API.addContacts(s, function (t) {
                t.success ? (top.M139.UI.TipMessage.show("添加成功", { delay: 3e3 }), e.onSuccess(t)) : e.showError(t)
            })
        },
        onBatchYesClick: function () {
            top.M139.UI.TipMessage.show("正在处理中...", { delay: 3e3 }), this.$(".YesButton").attr("isDisabled", !0);
            var e, t = this, i = [], s = t.options.addContacts, o = t.options.alink, n = 0, r = [], l = [], c = [];
            t.$("input:checkbox:checked").each(function () {
                i.push(this.value)
            }), s.length > 0 && (a.each(s, function () {
                "" == this.serialId && n++
            }), a.each(s, function () {
                "" == this.serialId ? (r.push(this.email), this.name ? l.push(this.name) : l.push(top.$Email.getName(this.email))) : c.push(this.serialId)
            }), a.each(s, function () {
                this.groupId = i
            }), e = function (e) {
                if (t.$(".YesButton").attr("isDisabled", !1), e.success) {
                    top.M139.UI.TipMessage.show("成功添加{0}个联系人".format(n), { delay: 3e3 });
                    var i = $App.getTabByName("addr");
                    i && (i.isRendered = !1), o && o.hide(), t.onSuccess(e)
                } else t.showError(e), top.M139.UI.TipMessage.hide()
            }, s.length > 1 ? top.M2012.Contacts.API.addBatchAndGToGroup({
                data: {
                    groupId: i.join(","),
                    newContactsAddr: r.join(","),
                    serialId: c.join(","),
                    NewContactsName: l.join("|||")
                }, success: function (e) {
                    if (t.$(".YesButton").attr("isDisabled", !1), e.success) {
                        top.M139.UI.TipMessage.show("成功添加{0}个联系人".format(n), { delay: 3e3 });
                        var i = $App.getTabByName("addr");
                        i && (i.isRendered = !1), o && o.hide(), t.onSuccess(e)
                    } else t.showError(e), top.M139.UI.TipMessage.hide()
                }, error: function (e) {
                    t.showError(e), top.M139.UI.TipMessage.hide()
                }
            }) : top.M2012.Contacts.API.addContacts(s[0], e))
        },
        onSuccess: function (e) {
            a(".JSMobileLi").is(":visible") || a(".JSGroupLi").is(":visible") || (top.$App.trigger("flushPage_Invalid"), top.BH("addr_success_contactscard_edit")), this.dialog.close(), this.trigger("success", e)
        },
        onCancel: function () {
            this.trigger("cancel")
        }
    }))
}(jQuery, _, M139),

//M2012.UI.Widget.ContactsCard
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M2012.UI.Widget.ContactsCard";
    i.namespace(o, s.extend({
        initialize: function (t) {
            this.options = t || {};
            var i = e(this.template);
            return this.setElement(i), this.contactsModel = M2012.Contacts.getModel(), this.model = new Backbone.Model, s.prototype.initialize.apply(this, arguments)
        },
        name: o,
        template: '<div class="p_absolute tips mailContactTips" style="left:508px;top:30px;z-index:1023;display:none;">                <div class="tips-text">                    <div class="imgInfo">                        <a hidefocus="1" href="javascript:;" class="mail-back-close"><i class="i-back-close" style="display:none;"></i><i class="i-sendFilePeo"></i></a>                        <img class="avatar-ry avatar-image" rel="../images/ad/face.jpg" width="50" height="50" />                        <dl style="float: left;width: 228px;">                            <span class="Lbl_Name setL">>{name}</span>                            <span class="setSapn" style="display: none;"><input  type="text" class="setEdit" maxlength="16"/></span>                            <a href="javascript:;" style="display:none;" class="ml_5 icons i-s-pretty"></a>                            <a class="Vip user_vip" href="javascript:;" bh="contactscard_delvip" title="取消“VIP联系人”"></a>                            <a bh="contactscard_letterhistory" href="javascript:;" class="Lbl_back" hidefocus="1">往来邮件</a></dt>                            <dd class="gray Lbl_Email">{email}</dd>                            <dd class="gray Lbl_Mobile">{mobile}</dd>                        </dl>                    </div>                    <div class="mail-back-box">                        <ul class="clearfix">                            <li><a bh="contactscard_compose" hidefocus="1" href="javascript:;" id="mail"><i class="i-back-mail"></i><p>发邮件</p></a></li>                            <li><a bh="contactscard_sms" hidefocus="1" href="javascript:;" id="message"><i class="i-back-message"></i><p>发短信</p></a></li>                            <li><a bh="lianxikaclassify_onclick" hidefocus="1" href="javascript:;" id="rule"><i class="i-back-rule"></i><p>收信规则</p></a></li>                            <li><a bh="set_mail_arrive_notice" hidefocus="1" href="javascript:;" id="notice"><i class="i-back-notice"></i><p>到达通知</p></a></li>                            <li><a hidefocus="1" href="javascript:;" id="black"><i class="i-back-black"></i><p>黑名单</p></a></li>                        </ul>                    </div>                </div>            <div class="tipsTop diamond" style="left:15px;"></div>         </div>',
        events: {
            "click .mail-back-close": "onContactsClick",
            "click #mail": "onSendEmailClick",
            "click #message": "onSendSMSClick",
            "click .Lbl_back": "onLetterHistoryClick",
            "click #rule": "onLetterSortClick",
            "click #notice": "onNotifyClick",
            "click #black": "onBlacklistClick",
            "click .Vip": "onVipClick",
            "click a": "onButtonClick",
            "click .i-s-pretty": "onPrettyClick",
            "click .Lbl_Name": "onShowInput",
            "blur .setEdit": "onModifyUserName"
        },
        render: function () {
            return this.initEvent(), this.$el.appendTo(document.body), s.prototype.render.apply(this, arguments)
        },
        show: function (e, t) {
            var o = this;
            this.userOptons = e;
            if ((e.email || e.serialId) && e.dockElement && !i.Dom.isRemove(a(e.dockElement)[0])) {
                var n = a(e.dockElement);
                n.attr("bindcard") || n.attr("bindcard", "1").mouseleave(
                    function () {
                        o.delayHide();
                    });
                if (t) {
                    clearTimeout(this.showTimer);
                    return void (this.showTimer = setTimeout(
                        function () {
                            n.is(":visible") && o.show(e);
                        }, 500));
                }
                this.setAddrInfo(e);
                var r = i.Dom.dockElement(e.dockElement, this.el, { margin: e.margin || 0, dx: e.dx, dy: e.dy });
                if ("up" == r) {
                    this.$el.find("div.tipsTop").addClass("tipsBottom").removeClass("tipsTop");
                } else {
                    this.$el.find("div.tipsBottom").addClass("tipsTop").removeClass("tipsBottom");
                }
                var l = e.doc || document,
                    c = a(e.dockElement).offset().left + this.$el.width() - a(l.body).width();
                if (c > 0) {
                    var d = a(document.body).width() - a(l.body).width();
                    this.$el.css("left", a(e.dockElement).offset().left - c + d);
                    this.$el.find("div.tipsTop,div.tipsBottom").css("left", 15 + c);
                } else {
                    this.$el.find("div.tipsTop,div.tipsBottom").css("left", 15);
                }
                this.cancelHide();
                this.renderFaceImage();
                this.requestFaceImage();
                top.BH("contactscard_show");
                return s.prototype.show.apply(this, arguments);
            }
        },
        requestFaceImage: function () {
            var e = this, t = this.model.get("info"), a = [];
            if (t.mobile && a.push(t.mobile), t.email && i.Text.Email.getDomain(t.email) == $App.getMailDomain()) {
                var s = i.Text.Email.getAccount(t.email);
                s !== t.mobile && a.push(s)
            }
            M2012.Contacts.API.GetBatchImageUrl({ addressInfo: a, info: t }, function (i) {
                var a = e.model.get("info");
                if (t.email === a.email) {
                    var s = M2012.UI.ContactAvatar.create({
                        module: "email",
                        email: t.nameEmail,
                        url: i,
                        width: "50px",
                        height: "50px",
                        borderRadius: "5px",
                        grayUrl: "../images/ad/face.jpg",
                        errorUrl: "../images/ad/face.jpg"
                    }).render();
                    e.renderFaceImage(s)
                }
            })
        },
        renderFaceImage: function (e) {
            var t = this.$el.find(".avatar-ry");
            e || (e = '<img class="avatar-ry avatar-image" src="../images/ad/face.jpg" width="50" height="50">'), t.replaceWith(e)
        },
        showMoreMenu: function () {
            var e = this.$(".MoreMenu");
            e.show();
            var t = this.$(".ShowMore");
            try {
                var s = t.offset().left + t.width() + e.width() - a(document.body).width();
                s > 0 ? e.css("left", 101) : e.css("left", 335)
            } catch (o) {
                e.css("left", 335)
            }
            var n = this.$el.height() - 29, r = this.$el.offset().top + n + i.Dom.getElementHeight(e) - a(document.body).height();
            r > 0 && (n -= r), e.css("top", n), top.BH("contactscard_more")
        },
        initEvent: function () {
            var e = this;
            a(this.dockElement).mouseover(function () {
                e.show()
            }), this.$el.mouseleave(function () {
                e.delayHide()
            }), this.$el.mouseenter(function () {
                e.cancelHide()
            }), this.model.on("change:info", function () {
                e.updateHTML()
            }), $App.on("vipDataChange", function () {
                e.updateHTML()
            })
        },
        delayHide: function () {
            var e = this;
            clearTimeout(this.showTimer), "none" != this.$el.css("display") && (this.hideTimer = setTimeout(function () {
                e.hide()
            }, 500))
        },
        cancelHide: function () {
            clearTimeout(this.hideTimer)
        },
        updateHTML: function () {
            var e = this.model.get("info");
            if (this.$el.find(".Lbl_Name").text(e.name), this.$el.find(".Lbl_Email").text(e.email || ""), this.$el.find(".Lbl_Mobile").text(e.mobile || ""), this.isVip = 0, e.id) {
                var t = this.$el.find(".i-back-close");
                t.is(":hidden") && t.show().siblings().hide(), this.isVip = 2;
                var i = top.Contacts.getVipInfo(), s = a.inArray(e.id, i.vipSerialIds.split(","));
                s > -1 && (this.isVip = 1)
            } else {
                var o = this.$el.find(".i-sendFilePeo");
                o.is(":hidden") && o.show().siblings().hide()
            }
            this.updatePrettyNumber(), this.updateVipIcon()
        },
        updateVipIcon: function () {
            var e = this.$el.find(".Vip");
            1 == this.isVip ? e.removeClass("user_gray_vip").addClass("user_vip").attr("bh", "contactscard_delvip").attr("title", "取消“VIP联系人”").show() : 2 == this.isVip ? e.removeClass("user_vip").addClass("user_gray_vip").attr("bh", "contactscard_addvip").attr("title", "添加“VIP联系人”，其邮件将同时标记为“VIP邮件”").show() : e.hide()
        },
        updatePrettyNumber: function () {
            var e = this.$el.find(".imgInfo"), i = this.model.get("info").email, a = t.map(top.$User.getAccountList(), function (e) {
                return e.name
            }), s = -1 != t.indexOf(a, i);
            top.$Email.isPrettyNumberEmail(i) ? (e.addClass("pretty-num-pop"), e.find(".i-s-pretty").show(), e.find(".Lbl_Name").addClass("fw_b")) : (e.removeClass("pretty-num-pop"), e.find(".i-s-pretty").hide(), e.find(".Lbl_Name").removeClass("fw_b"), s && e.find(".i-s-pretty").addClass("i-gray-pretty").show())
        },
        setAddrInfo: function (e) {
            var t = {};
            e.email = e.email.replace('"', "").replace('"', "").replace('"', "").replace(",", "");
            var a = i.Text.Email.getEmail(e.email);
            if (e.serialId) var s = this.contactsModel.getContactsById && this.contactsModel.getContactsById(e.SerialId); else if (e.email) {
                var o = i.Text.Email.getName(e.email), s = this.contactsModel.getContactsById && this.contactsModel.getContactsByEmail(a);
                s = s && s[0], s || (t.name = o)
            }
            s && (t.name = s.name, t.mobile = s.getFirstMobile(), t.id = s.SerialId), t.nameEmail = e.email, t.email = a, this.model.set("info", t)
        },
        onSendEmailClick: function () {
            var e = this.model.get("info");
            if (e.email) var t = { receiver: i.Text.Email.getSendText(e.name, e.email) };
            return $App.show("compose", null, { inputData: t }), !1
        },
        onSendSMSClick: function () {
            var e = this.model.get("info");
            if (e.mobile) var t = { mobile: i.Text.Mobile.getSendText(e.name, e.mobile) };
            return $App.jumpTo("sms", t), !1
        },
        onContactsClick: function () {
            var e, t = this, i = this.model.get("info");
            return i.id ? (new M2012.UI.Dialog.ContactsEditor({
                serialId: i.id,
                nowFromEmail: i.email,
                nowFromMobile: i.mobile,
                callback: t.changeUserName
            }).render(), BH("contactscard_edit")) : (BH("contactscard_add"), e = new M2012.UI.Dialog.ContactsEditor({
                name: i.name,
                email: i.email,
                mobile: i.mobile
            }), e.render(), e.on("success", function () {
                BH("addr_single_add_success"), top.$App.trigger("hideCardAddrTips", { data: i })
            })), !1
        },
        changeUserName: function (e, t) {
            function i(t, i) {
                if ("" !== t && void 0 !== t) for (var o = 0, n = t.length; n > o; o++) (s = a(t[o])).attr("email") === i && a(s).text("").text(e + ">")
            }

            var s, o = a("#receiver_to a"), n = a("#receiver_from a"), r = a("#receiver_cc a");
            i(o, t), i(n, t), i(r, t)
        },
        onInviteClick: function () {
            var e = this.model.get("info").email;
            return $App.jumpTo("invitebymail", { email: e }), !1
        },
        onRejectClick: function () {
            return $App.trigger("mailCommand", { command: "refuseMail", email: this.model.get("info").email }), !1
        },
        onLetterHistoryClick: function () {
            return $App.trigger("mailCommand", {
                command: "showTraffic",
                email: this.model.get("info").email,
                thisEmail: this.model.get("info").name,
                isContactsMail: !0
            }), !1
        },
        onLetterSortClick: function () {
            return $App.trigger("mailCommand", {
                command: "autoFilter",
                email: this.model.get("info").email,
                name: this.model.get("info").name
            }), !1
        },
        onLetterTagClick: function () {
            return $App.trigger("mailCommand", {
                command: "autoFilterTag",
                email: this.model.get("info").email,
                name: this.model.get("info").name
            }), !1
        },
        onNotifyClick: function () {
            if (!$User.isChinaMobileUser()) return void $User.showMobileLimitAlert();
            var e = this, a = this.model.get("info").nameEmail, s = "邮件到达通知", o = ['<ul class="norTips" style="padding-top: 20px; padding-right: 20px; padding-bottom: 20px; padding-left: 20px;">', '<li class="pb_10">', '<span>接收来自&nbsp;<em style="color: #00a513;"><%- nameEmail %></em>&nbsp;的邮件到达通知？</span>', "</li>", '<li class="pb_10">', '<label class="label">', '<span class="i-radioedIcon mr_5 i_reveive"></span>', '<span class="formlineText">是</span>', "</label>", "</li>", '<li class="pb_10">', '<label class="label">', '<span class="i-radioIcon mr_5 i_reveive"></span>', '<span class="formlineText">否</span>', "</label>", "</li>", "</ul>", '<div class="boxIframeBtn"><span class="bibText"><a id="btn_showfilter" href="javascript:">更多设置</a> </span><span class="bibBtn"> <a href="javascript:void(0)" class="btnSure" id="classifySure" bh="privateclassify_onclick"><span>确 定</span></a>&nbsp;<a href="javascript:void(0)" class="btnNormal" id="classifyCencel"><span>取 消</span></a> </span></div>'].join(""), n = ['<ul class="norTips" style="padding-top: 20px; padding-right: 20px; padding-bottom: 20px; padding-left: 20px;">', '<li class="pb_20">', '<label class="label">', '<input type="checkbox" id="notifyEnable" checked>', '<span class="formlineText">开启邮件到达通知总开关</span>', "</label>", "</li>", '<li class="pb_10 clearAll">', '<label class="label">', '<span class="formlineText">', '接收包含&nbsp;<em style="color: #00a513;"><%- nameEmail %></em>&nbsp;在内的指定联系人的邮件到达通知？', "</span>", '<li class="pt_10 hide">', '<label class="label">', '<span class="formlineText" style="color: #de0202;">需要开启邮件到达通知总开关，才能选择只接受来自TA的邮件到达通知</span>', "</label>", "</li>", "</ul>", '<div class="boxIframeBtn"><span class="bibText"><a id="btn_showfilter" href="javascript:">更多设置</a> </span><span class="bibBtn"> <a href="javascript:void(0)" class="btnSure" id="classifySure" bh="privateclassify_onclick"><span>确 定</span></a>&nbsp;<a href="javascript:void(0)" class="btnNormal" id="classifyCencel"><span>取 消</span></a> </span></div>'].join("");
            return this.getMailNotifyEmaillist(function (r) {
                var l = r.responseData["var"][0] || {}, c = l.enable, d = e.model.get("info").email;
                d = $Email.getEmail(d);
                var p = null, m = l.emaillist || [];
                c ? e.showDialog(t.template(o)({ nameEmail: a }), null, s, function (a) {
                    if (a) {
                        var s = [{ serialid: null, email: d, settype: 1 }], o = t.filter(m, function (e) {
                            return e.email == d && 3 == e.settype
                        });
                        o.length > 0 && s.push(o[0]), p = e.setUpdateMailNotify({ updateEmaillist: s })
                    } else {
                        var s = [{ serialid: null, email: d, setType: 3 }], o = t.filter(m, function (e) {
                            return e.email == d && 1 == e.settype
                        });
                        o.length > 0 && s.push(o[0]), p = e.setUpdateMailNotify({ updateEmaillist: s })
                    }
                    e.updateMailNotify(p, function (e) {
                        top.$App.trigger("notifySettingChange"), i.UI.TipMessage.show("操作成功", { delay: 1500 })
                    })
                }, function () {
                    $App.show("message_control")
                }) : e.showDialog(t.template(n)({ nameEmail: a }), null, s, function () {
                    var t = e.setUpdateMailNotify({
                        notifystyle: "7",
                        emaillist: [{ serialid: "", email: d }],
                        updateEmaillist: [{ serialid: null, email: d, settype: 1 }]
                    });
                    e.updateMailNotify(t, function (e) {
                        top.$App.trigger("notifySettingChange"), i.UI.TipMessage.show("操作成功", { delay: 1500 })
                    })
                }, function () {
                    $App.show("message_control")
                })
            }), !1
        },
        getMailNotifyEmaillist: function (e) {
            var t = this;
            i.RichMail.API.call("user:getMailNotify", {}, function (i) {
                i && i.responseData && "S_OK" == i.responseData.code && (t.mailnotify = i.responseData["var"], e && e(i))
            })
        },
        updateMailNotify: function (e, t) {
            var a = { attrs: { _custom_SmsNotify: 1 } };
            $RM.setAttrs(a, function (a) {
                a && "S_OK" == a.code && (top.$App.loadAttrs2(function () {
                }), i.RichMail.API.call("user:updateMailNotify", e, function (e) {
                    t && t(e.responseData)
                }))
            })
        },
        onBlacklistClick: function () {
            var e = this, i = this.model.get("info").email, a = this.model.get("info").nameEmail, s = {
                opType: "add",
                type: 0,
                member: i
            }, o = {
                opType: "delete",
                type: 0,
                member: i
            }, n = "黑名单", r = [], l = ['<div class="norTips" style="padding-top: 40px; padding-right: 20px; padding-bottom: 40px; padding-left: 20px;">', '<span class="norTipsIco ml_20">', '<i class="i-bulb"></i>', "</span>", '<dl class="norTipsContent">', '<dt class="norTipsTitle MB_MessageBox_Title" style="display: none;"></dt>', '<dd class="norTipsLine ">', '<%- textHead %><em style="color: #00a513;"><%- nameEmail %></em><%- textTail %>', "</dd>", "</dl>", "</div>", '<div class="boxIframeBtn"><span class="bibText"><a id="btn_showfilter" href="javascript:">更多设置</a> </span><span class="bibBtn"> <a href="javascript:void(0)" class="btnSure" id="classifySure" bh="privateclassify_onclick"><span>确 定</span></a>&nbsp;<a href="javascript:void(0)" class="btnNormal" id="classifyCencel"><span>取 消</span></a> </span></div>'].join("");
            $RM.getWhiteBlackList({ type: 0 }, function (c) {
                r = c["var"], r.indexOf(i) > -1 ? e.showDialog(t.template(l)({
                    nameEmail: a,
                    textHead: "",
                    textTail: "已在黑名单中。将联系人从黑名单删除？"
                }), o, n, e.setWhiteBlackList, function () {
                    $App.show("message_control_spam")
                }) : e.showDialog(t.template(l)({
                    nameEmail: a,
                    textHead: "将",
                    textTail: "添加至黑名单？"
                }), s, n, e.setWhiteBlackList, function () {
                    $App.show("message_control_spam")
                })
            })
        },
        showDialog: function (e, t, i, s, o) {
            var n = $Msg.showHTML(e, {
                dialogTitle: i, onClose: function () {
                }
            });
            n.on("afterPrint", function () {
                var e = this;
                this.$("#classifySure").click(function () {
                    e.$(".i_reveive").length ? s(e.$(".i_reveive").eq(0).hasClass("i-radioedIcon") ? !0 : !1) : a("#notifyEnable").length > 0 && a("#notifyEnable").attr("checked") && s(t), t && t.opType && s(t), n.close()
                }), this.$("#classifyCencel").click(function () {
                    n.close()
                }), this.$("#btn_showfilter").click(function () {
                    o(), n.close()
                }), this.$(".i_reveive").click(function () {
                    a(this).hasClass("i-radioIcon") && (a(this).closest("li").siblings().find(".i_reveive").removeClass("i-radioedIcon").addClass("i-radioIcon"), a(this).removeClass("i-radioIcon").addClass("i-radioedIcon"))
                }), this.$(".i_reveive2").click(function () {
                    a(this).hasClass("i-radioIcon") ? a(this).removeClass("i-radioIcon").addClass("i-radioedIcon") : a(this).removeClass("i-radioedIcon").addClass("i-radioIcon");
                    var e = a(this).closest("ul").find("li");
                    0 == e.index(a(this).closest("li")) && a(this).closest("li").siblings().last().addClass("hide")
                })
            })
        },
        setUpdateMailNotify: function (e) {
            var t = this;
            t.mailnotify[0].enable = !0, t.mailnotify[0].notifytype = 1, e.updateEmaillist ? t.mailnotify[0].updateEmaillist = e.updateEmaillist : t.mailnotify[0].updateEmaillist = [], delete t.mailnotify[0].emaillist, e && "7" == e.notifystyle && (t.mailnotify[0].notifystyle = e.notifystyle, t.mailnotify[0].syncDy = !1), e && e.emaillist;
            var i = { mailnotify: t.mailnotify };
            return i
        },
        setWhiteBlackList: function (e) {
            var t = e && e.opType, a = "add" == t ? "添加成功" : "删除成功";
            $RM.setWhiteBlackList(e, function (e) {
                e && "S_OK" == e.code ? i.UI.TipMessage.show(a, { delay: 1e3 }) : e && "S_EXISTS" == e.code && "2029" == e.errorCode ? i.UI.TipMessage.error("该联系人已经在黑名单中", { delay: 1e3 }) : i.UI.TipMessage.error("添加失败", { delay: 1e3 })
            })
        },
        onVipClick: function () {
            var e = this, t = this.model.get("info"), i = {
                serialId: t.id, name: t.name, success: function () {
                    e.isVip = 1 == e.isVip ? 2 : 1, e.updateVipIcon();
                    var i = a(top.$App.getCurrentTab().element).find("a.Vip");
                    if (top.$App.getCurrentTab().name.indexOf("readmail") >= 0) {
                        var s = a.grep(i, function (e) {
                            return a(e).prev().attr("email") == t.email
                        });
                        i = s.length > 0 ? a(s[0]) : null
                    }
                    1 == e.isVip ? i && i.removeClass("user_gray_vip").addClass("user_vip") : i && i.removeClass("user_vip").addClass("user_gray_vip"), $App.trigger("showMailbox", { comefrom: "commandCallback" }), setTimeout(function () {
                        $App.trigger("refreshSplitView")
                    }, 10)
                }
            };
            1 == this.isVip ? top.Contacts.delSinglVipContact(i) : 2 == this.isVip && top.Contacts.addSinglVipContact(i)
        },
        onButtonClick: function (e) {
            var t = this;
            return a(e.target).hasClass("ShowMore") || setTimeout(function () {
                t.hide()
            }, 0), i.Logger.behaviorClick(e.target), !1
        },
        onPrettyClick: function () {
            top.BH("prettyNumberSymbol_click");
            var e = $App.getVipMailCenterUrl("html/detailsPage(pretty-number).html");
            window.open(e)
        },
        onShowInput: function () {
            var e = this.$el.find(".Lbl_Name");
            e.hide(), this.$el.find(".setSapn").show(), this.$el.find(".setEdit").val(e.text()).focus()
        },
        onModifyUserName: function () {
            function e(e, t) {
                if ("" === e || void 0 === e) return "";
                for (var i = 0, a = e.length; a > i; i++) if (e[i] == t) return i
            }

            top.BH("user_rich_modify_name");
            var t = this, i = t.userOptons, a = {};
            this.$el.find(".setSapn").hide(), this.$el.find(".Lbl_Name").show();
            var s = this.$el.find(".setEdit").val(), o = this.$el.find(".Lbl_Name").text();
            if ("" !== s && s !== o) {
                var n = this.model.get("info"), r = Contacts.getContactsByEmail(n.email)[0];
                if (r) {
                    var l = r.SerialId, c = this.contactsModel.getContactsGroupById(l) || [];
                    this.contactsModel.isVip(l) && c.push(this.contactsModel.getVIPGroupId()), a.name = s || r.AddrFirstName, a.SerialId = l, a.groupId = c, a.SendEmail = n.email, a.email = n.email, a.emailIndex = e(n.emails, n.email), top.M2012.Contacts.API.modContactsPartial(l, a, function (e) {
                        e.success ? (top.M139.UI.TipMessage.show("修改成功", { delay: 2e3 }), t.$el.find(".Lbl_Name").text(a.name), i.callback && i.callback(a.name, a.email)) : t.showError(e)
                    })
                }
            }
        },
        showError: function (e) {
            var t = e && e.error || "未知异常";
            top.M139.UI.TipMessage.show(t, { className: "msgRed", delay: 3e3 })
        }
    })), e.extend(M2012.UI.Widget.ContactsCard, {
        show: function (e) {
            this._create().show(e, !0)
        }, _create: function () {
            return this.current || (this.current = (new M2012.UI.Widget.ContactsCard).render()), this.current
        }
    })
}(jQuery, _, M139),

//M2012.UI.Widget.Contacts.Model
function (e, t, i) {
    var a = i.Model.ModelBase, s = "M2012.UI.Widget.Contacts.Model";
    i.namespace(s, a.extend({
        initialize: function (e) {
            return this.options = e || {}, top.$App ? this.contactsModel = window.top.$App.getModel("contacts") : this.contactsModel = M2012.Contacts.getModel(), this.filter = e.filter, this.colate = e.colate, e.selectMode && (this.selectedList = []), a.prototype.initialize.apply(this, arguments)
        },
        defaults: function () {
            return { currentGroup: "", currentCompanyGroup: [] }
        },
        name: s,
        dataReady: function (e) {
            var t = this;
            this.contactsModel.requireData(function () {
                t.contactsData = t.contactsModel.get("data"), e()
            })
        },
        addSelectedItem: function (e) {
            var i = t.isUndefined(this.filter) ? e.serialId : e.addr;
            return this.isSelectedItem(i) ? !1 : (this.selectedList.push(e), !0)
        },
        getGroupList: function () {
            return this.contactsModel.getGroupList()
        },
        getReadGroupId: function () {
            for (var e = this.getGroupList(), t = 0; t < e.length; t++) if ("读信联系人" == e[t].name) return e[t].id
        },
        getGroupMembers: function (e, t) {
            t = t || {};
            var i = this.contactsModel.getGroupMembers(e, { filter: this.filter || this.colate, colate: this.colate });
            if (t.getSendText) for (var a = 0, s = i.length; s > a; a++) "email" == this.filter ? i[a] = i[a].getEmailSendText() : "mobile" == this.filter ? i[a] = i[a].getMobileSendText() : "fax" == this.filter && (i[a] = i[a].getFaxSendText());
            return i
        },
        getLastestContacts: function (e) {
            var t, i = e || this.contactsData.lastestContacts, a = [];
            if ("fax" == this.filter) return a;
            for (var s = "email" == this.filter ? "E" : "M", o = 0, n = i.length; n > o; o++) {
                var r = i[o], l = r.AddrContent;
                if (/\d{5,}/.test(r.SerialId) ? t = this.contactsData.contactsMap[r.SerialId] : "E" == r.AddrType ? t = this.contactsModel.getContactsByEmail(r.AddrContent)[0] : "M" == r.AddrType && (t = this.contactsModel.getContactsByMobile(r.AddrContent)[0]), t && ("email" === this.filter && "E" !== r.AddrType ? (l = t.getFirstEmail(), l || (t = !1)) : "mobile" === this.filter && "M" !== r.AddrType && (l = t.getFirstMobile(), l || (t = !1))), t) a.push({
                    addr: l,
                    name: t.name,
                    SerialId: t.SerialId
                }); else if (r.AddrType == s) {
                    var c = this.createLastContactsId();
                    this.lastContactsMap[c] = {
                        addr: r.AddrContent,
                        name: r.AddrName,
                        SerialId: c
                    }, a.push(this.lastContactsMap[c])
                }
            }
            return a
        },
        createLastContactsId: function () {
            var e = parseInt(1e8 * Math.random());
            return -e
        },
        lastContactsMap: {},
        getCloseContacts: function () {
            var e = this.contactsData.closeContacts;
            return this.getLastestContacts(e)
        },
        getUngroupContacts: function (e) {
            for (var t = this.contactsData.contactsMap, i = this.contactsData.noGroup, a = [], s = 0, o = i.length; o > s; s++) {
                var n = t[i[s]];
                this.colate && n && n.getFirstEmail().indexOf(this.colate) > -1 ? a.push(n) : !this.colate && n && a.push(n)
            }
            return a
        },
        getSearchContacts: function () {
            var e = this.contactsModel.search(this.get("keyword"), { contacts: this.getContacts() });
            return e
        },
        getContacts: function () {
            var e = this.get("contacts");
            if (!e) {
                var e = this.contactsData.contacts;
                (this.filter || this.colate) && (e = this.contactsModel.filterContacts(e, {
                    filter: this.filter || this.colate,
                    colate: this.colate
                })), this.set("contacts", e)
            }
            return e
        },
        getVIPContacts: function () {
            return this.contactsModel.getGroupMembers(this.contactsModel.getVIPGroupId(), { filter: this.filter })
        },
        getVIPGroupId: function () {
            return this.contactsModel.getVIPGroupId()
        },
        getContactsById: function (e, t) {
            if (t = t || {}, e > 0) {
                var i = this.contactsModel.getContactsById(e);
                if (i) {
                    var a = "", s = i.getFirstMobile(), o = i.getFirstFax(), n = i.getFirstEmail();
                    switch (this.filter) {
                        case "mobile":
                            a = t.batch ? i.mobiles : s;
                            break;
                        case "fax":
                            a = t.batch ? i.faxes : o;
                            break;
                        case "email":
                        default:
                            a = t.batch ? i.emails : n || s
                    }
                    return { addr: a, name: i.name, SerialId: i.SerialId }
                }
                return null
            }
            return this.lastContactsMap[e]
        },
        isSelectedItem: function (e) {
            for (var t = this.selectedList, i = 0, a = t.length; a > i; i++) if (t[i].addr == e || t[i].SerialId == e) return !0;
            return !1
        },
        isSelectedNew: function (e) {
            e = e || {};
            var i = this.selectedList;
            return t.some(i, function (i) {
                var a = t.isUndefined(e.serialId) || t.isUndefined(i.serialId) ? !0 : i.serialId == e.serialId, s = t.isUndefined(e.addr) || t.isUndefined(i.addr) ? !0 : i.addr == e.addr;
                return a && s
            })
        },
        getSendText: function (e, t) {
            return this.contactsModel.getSendText(e, t)
        },
        clearLastContacts: function (e) {
            var t = this, i = { type: e ? "close" : "last" }, a = {
                warn_delclose: "确认清空所有紧密联系人记录？",
                warn_dellast: "确认清空所有最近联系人记录？"
            };
            top.$Msg.confirm(a["warn_del" + i.type], function () {
                top.addBehavior("19_9561_11清空最近/紧密", e ? "2" : "1"), top.Contacts.EmptyLastContactsInfo(i, function (e) {
                    e.success ? t.trigger("contactshistoryupdate") : top.$Msg.alert(e.msg)
                })
            }, { icon: "warn" })
        },
        clearCloseContacts: function () {
            this.clearLastContacts(!0)
        },
        reloadContactsData: function () {
            this.contactsModel.loadMainData()
        },
        getCompanyList: function (e) {
            e = e || {}, top.M2012.Contacts.API.checkUserNumber({
                data: { orgID: "" }, success: function (t) {
                    if (t && "S_OK" === t.code) {
                        var i = t.data;
                        i && i["var"] && i["var"].guangDongTopOrgList && e.success && e.success(i["var"].guangDongTopOrgList)
                    }
                }
            })
        },
        writePageGetAllSubList: function (e) {
            e = e || {}, top.M2012.Contacts.API.writePageGetAllSubList({
                data: e.data || {}, success: function (t) {
                    e.success && e.success(t)
                }
            })
        },
        getOrgTopNMerber: function (e) {
            top.M2012.Contacts.API.getOrgTopNMerber({
                data: e.data || {}, success: function (t) {
                    e.success && e.success(t)
                }
            })
        }
    }))
}(jQuery, _, M139),

//M2012.UI.Widget.Contacts.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M2012.UI.Widget.Contacts.View", n = {
        All: -1,
        Ungroup: -2,
        Lastest: -3,
        Close: -4,
        Search: -5
    };
    i.namespace(o, s.extend({
        initialize: function (e) {
            var t = this;
            this.options = e || {}, this.filter = e.filter, this.selectMode = e.selectMode, this.showCountElFlag = ("compose_addrinput" == e.comefrom, ""), this.model = new M2012.UI.Widget.Contacts.Model({
                filter: this.filter,
                colate: e.colate,
                selectMode: this.selectMode
            });
            var i = $D.getHTMLElement(e.container);
            i.innerHTML = this.template, a(i).find(".AddNewContacts").text("新建联系人"), this.setElement(i), this.model.dataReady(function () {
                t.render(), clearTimeout(o)
            });
            var o = setTimeout(function () {
                t.showRetryDiv()
            }, 3e3);
            return this.$groupContainer = this.$(".GroupList"), this.$searchContainer = this.$(".searchEnd"), s.prototype.initialize.apply(this, arguments)
        },
        name: o,
        retryCount: 0,
        MemberFirstSize: 10,
        MemberPageSize: 500,
        LoadCompanyContacts: !1,
        template: ['<div class="AddrEmptyTip ta_c loadingerror" style="height:280px;padding:80px 0 0 0">', '<div class="LoadingImage" style="padding-top:50px;"><img src="' + top.getRootPath() + '/images/global/searchloading.gif" /></div>', '<div class="bodyerror RetryDiv" style="display:none">', '<img src="' + top.getRootPath() + '/images/global/smile.png" width="73" height="72" />', "<p>没加载出来，再试一次吧。</p>", '<a class="btnTb BtnRetry" href="javascript:;"><span class="p_relative">重新加载</span></a>', "</div>", "</div>", '<div class="ContentDiv tabContent p_relative" style="display:none;">', '<div class="searchContact">', '<input type="text" class="searchContactText">', '<a hidefocus="1" href="javascript:;" class="searchContactBtn"><i class="i_c-search"></i></a>', "</div>", '<div class="searchEnd-empty SearchEmptyTip" style="display:none">', '<a href="javascript:" class="delmailTipsClose BtnCloseSearchEmptyTip"><i class="i_u_close"></i></a>', '<p class="gray">查找结果：</p>', "<p>没有符合条件的联系人</p>", "</div>", '<div class="searchEnd" style="display:none">', '<ul class="contactList">', '<li data-groupId="-5"><a hidefocus="1" class="GroupButton contactList_a" href="javascript:;" title="显示或隐藏成员列表"><i class="i_plusj"></i><span>搜索结果</span><var></var></a>', '<ul class="pb_5">', "</ul>", "</li>", "</ul>", "</div>", '<div style="line-height:25px;color:#444;vertical-align:top;border-top:none;overflow:hidden;_zoom:1;display:none;background:#fff;position: absolute;top: 33px;left: 0px;z-index: 1000;width:206px;" class="groupFixed">', '<a hidefocus="1" class="GroupButton contactList_a" href="javascript:;" style="background: transparent;">', '<i class="i_minus" style="margin-right:8px;"></i>', "<span></span>", "<var></var>", "</a>", "</div>", '<ul class="contactList GroupList">', "</ul>", '<div class="contactListNew">', '<a bh="compose_addressbook_createcontacts" hidefocus="1" class="AddNewContacts" href="javascript:;">新建联系人</a>', "</div>", "</div>"].join(""),
        GroupItemTemplate: ['<li data-groupId="{groupId}" data-company="{isCompany}" data-level="{level}" data-enterpriseId="{enterpriseId}">', '<a title="{clearGroupTitle}" href="javascript:;" style="display:{showClearGroup}" class="i_r_yq2 i_dels ClearGroup"></a>', '<a bh="compose_addressbook_addgroupclick" hidefocus="1" style="display:{showAddGroup};padding-left:0px;" title="添加整组" href="javascript:;" class="i_r_yq2 AddGroup"></a>', '<a bh="{behavior}" hidefocus="1" class="GroupButton contactList_a" href="javascript:;" title="显示或隐藏成员列表">', '<i class="i_plusj"></i>', '<span class="{spanIntercept}">{groupName}</span>', '<var style="display:{showCountEl}">({count})</var>', "</a>", '<ul class="pb_5" style="display:none"></ul>', "</li>"].join(""),
        MemberItemTemplateOld: '<li style="display:{display}" class="ContactsItem" data-addr="{addrData}" data-contactsId="{contactsId}" data-company="{isCompany}" data-enterpriseId="{enterpriseId}"><a hidefocus="1" href="javascript:void(0)" title="{addrTitle}">{contactsName}</a></li>',
        MemberItemTemplate: ['<li style="display:{display}" class="ContactsItem" data-addr="{addrData}" data-contactsId="{contactsId}" data-enterpriseId="{enterpriseId}">', '<a href="javascript:;" title="{contactsNameTitle}">{contactsName}</a>', '<a href="javascript:;" class="mr_12 memberItemRight" style="float: right;">', '<i class="i_2trid"></i></i>', "</a>", "</li>"].join(""),
        EmailTemplate: ['<ul class="ml_10 emailList" data-contactsId="<%- SerialId %>" data-name="<%- name  %>">', '<% var tmp = _.isArray(addr) ? addr : [addr || ""] %>', "<% _.each(tmp,function(value){ %>", '<li data-addr="<%- value %>" title="<%- value %>"><a href="javascript:;" class="ac"><%- value %></a></li>', "<% }) %>", "</ul>"].join(""),
        SearchTpl: ['<li style="display:{display}" class="ContactsItem" data-addr="{addrData}" data-contactsId="{contactsId}" data-company="{isCompany}" data-name="{contactsNameTitle}">', '<a href="javascript:;" title="{contactsNameTitle}" class="width200">{contactsName}</a>', '<a href="javascript:;" class="ac" title="{addrTitle}" style="margin-left: 10px;">{addr}</a>', "</li>"].join(""),
        GroupContainerPath: "ul.GroupList",
        events: {
            "click .GroupButton": "onGroupButtonClick",
            "click .LoadMoreMember": "onLoadMoreMemberClick",
            "click .ContactsItem": "onContactsItemClick",
            "click .memberItemRight": "onMemberItemRightClick",
            "click .emailList li": "onEmailItemClick",
            "click .searchContactBtn": "onClearSearchInput",
            "click .AddGroup": "onAddGroupClick",
            "click .SendToMySelf": "onSendToMySelfClick",
            "click .AddNewContacts": "onAddNewContactsClick",
            "click .BtnCloseSearchEmptyTip": "hideGroupEmptyTip",
            "click .BtnRetry": "onRetryClick",
            "click .ClearGroup": "onClearGroupClick"
        },
        render: function () {
            var e = this.options;
            return this.clearSearchButton = this.$("a.searchContactBtn"), this.$(".AddrEmptyTip").hide(), this.renderGroupListView(), this.initEvent(), e.showSelfAddr === !1 && this.$(".SendToMySelf").hide(), e.showCreateAddr === !1 && this.$(".contactListNew").hide(), this.$("div.ContentDiv").show(), this.render = function () {
                return this
            }, s.prototype.render.apply(this, arguments)
        },
        renderGroupListView: function () {
            var e = this.model.getGroupList(), a = ['<li class="SendToMySelf contactList_a"><a bh="compose_addressbook_sendself" hidefocus="1" href="javascript:;">发给自己</a></li>'], s = this.GroupItemTemplate;
            this.options.showLastAndCloseContacts !== !1 && (a.push(i.Text.format(s, {
                groupId: n.Lastest,
                groupName: "最近联系人",
                clearGroupTitle: "清空最近联系人记录",
                showCountEl: this.showCountElFlag,
                count: this.model.getLastestContacts().length,
                behavior: "compose_addressbook_lastcontacts",
                showAddGroup: "none",
                showClearGroup: ""
            })), this.options.showCloseContacts = !1, this.options.showCloseContacts !== !1 && a.push(i.Text.format(s, {
                groupId: n.Close,
                groupName: "紧密联系人",
                clearGroupTitle: "清空紧密联系人记录",
                showCountEl: this.showCountElFlag,
                count: this.model.getCloseContacts().length,
                behavior: "compose_addressbook_closecontacts",
                showAddGroup: "none",
                showClearGroup: ""
            }))), a.push(i.Text.format(s, {
                groupId: n.All,
                groupName: "所有联系人",
                showCountEl: this.showCountElFlag,
                count: this.model.getContacts().length,
                behavior: "compose_addressbook_allcontacts",
                showAddGroup: "none",
                showClearGroup: "none"
            })), this.options.showVIPGroup !== !1 && a.push(i.Text.format(s, {
                groupId: this.model.getVIPGroupId(),
                groupName: "VIP联系人",
                showCountEl: this.showCountElFlag,
                count: this.model.getGroupMembers(this.model.getVIPGroupId()).length,
                behavior: "compose_addressbook_vip",
                showAddGroup: this.options.showAddGroup === !1 ? "none" : "",
                showClearGroup: "none"
            }));
            for (var o = null, r = 0, l = e.length; l > r; r++) {
                var c = e[r], d = this.model.getGroupMembers(c.id).length, p = this.options.showAddGroup === !1 ? "none" : "", m = null;
                t.isEmpty(c.name) || ("读信联系人" == c.name ? (m = i.Text.format(s, {
                    groupId: c.id,
                    groupName: i.Text.Html.encode(i.Text.Utils.getTextOverFlow(c.name, 6, !0)),
                    showCountEl: this.showCountElFlag,
                    count: d,
                    behavior: "compose_addressbook_readcontacts",
                    showAddGroup: p,
                    showClearGroup: "none"
                }), o = m) : (m = i.Text.format(s, {
                    groupId: c.id,
                    groupName: i.Text.Html.encode(i.Text.Utils.getTextOverFlow(c.name, 6, !0)),
                    showCountEl: this.showCountElFlag,
                    count: d,
                    behavior: "compose_addressbook_customcontacts",
                    showAddGroup: p,
                    showClearGroup: "none"
                }), a.push(m)))
            }
            t.isNull(o) || a.push(o), this.options.showCompanyContacts && this.showCompanyContacts(), a = a.join(""), this.$(this.GroupContainerPath)[0].innerHTML = a, this.options.showSelfAddr === !1 && this.$(".SendToMySelf").hide()
        },
        initEvent: function () {
            var e = this;
            this.model.on("change:currentGroup", function (e, t, i) {
                var a = e.previous("currentGroup");
                null != a && this.hideGroupMember(a), t && this.showGroupMember(t, i)
            }, this), this.model.on("contactshistoryupdate", function () {
                e.updateView()
            });
            var t = this.$("input")[0];
            i.Timing.watchInputChange(t, function () {
                e.onSearchInputChange(t.value.trim())
            }), this.selectMode && (this.on("additem", function (t, i) {
                var a = [];
                if (i = i || {}, t.isGroup ? a = t.value : (t.SerialId = t.serialId, a = [t]), e.filter) for (var s = 0; s < a.length; s++) if (a[s].addr && a[s].addr.length) if (i.isEmailList) {
                    var o = e.utilGetEmailElement(a[s].addr);
                    o.siblings("li").not(":hidden").length || (o.closest(".emailList").hide(), o.closest(".emailList").prev("li").hide().find(".i_2trid").removeClass("i_2tridd")), o.hide()
                } else {
                    var o = e.utilGetMemberElement(a[s].addr);
                    o.hide(), o.find(".i_2trid").removeClass("i_2tridd"), o.next("ul.emailList").hide()
                } else e.utilGetMemberElementById(a[s].serialId).hide(); else for (var s = 0; s < a.length; s++) e.utilGetMemberElementById(a[s].serialId).hide()
            }), this.on("removeitem", function (t) {
                if (e.filter) if (t && t.addr.length) {
                    var i = e.utilGetMemberElementById(t.SerialId);
                    i.show().next(".emailList").children('li[data-addr="' + t.addr + '"]').show()
                } else e.utilGetMemberElementById(t.serialId).hide(); else e.utilGetMemberElementById(t.serialId).show()
            })), this.on("print", function () {
                this.model.set("currentGroup", n.Lastest)
            }), this.$(".GroupList").on("scroll", function () {
                e.toggleGroupFixed()
            }), this.$(".searchEnd").on("scroll", function () {
                e.toggleGroupFixed()
            })
        },
        toggleGroupFixed: function () {
            var e = this.model.get("currentGroup");
            e && this.isInClient(e) ? this.showGroupFixed() : this.hideGroupFixed()
        },
        showGroupEmptyTip: function () {
            this.$(".SearchEmptyTip").show()
        },
        hideGroupEmptyTip: function () {
            this.$(".SearchEmptyTip").hide()
        },
        showRetryDiv: function () {
            var e = this;
            if (e.$(".LoadingImage").hide(), e.$(".RetryDiv").show(), e.retryCount > 1) {
                var i = -1, s = -1, o = -1, n = "hasdata", r = e.model.contactsModel || {};
                if (r.get) {
                    var l = r.get("data");
                    t.isUndefined(l) ? n = "nodata" : (i = l.TotalRecord, a.isArray(l.Contacts) && (s = l.Contacts.length), a.isArray(l.Groups) && (o = l.Groups.length))
                }
                e.logger.error($TextUtils.format("addrlist retry fail|filter={0}|mode={1}|retry={2}|data={3}|isLoading={4}|total={5}|contacts={6}|groups={7}", [e.filter, e.selectMode, e.retryCount, n, r.isLoading, i, s, o]))
            }
        },
        renderMemberView: function (e, s) {
            var o = this.utilGetMemberContainer(e), r = o.attr("init") || 0;
            if ("init" != s || 1 != o.attr("init")) {
                var l, c = [], d = this.filter ? this.MemberItemTemplate : this.MemberItemTemplateOld;
                if (e == n.All) l = this.model.getContacts(); else if (e == n.Lastest) l = this.model.getLastestContacts(); else if (e == n.Close) l = this.model.getCloseContacts(); else if (e == n.Ungroup) l = this.model.getUngroupContacts(); else if (e == n.Search) {
                    if (l = this.model.getSearchContacts(), d = this.SearchTpl, this.options.showCompanyContacts) return !1
                } else l = this.model.getGroupMembers(e);
                e == n.Search && 0 == l.length ? (this.showGroupEmptyTip(), this.switchGroupMode()) : this.hideGroupEmptyTip();
                for (var p = l.length, m = o.find("li[data-addr]").length, u = 1 == r ? this.MemberPageSize : this.MemberFirstSize, h = this, f = this.model.get("keyword"), g = m, v = Math.min(m + u, p) ; v > g; g++) {
                    var b = l[g], y = b.addr || this.getAddr(b);
                    if (e == n.Search) switch (this.filter) {
                        case "email":
                            y = b.emails.concat();
                            break;
                        case "mobile":
                            y = b.mobiles.concat();
                            break;
                        case "fax":
                            y = b.faxes.concat()
                    }
                    y = t.isArray(y) ? y : [y];
                    var w = t.filter(y, function (e) {
                        return e.indexOf(f) > -1
                    });
                    w.length || (w = y), a.each(w, function (e, t) {
                        var a = h.filter ? {
                            addr: t,
                            serialId: b.SerialId
                        } : { serialId: b.SerialId }, s = !(h.selectMode && h.model.isSelectedNew(a));
                        c.push(i.Text.format(d, {
                            contactsId: b.SerialId,
                            contactsNameTitle: i.Text.Html.encode(b.name),
                            contactsName: h.formatStr(b.name, f),
                            addrData: t,
                            addr: h.formatStr(t, f),
                            addrTitle: i.Text.Html.encode(t),
                            display: s ? "" : "none"
                        }))
                    })
                }
                p > m + u && c.push('<li class="LoadMoreMember" data-groupId="' + e + '"><a hidefocus="1" href="javascript:;">更多<span class="f_SimSun">↓</span></a></li>'), c = c.join(""), o.append(c), o.attr("init", 1)
            }
        },
        onLoadMoreMemberClick: function (e) {
            a(i.Dom.findParent(e.currentTarget, "li")).hide();
            var t = this.utilGetClickGroupId(e);
            t != n.Search ? this.renderMemberView(t) : (this.LoadCompanyContacts = !1, this.renderSearchMemberView(t, "", this.contacts_list))
        },
        onClearSearchInput: function () {
            top.BH("compose_addressbook_search");
            var e = this.$("input:text");
            this.$(".searchContact").hasClass("searchContact-on") && e.val(""), this.model.set("keyword", null), this.hideGroupEmptyTip(), e.focus()
        },
        onSearchInputChange: function (e) {
            this.hideGroupFixed();
            var t = this.model.get("currentGroup") != n.Search ? this.$groupContainer : this.$searchContainer;
            t.scrollTop(0), "" == e ? (this.switchGroupMode(), this.$(".searchContact").removeClass("searchContact-on")) : (this.renderSearchView(e), this.$(".searchContact").addClass("searchContact-on"), this.trigger("BH_onSearch"))
        },
        switchGroupMode: function () {
            this.$(".groupFixed").css("background", "#fff"), this.$(".searchEnd").hide(), this.$(".GroupList").show()
        },
        renderSearchView: function (e) {
            top.BH("addressBook_load_searchContact"), this.$(".groupFixed").css("background", "#f7f7f7"), this.$(".GroupList").hide(), this.$(".searchEnd").show(), this.$(".searchEnd li ul").html("").attr("init", 0), this.model.set("keyword", e), this.model.set("currentGroup", null), this.model.set("currentCompanyGroup", []), this.model.set("currentGroup", n.Search)
        },
        onGroupButtonClick: function (e) {
            var i = this.utilGetClickGroupId(e), s = this.model.get("currentGroup"), o = a(e.currentTarget), n = o.parent(), r = n.data("company") || !1, l = n.data("level");
            if (l > 0) {
                var c = this.model.get("currentCompanyGroup") || [], d = t.last(c), p = c.length, m = "", u = "";
                d == i ? (m = d, c.pop()) : l > p ? (u = i, c.push(i)) : l == p ? (m = d, u = i, c.pop(), c.push(i)) : t.indexOf(c, i) > -1 ? (m = i, c.length = l - 1) : (m = c[l - 1], u = i, c.length = l - 1, c.push(i)), this.model.set("currentCompanyGroup", c), m && this.hideGroupMember(m), u && this.showGroupMember(u, { isCompany: !0 })
            } else s == i ? (this.model.set("currentGroup", null, { isCompany: r }), this.hideGroupFixed()) : (this.model.set("currentGroup", i, { isCompany: r }), this.toggleGroupFixed()), this.model.set("currentCompanyGroup", [])
        },
        onSendToMySelfClick: function () {
            top.BH("addressBook_click_sendMyself");
            var e = top.$User.getTrueName();
            if ("email" == this.filter) var t = top.$User.getDefaultSender(); else if ("mobile" == this.filter) var t = top.$User.getShortUid();
            var i = this.model.getSendText(e, t), a = { value: i, name: e, addr: t };
            if (this.selectMode) if (this.model.selectedList.length >= this.options.maxCount) this.trigger("additemmax"); else {
                var s = this.model.addSelectedItem(a);
                s && this.trigger("additem", a)
            } else this.trigger("select", a)
        },
        showGroupMember: function (e, t) {
            return t = t || {}, e == n.Search && this.options.showCompanyContacts && (this.LoadCompanyContacts = !0), t.isCompany ? void this.renderCompanyMemberView(e, "init") : (this.renderMemberView(e, "init"), this.renderSearchMemberView(e, "init"), this.utilGetMemberContainer(e).show(), void this.utilGetGroupElement(e).find("a.GroupButton i").addClass("i_minus"))
        },
        hideGroupMember: function (e) {
            this.utilGetGroupElement(e).find("ul").not(".emailList").hide(), this.utilGetGroupElement(e).find("a.GroupButton i").removeClass("i_minus")
        },
        onContactsItemClick: function (e) {
            var i = this, s = a(e.currentTarget), o = s.data("contactsid").toString(), r = s.data("company"), l = this.model.getContactsById(o, { batch: !0 }), c = s.next(".emailList"), d = s.data("addr").toString(), p = l && l.name, m = s.data("enterpriseid") && s.data("enterpriseid").toString() || "";
            if (this.model.get("currentGroup") != n.Search) if (r) d = d, p = s.children("a").text(); else if (t.isArray(l.addr)) {
                for (var u = 0, h = l.addr.length; h > u; u++) if (!i.model.isSelectedNew({
                        addr: l.addr[u],
                        serialId: l.serialId
                })) {
                    if (c.length) return c.find('li[data-addr="' + l.addr[u] + '"]').trigger("click"), !1;
                    d = l.addr[u];
                    break
                }
            } else d = l.addr; else r && (p = s.data("name") || "");
            var f = this.model.getSendText(p, d), g = {
                value: f,
                name: p,
                addr: d,
                serialId: o,
                isCompany: r,
                enterpriseId: m
            };
            if (this.selectMode) if (this.model.selectedList.length >= this.options.maxCount) this.trigger("additemmax"); else if (this.options.isAddVip && top.Contacts.IsPersonalEmail(o)) top.FF.alert("不支持添加自己为VIP联系人。"); else {
                var v = this.model.addSelectedItem(g);
                v && this.trigger("additem", g), this.BH(e)
            } else this.trigger("select", g), this.BH(e)
        },
        onMemberItemRightClick: function (e) {
            e.stopPropagation();
            var i = this, s = a(e.currentTarget), o = s.closest(".ContactsItem"), n = s.find(".i_2trid"), r = o.next(".emailList"), l = o.data("contactsid").toString();
            if (r.length) n.hasClass("i_2tridd") ? (top.BH("ui_addrBook_cilck_hideMultipleEmails"), n.removeClass("i_2tridd"), r.hide()) : (top.BH("ui_addrBook_cilck_showMultipleEmails"), n.addClass("i_2tridd"), r.show()); else {
                var c = this.model.getContactsById(l, { batch: !0 });
                top.BH("ui_addrBook_cilck_showMultipleEmails"), n.addClass("i_2tridd"), o.after(function () {
                    return t.template(i.EmailTemplate)(c)
                })
            }
        },
        hideAllEmailList: function () {
            this.$(".emailList").hide(), this.$(".i_2tridd").removeClass("i_2tridd")
        },
        onEmailItemClick: function (e) {
            var t = a(e.currentTarget), i = t.closest("ul"), s = i.data("contactsid").toString(), o = i.data("name").toString(), n = t.data("addr").toString(), r = this.model.getContactsById(s, {}) || {}, l = this.model.getSendText(o, n), c = {
                value: l,
                name: o,
                addr: n,
                serialId: s
            };
            if (this.selectMode) if (this.model.selectedList.length >= this.options.maxCount) this.trigger("additemmax"); else if (this.options.isAddVip && top.Contacts.IsPersonalEmail(r.SerialId)) top.FF.alert("不支持添加自己为VIP联系人。"); else {
                var d = this.model.addSelectedItem(c);
                d && this.trigger("additem", c, { isEmailList: !0 })
            } else this.trigger("select", c)
        },
        BH: function (e) {
            var t = a(e.currentTarget).parent().parent().attr("data-groupid"), i = this.selectMode, s = "";
            s = -3 == t ? "addressBook_click_addLastContact" : -4 == t ? i ? "addressBook_click_closeContact" : "compose_addressbook_lastitem" : -1 == t ? i ? "addressBook_click_addAllContact" : "compose_addressbook_allitem" : -2 == t ? "compose_addressbook_noitem" : t == this.model.getVIPGroupId() ? i ? "addressBook_click_addVipContact" : "compose_addressbook_vipitem" : t == this.model.getReadGroupId() ? i ? "addressBook_click_addReadContact" : "compose_addressbook_readitem" : -5 == t ? i ? "addressBook_click_contactBySearch" : "compose_addressbook_itemclick" : i ? "addressBook_click_addCustomContact" : "compose_addressbook_itemclick", top.BH(s)
        },
        onAddGroupClick: function (e) {
            var t, i = a(e.currentTarget), s = i.parent("li").data("company"), o = this.utilGetClickGroupId(e);
            if (o > 0) {
                if (s) return void this.onAddCompanyGroup(e);
                if (this.selectMode) {
                    for (var n = this.model.getGroupMembers(o).concat(), r = [], l = 0; l < n.length; l++) {
                        var c = n[l];
                        if ("email" == this.filter) var d = c.getEmailSendText(); else if ("mobile" == this.filter) var d = c.getMobileSendText();
                        if (t = {
                            value: d,
                            name: c.name,
                            addr: this.getAddr(c),
                            serialId: c.SerialId,
                            SerialId: c.SerialId
                        }, n[l] = t, this.model.selectedList.length >= this.options.maxCount) {
                            n = n.slice(0, this.options.maxCount), this.trigger("additemmax");
                            break
                        }
                        if (this.options.isAddVip) {
                            for (var p = this.model.selectedList, m = !1, u = 0; u < p.length; u++) if (t.serialId == p[u].serialId || top.Contacts.IsPersonalEmail(t.serialId)) {
                                m = !0;
                                break
                            }
                            if (!m) {
                                var h = this.model.addSelectedItem(t);
                                h && r.push(t)
                            }
                        } else {
                            var h = this.model.addSelectedItem(t);
                            h || (n.splice(l, 1), l--)
                        }
                    }
                    this.trigger("additem", { isGroup: !0, group: o, value: this.options.isAddVip ? r : n })
                } else this.trigger("select", {
                    isGroup: !0,
                    group: o,
                    value: this.model.getGroupMembers(o, { getSendText: !0 })
                });
                this.utilGetMemberContainer(o).find("li").hide()
            }
            this.trigger("BH_onAddGroup")
        },
        onAddCompanyGroup: function (e) {
            var t = this, s = a(e.currentTarget), o = s.parent("li").attr("data-groupid"), n = s.parent("li").attr("data-enterpriseId") || "", r = this.filter ? window.groupSendFlag ? top.$User.getMaxSend() + 400 : top.$User.getMaxSend() : 1e3;
            this.model.getOrgTopNMerber({
                data: { OrgID: o, TopN: r.toString(), EnterpriseId: n }, success: function (e) {
                    if (e && e.data) {
                        for (var a = e.data || [], s = a.length, o = [], r = 0; s > r; r++) {
                            var l = a[r], c = i.Text.Html.encode(l.name), d = i.Text.Html.encode(l.email_139), p = l.memberId.toString(), m = p, u = {
                                addr: d,
                                name: c,
                                serialId: p,
                                SerialId: m,
                                isCompany: !0,
                                enterpriseId: n
                            };
                            if (t.model.selectedList.length >= t.options.maxCount) {
                                o = o.slice(0, t.options.maxCount), t.trigger("additemmax");
                                break
                            }
                            var h = t.model.addSelectedItem(u);
                            h && o.push(u)
                        }
                        var e = { isGroup: !0, value: o };
                        t.trigger("additem", e)
                    }
                }
            })
        },
        onAddNewContactsClick: function () {
            var e = this, a = i.PageApplication.getTopAppWindow(), s = (new a.M2012.UI.Dialog.ContactsEditor).render();
            s.on("success", function (i) {
                e.trigger("addContact", i), i && i.success && i.contacts && i.contacts.length && t.each(i.contacts, function (t) {
                    var i = "";
                    switch (e.filter) {
                        case "mobile":
                            i = t.MobilePhone;
                            break;
                        case "fax":
                            i = t.BusinessFax;
                            break;
                        case "email":
                        default:
                            i = t.FamilyEmail
                    }
                    if (i) {
                        var a = {
                            addr: i,
                            name: t.AddrFirstName,
                            serialId: t.SerialId,
                            value: e.model.getSendText(t.AddrFirstName, i)
                        }, s = e.model.addSelectedItem(a);
                        s && e.trigger("additem", a)
                    }
                }), e.onAddContacts(), BH("compose_linkmansuc")
            }), s.on("addGroupSuccess", function (t) {
                e.trigger("addGroup", t)
            }), this.trigger("BH_onAddNewContacts")
        },
        isInClient: function (e) {
            var t = this.model.get("currentGroup") == n.Search, i = t ? this.$searchContainer.children(".contactList") : this.$groupContainer, a = i.children('[data-groupid="' + e + '"]');
            if (!a.length) return !1;
            var s = a.height(), o = t ? this.$searchContainer : this.$groupContainer, r = a.offset().top - o.offset().top;
            return -25 > r && r + s > 0
        },
        showGroupFixed: function () {
            var e = this.model.get("currentGroup");
            if (e) {
                var t = this.model.get("currentGroup") != n.Search ? this.$groupContainer : this.$searchContainer.children(".contactList"), i = t.children('[data-groupid="' + e + '"]');
                if (i.length) {
                    var a = i.children(".GroupButton"), s = a.children("span").text(), o = a.children("var").text(), r = this.$(".groupFixed");
                    r.attr("data-groupid", e).children(".GroupButton").children("span").text(s).next("var").text(o), r.slideDown("fast")
                }
            }
        },
        hideGroupFixed: function () {
            this.$(".groupFixed").slideUp("fast")
        },
        formatStr: function (e, t) {
            if (!t) return i.Text.Html.encode(e);
            var a = e.indexOf(t), s = t.length, o = "", n = [], r = '<span>{0}</span><span class="c_67ae6d">{1}</span><span>{2}</span>', l = i.Text.Html;
            return a > -1 ? (0 == a ? n.push("") : n.push(l.encode(e.substring(0, a))), n.push(l.encode(e.substring(a, a + s))), a + s >= e.length ? n.push("") : n.push(l.encode(e.substring(a + s))), o = i.Text.format(r, n)) : o = l.encode(e), o
        },
        onAddContacts: function () {
            this.updateView()
        },
        updateView: function () {
            this.model.set("contacts", null), this.renderGroupListView(), this.model.set("currentGroup", null), this.model.set("currentCompanyGroup", [])
        },
        onRetryClick: function () {
            var e = this;
            e.retryCount++, this.$(".LoadingImage").show(), this.$(".RetryDiv").hide(), setTimeout(function () {
                e.showRetryDiv()
            }, 5e3), this.model.reloadContactsData()
        },
        onClearGroupClick: function (e) {
            -3 == a(e.target).parent().attr("data-groupid") && (top.BH("compose_addressbook_lastcancel"), top.BH("addressBook_click_emptyLastContacts")), -4 == a(e.target).parent().attr("data-groupid") && top.BH("compose_addressbook_closecancel");
            var t = this.utilGetClickGroupId(e);
            t == n.Lastest ? this.model.clearLastContacts() : t == n.Close && this.model.clearCloseContacts()
        },
        getAddr: function (e) {
            var t = "";
            return t = "email" == this.filter ? e.getFirstEmail() : "mobile" == this.filter ? e.getFirstMobile() : "fax" == this.filter ? e.getFirstFax() : e.getFirstEmail() || e.getFirstMobile()
        },
        addSelectedItems: function (e) {
            for (var t = this.filter, a = 0; a < e.length; a++) {
                var s = e[a];
                if ("object" == typeof s) {
                    var o = this.model.addSelectedItem(s);
                    o && this.trigger("additem", s)
                } else {
                    var n = "", r = "";
                    if ("email" == t ? (n = i.Text.Email.getEmail(s), r = i.Text.Email.getName(s), value = i.Text.Email.getSendText(r, n)) : "mobile" == t && (n = i.Text.Mobile.getMobile(s), r = i.Text.Mobile.getName(s), value = i.Text.Mobile.getSendText(r, n)), n) {
                        var l = { name: r, addr: n, value: value }, o = this.model.addSelectedItem(l);
                        o && this.trigger("additem", l)
                    }
                }
            }
        },
        removeSelectedAddr: function (e) {
            for (var t = this.model.selectedList, i = 0; i < t.length; i++) {
                var a = t[i], s = "";
                if (s = this.options.isAddVip || this.options.isAddrNewGroup ? a.serialId : a.addr, this.filter || (s = a.serialId), s == e) return t.splice(i, 1), void this.trigger("removeitem", a)
            }
        },
        getSelectedItems: function () {
            if (this.selectMode) {
                var e = this.model.selectedList.concat();
                return e
            }
            return null
        },
        utilGetClickGroupId: function (e) {
            var t = a(e.currentTarget), i = t.is("[data-groupid]") ? t : t.parent();
            return i.attr("data-groupid").toString()
        },
        utilGetMemberElement: function (e) {
            return this.$(".ContactsItem[data-addr='" + e + "']")
        },
        utilGetEmailElement: function (e) {
            return this.$(".emailList").find('li[data-addr="' + e + '"]')
        },
        utilGetMemberElementById: function (e) {
            return this.$(".ContactsItem[data-contactsid='" + e + "']")
        },
        utilGetGroupElement: function (e) {
            return this.$("li[data-groupId='" + e + "']")
        },
        utilGetMemberContainer: function (e) {
            return this.utilGetGroupElement(e).children("ul")
        },
        showCompanyContacts: function (e, t) {
            var s = this, o = this.utilGetMemberContainer(e), n = o.attr("init") || 0;
            "init" == t && 1 == n || this.model.getCompanyList({
                success: function (e) {
                    var t = [];
                    a.each(e, function (e, a) {
                        t.push(i.Text.format(s.GroupItemTemplate, {
                            groupId: a.orgID || "",
                            groupName: i.Text.Html.encode(i.Text.Utils.getTextOverFlow(a.orgName, 9, !0)),
                            showCountEl: s.showCountElFlag,
                            count: a.totalMemNum,
                            behavior: "",
                            isCompany: !0,
                            showAddGroup: "none",
                            showClearGroup: "none",
                            enterpriseId: a.enterpriseId || ""
                        }))
                    }), s.$(s.GroupContainerPath).append(t.join(""))
                }
            })
        },
        renderCompanyMemberView: function (e, a) {
            var s = this, o = this.utilGetMemberContainer(e), n = o.attr("init") || 0;
            if ("init" == a && 1 == n) return o.show(), void s.utilGetGroupElement(e).children(".GroupButton").children("i").addClass("i_minus");
            var r = this.utilGetGroupElement(e), l = r.data("level"), c = r.data("enterpriseid").toString();
            this.model.writePageGetAllSubList({
                data: { OrgID: e || "", EnterpriseId: c }, success: function (a) {
                    var n = a.data || [], r = [];
                    t.each(n, function (e) {
                        if (e && 1 == e.recType) r.push(i.Text.format(s.GroupItemTemplate, {
                            groupId: e.id || "",
                            groupName: e.name,
                            showCountEl: "none",
                            behavior: "",
                            level: l ? l + 1 : 1,
                            isCompany: !0,
                            showAddGroup: "",
                            showClearGroup: "none",
                            spanIntercept: "spanIntercept",
                            enterpriseId: e.enterpriseId || ""
                        })), o.html(r.join("")), o.attr("init", 1); else if (e && 2 == e.recType) {
                            var t = !(s.selectMode && s.model.isSelectedNew({ addr: e.email_139, serialId: e.id }));
                            r.push(i.Text.format(s.MemberItemTemplateOld, {
                                isCompany: !0,
                                display: t ? "" : "none",
                                addrData: e.email_139,
                                addrTitle: e.email_139,
                                contactsName: e.name,
                                contactsId: e.id,
                                enterpriseId: e.enterpriseId || ""
                            })), o.html(r.join("")), o.attr("init", 1)
                        }
                    }), o.show(), s.utilGetGroupElement(e).children(".GroupButton").children("i").addClass("i_minus")
                }
            })
        },
        renderSearchMemberView: function (e, s, o) {
            function r(e) {
                if (l.LoadCompanyContacts) {
                    var t = "1";
                    if (e && l.CurrentTime != e || "" == t) return !1;
                    c.html("")
                }
                if (0 == _) c.html(M).show(); else {
                    c.find(".no_search_result").hide(), o || m.sort(function (e, t) {
                        return e = e.quanPin || "", t = t.quanPin || "", e.localeCompare(t)
                    });
                    for (var a = c.find("li[data-addr]").length, s = 1 == d ? l.MemberPageSize : 10, n = a, r = Math.min(a + s, _) ; r > n; n++) {
                        var u = m[n], h = u.addr, f = i.Text.Html.encode(h), g = u.isCompany, v = !(l.selectMode && l.model.isSelectedItem(h));
                        y.push(i.Text.format(w, {
                            contactsId: g ? u.memberId || "" : u.contactsId,
                            contactsName: l.formatStr(u.name, p),
                            contactsNameTitle: i.Text.Html.encode(u.name),
                            addr: l.formatStr(h, p),
                            addrData: h,
                            addrTitle: f,
                            display: g ? "" : v ? "" : "none",
                            display_i: g ? "" : "none",
                            isCompany: g
                        }))
                    }
                    _ > a + s && y.push('<li class="LoadMoreMember" data-groupId="-5"><a hidefocus="1" href="javascript:;">更多<span class="f_SimSun">↓</span></a></li>'), y = y.join(""), c.append(y), c.attr("init", 1), l.contacts_list = m
                }
            }

            var l = this;
            if (e != n.Search) return !1;
            var c = this.utilGetMemberContainer(e), d = c.attr("init") || 0;
            if ("init" != s || 1 != c.attr("init")) {
                var p = this.model.get("keyword");
                if (o) var m = o; else {
                    for (var m = this.model.getSearchContacts(), u = [], h = m.length, f = 0; h > f; f++) {
                        var g = m[f], v = "";
                        switch (this.filter) {
                            case "email":
                                v = g.emails.concat();
                                break;
                            case "mobile":
                                v = g.mobiles.concat();
                                break;
                            case "fax":
                                v = g.faxes.concat();
                                break;
                            default:
                                v = g.SerialId
                        }
                        v = t.isArray(v) ? v : [v];
                        var b = t.filter(v, function (e) {
                            return e.indexOf(p) > -1
                        });
                        b.length || (b = v), a.each(b, function (e, t) {
                            var i = (!(l.selectMode && l.model.isSelectedNew({
                                addr: t,
                                serialId: g.SerialId
                            })), {
                                contactsId: g.SerialId,
                                name: g.name,
                                jianPin: g.Jianpin,
                                quanPin: g.Quanpin,
                                addr: t
                            });
                            u.push(i)
                        })
                    }
                    m = u
                }
                var y = [], w = this.SearchTpl, _ = m.length, M = '<p class="no_search_result" style="text-align:center;margin-top:45px;font-size:16px;color:#666;">无相关联系人</p>', C = top.hasCompanyContacts ? top.hasCompanyContacts : this.options.showCompanyContacts;
                this.LoadCompanyContacts && C ? (this.CurrentTime = (new Date).getTime(), top.M2012.Contacts.API.fuzzyQuery({
                    data: {
                        Keyword: l.model.get("keyword"),
                        PageIndex: "1",
                        MaxRecInPage: "1000",
                        CurrentTime: l.CurrentTime.toString()
                    }, success: function (e) {
                        if (e && e.data && e.data.list) {
                            var t = e.data.total, i = e.data.currentTime, a = 1e3;
                            if (_ += t > a ? a : t, t > 0) {
                                for (var s = e.data.list, o = s.length, n = [], l = 0; o > l; l++) {
                                    var c = {
                                        isCompany: !0,
                                        name: s[l].name,
                                        jianPin: s[l].jianPin,
                                        quanPin: s[l].quanPin,
                                        addr: s[l].email_139,
                                        memberId: s[l].memberId
                                    };
                                    n.push(c)
                                }
                                m = m.concat(n);
                                for (var d = [], p = "", l = 0; l < m.length; l++) {
                                    var u = m[l], h = u.name + u.addr;
                                    -1 == p.indexOf(h) && (p += h, d.push(u))
                                }
                                m = d, _ = m.length
                            }
                            r(i)
                        }
                    }, fail: function () {
                        r()
                    }, error: function () {
                        r()
                    }
                })) : r()
            }
        }
    }))
}(jQuery, _, M139),

//M2012.UI.Dialog.AddressBook
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M2012.UI.Dialog.AddressBook";
    i.namespace(o, s.extend({
        initialize: function (e) {
            return this.options = e || {}, this.filter = e.filter, this.selectContacts = [], s.prototype.initialize.apply(this, arguments)
        },
        name: o,
        template: ['<div class="addFormContact">', "<table>", "<tbody><tr>", '<th class="leftTh">联系人(<var class="Label_ContactsLength"></var>)</th>', '<th class="centerTh"></th>', '<th class="rightTh"><var class="Label_ReceiverText"></var></th>', "</tr>", "<tr>", '<td class="leftTd">', '<div class="p_relative addFcLeft AddressBookContainer">', "</div>", "</td>", '<td class="centerTd"><i class="i_addjt"></i></td>', '<td class="rightTd">', '<div class="p_relative addFcRight">', "</div>", "</td>", "</tr>", "</tbody></table>", "</div>"].join(""),
        events: { "click #clear": "clearInput" },
        render: function () {
            var e = this, t = this.options;
            return this.dialog = $Msg.showHTML(this.template, function () {
                e.onSelect()
            }, function () {
                e.onCancel()
            }, {
                width: "500px",
                buttons: ["确定", "取消"],
                dialogTitle: t.dialogTitle || "从联系人添加"
            }), this.addressBook = new M2012.UI.Widget.Contacts.View({
                container: this.dialog.$(".AddressBookContainer")[0],
                showLastAndCloseContacts: t.showLastAndCloseContacts,
                showVIPGroup: t.showVIPGroup,
                showSelfAddr: t.showSelfAddr,
                maxCount: t.maxCount,
                selectMode: !0,
                filter: this.filter,
                isAddVip: t.isAddVip,
                comefrom: t.comefrom,
                showCompanyContacts: t.showCompanyContacts || !1
            }).render().on("additem", function (t) {
                if (t.isGroup) {
                    BH("addressBook_click_addGroup");
                    var i = t.value;
                    i = i || [], e.trigger("setSelectContacts", { type: "add", value: i });
                    for (var a = 0; a < i.length; a++) {
                        var s = i[a];
                        e.onAddItem(s.name, s.addr, s.serialId)
                    }
                } else e.onAddItem(t.name, t.addr, t.serialId), e.trigger("setSelectContacts", {
                    type: "add",
                    value: [t]
                })
            }).on("removeitem", function (t) {
                e.onRemoveItem(t.addr, t.serialId), e.trigger("setSelectContacts", { type: "del", value: [t] })
            }).on("additemmax", function (t) {
                e.trigger("additemmax")
            }), this.on("print", function () {
                t.items && this.addressBook.addSelectedItems(t.items)
            }), this.setElement(this.dialog.el), this.setTips({
                contactsLength: this.addressBook.model.getContacts().length,
                receiverText: t.receiverText || "接收人"
            }), this.initEvent(), s.prototype.render.apply(this, arguments)
        },
        selectedTemplate: ['<a hidefocus="1" data-contactsid ="{serialId}" data-addr="{addr}" href="javascript:;" class="lia">', '<i class="i_del"></i>', "<span>{sendText}</span>", "</a>"].join(""),
        initEvent: function (e) {
            var i = this;
            this.$(".addFcRight").click(function (e) {
                if ("i_del" == e.target.className) {
                    var t = e.target.parentNode.getAttribute("data-addr");
                    i.options.isAddVip && (t = e.target.parentNode.getAttribute("data-contactsid")), i.addressBook.removeSelectedAddr(t)
                }
            }), this.on("setSelectContacts", function (e) {
                e = e || {};
                var a = e.type || "", s = e.value || [];
                switch (a) {
                    case "add":
                        i.selectContacts = t.union(i.selectContacts, s);
                        break;
                    case "del":
                        i.selectContacts = t.reject(i.selectContacts, function (e) {
                            return e.serialId == t.first(s).serialId
                        });
                        break;
                    case "empty":
                        i.selectContacts = []
                }
                i.$(".red-mark1").length && i.$(".red-mark1").text(i.selectContacts.length)
            })
        },
        onAddItem: function (e, t, s) {
            var o = "mobile" == this.filter ? i.Text.Mobile.getSendText(e, t) : i.Text.Email.getSendText(e, t), n = i.Text.format(this.selectedTemplate, {
                addr: i.Text.Html.encode(t),
                sendText: i.Text.Html.encode(o),
                serialId: i.Text.Html.encode(s)
            });
            a(".addFcRight").append(n)
        },
        onRemoveItem: function (e, t) {
            this.options.isAddVip ? this.$("a[data-contactsid='" + t + "']").remove() : this.$("a[data-addr='" + e + "']").remove()
        },
        setTips: function (e) {
            this.$(".Label_ContactsLength").html(e.contactsLength), this.$(".Label_ReceiverText").html(e.receiverText)
        },
        onSelect: function () {
            var e = this.addressBook.getSelectedItems();
            if (this.options.getDetail !== !0) for (var t = 0; t < e.length; t++) e[t] = e[t].value;
            this.trigger("select", { value: e })
        },
        onCancel: function () {
            this.trigger("cancel")
        },
        clearInput: function () {
            var e = this;
            t.each(this.selectContacts, function (t) {
                e.addressBook.removeSelectedAddr(t.serialId)
            }), this.$(".addFcRight").empty(), this.trigger("setSelectContacts", { type: "empty" })
        }
    })), a.extend(M2012.UI.Dialog.AddressBook, {
        create: function (e) {
            var t = new M2012.UI.Dialog.AddressBook(e).render();
            return t
        }
    })
}(jQuery, _, M139),

//M2012.UI.TreeView.MainView
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M2012.UI.TreeView.MainView";
    i.namespace(o, s.extend({
        initialize: function (t) {
            if (t.el) {
                var i = a(t.el);
                i.html(t.template)
            } else var i = e(t.template);
            return this.options = t || {}, this.model = new Backbone.Model, this.nodes = t.nodes, this.setElement(i), s.prototype.initialize.apply(this, arguments)
        }, defaults: { name: o }, render: function () {
            var e = this.options;
            return this.treeViewContainer = this.$(e.treeViewContainer), this.initEvent(), this.renderNodes(), this.updatePathTip(), s.prototype.render.apply(this, arguments)
        }, initEvent: function () {
            this.model.on("change:selectedNode", function (e, t) {
                var i = e.previous("selectedNode"), s = e.get("selectedNode");
                if (i && i.unselect(), s) {
                    var o = (s.$el, a(e.get("selectedNode").$el).find("span").eq(0));
                    o.css({ color: "white", background: "rgb(50,119,222)" })
                }
                this.updatePathTip()
            }, this)
        }, getSelectPath: function () {
            for (var e = this.model.get("selectedNode"), t = []; e;) {
                "彩云网盘" == e.text && (e.text = "全部文件");
                var a = e.tag.directoryId, s = e.text;
                s = i.Text.Utils.getTextOverFlow(s, 5, !1), t.unshift('<a href="javascript:void(0);" nodeid="' + a + '">' + s + "</a>"), e = e.parentNode
            }
            return t
        }, updatePathTip: function () {
            var e = this, t = this.getSelectPath(), i = [], s = t.length;
            i = s > 5 ? [t[0], t[1], "...", t[s - 2], t[s - 1]] : t, this.$(".attrsavediskP").html("" + i.join(" > ")), this.$(".attrsavediskP a").unbind("click").bind("click", function () {
                var t = a(this).attr("nodeid");
                e.options.selectedId = t, e.onNodeSelected(e.containers[t])
            })
        }, containers: {}, onNodeSelected: function (e) {
            this.model.set("selectedNode", e), this.updatePathTip()
        }, renderNodes: function () {
            for (var e = this, t = this.options, i = this.nodes.length, a = 0; i > a; a++) {
                var s = this.nodes[a], o = new M2012.UI.TreeView.NodeView({
                    tree: this,
                    depth: 0,
                    text: s.text,
                    tag: s.tag,
                    childNodes: s.childNodes,
                    template: t.nodeTemplate,
                    label: t.nodeLabel,
                    labelIcon: "a > i:eq(1)",
                    switchButton: "a > i:eq(0)",
                    childContainer: t.nodeChildContainer,
                    container: this.treeViewContainer,
                    selectedId: t.selectedId,
                    containers: e.containers
                });
                o.render(), "undefined" != e.containers[s.directoryId] && (e.containers[s.directoryId] = o), t.selectedId ? t.selectedId == s.tag.directoryId && o.select() : 10 === o.tag.directoryId && o.select()
            }
        }
    }));
    var n = {
        template: ['<p class="attrsavediskP">', "</p>", '<div class="attrsavedisk">', "<ul>", "</ul>", "</div>"].join(""),
        nodeTemplate: ["<li>", '<a href="javascript:;" class="on txtd"><i class="i_plus"></i><i class="i_wjj"></i><span>text</span></a>', "<ul></ul>", "</li>"].join(""),
        nodeLabel: "a:eq(0)",
        nodeLabelIcon: "a > i:eq(1)",
        nodeSwitchButton: "a > i:eq(0)",
        nodeChildContainer: "ul",
        treeViewContainer: ".attrsavedisk > ul"
    };
    e.extend(M2012.UI.TreeView, {
        create: function (e) {
            return e = t.defaults(e, n), new M2012.UI.TreeView.MainView(e)
        }
    })
}(jQuery, _, M139),

//M2012.UI.TreeView.NodeView
function (e, t, i) {
    var a = i.View.ViewBase, s = "M2012.UI.TreeView.NodeView";
    i.namespace(s, a.extend({
        initialize: function (t) {
            this.model = new Backbone.Model, this.tree = t.tree, this.tag = t.tag, this.depth = t.depth;
            var i = t.opened === !0;
            t.parentNode || (i = !0), this.model.set("opened", i);
            var s = e(t.template);
            return this.setElement(s), this.parentNode = t.parentNode, this.options = t || {}, a.prototype.initialize.apply(this, arguments)
        }, defaults: { name: s }, render: function () {
            var e = this.options;
            return e.container ? this.$el.appendTo(e.container) : this.$el.appendTo(this.parentNode.childContainer), this.label = this.$(e.label), "彩云网盘" !== e.text && this.label.css("paddingLeft", 22 * this.depth + 10 + "px"), this.labelIcon = this.$(e.labelIcon), this.switchButton = this.$(e.switchButton), this.childContainer = this.$(e.childContainer), this.childNodes = e.childNodes, this.setText(e.text), this.childContainer = this.$(e.childContainer), this.bindEvent(), this.renderChildNodes(), this.renderSwitchStatus(), this.childNodes && 0 != this.childNodes.length || this.switchButton.css("visibility", "hidden"), a.prototype.render.apply(this, arguments)
        }, bindEvent: function () {
            var e = this;
            this.label.click(function (t) {
                e.onLabelClick(t)
            }), this.model.on("change:opened", function () {
                e.renderSwitchStatus()
            }).on("change:selected", function () {
                e.renderSelectedMode()
            }), this.label.dblclick(function (t) {
                e.toggleNode()
            }), this.switchButton.click(function (t) {
                e.toggleNode()
            })
        }, toggleNode: function () {
            this.model.set("opened", !this.model.get("opened"))
        }, onLabelClick: function (e) {
            this.select()
        }, select: function () {
            this.model.set("selected", !0);
            var e = this.tag && this.tag.directoryId;
            top.$App && top.$App.setCustomAttrs("diskSelectId", e), this.tree.onNodeSelected(this)
        }, unselect: function () {
            this.model.set("selected", !1)
        }, renderChildNodes: function () {
            var e = this.options, t = this.childNodes;
            if (t) for (var i = 0; i < t.length; i++) {
                var a = t[i], s = new M2012.UI.TreeView.NodeView({
                    parentNode: this,
                    tree: this.tree,
                    text: a.text,
                    tag: a.tag,
                    depth: this.depth + 1,
                    label: e.label,
                    template: e.template,
                    label: e.label,
                    labelIcon: "a > i:eq(1)",
                    switchButton: "a > i:eq(0)",
                    childContainer: e.childContainer,
                    childNodes: a.childNodes,
                    parentNode: this,
                    containers: e.containers,
                    selectedId: e.selectedId
                });
                if (s.render(), "undefined" != e.containers[a.tag.directoryId] && (e.containers[a.tag.directoryId] = s), e.selectedId == a.tag.directoryId) {
                    for (var o = s.parentNode; o;) o.model.set("opened", !0), o = o.parentNode;
                    s.select()
                }
            }
        }, setText: function (e) {
            this.text = e, this.label.find("span").text(e)
        }, renderSwitchStatus: function () {
            this.model.get("opened") ? (this.label.addClass("on"), this.childContainer.show()) : (this.label.removeClass("on"), this.childContainer.hide())
        }, renderSelectedMode: function () {
            var e = this.model.get("selected"), t = this.label.find("span");
            e ? t.css({ color: "white", background: "rgb(50,119,222)" }) : t.css({ color: "", background: "" })
        }
    }))
}(jQuery, _, M139),

//M2012.UI.Dialog.SaveToDisk
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M2012.UI.Dialog.SaveToDisk", n = {
        PHOTO: 20,
        MUSIC: 30
    }, r = "bmp,gif,ico,jpg,jpeg,png,tif,tiff".split(","), l = "mid,wma,wav,mp3,cda".split(","), c = "“{0}”不是图片格式文件,请重新选择", d = "“{0}”不是音乐格式文件,请重新选择";
    i.namespace(o, s.extend({
        initialize: function (e) {
            return this.options = e || {}, this.model = new Backbone.Model, s.prototype.initialize.apply(this, arguments)
        },
        templateBtn: '<a id="createFolder" class="icoTb btnNormal MB_But_1 CancelButton" rel="0" href="javascript:void(0)" style=""><span>新建文件夹</span></a>',
        templateNewFolder: ['<li><span class="on">', '<i class="i_plus"></i>', '<i class="i_wjj"></i>', '<input type="text" value="新建文件夹" style="height:11px;width:80px;" class="iText ml_5" value="" maxlength="255">', '<a href="javascript:;" class="btnMinOK ml_5" title="确定"></a>', '<a href="javascript:;" class="btnMincancel ml_5" title="取消"></a>', "</span></li>"].join(""),
        tipWords: {
            Empty: "文件夹名称不能为空",
            MaxLength: "最大长度不能超过255字",
            InvalidChar: '不能有以下特殊字符 \\/:*?"<>|&',
            RepeatDirName: "文件夹名称不能重复",
            Exception: "创建文件夹失败，请稍后再试。",
            Level: "文件夹层级不能超过5层",
            NotSys: "不能与系统文件夹重名"
        },
        dialogTitle: { save: "保存至彩云网盘", move: "保存至彩云网盘", diskFileMove: "移动", shareCopy: "复制到" },
        rootName: "彩云网盘",
        maxLengthName: 255,
        name: o,
        requestInitData2: function (e) {
            top.M139.UI.TipMessage.show("正在打开彩云网盘..."), i.RichMail.API.call("disk:getDirectorys", "", function (t) {
                return top.M139.UI.TipMessage.hide(), "S_OK" != t.responseData.code ? void top.$Msg.alert("加载失败，请稍后重试", { ico: "warn" }) : void (e && e())
            })
        },
        render: function () {
            var e = this, t = e.options, i = e.dialogTitle[t.type] || e.dialogTitle.save;
            return e.dialog = $Msg.showHTML("", function (t) {
                e.onYesClick(t)
            }, function (t) {
                e.onCancelClick(t)
            }, {
                width: 500,
                buttons: ["确定", "取消"],
                dialogTitle: i,
                iDiskHeight: 335
            }), e.createBtnStatus = !0, e.jContainer = e.dialog.$el, e.jContainer.find(".BottomTip").html(e.templateBtn), e.initFolderEvent(), e.setElement(e.dialog.el), e.initEvent(), s.prototype.render.apply(e, arguments)
        },
        initFolderEvent: function () {
            function e() {
                function e(e) {
                    var t = e.val();
                    "新建文件夹" == t && e.val("")
                }

                var n = o.jSelectFolder.find("input");
                $B.is.ie && 6 == $B.getVersion() ? n.bind("keydown", function (t) {
                    e(a(this)), t.keyCode == i.Event.KEYCODE.ENTER && o.jSelectFolder.find("a.btnMinOK").click()
                }).bind("keypress", function (t) {
                    e(a(this)), t.keyCode == i.Event.KEYCODE.ENTER && o.jSelectFolder.find("a.btnMinOK").click()
                }) : n.bind("keydown", function (t) {
                    e(a(this)), t.keyCode == i.Event.KEYCODE.ENTER && o.jSelectFolder.find("a.btnMinOK").click()
                }), n.focus(), o.jSelectFolder.find("a.btnMinOK").click(function (e) {
                    var i = a.trim(n.val()), r = o.getErrorMsg(i);
                    if (r) top.$Msg.alert(r); else {
                        var l = t(), c = { parentId: l, name: i, dirType: s() };
                        o.requestCreateFolder(c)
                    }
                }), o.jSelectFolder.find("a.btnMincancel").click(function (e) {
                    a(this).parent("span").parent("li").remove(), o.ableCreateFolderBtn()
                })
            }

            function t() {
                var e = o.treeView.model.get("selectedNode").tag, t = String(e.directoryId || e.parentDirectoryId);
                return e.parentDirectoryId == n.PHOTO ? t = e.parentDirectoryId : e.parentDirectoryId == n.MUSIC && (t = e.parentDirectoryId), t
            }

            function s() {
                var e = o.treeView.model.get("selectedNode").tag;
                return e.dirType
            }

            var o = this, r = 0;
            this.jCreateFolderBtn = this.jContainer.find("#createFolder"), this.jCreateFolderBtn.unbind("click").bind("click", function (t) {
                o.createBtnStatus && (o.disableCreateFolderBtn(), o.jSelectFolder = o.treeView.model.get("selectedNode").$el, r = parseInt(a(o.jSelectFolder.find("a")[0]).css("paddingLeft")) + 18, a(o.jSelectFolder.find("ul")[0]).show().prepend(o.templateNewFolder), a(o.jSelectFolder.find("ul")[0]).find("span").eq(0).css("paddingLeft", r + "px"), a(o.jSelectFolder.find("a")[0]).addClass("on"), a(o.jSelectFolder.find("i")[0]).show(), e())
            })
        },
        disableCreateFolderBtn: function () {
            var e = this;
            e.createBtnStatus = !1, e.jCreateFolderBtn.addClass("btnGray")
        },
        ableCreateFolderBtn: function () {
            var e = this;
            e.createBtnStatus = !0, e.jCreateFolderBtn.removeClass("btnGray")
        },
        getErrorMsg: function (e) {
            var t = this;
            return e ? e.length > t.maxLengthName ? t.tipWords.MaxLength : t.isRightName(e) ? void 0 : t.tipWords.InvalidChar : t.tipWords.Empty
        },
        isRightName: function (e) {
            var t = /[*|:"<>?\\/&]/;
            return !t.test(e)
        },
        requestMoveToDisk: function (e) {
            var t = this, a = String(e.directoryId || e.parentDirectoryId), s = 0, o = t.options.comeFrom || "0";
            e.parentDirectoryId == n.PHOTO ? (a = e.parentDirectoryId, s = e.directoryId) : e.parentDirectoryId == n.MUSIC && (a = e.parentDirectoryId, s = e.directoryId), e.directoryId == n.PHOTO || e.parentDirectoryId == n.PHOTO ? o = "1" : e.directoryId != n.MUSIC && e.parentDirectoryId != n.MUSIC || (o = "2");
            var r = { directoryId: a, shareFileId: this.options.ids, comeFrom: o, type: e.dirType };
            this.options.fileName;
            i.UI.TipMessage.show("已后台保存，稍后查看", { delay: 5e3 }), i.RichMail.API.call("file:turnFile", r, function (e) {
                if (i.UI.TipMessage.hide(), e.responseData && "S_OK" == e.responseData.code) "fileCenter" === t.options.comeFrom ? BH({ key: "diskv2_fileCenter_savesuc" }) : BH({ key: "diskv2_cabinet_savesuc" }), t.dialog.close(); else if ("-7" == e.responseData.code) {
                    var a = e.responseData.summary, s = top.UserData.vipInfo;
                    s && "0016" != s.serviceitem && "0017" != s.serviceitem && (a += '&nbsp;<a href="javascript:;" style="text-decoration: underline;" onclick="var topWin = top; topWin.FF.close();topWin.$App.show(\'mobile\');return false;">上传更大单个文件</a>'), top.FF.close(), top.$Msg.alert(a, {
                        icon: "warn",
                        isHtml: !0
                    })
                } else if ("-4" == e.responseData.code) {
                    var a = e.responseData.summary;
                    top.FF.close(), top.$Msg.alert(a, { icon: "warn", isHtml: !0 })
                } else top.$Msg.alert("保存失败，请稍后重试", { ico: "warn" })
            })
        },
        requestMoveToDiskForFileCenter: function (e) {
            var t = this, a = String(e.directoryId || e.parentDirectoryId), s = 0, o = "0";
            e.parentDirectoryId == n.PHOTO ? (a = e.parentDirectoryId, s = e.directoryId) : e.parentDirectoryId == n.MUSIC && (a = e.parentDirectoryId, s = e.directoryId), e.directoryId == n.PHOTO || e.parentDirectoryId == n.PHOTO ? o = "1" : e.directoryId != n.MUSIC && e.parentDirectoryId != n.MUSIC || (o = "2");
            var r = { groupId: this.options.groupId, dirId: a, sendIds: this.options.ids, type: e.dirType };
            this.options.fileName;
            "fileCenter" == t.options.comeFrom ? (t.trigger("fileCenterSaveSuccess"), i.RichMail.API.call("file:toDiskForCenter", r, function () {
            }), t.dialog.close()) : (i.UI.TipMessage.show("正在保存..."), i.RichMail.API.call("file:toDiskForCenter", r, function (e) {
                if (e.responseData && "S_OK" == e.responseData.code) i.UI.TipMessage.show("已后台保存，稍后查看", { delay: 5e3 }), t.dialog.close(), "fileCenter" === t.options.comeFrom; else if ("-7" == e.responseData.code) {
                    var a = e.responseData.summary, s = top.UserData.vipInfo;
                    s && "0016" != s.serviceitem && "0017" != s.serviceitem && (a += '&nbsp;<a href="javascript:;" style="text-decoration: underline;" onclick="var topWin = top; topWin.FF.close();topWin.$App.show(\'mobile\');return false;">上传更大单个文件</a>'), top.FF.close(), top.$Msg.alert(a, {
                        icon: "warn",
                        isHtml: !0
                    })
                } else if ("-4" == e.responseData.code) {
                    var a = e.responseData.summary;
                    top.FF.close(), top.$Msg.alert(a, { icon: "warn", isHtml: !0 })
                } else top.$Msg.alert("保存失败，请稍后重试", { ico: "warn" })
            }))
        },
        requestSaveToDiskForOfficial: function (e) {
            var t = String(e.directoryId || e.parentDirectoryId), a = "00019700101000000001/1011XH7rK1Bw00019700101000000503", s = {
                contentInfos: a + this.options.directoryTypeStr + this.options.fileIds,
                newCatalogID: t
            };
            i.UI.TipMessage.show("保存成功", { delay: 5e3 }), this.dialog.close(), i.RichMail.API.call("disk:copyContentCatalog", s, function (e) {
                return e.responseData && "S_OK" == e.responseData.code ? void BH({ key: "officialShare_savesuc" }) : "-7" == e.responseData.code ? !1 : ("-4" == e.responseData.code, !1)
            })
        },
        requestDiskFileMove: function (e) {
            var t = this, a = String(e.directoryId || e.parentDirectoryId), s = this.options.data, o = {
                fileIds: s.fileIds,
                directoryIds: s.directoryIds,
                srcDirType: s.srcDirType,
                toDirectoryId: a,
                toDirType: e.dirType
            };
            i.UI.TipMessage.show("正在移动..."), i.RichMail.API.call("disk:move", o, function (e) {
                i.UI.TipMessage.hide();
                var a = e.responseData;
                if (a && "S_OK" == a.code) t.onSaveRequestLoad(e.responseData); else if (a && "JOIN_MCLOUD" == a.code) t.confirmMcloudUpgrade(); else {
                    var s = e.responseData.summary;
                    top.$Msg.alert(s, { ico: "warn" })
                }
            })
        },
        confirmMcloudUpgrade: function () {
            $Msg.confirm("尊敬的用户，彩云正在进行系统升级，暂时无法进行该操作，请稍后再试!", function () {
            }, function () {
            }, { buttons: ["确定"] }).setDialogTitle("彩云系统升级")
        },
        repareSaveToMcloud: function () {
            var e = this.options;
            return e && e.saveToMcloud && (this.saveToMcloud = !0), this.initMcloudEvent(), s.prototype.render.apply(this, arguments)
        },
        requestCopyToDisk: function (e) {
            var a = this, s = String(e.directoryId || e.parentDirectoryId), o = this.options.data, n = e.dirType, r = 0;
            1 == n ? r = 0 : 3 == n ? r = 1 : 4 == n && (r = 2);
            var l = { fileIds: o.fileIds, directoryIds: o.directoryIds, toDirId: s, toDirType: r, path: o.path }, l = {};
            t.isArray(o) ? l[o[0]] = o[1] : (l.catalogInfos = o.catalogInfos ? o.catalogInfos.join(",") : "", l.contentInfos = o.contentInfos ? o.contentInfos.join(",") : ""), l.newCatalogID = s, i.UI.TipMessage.show("正在复制..."), i.RichMail.API.call("disk:copyContentCatalog", l, function (e) {
                i.UI.TipMessage.hide();
                var t = e.responseData;
                t && "S_OK" == t.code ? a.onSaveRequestLoad(e.responseData) : top.$Msg.alert("复制失败，请稍后重试", { ico: "warn" })
            })
        },
        requestCreateFolder: function (e) {
            var t = this, a = { parentId: e.parentId, name: e.name, dirType: e.dirType };
            i.UI.TipMessage.show("正在新建文件夹..."), i.RichMail.API.call("disk:createDirectory", a, function (e) {
                i.UI.TipMessage.hide();
                var a = e.responseData;
                if (a && "S_OK" == a.code) {
                    var s = a["var"].directoryId;
                    t.selectedId = s, t.trigger("print", s), t.ableCreateFolderBtn()
                } else if (a && "JOIN_MCLOUD" == a.code) t.confirmMcloudUpgrade(); else {
                    var o = a.summary;
                    $Msg.alert(o, { ico: "warn" })
                }
            })
        },
        requestInitData: function () {
            var e = this;
            !this.saveToMcloud && i.UI.TipMessage.show("正在打开彩云网盘..."), i.RichMail.API.call("disk:getDirectorys", "", function (t) {
                i.UI.TipMessage.hide(), "S_OK" == t.responseData.code ? e.onInitDataLoad(t.responseData["var"].directorys) : $Msg.alert("加载失败，请稍后重试", { ico: "warn" })
            })
        },
        requestSaveToDisk: function (e) {
            var t, a = this, s = String(e.directoryId || e.parentDirectoryId), o = { netFiles: [] }, n = this.options.Attachinfos, r = [];
            if ("https:" == window.location.protocol && this.options.downloadUrl && (this.options.downloadUrl = this.options.downloadUrl.replace("https://", "http://")), n) {
                for (var l = n.length - 1; l >= 0; --l) t = n[l], t.directoryId = s, t.dirType = e.dirType, r.push(t.fileName);
                o.netFiles = n
            } else o.netFiles.push({
                url: this.options.downloadUrl,
                directoryId: s,
                dirType: e.dirType,
                fileName: this.options.fileName,
                fileSize: this.options.fileSize
            });
            !this.saveToMcloud && i.UI.TipMessage.show("正在保存至彩云网盘..."), i.RichMail.API.call("disk:attachUpload", o, function (e) {
                if (i.UI.TipMessage.hide(), e.responseData && "S_OK" == e.responseData.code) {
                    BH({ key: "diskv2_other_savesuc" }), a.onSaveRequestLoad(e.responseData), a.dialog.close();
                    var t = "存彩云网盘成功";
                    "fileCenter" !== a.options.comeFrom && void 0 != top.Links && (t += "，<a href='javascript:;' onclick='top.Links.show(\"diskDev\",\"&id={0}\",true);top.FF.close();return false;'>去查看</a>");
                    var o = t.format(s);
                    i.UI.TipMessage.show(o, { delay: 5e3 })
                } else {
                    var n = e.responseData.summary;
                    !this.saveToMcloud && $Msg.alert(n, { ico: "warn" })
                }
            })
        },
        onInitDataLoad: function (e) {
            e && (this.model.set("data", e), e[0] && this.model.set("rootId", e[0].parentDirectoryId)), this.trigger("initdataload")
        },
        onSaveRequestLoad: function (e) {
            e && "S_OK" == e.code && this.onSaveSuccess()
        },
        getTreeNodeData: function () {
            var e = this, t = this.model.get("data"), i = [], a = [].concat(t), s = e.model.get("rootId");
            a.unshift({ directoryId: s, directoryName: e.rootName, dirType: 1, parentDirectoryId: 0 });
            for (var o = [], n = 0, r = a.length; r > n; n++) {
                var l = a[n];
                o.push({
                    directoryId: l.directoryId,
                    parentDirectoryId: l.parentDirectoryId,
                    text: l.directoryName,
                    tag: l,
                    childNodes: []
                })
            }
            return i.push(this.getNodeTreeData(o)), i
        },
        getNodeTreeData: function (e) {
            for (var t = {}, i = 0, a = e.length; a > i; i++) for (var s = e[i], o = 0; a > o; o++) {
                var n = e[o];
                if (s.parentDirectoryId == n.directoryId) {
                    n.childNodes.push(s);
                    break
                }
                o == a - 1 && (t = s)
            }
            return t
        },
        renderTree: function () {
            var e = this, t = this.getTreeNodeData(), i = t;
            if (e.options.isreadmail) {
                var s = t[0].childNodes;
                a.each(s, function () {
                    return "139邮箱" == this.text ? (e.model.set("rootId", this.directoryId), !1) : void 0
                })
            }
            var o = e.selectedId || e.model.get("rootId"), n = "";
            top.resetDiskSelect ? (top.resetDiskSelect = !1, top.$App && top.$App.setCustomAttrs("diskSelectId", "")) : n = top.$App && top.$App.getCustomAttrs("diskSelectId"), e.options.isreadmail && n && (o = e.selectedId || n || e.model.get("rootId")), this.treeView = M2012.UI.TreeView.create({
                el: this.dialog.$(".boxIframeText"),
                nodes: i,
                selectedId: o
            }).render()
        },
        autoSaveToDisk: function () {
            var e = this.getTreeNodeData(), t = e[0].tag;
            this.requestSaveToDisk(t)
        },
        initEvent: function (e) {
            this.on("initdataload", function () {
                this.renderTree()
            }).on("print", function () {
                this.requestInitData()
            }).on("success", function (e) {
                i.UI.TipMessage.show("保存成功", { delay: 5e3 }), this.dialog.close()
            })
        },
        initMcloudEvent: function (e) {
            var t = this.options.downloadUrl, i = this.options.fileName;
            console.log(t), $App.trigger("saveToMcloud", {
                downUrl: t,
                fileName: i || "全部附件.zip",
                fileSize: top.M139.Text.Url.queryString("size", t) || "1"
            })
        },
        onSaveSuccess: function () {
            this.trigger("success")
        },
        checkFile: function (e) {
            var t = this.options.fileName, s = i.Text.Url.getFileExtName(t), o = "";
            return e.directoryId == n.PHOTO || e.parentDirectoryId == n.PHOTO ? -1 == a.inArray(s, r) && (o = c.format(i.Text.Url.getOverflowFileName(t, 15))) : e.directoryId != n.MUSIC && e.parentDirectoryId != n.MUSIC || -1 == a.inArray(s, l) && (o = d.format(i.Text.Url.getOverflowFileName(t, 15))), o ? ($Msg.alert(o, { icon: "warn" }), !1) : !0
        },
        onYesClick: function (e) {
            var t = this.treeView.model.get("selectedNode").tag;
            if (e.cancel = !0, this.checkFile(t)) {
                var i = this.options.type, a = this.options.isForFileCenter, s = this.options.isOfficial;
                if (a) return void this.requestMoveToDiskForFileCenter(t);
                if (s) return void this.requestSaveToDiskForOfficial(t);
                "move" === i ? this.requestMoveToDisk(t) : "diskFileMove" === i ? this.requestDiskFileMove(t) : "shareCopy" === i ? this.requestCopyToDisk(t) : this.requestSaveToDisk(t)
            }
        },
        onCancelClick: function () {
            this.trigger("cancel")
        }
    }))
}(jQuery, _, M139),

//M2012.UI.Scroll
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.UI.Scroll", s.extend({
        wrap: "",
        ulEL: null,
        ulMsg: {},
        intervalTime: 15e3,
        speed: 40,
        initialize: function () {
            return s.prototype.initialize.apply(this, arguments)
        },
        init: function (e) {
            this.ulEL = "ul_track_" + this.cid, this.lis = e.lis, this.order = e.order, this.speed = e.speed || 40, this.intervalTime = e.intervalTime || 15e3, this.doc = e.win ? e.win.document : window.document, this.wrap = a(e.wrap, this.doc), this.wrap.html(this.getTemplate(this.ulEL, this.lis, this.order)), this.containerSrcoll = a("#" + this.ulEL, this.doc)
        },
        render: function (e) {
            this.init(e), this.scrollMarquee()
        },
        scrollMarquee: function () {
            var e = this.containerSrcoll.find("li").length;
            if (e > 1) {
                var t = a(this.wrap).height();
                this.startmarquee(this.ulEL, t, this.speed, this.intervalTime, 1)
            }
        },
        startmarquee: function (e, t, i, a, s) {
            function o() {
                try {
                    r = setInterval(n, i), 0 == l && (c.scrollTop += 1)
                } catch (e) {
                }
            }

            function n() {
                try {
                    c.scrollTop % t != 0 ? (c.scrollTop += 1, c.scrollTop >= c.scrollHeight / 2 && (c.scrollTop = 0)) : (clearInterval(r), setTimeout(o, a))
                } catch (e) {
                }
            }

            var r, l = !1, c = this.doc.getElementById(e);
            c.innerHTML += c.innerHTML, c.onmouseover = function () {
                l = !0
            }, c.onmouseout = function () {
                l = !1
            }, c.scrollTop = 0, setTimeout(o, a)
        },
        resetScroll: function (e) {
            this.wrap.html(this.getTemplate(this.ulEL, e, this.order)), this.scrollMarquee()
        },
        getTemplate: function (e, i, a) {
            a = a ? a : [];
            var s = [], o = a.length, n = 0 == o ? i : a;
            return t.each(n, function (e, t) {
                0 == o ? s.push(e) : i[e] && s.push(i[e])
            }), top.$T.Utils.format(this._template, { id: e, lis: s.join("") })
        },
        _template: '<ul class="nessageReminding" id="{id}" style="overflow:hidden;">{lis}</ul>'
    }))
}(jQuery, _, M139),

//M2012.UI.MutiScroll
function (e, t, a) {
    var s = a.View.ViewBase;
    a.namespace("M2012.UI.MutiScroll", s.extend({
        data: [],
        parentEl: null,
        speed: 1300,
        timer: 1500,
        scrollLine: 1,
        defaultLines: 1,
        initialize: function (e) {
            this.data = e.data || [], this.speed = e.speed || 1300, this.timer = e.timer || 1500, this.parentEl = e.parentEl, this.scrollLine = e.scrollLine || 1, this.defaultLines = e.defaultLines || 1, this.init()
        },
        init: function () {
            this._initPararent(this.data), this._scroll(), this._initEvent()
        },
        _initPararent: function (e) {
            for (var t = [], i = e.length, a = 0; i > a; a++) t.push($T.Utils.format(this._templateLi, { info: e[a] }));
            this.parentEl.html($T.Utils.format(this._templateUl, { id: this.cid, lis: t.join("") }));
            var s = this.parentEl.find("li:first").outerHeight();
            this.parentEl.css({ height: s * this.defaultLines, overflow: "hidden" })
        },
        updateScroll: function (e) {
            e.data && (this.data = e.data, this._initPararent(e.data), this._stop(), this._scroll())
        },
        _scroll: function () {
            this.data.length > this.defaultLines && this._start()
        },
        _scrollUp: function () {
            var e = this, t = this.parentEl.eq(0).find("ul:first"), a = parseInt(this.scrollLine, 10), s = this.parentEl.find("li:first").outerHeight(), o = 0 - a * s, n = parseInt(this.speed, 10);
            if (this.timerID) try {
                t.animate({ marginTop: o }, n, function () {
                    for (i = 1; i <= a; i++) t.find("li:first").appendTo(t);
                    t.css({ marginTop: 0 })
                })
            } catch (r) {
                e._stop(), e._scroll()
            }
        },
        _stop: function () {
            this.timerID && (clearInterval(this.timerID), this.timerID = null)
        },
        _start: function () {
            var e = this;
            e.timerID = setInterval(function () {
                e._scrollUp()
            }, e.timer)
        },
        _initEvent: function () {
            var e = this;
            this.parentEl.hover(function () {
                e._stop()
            }, function () {
                e._scroll()
            }).mouseout()
        },
        _templateUl: '<ul id="ul_{id}" style="overflow:hidden;margin:0px;">{lis}</ul>',
        _templateLi: '<li style="overflow:hidden;">{info}</li>'
    }))
}(jQuery, _, M139),

//M2012.UI.HoriScroll
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.UI.HoriScroll", s.extend({
        parentEl: null,
        UlEl: null,
        data: [],
        movePos: 0,
        isIE6: !0,
        widthLi: 50,
        defaultLis: 4,
        defaultMCount: 1,
        initialize: function (e) {
            this.data = e.data, this.parentEl = e.parentEl, this.defaultMCount = e.defaultMCount || 1, this.init()
        },
        init: function () {
            this.isIE6 = a.browser.msie && 6 == a.browser.version, this.test && this.testData(), this._initParent(), this.initEvent()
        },
        initEvent: function () {
            var e = this;
            this.parentEl.find(".slideBtn-prev").bind("click", function () {
                e.moveLeft()
            }), this.parentEl.find(".slideBtn-next").bind("click", function () {
                e.moveRight()
            })
        },
        moveLeft: function () {
            0 != this.movePos && (this.movePos -= this.defaultMCount, this.move(this.movePos))
        },
        moveRight: function () {
            this.movePos + this.defaultLis >= this.data.length || (this.movePos += this.defaultMCount, this.move(this.movePos))
        },
        move: function (e) {
            var t = this;
            this.isIE6 ? this.UlEl.css("margin-left", -(e * t.widthLi)) : this.UlEl.animate({ "margin-left": -(e * t.widthLi) }, "slow"), this.movePos = e
        },
        _initParent: function () {
            this.parentEl.length > 0 && this.parentEl.html(top.$T.Utils.format(this._template, {
                id: this.cid,
                lis: this.data.join("")
            })), this.UlEl = this.parentEl.find("#UL_" + this.cid);
            var e = this.UlEl.find("li:first");
            this.widthLi = parseInt(e.css("width")) + parseInt(e.css("margin-right")), this.defaultLis = this.getLiCount(this.widthLi, this.parentEl.outerWidth())
        },
        getLiCount: function (e, t) {
            for (var i = 0, a = 1; a <= this.data.length; a++) if (e * a > t) {
                i = a - 1;
                break
            }
            return i
        },
        testData: function () {
            for (var e = "<li class='on'><a href='' class='item-bg'><i class='item-ico1'></i></a><a href='' class='item-info-name'>使用绿色账单</a></li>", t = 0; 8 > t; t++) this.data.push(e)
        },
        _template: ['<div class="slide-item" id="hs_{id}">', '<div class="slide-item-con">', '<ul class="slide-item-ul m_clearfix" id="UL_{id}">{lis}</ul>', "</div>", '<a href="javascript:void(0);" title="上一页" class="slideBtn-prev"><i></i></a>', '<a href="javascript:void(0);" title="下一页" class="slideBtn-next"><i></i></a>', "</div>"].join("")
    }))
}(jQuery, _, M139),

//M139.UI.BottomTip
M139.core.namespace("M139.UI.BottomTip", Backbone.View.extend({
    initialize: function (e) {
        this.isClosed = !0, this.isOver = !1, this.timerClose = 0, this.taskList = [], this.createContainer(), this.initEvents()
    },
    createContainer: function () {
        "undefined" == typeof this.contentElement && (this.contentElement = document.createElement("div"), this.contentElement.style.cssText = "position:absolute;right:1px;bottom:0px;display:none;z-index:9999;", this.contentElement.id = "remindTip", document.body.appendChild(this.contentElement), $("#remindTip").on("mouseout", this.mouseOut), $("#remindTip").on("mousemove", this.mouseMove), $("#remindTip").on("click", this.clickHander))
    },
    initEvents: function () {
        this.on("show", this.show)
    },
    show: function () {
        function e() {
            if (i.isClosed) {
                i.contentElement.style.display = "none";
                window.clearInterval(p);
            } else {
                i.contentElement.style.display = "block",
                c = i.contentElement.offsetHeight,
                c + 1 >= d ? i.contentElement.style.bottom = (-c + d).toString() + "px" : (window.clearInterval(p), d = 0, i.isOver || (i.timerClose = setTimeout(i.close, i.timeOut)));
                var e = 30 * (c - d) / c;
                d += 2 > e ? 2 : e
            }
        }

        var t, i = $BTips.instance;
        if (t = arguments.length > 0 ? arguments[0] : i.taskList.splice(0, 1)[0]) {
            var a = t.content || "内容", s = t.title || "标题", o = t.width || 340, n = t.addNewClass || "", r = t.bhClose, l = t.bhShow;
            i.contentElement.innerHTML = i._getContent(s, a, o, r, n), i.isClosed = !1, i.onclick = t.onclick || function () {
            }, i.timeOut = t.timeout || 2e4, i.onCloseCall = t.onCloseCall;
            var c = 0, d = 0, p = window.setInterval(e, 30);
            l && top.BH(l)
        }
    },
    updateContent: function (e, t) {
        this.contentElement.innerHTML = this._getContent(e, t)
    },
    close: function () {
        var e = $BTips.instance.contentElement;
        e.style.bottom = (-e.offsetHeight).toString() + "px", e.style.display = "none", $BTips.instance.isClosed = !0, this.onCloseCall && this.onCloseCall(), $BTips.instance.trigger("show")
    },
    clickHander: function (e) {
        var t = e.target;
        do {
            if ("A" === t.tagName && "postShare" !== t.id) {
                $BTips.instance.isOver = !1, $BTips.instance.close();
                break
            }
            t = t.parentNode
        } while ("remindTip" !== t.id);
        $BTips.instance.onclick && $BTips.instance.onclick(e, $BTips.instance)
    },
    mouseMove: function () {
        0 != $BTips.instance.timerClose && ($BTips.instance.isOver = !0, clearTimeout($BTips.instance.timerClose))
    },
    mouseOut: function (e) {
        e.toElement && "IFRAME" !== e.toElement.tagName && "DIV" !== e.toElement.tagName || ($BTips.instance.isOver = !1, $BTips.instance.timerClose = setTimeout($BTips.instance.close, $BTips.instance.timeOut))
    },
    _getContent: function (e, t, i, a, s) {
        var o = '<div class="boxIframe {addNewClass}" style="width:{width}px;"><div class="boxIframeTitle"><h2><span>{title}</span></h2><a class="i_t_close" bh="{bhClose}" id="tipCloseLink" href="javascript:{href}void(0);"></a></div><div class="boxIframeMain"><div class="boxIframeText">{content}</div></div></div>';
        return top.$T.Utils.format(o, {
            width: i,
            addNewClass: s,
            title: e,
            content: t,
            bhClose: a,
            href: "top.$BTips.instance.close();"
        })
    }
})),

//UI.BottomTip
function (e, t, i) {
    e.extend(i.UI.BottomTip, {
        timer: !1,
        interval: 333,
        show: function (e) {
            $BTips.instance.show(e)
        },
        hide: function () {
            $BTips.instance && $BTips.instance.close()
        },
        updateContent: function (e, t) {
            $BTips.instance && $BTips.instance.updateContent(e, t)
        },
        addTask: function (e) {
            var t = this;
            $BTips.instance.taskList.push(e), t.timer || (t.timer = setInterval(function () {
                $BTips.instance.isClosed && $BTips.instance.show(), $BTips.instance.taskList.length || (clearInterval(t.timer), t.timer = !1)
            }, t.interval))
        },
        removeTask: function () {
            $BTips.instance.taskList.splice(0, 1)
        },
        instance: new i.UI.BottomTip
    }), window.$BTips = i.UI.BottomTip
}(jQuery, _, M139),

//M2012.UI.Tip.UmcUpgradeTip.View
function (e, t, i) {
    var a = i.View.ViewBase;
    i.namespace("M2012.UI.Tip.UmcUpgradeTip.View", a.extend({
        initialize: function (e) {
            return a.prototype.initialize.apply(this, arguments)
        },
        template: ['<div class="upload_tips_body">', '<p class="upload_tips_txtDescribe">恭喜您已获得<span class="orange">5</span>福分，升级互联网通行证领取吧，更有机会拿<span class="orange">100元话费</span>好礼</p>', '<p class="txt_uploadBtn">', '<em class="look_long_btn">', "<em>", '<a id="btnUpgrade" href="javascript:void(0)" style="height:35px;line-height:35px" class="look_mail">马上领取</a>', "</em>", "</em>", "</p>", "</div>"].join(""),
        initEvents: function () {
        },
        render: function () {
            var e = this;
            if (!top.UmcUpgradeTip) return $BTips.addTask({
                title: "玩邮箱账号，升安全达人",
                content: this.template,
                timeout: 2e4,
                onclick: function (t, i) {
                    t && t.target && "btnUpgrade" == t.target.id && e.upgrade()
                }
            }), e.initEvents(), e
        },
        upgrade: function () {
            var e = 1, t = { optype: e }, a = i.HttpRouter.getUrl("umc:rdirectCall").replace("/setting/", "/mw2/setting/");
            a = $Url.makeUrl(a, t), window.open(a)
        }
    }))
}(jQuery, _, M139),

//M2012.UI.Tip.ZoomTip.Model
function () {
    if (!($B.is.ie && $B.getVersion() < 8)) {
        var e = function () {
            return window.devicePixelRatio || 1
        }, t = function () {
            return { zoom: 1, devicePxPerCssPx: 1 }
        }, i = function () {
            var t = Math.round(screen.deviceXDPI / screen.logicalXDPI * 100) / 100;
            return { zoom: t, devicePxPerCssPx: t * e() }
        },
        a = function () {
            var t = 90 == Math.abs(window.orientation) ? screen.height : screen.width, i = t / window.innerWidth;
            return { zoom: i, devicePxPerCssPx: i * e() }
        }, s = function () {
            var t = function (e) {
                return e.replace(/;/g, " !important;")
            }, i = document.createElement("div");
            i.innerHTML = "1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>0", i.setAttribute("style", t("font: 100px/1em sans-serif; -webkit-text-size-adjust: none; height: auto; width: 1em; padding: 0; overflow: visible;"));
            var a = document.createElement("div");
            a.setAttribute("style", t("width:0; height:0; overflow:hidden; visibility:hidden; position: absolute;")), a.appendChild(i), document.body.appendChild(a);
            var s = 1e3 / i.clientHeight;
            return s = Math.round(100 * s) / 100, document.body.removeChild(a), { zoom: s, devicePxPerCssPx: s * e() }
        }, o = function () {
            var e = l("min--moz-device-pixel-ratio", "", 0, 10, 20, 1e-4);
            return e = Math.round(100 * e) / 100, { zoom: e, devicePxPerCssPx: e }
        },
        n = function () {
            return { zoom: o().zoom, devicePxPerCssPx: e() }
        }, r = function () {
            var t = window.outerWidth / window.innerWidth;
            return t = Math.round(100 * t) / 100, { zoom: t, devicePxPerCssPx: t * e() }
        }, l = function (e, t, i, a, s, o) {
            function n(i, a, s) {
                var l = (i + a) / 2;
                if (0 >= s || o > a - i) return l;
                var c = "(" + e + ":" + l + t + ")";
                return r(c).matches ? n(l, a, s - 1) : n(i, l, s - 1)
            }

            var r, l, c, d;
            window.matchMedia ? r = window.matchMedia : (l = document.getElementsByTagName("head")[0], c = document.createElement("style"), l.appendChild(c), d = document.createElement("div"), d.className = "mediaQueryBinarySearch", d.style.display = "none", document.body.appendChild(d), r = function (e) {
                c.sheet.insertRule("@media " + e + "{.mediaQueryBinarySearch {text-decoration: underline} }", 0);
                var t = "underline" == getComputedStyle(d, null).textDecoration;
                return c.sheet.deleteRule(0), { matches: t }
            });
            var p = n(i, a, s);
            return d && (l.removeChild(c), document.body.removeChild(d)), p
        }, c = function () {
            var e = t;
            return navigator.userAgent.indexOf("MSIE 6.") > -1 || (isNaN(screen.logicalXDPI) || isNaN(screen.systemXDPI) ? "ontouchstart" in window && "string" == typeof document.body.style.webkitTextSizeAdjust ? e = a : "string" == typeof document.body.style.webkitTextSizeAdjust ? e = s : navigator.userAgent.indexOf("Opera") >= 0 ? e = r : window.devicePixelRatio ? e = n : o().zoom > .001 && (e = o) : e = i), e
        }(),
        d = {
            zoom: function () {
                return c().zoom
            }, device: function () {
                return c().devicePxPerCssPx
            }
        };
        M139.core.namespace("M2012.UI.Tip.ZoomTip.Model", d)
    }
}(M139),

//M2012.UI.Tip.ZoomTip.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = "M139_ZoomTip_Not_Show_Again";
    i.namespace("M2012.UI.Tip.ZoomTip.View", s.extend({
        initialize: function (t) {
            var i = e(this.template);
            return this.setElement(i), s.prototype.initialize.apply(this, arguments)
        },
        template: ['<div id="divZoomTip">', '<div class="zoomTip_content">', '<div class="zoomTip_inner">', '<i style="background-image:url(', window.location.protocol + "//" + location.host + top.getRootPath(), '/images/global/global.png);background-position: -130px -150px;height: 24px;width: 24px;position: absolute;top: 20px;left: 10px;z-index: 20;"></i>', '<div class="zoomTip_txt">您的浏览器目前处于缩放状态，会导致邮箱显示不正常，您可以键盘按“ctrl+数字0”组合键恢复初始状态。', '<a id="aZoomNotShowAgain" style="color: #1E79C6;text-decoration: underline;" href="javascript:;">不再提示</a>', "</div>", "</div>", '<a id="aZoomTipClose" title="关闭提示" style="position: absolute;right: 10px;top: 10px;width: 14px;height: 14px;font-size: 14px;color: #E4AF4D;line-height: 14px;font-family: Tahoma;font-weight: bold;overflow: hidden;text-align: center;" href="javascript:;" onclick="return false;">×</a>', "</div>", "</div>"].join(""),
        style: ["<style>", "#divZoomTip{", "position: fixed;", "top: 0px;", "left: 0px;", "height: 60px;", "width: 99.9%;", "z-index: 10240;", "overflow: hidden;", "}", "#divZoomTip .zoomTip_content {", "width: 100%;", ",position: relative;", "zoom: 1;", "background: #FFF2D1;", "border-bottom: 1px solid #E9C58C;", "}", "#divZoomTip .zoomTip_inner {", "width: 960px;", "height: 60px;", "margin: 0 auto;", "position: relative;", "zoom: 1;", "color: #555;", "}", "#divZoomTip .zoomTip_txt {", "margin-left: 35px;", "font-size: 14px;", 'font-family: "Microsoft Yahei","9ED1F53";', "padding-top: 22px;", "color: #984B12;", "line-height: 18px;", "height: 18px;", "}", "</style>"].join(""),
        initEvents: function () {
            var e = this;
            a(window).bind("resize", function () {
                try {
                    1 == M2012.UI.Tip.ZoomTip.Model.zoom() ? e.$el.hide() : e.$el.show()
                } catch (t) {
                }
            }), this.$el.find("#aZoomTipClose").click(function () {
                e.close()
            }), this.$el.find("#aZoomNotShowAgain").click(function () {
                e.close(!0)
            })
        },
        render: function () {
            return a(this.style).appendTo(document.body), this.$el.appendTo(document.body), this.initEvents(), this
        },
        close: function (e) {
            this.$el.remove(), e && M2012.UI.Tip.ZoomTip.flagNotShowAgain()
        }
    })), e.extend(M2012.UI.Tip.ZoomTip, {
        isShow: !1, watchZoom: function () {
            function e() {
                var e = M2012.UI.Tip.ZoomTip.Model.zoom();
                return /^\d+\.\d$/.test(e) ? (t(), !0) : void 0
            }

            function t() {
                M2012.UI.Tip.ZoomTip.isShow || ((new M2012.UI.Tip.ZoomTip.View).render(), M2012.UI.Tip.ZoomTip.isShow = !0)
            }

            $B.is.ie && $B.getVersion() < 8 || this.isNotShowAgain() || e() || a(window).bind("resize", function () {
                e()
            })
        }, isNotShowAgain: function () {
            var e = !1;
            try {
                e = !!localStorage.getItem(o)
            } catch (t) {
            }
            return e
        }, flagNotShowAgain: function () {
            try {
                localStorage.setItem(o, "1")
            } catch (e) {
            }
        }
    })
}(jQuery, _, M139),

//扩展window对象
function (e) {
    function t() {
        if (0 != p.length) {
            var e = n();
            e.src = c + "?rnd=" + Math.random(), clearTimeout(r), r = setTimeout(s, 5e3)
        }
    }

    function i() {
        (l.complete || l.width) && (d = 0, clearTimeout(r), o(!0), window.console && console.log("net check onload"))
    }

    function a() {
        d++, d >= 2 ? o(!1) : t(), window.console && console.log("net check onerror")
    }

    function s() {
        a()
    }

    function o(e) {
        for (; p.length > 0;) {
            var t = p.shift();
            try {
                t(e)
            } catch (i) {
            }
        }
        d = 0
    }

    function n() {
        return l || (l = new Image, l.id = "imgHealthCheck", l.onload = i, l.onerror = a), l
    }

    var r, l, c = top.getRootPath() + "/images/global/loading.gif", d = 0, p = [];
    e.NetHealthCheck = {
        check: function (e) {
            p.push(e), 1 == p.length && t()
        }
    }
}(window),

//M2012.UI.Tip.NetHealthCheck
function (e) {
    e.namespace("M2012.UI.Tip.NetHealthCheck", {
        check: function () {
            NetHealthCheck.check(function (e) {
                e || $App.trigger("offline")
            })
        }
    })
}(M139),

//M2012.UI.Picker.TaskCalendar
function (e, t, i) {
    var a = e, s = i.View.ViewBase, o = {
        Date: {
            parse: function (e) {
                if (/^\d{10}$/.test(e)) return new Date(1e3 * e);
                if (/^\d{13}$/.test(e)) return new Date(1 * e);
                e = o.Text.trim(e);
                var t = /^(\d{4})[-\/](\d{1,2})[-\/](\d{1,2})$/, i = e.match(t);
                if (i) {
                    var a = i[1], s = parseInt(i[2] - 1, 10), n = parseInt(i[3], 10);
                    parseInt(i[4], 10);
                    return new Date(a, s, n)
                }
            }, formatToString: function (e, t) {
                var i = /yyyy|yy|M+|d+|S|w/g;
                return t = t.replace(i, function (t) {
                    var i;
                    switch (t) {
                        case "yyyy":
                            i = e.getFullYear();
                            break;
                        case "yy":
                            i = e.getFullYear().toString().substring(2);
                            break;
                        case "M":
                        case "MM":
                            i = e.getMonth() + 1;
                            break;
                        case "dd":
                        case "d":
                            i = e.getDate();
                            break;
                        default:
                            i = ""
                    }
                    return 2 == t.length && 1 == i.toString().length && (i = "0" + i), i
                })
            }
        }, Text: {
            format: function (e, t) {
                var i;
                return i = a.isArray(t) ? /\{([\d]+)\}/g : /\{([\w]+)\}/g, e.replace(i, function (e, i) {
                    var a = t[i];
                    return void 0 !== a ? a : ""
                })
            }, trim: function (e) {
                for (var e = e, e = e.replace(/^\s\s*/, ""), t = /\s/, i = e.length; t.test(e.charAt(--i)) ;);
                return e.slice(0, i + 1)
            }
        }
    };
    i.namespace("M2012.UI.Picker.TaskCalendar", s.extend({
        initialize: function (e) {
            return this.options = e || {}, this.callback = e.callback, this.stopPassDate = e.stopPassDate, this.cid = Math.floor(1e9 * Math.random()), this.calArea = a(o.Text.format(this.template, { cid: this.cid })), e.value ? this.value = e.value : this.value = new Date, this.setElement(this.calArea), e.container && this.render(), this.initEvent(), s.prototype.initialize.apply(this, arguments)
        },
        name: "M2012.UI.Picker.TaskCalendar",
        template: ['<div id="calendarT_{cid}" class="calendarMod calendarMode" style="position: absolute;z-index:5008">', '<div class="calendarMod_top">', '<a href="javascript:;" class="i_icoPre preMonth"></a>', '<a href="javascript:;" class="calendarMod_topTime"></a>', '<a href="javascript:;" class="i_icoNext nextMonth"></a>', '<ul id="ulSelectYear"  class="selectList hide" style="width:50px;top:36px;left:71px;z-index:1000;"></ul>', '<ul id="ulSelectMonth" class="selectList hide" style="width:44px;top:36px;left:129px;z-index:1000;"></ul>', "</div>", '<table border="0" cellspacing="1" cellpadding="0" class="calendarModTable" style="background:#ffffff;">', "<thead>", "<tr>", "<th>日</th>", "<th>一</th>", "<th>二</th>", "<th>三</th>", "<th>四</th>", "<th>五</th>", "<th>六</th>", "</tr>", "</thead>", "<tbody>", "</tbody>", "</table>", "</div>"].join(""),
        events: {
            "click a.preMonth": "onPrevMonthClick",
            "click a.nextMonth": "onNextMonthClick",
            "click td": "onDateClick"
        },
        render: function () {
            return this.updateContent(this.value), this.render = function () {
                return this
            }, this.$el.css("top", a("#task_icreate").parent().offset().top - 100 + "px"), this.$el.css("left", "-204px"), this.$el.appendTo(a("#task_icreate").parent()), s.prototype.render.apply(this, arguments)
        },
        show: function () {
            this.calArea && this.calArea.css("display", "block")
        },
        hide: function () {
            this.calArea && this.calArea.css("display", "none")
        },
        initEvent: function () {
            var e = this;
            a(document).on("mousedown", function (t) {
                0 == a(t.target).closest("#calendarT_" + e.cid).length && e.calArea.css("display", "none")
            })
        },
        onDocumentClick: function (e) {
        },
        isMinMonth: function () {
            var e = (new Date).getFullYear() - 1, t = 1, i = new Date(this.curValue).getFullYear(), a = new Date(this.curValue).getMonth() + 1;
            return e === i && t === a
        },
        isMaxMonth: function () {
            var e = (new Date).getFullYear() + 1, t = 12, i = new Date(this.curValue).getFullYear(), a = new Date(this.curValue).getMonth() + 1;
            return e === i && t === a
        },
        showMonthIcon: function () {
            this.isMaxMonth() ? a(".nextMonth").addClass("i_icoNextB").removeClass("i_icoNext") : this.isMinMonth() ? a(".preMonth").removeClass("i_icoPre").addClass("i_icoPreB") : (a(".preMonth").removeClass("i_icoPreB").addClass("i_icoPre"), a(".nextMonth").removeClass("i_icoNextB").addClass("i_icoNext"))
        },
        onPrevMonthClick: function () {
            this.isMinMonth() || (this.curValue.setDate(0), this.updateContent(this.curValue))
        },
        onNextMonthClick: function () {
            this.isMaxMonth() || (this.curValue.setDate(32), this.updateContent(this.curValue))
        },
        updateContent: function (e) {
            var t = '<em class="calendarYear">' + e.format("yyyy") + "</em>年", i = '<em class="calendarMonth">' + e.format("MM") + "</em>月";
            this.$("tbody").html(this.getCalendarHTML(e));
            var a = this.$("tbody").children("tr").length;
            if (5 == a) {
                var s = 210 / a;
                this.$("tbody").children("tr").height(s)
            }
            if (4 == a) {
                var s = 52;
                this.$("tbody").children("tr").height(s), this.$("tbody").children("tr").last().height(54)
            }
            this.$(".calendarMod_topTime").html(t + i), this.curValue = new Date(e), this.selectYearAndMonth(e), this.showMonthIcon(), this.todaySelectedCell(e), this.focusSelectedCell(), this.callback && this.callback(e)
        },
        selectYearAndMonth: function () {
            for (var e = "", t = "", i = new Date, a = i.getFullYear(), s = 12; s >= 1; s--) e += "<li>" + s + "</li>";
            for (var s = a + 1; s >= a - 1; s--) t += "<li>" + s + "</li>";
            this.$("#ulSelectMonth").html(e), this.$("#ulSelectYear").html(t)
        },
        focusAndSetDate: function (e) {
            var t = this.curValue.getMonth(), i = this.curValue.getFullYear(), a = e.getMonth(), s = e.getFullYear(), o = e.getDate();
            if (s == i && a == t) this.focusSelectedCell(e); else {
                var n = new Date(this.curValue);
                this.value = e, n.setYear(o), n.setMonth(o), n.setDate(o), this.updateContent(e)
            }
        },
        focusSelectedCell: function (e) {
            var t = "";
            t = e ? e.getDate() : this.value.getDate();
            var i = this.value.getMonth() + 1, s = this.value.getFullYear(), o = parseInt(a("em.calendarMonth:last").text()), n = a("em.calendarYear:last").text(), r = this.$("td[rel='" + t + "']").find("span");
            isNaN(o) && (o = i, n = s), this.$("td[rel]").find("span").removeClass("calendarMod_focus"), i == o && s == n && r.addClass("calendarMod_focus"), r.hasClass("calendarMod_on") && r.next().remove(), this.$("td[rel]").find(".calendarMod_on").each(function () {
                var e = a(this).parent().attr("rel");
                a(this).hasClass("calendarMod_on") && t != e && (a(this).parent().find("i").remove(), a(this).after("<i></i>"))
            })
        },
        todaySelectedCell: function () {
            var e = (new Date).getDate(), t = (new Date).getMonth() + 1, i = (new Date).getFullYear(), s = parseInt(a("em.calendarMonth").text()), o = a("em.calendarYear").text();
            isNaN(s) && (s = t, o = i), t == s && i == o && this.$("td[rel='" + e + "']").find("span").addClass("calendarMod_today")
        },
        calendarActionCell: function (e) {
            var t = "<span>" + e + "</span><i></i>";
            this.$("td[rel='" + e + "']").html(t).attr("action", "true"), this.$("td[rel='" + e + "']").find("span").addClass("calendarMod_on")
        },
        onDateClick: function (e) {
            var t = e.target, i = a(t).text();
            if (/\d+/.test(i)) {
                if (a(t).hasClass("calendarMod_on")) {
                    var s = parseInt(a("em.calendarMonth:last").text()), o = a("em.calendarYear:last").text();
                    top.appView.searchSingleDayTaskmail({ milSecond: new Date(Number(o), s - 1, i).getTime() }), this.hide();
                    var n = s + "月" + i + "日";
                    o != (new Date).getFullYear() ? top.$App.setTitle(o + "年" + n) : top.$App.setTitle(n)
                }
                var r = new Date(this.curValue);
                r.setDate(i), this.value = r, this.focusSelectedCell(), this.onSelect(r)
            }
        },
        onSelect: function (e, t) {
            void 0 === e && (this.getValue ? e = this.getValue() : this.getSelectedValue && (e = this.getSelectedValue())), this.trigger("select", {
                value: e,
                index: t
            })
        },
        compareMonth: function (e, t) {
            return e.getFullYear() > t.getFullYear() ? 1 : e.getFullYear() < t.getFullYear() ? -1 : e.getMonth() - t.getMonth()
        },
        isCurrentMonth: function (e) {
            var t = new Date;
            return e.getMonth() == t.getMonth() && e.getFullYear() == t.getFullYear()
        },
        getCalendarHTML: function (e) {
            var t = i.Date.getDaysOfMonth(e), a = i.Date.getFirstWeekDayOfMonth(e), s = [], o = t + a;
            this.stopPassDate, (new Date).getDate();
            s.push("<tr>");
            for (var n = 1, r = 1; o >= n; n++, r++) n > a && t >= r ? s.push("<td rel='" + r + "'><span>" + r + "</span></td>") : (s.push("<td></td>"), r--), n % 7 != 0 && n != o || s.push("</tr>");
            return s.join("")
        }
    })), e.extend(M2012.UI.Picker.TaskCalendar, {
        create: function (e) {
            var t = new M2012.UI.Picker.TaskCalendar(e);
            return t
        }
    })
}(jQuery, _, M139),

//扩展M139.PUtils
function (e, t, i) {
    i.PUtils = {
        mobileMail: "", getImageSrc: function (e) {
            var t = "{0}/addr/apiserver/httpimgload.ashx?sid={1}&path={2}";
            if (e) {
                var i = top.$T.Utils.format(t, [top.getDomain("webmail"), top.$App.getSid(), encodeURIComponent(e)]);
                return top.M139.HttpRouter.getNoProxyUrl(i)
            }
            return top.getRootPath() + "/images/ad/face.jpg"
        }, userInfo: {}, getUserinfo: function (e) {
            top.M139.Timing.waitForReady('top.$App.getModel("contacts")', function () {
                var t = top.$App.getModel("contacts");
                t.getUserInfoWaiting || t.getUserInfo(null, function (t) {
                    if (t && "S_OK" === t.code) {
                        var i = t["var"] || {};
                        i.headImg = top.getDomain("resource") + i.ImageUrl;
                        var a = "", s = top.$User.getAliasName();
                        a = i.AddrFirstName ? i.AddrFirstName : s ? top.$Email.getAccount(s) : top.$User.getShortUid(), i.UserNumber = i.UserNumber.replace(/^86/, ""), i.userName = a, e && e(i)
                    }
                })
            })
        }, isHasHead: function (e) {
            return !e.match("face.jpg")
        }, iframetransparent: function () {
            top.$App.get("birthWishFrame").$("iframe").attr("allowtransparency", "true"), $("div.boxIframeMain").css({
                background: "none",
                border: "none"
            })
        }, destroyEl: function (e) {
            e && (e.innerHTML = "")
        }, _creatElement: function (e, t) {
            var i = document.getElementById(t) ? document.getElementById(t) : document.createElement(e);
            return i.id = t, i.style.display = "none", i
        }, htmlEncode: function (e) {
            var t = this._creatElement("div", "htmlCode");
            t.appendChild(document.createTextNode(e));
            var i = t.innerHTML;
            return this.destroyEl(t), i
        }, htmlDecode: function (e) {
            var t = this._creatElement("div", "htmlCode");
            t.innerHTML = e;
            var i = t.innerText || t.textContent;
            return this.destroyEl(t), i
        }, getEmail: function (e) {
            return [$T.Email.getName(e), $T.Email.getEmail(e)]
        }, getRandomByWeigth: function (e) {
            for (var t = [], i = 0, a = 0; a < e.length; a++) e[a].s && (i += e[a].weight, t.push(ads[a]));
            for (var s = Math.floor(Math.random() * i), o = 0, n = null, r = 0; r < t.length; r++) if (o += t[r].weight, o > s) {
                n = t[r];
                break
            }
            return n
        }, isCurTInRangeTime: function (e) {
            var t = e[0], i = e[1], a = !1, s = top.$Date.getServerTime();
            return t instanceof Date && i instanceof Date && s >= t && i > s && (a = !0), a
        }, isContainNum: function (e, t) {
            var i = e.join(",");
            return !!i.match(t)
        }, fixTime2Str: function (e) {
            return e = "0" + e, e = 3 == e.length ? e.substr(1) : e
        }, setCharVal: function (e, t, i) {
            e = e || "";
            var a = e.length, s = t - a, o = e.split("");
            if (s > 1) for (var n = 0; s > n; n++) o[a + n] = 0;
            return o[t - 1] = i, o.join("")
        }, dateFormat: function (e) {
            var t, i = /^\s*(\d{4})-(\d\d)-(\d\d)( (\d{2}):(\d{2}):(\d{2}))?\s*$/, a = new Date(NaN), s = i.exec(e);
            return s && (t = +s[2], a.setFullYear(s[1], t - 1, s[3]), s[4] && (a = new Date(s[1], t - 1, s[3], s[5], s[6], s[7])), t != a.getMonth() + 1 && a.setTime(NaN)), a
        }, getLeftStr: function (e, t, i, a) {
            i = i || !0;
            for (var s = e, o = 0, n = 0; n < e.length; n++) {
                if (o += e.charCodeAt(n) > 255 ? 2 : 1, o > t) {
                    s = e.substring(0, n);
                    break
                }
                if (o == t) {
                    s = e.substring(0, n + 1);
                    break
                }
            }
            return i && s != e && (s += a ? a : "..."), s
        }, getGNameByMobile: function (e) {
            var t = "", i = top.$App.getModel("contacts").getContactsByMobile(e) || [], a = $.map(i, function (e) {
                return $.map($.grep([], function (t) {
                    return t.SerialId == e.SerialId
                }), function (e) {
                    return top.$App.getModel("contacts").getGroupById(e.GroupId).GroupName
                })
            });
            return a[0] && (t = top.$T.Utils.getBytes(a[0]) > 20 ? a[0].substring(0, 10) + "..." : a[0]), t
        }, sendMail: function (e) {
            var t = {
                id: e.id || "",
                mid: e.mid || "",
                messageId: "",
                account: e.account ? e.account : top.$User.getDefaultSender() || top.$PUtils.mobileMail,
                to: e.email,
                cc: "",
                bcc: "",
                showOneRcpt: e.showOneRcpt || 0,
                isHtml: 1,
                subject: e.subject,
                content: e.content,
                priority: 3,
                signatureId: 0,
                stationeryId: 0,
                saveSentCopy: 1,
                requestReadReceipt: 0,
                inlineResources: 1,
                cloudAttach: e.cloudAttach || 0,
                scheduleDate: e.scheduleDate || 0,
                normalizeRfc822: 0,
                attachments: e.attachments || []
            };
            e.templateId && (t = $.extend(t, { templateId: e.templateId })), e.atRemind && (t = $.extend(t, { atRemind: e.atRemind })), e.filterSendid && (t = $.extend(t, { filterSendid: e.filterSendid })), top.$PUtils._sendMail(t, e.callback || function () {
            }, e.action, e)
        }, _sendMail: function (e, t, i, a) {
            var s = { attrs: e, action: i || "deliver", replyNotify: 0, returnInfo: 1 };
            a.sendId && (s = $.extend(s, { sendId: a.sendId })), top.M139.RichMail.API.call("mbox:compose&comefrom=5&categroyId=103000000", s, function (e) {
                t && t(e)
            })
        }, getContact: function (e, t) {
            t = t || function (e) {
                return e.match("10086") ? !1 : e != top.$User.getDefaultSender() && !e.match(this.mobileMail)
            };
            var i = [], a = top.$App.getConfig("ContactData") || {}, s = a.closeContacts || [], o = a.lastestContacts || [], n = a.contacts || [], r = s.concat().concat(o.concat()).concat(n.concat());
            e = e || r.length;
            for (var l = null, c = 0; e > c; c++) l = r[c], l.name && l.addr && this._distinctUser(l) && t.apply(null, l.addr) && i.push(l);
            return i
        }, _distinctUser: function (e, t, i) {
            for (var a = i.length, s = !0, o = 0; a > o; o++) {
                if (i[o].name == e) {
                    add.match("@" + top.coremailDomain) && (i[o].addr = add), s = !1;
                    break
                }
                if (i[o].addr == add) {
                    s = !1;
                    break
                }
            }
            return s
        }, getFlashHtml: function (e, t, i) {
            var a = "", s = e.replace(/\.swf/, "");
            return a = $.browser.msie ? "<object id='" + s + "' name='" + s + "' wmode='transparent'  classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'codebase='http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0'width='" + t + "' height='" + i + "' ><param name='movie' value='" + top.wmsvrPath2 + "/" + e + "'><param name='wmode' value='transparent'><param name='AllowScriptAccess' value='always'/><param name='quality' value='high'></object>" : "<embed name='" + s + "' id='" + s + "' wmode='transparent' src='" + top.wmsvrPath2 + "/" + e + "' quality='high' pluginspage='http://www.macromedia.com/go/getflashplayer' type='application/x-shockwave-flash' width='" + t + "px' height='" + i + "px'  allowscriptaccess='always'></embed>"
        }, show: function (e, t) {
            "updateHead" == e && top.$App.show("account")
        }, getCurTabWin: function (e) {
            var t = e ? e : top.$App.getCurrentTab().view.readmailcontentview.getEl().replace(/^#mailContent/, "mid");
            return top.$("iframe[name='" + t + "']")[0].contentWindow
        }, setIframeScrollTop: function (e, t) {
            var i;
            t = t || window, e && (i = e.offset().top, t.scroll(0, i))
        }, renderSchdedule: function (e, t) {
            var a = new i.PageApplication({ name: "popSchedule_utils" }), s = window.location.protocol + "//" + top.window.location.host + top.getRootPath() + "/html/calendar_reminder/";
            s += "pop_schedule.html?&sid" + top.sid, s = a.inputDataToUrl(s, { data: e, type: 1 });
            var o = top.$Msg.open({ dialogTitle: "添加日程提醒", url: s, width: 650, height: 520 });
            top.$App.set("scheduleIFrame", o), top.$App.set("scheduleIFrame_options", t)
        }, createStyle: function (e, t) {
            if (e) {
                var i = t ? t.document : document, a = "<style type='text/css'>" + e + "</style>";
                $(a).appendTo(i.body)
            }
        }, showCheck: function (e) {
            top.$App.show("welcome"), setTimeout(function () {
                top.document.getElementById("welcome").contentWindow.CheckIn && top.document.getElementById("welcome").contentWindow.CheckIn.showface()
            }, e || 200)
        }, date: function (e) {
            function t(e) {
                function t(e, t) {
                    var i = new Date(31556925974.7 * (e - 1900) + 6e4 * r[t] + Date.UTC(1900, 0, 6, 2, 5));
                    return i.getUTCDate()
                }

                function u(e) {
                    var t, a = 348;
                    for (t = 32768; t > 8; t >>= 1) a += i[e - 1900] & t ? 1 : 0;
                    return a + f(e)
                }

                function h(e) {
                    return a.charAt(e % 10) + s.charAt(e % 12)
                }

                function f(e) {
                    return g(e) ? 65536 & i[e - 1900] ? 30 : 29 : 0
                }

                function g(e) {
                    return 15 & i[e - 1900]
                }

                function v(e, t) {
                    return i[e - 1900] & 65536 >> t ? 30 : 29
                }

                function b(e) {
                    var t, i = 0, a = 0, s = new Date(1900, 0, 31), o = (e - s) / 864e5;
                    for (this.dayCyl = o + 40, this.monCyl = 14, t = 1900; 2050 > t && o > 0; t++) a = u(t), o -= a, this.monCyl += 12;
                    for (0 > o && (o += a, t--, this.monCyl -= 12), this.year = t, this.yearCyl = t - 1864, i = g(t), this.isLeap = !1, t = 1; 13 > t && o > 0; t++) i > 0 && t == i + 1 && 0 == this.isLeap ? (--t, this.isLeap = !0, a = f(this.year)) : a = v(this.year, t), 1 == this.isLeap && t == i + 1 && (this.isLeap = !1), o -= a, 0 == this.isLeap && this.monCyl++;
                    0 == o && i > 0 && t == i + 1 && (this.isLeap ? this.isLeap = !1 : (this.isLeap = !0, --t, --this.monCyl)), 0 > o && (o += a, --t, --this.monCyl), this.month = t, this.day = o + 1
                }

                function y(e) {
                    return 10 > e ? "0" + e : e
                }

                function w(e, t) {
                    var i = e;
                    return t.replace(/dd?d?d?|MM?M?M?|yy?y?y?/g, function (e) {
                        switch (e) {
                            case "yyyy":
                                var t = "000" + i.getFullYear();
                                return t.substring(t.length - 4);
                            case "dd":
                                return y(i.getDate());
                            case "d":
                                return i.getDate().toString();
                            case "MM":
                                return y(i.getMonth() + 1);
                            case "M":
                                return i.getMonth() + 1
                        }
                    })
                }

                function _(e, t) {
                    var i;
                    switch (t) {
                        case 10:
                            i = "初十";
                            break;
                        case 20:
                            i = "二十";
                            break;
                        case 30:
                            i = "三十";
                            break;
                        default:
                            i = d.charAt(Math.floor(t / 10)), i += l.charAt(t % 10)
                    }
                    return i
                }

                this.date = e, this.isToday = !1, this.isRestDay = !1, this.solarYear = w(e, "yyyy"), this.solarMonth = w(e, "M"), this.solarDate = w(e, "d"), this.solarWeekDay = e.getDay(), this.solarWeekDayInChinese = "星期" + l.charAt(this.solarWeekDay);
                var M = new b(e);
                this.lunarYear = M.year, this.shengxiao = o.charAt((this.lunarYear - 4) % 12), this.lunarMonth = M.month, this.lunarIsLeapMonth = M.isLeap, this.lunarMonthInChinese = this.lunarIsLeapMonth ? "闰" + c[M.month - 1] : c[M.month - 1], this.lunarDate = M.day, this.showInLunar = this.lunarDateInChinese = _(this.lunarMonth, this.lunarDate), 1 == this.lunarDate && (this.showInLunar = this.lunarMonthInChinese + "月"), this.ganzhiYear = h(M.yearCyl), this.ganzhiMonth = h(M.monCyl), this.ganzhiDate = h(M.dayCyl++), this.jieqi = "", this.restDays = 0, t(this.solarYear, 2 * (this.solarMonth - 1)) == w(e, "d") && (this.showInLunar = this.jieqi = n[2 * (this.solarMonth - 1)]), t(this.solarYear, 2 * (this.solarMonth - 1) + 1) == w(e, "d") && (this.showInLunar = this.jieqi = n[2 * (this.solarMonth - 1) + 1]), "清明" == this.showInLunar && (this.showInLunar = "清明节", this.restDays = 1), this.solarFestival = p[w(e, "MM") + w(e, "dd")], "undefined" == typeof this.solarFestival ? this.solarFestival = "" : /\*(\d)/.test(this.solarFestival) && (this.restDays = parseInt(RegExp.$1), this.solarFestival = this.solarFestival.replace(/\*\d/, "")), this.showInLunar = "" == this.solarFestival ? this.showInLunar : this.solarFestival, this.lunarFestival = m[this.lunarIsLeapMonth ? "00" : y(this.lunarMonth) + y(this.lunarDate)], "undefined" == typeof this.lunarFestival ? this.lunarFestival = "" : /\*(\d)/.test(this.lunarFestival) && (this.restDays = this.restDays > parseInt(RegExp.$1) ? this.restDays : parseInt(RegExp.$1), this.lunarFestival = this.lunarFestival.replace(/\*\d/, "")), 12 == this.lunarMonth && this.lunarDate == v(this.lunarYear, 12) && (this.lunarFestival = m["0100"], this.restDays = 1), this.showInLunar = "" == this.lunarFestival ? this.showInLunar : this.lunarFestival, this.showInLunar = this.showInLunar.length > 4 ? this.showInLunar.substr(0, 2) + "..." : this.showInLunar
            }

            var i = [19416, 19168, 42352, 21717, 53856, 55632, 91476, 22176, 39632, 21970, 19168, 42422, 42192, 53840, 119381, 46400, 54944, 44450, 38320, 84343, 18800, 42160, 46261, 27216, 27968, 109396, 11104, 38256, 21234, 18800, 25958, 54432, 59984, 28309, 23248, 11104, 100067, 37600, 116951, 51536, 54432, 120998, 46416, 22176, 107956, 9680, 37584, 53938, 43344, 46423, 27808, 46416, 86869, 19872, 42448, 83315, 21200, 43432, 59728, 27296, 44710, 43856, 19296, 43748, 42352, 21088, 62051, 55632, 23383, 22176, 38608, 19925, 19152, 42192, 54484, 53840, 54616, 46400, 46496, 103846, 38320, 18864, 43380, 42160, 45690, 27216, 27968, 44870, 43872, 38256, 19189, 18800, 25776, 29859, 59984, 27480, 21952, 43872, 38613, 37600, 51552, 55636, 54432, 55888, 30034, 22176, 43959, 9680, 37584, 51893, 43344, 46240, 47780, 44368, 21977, 19360, 42416, 86390, 21168, 43312, 31060, 27296, 44368, 23378, 19296, 42726, 42208, 53856, 60005, 54576, 23200, 30371, 38608, 19415, 19152, 42192, 118966, 53840, 54560, 56645, 46496, 22224, 21938, 18864, 42359, 42160, 43600, 111189, 27936, 44448], a = "甲乙丙丁戊己庚辛壬癸", s = "子丑寅卯辰巳午未申酉戌亥", o = "鼠牛虎兔龙蛇马羊猴鸡狗猪", n = ["小寒", "大寒", "立春", "雨水", "惊蛰", "春分", "清明", "谷雨", "立夏", "小满", "芒种", "夏至", "小暑", "大暑", "立秋", "处暑", "白露", "秋分", "寒露", "霜降", "立冬", "小雪", "大雪", "冬至"], r = [0, 21208, 43467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240693, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758], l = "日一二三四五六七八九十", c = ["正", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "腊"], d = "初十廿卅", p = {
                "0101": "*1元旦节",
                "0214": "情人节",
                "0305": "学雷锋纪念日",
                "0308": "妇女节",
                "0312": "植树节",
                "0315": "消费者权益日",
                "0401": "愚人节",
                "0501": "*1劳动节",
                "0504": "青年节",
                "0601": "国际儿童节",
                "0701": "中国共产党诞辰",
                "0801": "建军节",
                "0910": "中国教师节",
                1001: "*3国庆节",
                1224: "平安夜",
                1225: "圣诞节"
            }, m = {
                "0101": "*2春节",
                "0115": "元宵节",
                "0505": "*1端午节",
                "0815": "*1中秋节",
                "0909": "重阳节",
                1208: "腊八节",
                "0100": "除夕"
            };
            return new t(e)
        }
    }, window.$PUtils = i.PUtils, top.M139.Timing.waitForReady('top.$App.getConfig("UserData")', function () {
        window.$PUtils.mobileMail = top.$User.getShortUid() + "@" + top.coremailDomain, window.$PUtils.getUserinfo(function (e) {
            $PUtils.userInfo = e, $PUtils.userInfo.aliasName = $User.getAliasName().replace(/@139\.com$/, "")
        })
    })
}($, _, M139);

//$Evocation
var $Evocation = {
    tagInMsgIcon: !1,
    tagInMsgBox: !1,
    create: function (e) {
        if (top.SiteConfig.evocation) {
            if ("string" == typeof e) {
                var e = e || "";
                e = e.split("&");
                for (var t = {}, i = 0; i < e.length; i++) t[e[i].split("=")[0]] = e[i].split("=").slice(1).join("=")
            } else if ("object" == typeof e) var t = e;
            if (document.domain = window.location.host.match(/([^.]+\.[^.:]+):?\d*$/)[1], !top.EvocationPopWindow) return void top.M139.core.utilCreateScriptTag({
                src: top.getRootPath() + "/js/packs/evocation.pack.js",
                charset: "utf-8"
            }, function () {
                top.EvocationPopWindow = new top.Evocation.Main.View(t), e.callback && e.callback(top.EvocationPopWindow)
            });
            top.EvocationPopWindow = new top.Evocation.Main.View(t), e.callback && e.callback(top.EvocationPopWindow)
        }
    },
    changeSkin: function (e) {
        top.M139.core.utilCreateScriptTag({
            src: top.getRootPath() + "/js/packs/m2012.changeskin.pack.js",
            charset: "utf-8"
        }, function () {
            setTimeout(function () {
                top.$App.trigger("EvochangeSkin", { skinName: e })
            }, 500)
        })
    },
    openAndSubject: function (e) {
        e += "", top.$App.show("googSubscription"), top.$App.show("mpostOnlineService", null, {
            key: e,
            inputData: { columnId: e }
        });
        var t = top.getDomain("image") + "subscribe/inner/bis/subscribe?sid=" + top.sid, i = "{comeFrom:503,columnId:" + e + "}";
        top.M139.RichMail.API.call(t, i)
    },
    goMailhallUrl: function (e) {
        top.$App.show("mpostOnlineService", null, {
            title: "邮箱营业厅",
            key: "38159",
            inputData: { urlParams: e, columnId: "38159", columnName: "邮箱营业厅" }
        })
    },
    showMessageBox: function () {
        var e = new M2012.RemindboxView;
        e.render()
    },
    msgBoxHot: {
        show: function () {
            var e = $Url.queryString("cguid");
            $("#msgBoxComing").show(), $Cookie.set({ name: "msg", value: e + "|s" })
        },
        hide: function () {
            var e = $Url.queryString("cguid");
            $("#msgBoxComing").hide(), $Cookie.set({ name: "msg", value: e + "|h" })
        },
        setStatus: function () {
            var e = this, t = $Url.queryString("cguid"), i = $Cookie.get("msg");
            if (i && i.split("|")[0] == t) {
                var a = i.split("|")[1];
                switch (a) {
                    case "s":
                        e.show();
                        break;
                    case "h":
                        e.hide()
                }
            }
        }
    }
},

//$RechargeRemind
$RechargeRemind = {
    create: function (e) {
        if ("string" == typeof e) {
            var e = e || "";
            e = e.split("&");
            for (var t = {}, i = 0; i < e.length; i++) t[e[i].split("=")[0]] = e[i].split("=")[1]
        } else if ("object" == typeof e) var t = e;
        return document.domain = window.location.host.match(/([^.]+\.[^.:]+):?\d*$/)[1], top.M2012.UI.rechargeRemind ? void new top.M2012.UI.rechargeRemind.View(t) : void top.M139.core.utilCreateScriptTag({
            src: top.getRootPath() + "/js/packs/recharge_remind.pack.js",
            charset: "utf-8"
        }, function () {
            new top.M2012.UI.rechargeRemind.View(t)
        })
    }
},

//ProductFuns
ProductFuns = {
    isNeedDisplay: function () {
        var e = !1, t = top.SiteConfig.lazyCard || [], i = top.$App && top.$App.query && top.$App.query.testServerTime ? top.$App.query.testServerTime : !1, a = new Date(M139.Date.getServerTime());
        i && (a = top.$Date.parse(i));
        var s = top.$App.getCustomAttrs("lazyCard") || "";
        s = s.replace(/\/>|\s*/g, "");
        var o = $PUtils.dateFormat(t.begin), n = $PUtils.dateFormat(t.end), r = t.key;
        return a >= o && n >= a && s.indexOf(r) < 0 && (e = !0), { isNeedDisplay: e, key: r }
    },
    loadLazyCard: function (e) {
        var t = this;
        e ? t.lazyCardResource(e, function (e) {
            t.popLazyCard(e)
        }) : top.M139.Timing.waitForReady('$App.getConfig("UserAttrs")', function () {
            var e = t.isNeedDisplay(), i = e.isNeedDisplay, a = e.key, s = t.lazyCardContact(), o = "1" == top.UserData.vipType;
            i && a && s && o && top.$App.setCustomAttrs("lazyCard", a, function (e) {
                "S_OK" == e.code && t.lazyCardResource(a, function (e) {
                    t.popLazyCard(e)
                })
            })
        })
    },
    lazyCardContact: function () {
        var e = top.$App.getModel("contacts");
        return !!(e && e.attributes && e.attributes.data && e.attributes.data.contacts && e.attributes.data.contacts.length)
    },
    lazyCardResource: function (e, t) {
        var i = {
            cj: { title: "春节", param: [2, 1, 7, 1] },
            yx: { title: "元宵", param: [2, 1, 8, 1] },
            yr: { title: "愚人", param: [2, 1, 9, 1] },
            dw: { title: "中秋", param: [2, 1, 27, 1] },
            zq: { title: "中秋", param: [2, 1, 27, 1] },
            nothing: {}
        }, a = e.slice(-2);
        if (i[a]) {
            var s = i[a].param, o = "/mw2/card/s?func=card:cardPageData&sid=" + top.sid, n = ["<object>", '<int name="type">0</int>', '<int name="newHot">2</int>', '<string name="topGroupId">1</string>', '<string name="groupId">' + s[2] + "</string>", '<int name="pageIndex">1</int>', '<int name="pageSize">100</int>', "</object>"].join("");
            top.M139.RichMail.API.call(o, n, function (e) {
                if (e.responseData && "S_OK" == e.responseData.code) {
                    var s = e.responseData["var"].data.retData;
                    if (s.length) {
                        top.$lazycardList = { type: i[a].title, dataList: s };
                        var o = { type: a };
                        t(o)
                    }
                }
            })
        }
    },
    popLazyCard: function (e) {
        top.selfBir_mask = top.M2012.UI.DialogBase.showMask();
        var t = 680, i = 550, a = window.location.protocol + "//" + top.window.location.host + top.getRootPath() + "/html/lazyCard/" + e.type + "/lazyCard.html", s = ["<div id='lazycardWindow' style='width:" + t + "px; height:" + i + "px;overflow:hidden; z-index:999; position:absolute;left:50%;top:50%;margin-top: -" + i / 2 + "px;margin-left: -" + t / 2 + "px;'>", "<iframe allowTransparency='true' style='width:" + t + "px; height:" + i + "px; border:none;' frameborder='0' src='", a, "'></iframe>", "</div>"].join("");
        top.lazycardWin = $("body").append(s).find("#lazycardWindow")
    },
    closeLazyCard: function () {
        top.lazycardWin.remove(), top.selfBir_mask.hide()
    },
    showBirthwish: function () {
        $App.getModel("contacts").requireData(function () {
            var e = window.location.protocol + "//" + top.window.location.host + top.getRootPath() + "/html/";
            e += "birthdaywish.html";
            var t = top.$Msg.open({ hideTitleBar: !0, url: e, width: 746, height: 536 });
            top.$App.set("birthWishFrame", t), M139.PUtils.iframetransparent()
        })
    },
    showOnlineTips: function () {
        top.SiteConfig.emailOnlineTip && top.M139.UI.TipMailView.show()
    },
    showBillLight: function () {
    },
    examineUserStatus: function (e, t) {
        this._callLotteryAPI("setting:examineShowStatus", e, t)
    },
    _callLotteryAPI: function (e, t, i) {
        options = { method: "GET" }, i = i || $.noop, t = $Url.makeUrl("", t).replace("?", ""), M139.RichMail.API.call(e, t, function (e) {
            e ? i(e.responseData) : i()
        }, options)
    },
    loadOperateTips: function () {
        top.M139.Timing.waitForReady("NewAdLink", function () {
            var e = new M2012.OperateTips.View;
            top.operatetipsview = e, e.initEvents()
        })
    },
    examineShowStatus: function (e, t) {
        this._callLotteryAPI("setting:examineShowStatus", e, t)
    },
    examineUserStatus: function (e, t) {
        this._callLotteryAPI("setting:examineUserStatus", e, t)
    },
    _callLotteryAPI: function (e, t, i) {
        options = { method: "GET" }, i = i || $.noop, t = $Url.makeUrl("", t).replace("?", ""), M139.RichMail.API.call(e, t, function (e) {
            e ? i(e.responseData) : i()
        }, options)
    }
};

//M139.UI.RemindTipModel
M139.core.namespace("M139.UI.RemindTipModel", Backbone.Model.extend({
    initialize: function (e) {
    }
})),

//M139.UI.RemindTipModel
function (e, t, i) {
    e.extend(i.UI.RemindTipModel, {
        materialIds: [10679, 10680, 10678, 10621, 10620, 10564, 178, 173, 192, 10561],
        users: { log: [], online: [] },
        types: { ad: 0, online: 1, login: 2, mail: 3, active: 4, calendar: 5 },
        maxStrCount: 83,
        nameCharMaxCount: 28,
        configOnline: [{
            linkName: "带给TA节日的问候",
            start: "2012-12-11",
            end: "2012-12-25",
            materialIds: [10613, 10610, 10609, 10612, 356, 355, 353]
        }, {
            linkName: "带给TA节日的问候",
            start: "2012-12-26",
            end: "2013-01-01",
            materialIds: [222, 383, 396, 387, 386, 10616, 382]
        }, {
            linkName: "带给TA春节的问候",
            start: "2013-02-03",
            end: "2013-02-16",
            materialIds: [10627, 395, 392, 121, 138]
        }, {
            linkName: "带给TA元宵节的问候",
            start: "2013-02-17",
            end: "2013-02-24",
            materialIds: [10632, 10631, 148, 147, 136]
        }],
        url: "/mw/mw/s?func=user:getOnlineFriends&sid=",
        logger: new top.M139.Logger({ name: "online tips" }),
        getOnlineUsers: function (e, t) {
            var i = this, a = "online" == e ? 1 : 400, s = { lineType: a };
            top.M139.RichMail.API.call("user:getOnlineFriends", s, function (e) {
                e.responseData.code && "S_OK" == e.responseData.code ? t(e.responseData["var"]) : i.logger.error("getOnlineFriends returndata error", "[user:getOnlineFriends]", e)
            })
        },
        getNewMailTipsSetting: function () {
            var e = top.$App.getConfig("UserData") || {};
            return e.mainUserConfig && e.mainUserConfig.newmailtips && e.mainUserConfig.newmailtips.length > 1 ? e.mainUserConfig.newmailtips[1] : "1111"
        },
        getLength: function (e) {
            return [60, 20, 18, 10, 8, 8][e]
        },
        getGroupName: function (e) {
            return e ? "(" + e + ")" : ""
        },
        updateUserGName: function (e) {
            e = e || [];
            var t = [], i = this, a = this.getLength(e.length - 1), s = null, o = "";
            return $.map(e, function (e) {
                s = i.getGroupName(e.groupName), e.cardFullName = e.friendName + s, t.push(e.cardFullName), o = top.$T.Utils.getBytes(e.friendName) > i.nameCharMaxCount ? top.$PUtils.getLeftStr(e.friendName, i.nameCharMaxCount, !0) : e.friendName,
                    top.$T.Utils.getBytes(e.friendName) > a && (e.friendName = top.$PUtils.getLeftStr(e.friendName, a, !0)), e.cardName = o + s, e.friendName += s
            }), t
        },
        isStrOverLen: function (e, t) {
            return e = e.replace(/(<font color='#0344AE'>)+/g, ""), e = e.replace(/(<\/font>)+/g, ""), top.$T.Utils.getBytes(e) > t
        },
        buildSummary: function (e, t, i) {
            var a, s = "你的好友", o = [], n = e.length, r = "login" === i ? "在线" : "上线", l = [];
            if (t.length > 6) for (var c = 0; 6 > c; c++) {
                var d = parseInt(1e3 * Math.random()) % t.length;
                l.push(t.splice(d, 1)[0])
            } else l = t;
            for (var p = "<font color='red' title='" + l.join(",") + "'>" + n + "</font>人" + r, c = 0; c < l.length; c++) o.splice(0, 0, "<font color='#0344AE'>" + l[c] + "</font>"), this.isStrOverLen(o.join(""), this.maxStrCount) && (o.splice(0, 1), 1 === n && o.splice(0, 0, "<font color='#0344AE'>" + top.$PUtils.getLeftStr(e[c].friendName, this.nameCharMaxCount, !0) + "</font>"));
            return n > 1 ? o.length < n && (p = "等" + p) : p = r, a = s + o.join("，") + p
        },
        isUserOpen: function (e) {
            var t = this.getNewMailTipsSetting();
            return t && t.length > 3 ? 1 == t.charAt(e) : !1
        },
        compatible: function () {
        },
        getRightTimeIndex: function () {
            for (var e, t, i, a = top.$Date.getServerTime() || new Date, s = this.configOnline.length, o = -1, n = 0; s > n; n++) if (e = this.configOnline[n], t = $PUtils.dateFormat(e.start), i = $PUtils.dateFormat(e.end), a instanceof Date && t instanceof Date && i instanceof Date && a >= t && i >= a) {
                o = n;
                break
            }
            return o
        },
        updateTip: function (e, t) {
            $BTips.updateContent(e, t)
        },
        readMail: function () {
            var e = $BMTips.newMail[$BMTips.currentMail];
            if (e && e.flags && 1 == e.flags.read) {
                var t = !(!e.flags || !e.flags.starFlag);
                $App.trigger("reduceFolderMail", { fid: e.fid, isStar: t })
            }
            $App.readMail(e.mid, !1, e.fid, { mailData: e })
        },
        sayHello: function (e) {
            top.$App.jumpTo("greetingcard", "&sayHello=" + e + "&materialId=" + this.getMaterialId())
        },
        remember: function (e) {
            var t = this.getNewMailTipsSetting();
            "active" === e && (t = this.setCharVal(t, this.types[e] + 1, 1), top.$App.setMailTips(t))
        },
        setCharVal: function (e, t, i) {
            e = e || "";
            var a = e.length, s = t - a, o = e.split("");
            if (s > 1) for (var n = 0; s > n; n++) o[a + n] = 0;
            return o[t - 1] = i, o.join("")
        },
        getMaterialId: function () {
            var e = this.getRightTimeIndex(), t = this.materialIds;
            -1 != e && (t = this.configOnline[e].materialIds);
            var i = t.length;
            return t[parseInt(Math.random() * i)]
        },
        requestApi: function (e, t, i, a) {
            var s = this;
            top.M139.RichMail.API.call(e, $.extend(t, { comeFrom: top.isCaiyun ? 8 : 0 }), function (t) {
                if (t.responseData.code && "S_OK" == t.responseData.code) i && i(t.responseData["var"]); else {
                    var o = e + "操作失败";
                    a && a(t), s.logger.error(o, t)
                }
            })
        },
        delScheduleBySeqNos: function (e, t, i) {
            $.isArray(e.seqNos) && (e.seqNos = e.seqNos.join(",")), this.requestApi("calendar:delCalendar", e, t, i)
        },
        cancelInvitedSchedule: function (e, t, i) {
            this.requestApi("calendar:cancelInvitedInfo", e, t, i)
        },
        updateInviteStatus: function (e, t, i) {
            e = $.extend({ actionType: 0, refuseResion: "" }, e), this.requestApi("calendar:updateInviteStatus", e, t, i)
        },
        updateShareLabelStatus: function (e, t, i) {
            e = $.extend({
                actionType: 0,
                refuseResion: ""
            }, e), this.requestApi("calendar:processShareLabelInfo", e, t, i)
        },
        updateMeetingStatus: function (e, t, i) {
            e = $.extend({ actionType: 0, refuseResion: "" }, e), this.requestApi("calendar:processMeeting", e, t, i)
        },
        subscribeCalendar: function (e, i, a) {
            return e && t.isNumber(e.labelId) ? (e = $.extend({
                enable: 1,
                beforeTime: 0,
                beforeType: 2,
                recMyEmail: 1,
                recMySms: 0,
                sendMsgTime: "9:00"
            }, e), void this.requestApi("calendar:subscribeLabel", e, i, a)) : void console.log("function:subscribeCalendar参数错误:labelId不合法")
        }
    }), window.$BMTips = i.UI.RemindTipModel
}(jQuery, _, M139),

//M139.UI.TipMailView
M139.core.namespace("M139.UI.TipMailView", Backbone.View.extend({
    initialize: function (e) {
    }
})),

//M139.UI.TipMailView
function (e, t, i) {
    e.extend(i.UI.TipMailView, {
        title: "您有 {count} 封新邮件",
        show: function () {
            top.$App.on("newMailArrival", this.receiveMail)
        },
        receiveMail: function (e) {
            if ($BMTips.isUserOpen($BMTips.types.mail)) {
                var t = e.length;
                if (!(e[0].subject.indexOf("【文件发送】") > -1 || e[0].subject.indexOf("【活动邀请】") > -1 && e[0].subject.indexOf("邀请您参与") > -1 || ($BMTips.currentMail = 0, $BMTips.newMailCount = t, 0 >= t))) {
                    $BMTips.newMail = e;
                    var a = ($BMTips.newMail[0], "您有" + e.length + "封新邮件"), s = i.UI.TipMailView.buildMailHtml($BMTips.newMail[$BMTips.currentMail], $BMTips.currentMail + 1, $BMTips.newMailCount);
                    $BTips.isCalendarTip || $BTips.isFileTip ? setTimeout(function () {
                        $BTips.instance.close(), delete $BTips.isCalendarTip, delete $BTips.isFileTip
                    }, 1e4) : $BTips.instance.close(), $BTips.addTask({
                        title: a,
                        content: s,
                        bhShow: { actionId: 102421, thingId: 2, moduleId: 19 },
                        bhClose: "邮件tips关闭",
                        timeout: 2e4
                    }), e.length > 0 && i.UI.TipMailView.showRollTitle(a)
                }
            }
        },
        nextMail: function (e) {
            if ("R" == e) {
                if (!($BMTips.currentMail + 1 < $BMTips.newMailCount)) return;
                $BMTips.currentMail++
            } else if ("L" == e) {
                if (!($BMTips.currentMail > 0)) return;
                $BMTips.currentMail--
            }
            var t = "您有" + $BMTips.newMailCount + "封新邮件", i = this.buildMailHtml($BMTips.newMail[$BMTips.currentMail], $BMTips.currentMail + 1, $BMTips.newMailCount);
            $BMTips.updateTip(t, i)
        },
        buildMailHtml: function (e, t, a) {
            var s = "top.$BMTips.readMail();top.$BTips.hide();top.$App.trigger('cancelFullScreen');";
            $App.getView("folder").model.isLock(e.fid) && (s = "top.$App.showUnlock();");
            var o = e.from.replace(/"/g, ""), n = Contacts.getContactsByEmail(o);
            n && n.length > 0 && (o = n[0].AddrFirstName + " <" + $Email.getEmail(o) + ">"), o = top.$T.Utils.getTextOverFlow2(o, 33, !0), o = top.$T.Html.encode(o);
            var r = {
                email: o,
                hander: s,
                subject: top.$T.Html.encode(e.subject),
                cur: t,
                total: a,
                fromMan: e.from.replace(/"/g, ""),
                display: $BMTips.newMailCount > 1 ? "" : "none"
            };
            return top.$T.Utils.format(i.UI.TipMailView._template, r)
        },
        rollTitleConfig: { orgTitle: document.title, rollSpeed: 420, timeHandler: null, run: 1 },
        showRollTitle: function (e) {
            var t = this.rollTitleConfig;
            speed = t.rollSpeed, strIndex = 0, rollTitle = e + "　" + e, t.run = 1, clearInterval(t.timeHandler), t.timeHandler = setInterval(function () {
                1 !== t.run && clearInterval(t.timeHandler), strIndex === rollTitle.length ? strIndex = 0 : strIndex++, document.title = rollTitle.substring(strIndex, rollTitle.length) + "　" + rollTitle.substring(0, strIndex)
            }, speed)
        },
        reSetDocTitle: function () {
            var e = this.rollTitleConfig;
            e.run = 0, setTimeout(function () {
                document.title = e.orgTitle
            }, 1e3)
        },
        _template: ['<div class="imgInfo imgInfo-rb">', '<a class="imgLink" href="javascript:void(0);" title="图片"><i class="i_mail_b"></i></a>', "<dl>", '<dt><strong id="fromMan">{email}</strong></dt>', '<dd class="maila"><a bh="邮件tips查邮件" href="javascript:{hander};void(0);">{subject}</a></dd>', "</dl>", '<p style="display:{display};" class="imgInfo-rb-page"><a  bh="邮件tips左右导航" href="javascript:top.M139.UI.TipMailView.nextMail(\'L\');void(0);" class="pre"></a><span >{cur}/{total}</span><a bh="邮件tips左右导航" href="javascript:top.M139.UI.TipMailView.nextMail(\'R\');void(0);" class="next"></a></p>', "</div>"].join("")
    })
}(jQuery, _, M139),

//M139.UI.HelloFriend
M139.core.namespace("M139.UI.HelloFriend", Backbone.View.extend({})),

//M139.UI.HelloFriend
function (e, t, i) {
    var a;
    e.extend(i.UI.HelloFriend, {
        initialize: function (e) {
            var t = this;
            t.showHelloFriendTips()
        }, showHelloFriendTips: function () {
            var e = this, i = ['<div class="norTips pt_0_i mt_6">', '<span class="norTipsIco mr_0 pr_5">', '<img src="../images/module/cloudMail/temp/sayhi.png">', "</span>", '<dl class="norTipsContent pt_10">', '<dt class="norTipsLine pd0" style="word-break: break-all;">你的好友', "<% for(var i=0,len=data.length>5?5:data.length;i < len;i++){ %>", '<em class="blue">', "<%- data[i].friendName %>", "</em>", "<% if(len > 1 && i < len - 1){ %>", "、", "<% } %>", "<% if(i >= 4){ %>", "等", "<% } %>", "<% } %>", '<span class="red"><%= data.length %></span>人在线，送份问候吧。</dt>', '<dd class="norTipsLine mt_10 hide"></dd>', "</dl>", "</div>", '<div class="boxIframeBtn">', '<span class="bibBtn">', '<a class="icoG btnSure" rel="0" id="helloGoto" href="javascript:;">', "<span>打招呼</span>", "</a>", "</span>", "</div>"].join("");
            try {
                var s = top.$App.getConfig("UserData") || {};
                if (top.BH("showHelloTips"), s.mainUserConfig && s.mainUserConfig.newmailtips && s.mainUserConfig.newmailtips.length > 1) {
                    var o = top.$App.getConfig("UserData").mainUserConfig.newmailtips[1].substr(2, 1), n = top.$User.getLastLoginDate(), r = $Date.format("yyyy-MM-dd", new Date), l = $Date.format("yyyy-MM-dd", new Date(n));
                    if ("0" == o || r == l || 0 == $Date.getDaysPass(new Date, new Date(n))) return !1;
                    var c = { lineType: 400 };
                    top.M139.RichMail.API.call("user:getOnlineFriends", c, function (s) {
                        if (s.responseData.code && "S_OK" == s.responseData.code && "" != s.responseData["var"]) {
                            var o = s.responseData["var"], n = t.template(i), r = n({ data: o });
                            $BTips.addTask({
                                width: 350,
                                title: $Date.getHelloString() + "好," + $T.Html.encode(top.$User.getSendName()),
                                content: r,
                                timeout: 2e5,
                                onclick: function (e) {
                                    $(e.target).closest("#helloGoto").length && (top.$App.show("helloFriend"), top.BH("helloTipsBtn"))
                                }
                            }), a = s.responseData["var"], top.$App.friendData = a
                        } else {
                            if ("" == s.responseData["var"]) return !1;
                            e.logger.error("getOnlineFriends returndata error", "[user:getOnlineFriends]", s)
                        }
                    })
                }
            } catch (d) {
            }
            return a
        }
    })
}(jQuery, _, M139),

//M139.UI.TipLoginRemind
M139.core.namespace("M139.UI.TipLoginRemind", Backbone.View.extend({
    initialize: function (e) {
    }
})),

//M139.UI.TipLoginRemind
function (e, t, i) {
    e.extend(i.UI.TipLoginRemind, {
        requestTime: "",
        hadRequset: !1,
        postHadShow: !1,
        billHadShow: !1,
        onlineHadShow: !1,
        show: function () {
            this.hadRequset || this.noticeSendMsg()
        },
        noticeSendMsg: function () {
            var e = this;
            top.M139.RichMail.API.call("tips:startTipsTask", {}, function (t) {
                t.responseData && t.responseData.code && "S_OK" == t.responseData.code && (e.hadRequset = !0, e.requestTime = top.M139.Date.getServerTime().getTime())
            })
        },
        checkTime: function (e) {
            var t = this;
            t.requestTime, parseInt(e, 10) || 0;
            return !1
        },
        showPostTip: function (e) {
            var t = this, i = ['<div class="boxIframeMain">', '<div class="boxIframeText">', '<div class="imgInfo imgInfo-rb">', '<a class="imgLink" href="javascript:void(0);" title="图片"><i class="i_m_rss"></i></a>', '<dl><dt><strong id="fromMan">{mailFrom}</strong></dt>', '<dd class="maila"><a bh="subscribe_tip_enter" href="javascript:$App.showSubscribe(true); ">{topic}</a></dd></dl>', "</div>", "</div>", "</div>"].join(""), a = {
                mailFrom: e.ctx.mailFrom,
                topic: e.topic,
                mailMsgId: "'" + e.ctx.mailMsgId + "'",
                obj: "{'searchMode': true, 'subscribeSession' :false}"
            }, s = top.$T.Utils.format(i, a);
            t.postHadShow || $BTips.addTask({
                title: "您有1封订阅邮件",
                content: s,
                bhShow: { actionId: 106652, thingId: 0 },
                bhClose: "subscribe_tip_close",
                timeout: 2e4
            })
        },
        markAsRead: function (e) {
            try {
                top.M139.RichMail.API.call("unified:updatePositionContent", {
                    positionCodes: "web_125",
                    contentId: e
                }, function (e) {
                })
            } catch (t) {
            }
        },
        showBoutiqueTips: function (e) {
            var t = this;
            i.Timing.waitForReady('top.$App.getConfig("UserData").orderInfoList', function () {
                top.$App.getCommConfig({ configId: 610 }, function (a) {
                    function s(e) {
                        return e = e.replace(/\$cid\$/g, c), e = e.replace(/\$behaviorUrl\$/g, top.getDomain("rebuildDomain") + "/weather/weather?func=user:logBehaviorAction&sid=" + top.sid + "&version=m2012"), '<img src="' + e.replace(/v[=]\d+/g, "v=99" + Math.random().toString().slice(2)) + "\" style='display:none'>"
                    }

                    function o(e) {
                        if ("" !== p) {
                            var t = {
                                positionCode: c,
                                eventType: e,
                                comeFrom: "2",
                                ads: [{ tagId: d, buyerId: p }],
                                version: "1.0"
                            };
                            top.M139.RichMail.API.call("unified:logreport", t, function (e) {
                                e.responseData.code && "S_OK" == e.responseData.code && console.log("统一位置行为日志上报成功")
                            })
                        }
                    }

                    var n = { configId: 610, configValue1: 0, configValue2: "" };
                    if ("S_OK" == a.code) if (0 == a["var"].length && (a["var"][0] = n), 0 == a["var"][0].configValue1 && "CleanMailbox" == top.$App.isclearSkinUser()) $("#butique").hide(); else {
                        var r = ['<div id="butique" class="boxIframeMain">', '<div class="boxIframeText">', '<a id="jumpToBoutique" href="{url}" target="_blank">', '<div class="norTips cloudHotSpot">', '<dl class="norTipsContent">', '<dt class="norTipsTitle">{title}</dt>', '<dd class="norTipsLine clearfix mt_5">', '<div href="javascript:;" class="norTipsLine_img">', '<img src="{img1}" width="100" height="65" alt="" title="5000件大牌商品低价独享" />', "</div>", '<p class="norTipsLine_info" style="width:186px; font-size:12px;">{jianjie}{showlink}</p>', "</dd>", "</dl>", "</div>", "</a>", "</div>", "</div>"].join("");
                        try {
                            var l = i.JSON.tryEval(e[0].content), c = e[0].contentId, d = l.tagId || "", p = l.buyerId || "", m = "";
                            if (l.showlink1 && l.showlink2) {
                                var u = l.showlink2 + "&tourl=" + encodeURIComponent(l.showlink1);
                                m += s(u)
                            }
                            htmlContent = top.$T.Utils.format(r, {
                                img1: l.img1,
                                jianjie: l.jianjie,
                                showlink: m,
                                url: l.url,
                                title: l.title
                            }), $BTips.addTask({
                                width: 350,
                                title: "为您推荐的精品内容",
                                content: htmlContent,
                                timeout: 3e4,
                                onclick: function (e) {
                                    ($(e.target).closest("#tipCloseLink").length || $(e.target).closest("#jumpToBoutique").length) && (top.$App.setUserCustomInfo(49, "1"), c && t.markAsRead(c), $(e.target).closest("#jumpToBoutique").length && ($BTips.instance.close(), top.BH({
                                        actionId: 8e3,
                                        thingId: l.thingId
                                    }))), o(2)
                                }
                            }), o(1)
                        } catch (h) {
                        }
                    }
                })
            })
        },
        showBillTip: function (e) {
            if (!this.billHadShow) {
                var t = ['<div class="imgInfo imgInfo-rb chrom-tips-rb" id="billAccount8">', '<p class="mt_10">发件人：10086</p>', '<p class="mt_10">主题：<a bh="billContent" href="javascript:{js};" class="c_666">{title}</a></p>', '<p class="mt_10 mb_5 clearfix">', '<a href="javascript:{js};" bh="billList" class="fr">查看账单详情<span class="f_st">&gt;&gt;</span></a>', "</p>", "</div>"].join(""), i = {};
                i.title = e["var"][0].subject, i.mid = e["var"][0].mid;
                var a = "";
                a = $T.Utils.format(t, {
                    title: i.title,
                    js: "top.$App.readMail('" + i.mid + "')"
                }), $BTips.addTask({
                    width: 350,
                    title: '<a href="javascript:top.$App.showMailbox(8);">您有1封新账单</a>',
                    content: a,
                    bhClose: "billClose",
                    bhShow: "billTip",
                    timeout: 2e4
                }), this.billHadShow = !0, $("#billAccount8").parents(".boxIframeMain").prev(".boxIframeTitle").find("span").click(function () {
                    top.BH("billTitle")
                })
            }
        },
        showOnlineTip: function (e) {
            function t(e) {
                top.$PUtils.getUserinfo(function (t) {
                    t.isShowUser = o.length > 0;
                    var a = i(t);
                    e(a, t)
                })
            }

            function i(e) {
                var t = top.$App.getConfig("ContactData"), i = "";
                return i = t && t.contacts && 0 == t.contacts.length ? "addr" : e.isShowUser ? "loginUser" : e.AddrFirstName ? e.BirDay ? $BMTips.isUserOpen($BMTips.types.mail) ? "ad" : "mail" : "birth" : "name"
            }

            function a(e, t) {
                var i = top.$User.getDefaultSender() || $PUtils.mobileMail, a = {
                    sender: i,
                    mobile: top.$User.getShortUid()
                };
                a.imgSrc = t.headImg, a.name = top.$T.Html.encode(t.userName), a.hrefHead = "top.$App.show('account','&info=userInfo');";
                var s = -1, o = null;
                return "loginUser" === e && (o = $BMTips.updateUserGName($BMTips.users.login), a.content = $BMTips.buildSummary($BMTips.users.login, o, "login"), s = $BMTips.getRightTimeIndex(), a.linkName = -1 == s ? "问候一下" : $BMTips.configOnline[s].linkName, a.linkAction = "$BMTips.sayHello('login');"), a
            }

            if (!this.onlineHadShow) {
                var s = this, o = e["var"];
                $BMTips.users.login = o;
                var n = ["<div class='imgInfo imgInfo-rb'>", "<a class='imgLink' href=\"javascript:{hrefHead}void(0);\" title='图片'><img width='52' height='52' src='{imgSrc}' alt=''></a>", "<dl> <dt><strong>{name}</strong></dt><dd class='gray'>{sender}</dd><dd>{mobile}</dd></dl>", "<p class='topline'>{content}</p>", "<p class='ta_r' style='display:{display}'><a href=\"javascript:{linkAction}void(0);\">{linkName}<span class='f_st'>&gt;&gt;</span> </a></p>", "</div>"].join("");
                t(function (e, t) {
                    var i = a(e, t), s = top.$T.Utils.format(n, i);
                    $BTips.addTask({ title: "尊敬的139邮箱用户", content: s, bhShow: "onlineTip", bhClose: "登录tips关闭" })
                }), s.onlineHadShow = !0
            }
        },
        postShare: function (e) {
            function t() {
                $("#mpost_share_tip a[name='share2qzone']").click(function () {
                    top.BH("postTip_share2qzone")
                }), $("#mpost_share_tip a[name='share2qqweibo']").click(function () {
                    top.BH("postTip_share2qqweibo")
                }), $("#mpost_share_tip a[name='share2sinaweibo']").click(function () {
                    top.BH("postTip_share2sinaweibo")
                }), $("#mpost_share_tip a[name='share2weixin']").click(function () {
                    top.BH("postTip_share2weixin")
                }), $("#mpost_share_tip a[name='share2renern']").click(function () {
                    top.BH("postTip_share2renern")
                })
            }

            var i = window.location.protocol + "//" + window.location.host + "/mpost2014/js/packs/mpost.ui.pack.js?v=" + getResourceVersion("mpost.ui.pack.js");
            try {
                top.M139.core.utilCreateScriptTag({ id: "subscribeReaderJs", src: i, charset: "utf-8" }, function () {
                    new M2012.Mpost.Share.Application({
                        container: $("#postShare"),
                        column: { isMagazine: 0, columnId: e.columnID, columnName: e.columnName },
                        item: { columnId: e.columnID, serialId: e.itemID, title: e.tipsTitle }
                    }).run(), $("#mpost_share_tip .mailShare_11").hide(), $("#mpost_share_tip").css("left", $("#mpost_share_tip").offset().left + 65 + "px"), t()
                })
            } catch (a) {
                console.log("云邮局分享组件调用失败！")
            }
        }
    })
}(jQuery, _, M139),

//M139.Ui.Tip.View.Calendar
function (e, t, i, a) {
    var s = i.View.ViewBase, o = "M139.Ui.Tip.View.Calendar";
    i.namespace(o, s.extend({
        templates: {
            tipsHtml_1: ['<div class="imgInfo imgInfo-rb">', "<p>{fromName}给您发来{type}</p>", '<dl class="scheduleRightBottomTips">', "<dd><span>{name}：</span>{topicContent}</dd>", '<dd title="{dateDescription}"><span>{timeOrDes}：</span>{dateDescription}</dd>', "</dl>", "</div>", '<div class="boxIframeBtn" style="display:{btnClass}">', '<div id="{cid}_opBtnMaskDiv" style="position:absolute; top:0px; height:40px;width:340px; z-index:1000;display: none;" class="blackbanner"></div>', '<span class="bibText gray"></span>', '<span class="bibBtn" id="{cid}_opBtn">{btnHtml}</span>', "</div>"].join(""),
            tipsHtml_2: ['<div class="norTips">', '<span class="norTipsIco"><i class="i-sayhi"></i></span>', '<dl class="norTipsContent ">', '<dt class="norTipsLine pd0">你的好友<em class="blue">{fromName}</em>推荐《{topicContent}》日历，快来订阅吧。</dt>', '<dd class="norTipsLine mt_10 hide"></dd>', "</dl>", "</div>", '<div class="boxIframeBtn" style="display:block">', '<div id="{cid}_opBtnMaskDiv" style="position:absolute; top:0px; height:40px;width:340px; z-index:1000;display: none;" class="blackbanner"></div>', '<span class="bibText gray"></span>', '<span class="bibBtn" id="{cid}_opBtn">{btnHtml}</span>', "</div>"].join(""),
            buttons: {
                accept: '<a class="btnSure" href="javascript:void(0)" id="{cid}_accept"><span>接受</span></a>',
                refuse: '<a class="btnNormal" href="javascript:void(0)" id="{cid}_refuse" style="margin-left: 5px;"><span>谢绝</span></a>',
                del: '<a class="btnNormal" href="javascript:void(0)" id="{cid}_delete" style="margin-left: 5px;"><span>删除</span></a>',
                acceptRemind: '<a class="btnSure" href="javascript:void(0)" id="{cid}_acceptRemind"><span>接受活动提醒</span></a>',
                subscribe: '<a class="btnSure" href="javascript:void(0)" id="tips-btn-subscribe"><span>订阅</span></a>'
            }
        },
        logger: new i.Logger({ name: "M139.Ui.Tip.View.Calendar" }),
        currMsgId: 0,
        isSubmiting: !1,
        TIPS: {
            DELETE_SCHEDULE_CONFIRM: "确定要删除该条活动吗?",
            DELETE_SCHEDULE_NOTDO_CONFIRM: "您尚未处理该条信息，删除后，将无法再处理",
            REFUSE_SCHEDULE_CONFIRM: "确定谢绝该活动吗?",
            REFUSE_SHARE_LABEL_CONFIRM: "确定谢绝该日历吗?",
            DELETE_SCHEDULE_WAITING: "正在删除活动……",
            DELETE_SCHEDULE_ERROR: "删除活动失败,请重试",
            DELETE_SCHEDULE_SUCCESS: "删除成功",
            OPERATE_ERROR: "操作失败，请稍后再试",
            OPERATE_SUCCESS: "操作成功"
        },
        TYPE: { ACTIVITY: 0, CALENDAR: 1, METTING: 2, SUBSCAL: 3 },
        initialize: function (e) {
            var t = this;
            e = e || {}, t.msgDatas = e.msgDatas || {}, t.callback = function () {
                e.callback && e.callback()
            }, s.prototype.initialize.apply(t, arguments)
        },
        setDomEvents: function () {
            var t = this;
            e(document).on("click", t.getCidElStr("accept"), function (e) {
                e.stopPropagation(), t.editScheduleStatus("accept")
            }), e(document).on("click", t.getCidElStr("refuse"), function (e) {
                e.stopPropagation(), t.editScheduleStatus("refuse")
            }), e(document).on("click", t.getCidElStr("delete"), function (e) {
                e.stopPropagation(), console.log("click delete"), t.delSchedule()
            }), e(document).on("click", t.getCidElStr("acceptRemind"), function (e) {
                e.stopPropagation(), t.editScheduleStatus("accept")
            }), e(document).on("click", "#tips-btn-subscribe", function (e) {
                e.stopPropagation(), t.subscribeCalendar()
            })
        },
        showTips: function () {
            var e = this, t = e.msgDatas, i = "", a = $T.Html.encode(t.fromName), s = "", o = "", n = $T.Html.encode(t.title), r = "", l = $T.Html.encode(t.dateDescription), c = "block", d = "", p = e.templates.buttons, m = e.templates.tipsHtml_1;
            switch (e.currMsgId = t.id, e.currMsgType = t.type, e.currMsgEditType = t.meetingType, console.log("msgDatas===="), console.log(t), Number(e.currMsgType)) {
                case e.TYPE.ACTIVITY:
                    i = "日历消息", s = "活动邀请", o = "活动主题", r = "活动时间", d = p.accept + p.refuse + p.del, e.refuseConfirmMsg = e.TIPS.REFUSE_SCHEDULE_CONFIRM;
                    break;
                case e.TYPE.CALENDAR:
                    i = "日历消息", s = "日历共享", o = "日历名称", r = "日历说明", l = $T.Html.encode(t.content), d = p.accept + p.refuse, e.refuseConfirmMsg = e.TIPS.REFUSE_SHARE_LABEL_CONFIRM;
                    break;
                case e.TYPE.METTING:
                    i = "会议邀请", s = "会议邀请", o = "会议主题", r = "会议时间", d = p.acceptRemind, e.refuseConfirmMsg = e.TIPS.REFUSE_SHARE_LABEL_CONFIRM;
                    break;
                case e.TYPE.SUBSCAL:
                    i = "日历消息", s = "", o = "", r = "", l = "", d = p.subscribe, m = e.templates.tipsHtml_2;
                    break;
                default:
                    return void e.logger.error("pns推送的数据中type有误！'type=" + e.currMsgType + "'")
            }
            t.isWhite ? (c = "none", d = "") : d = $T.format(d, { cid: e.cid }), $BTips.addTask({
                title: i,
                content: $T.format(m, {
                    cid: e.cid,
                    fromName: a,
                    type: s,
                    name: o,
                    topicContent: n,
                    timeOrDes: r,
                    dateDescription: l,
                    btnClass: c,
                    btnHtml: d
                }),
                timeout: 2e4
            })
        },
        delSchedule: function () {
            var e = this;
            e.getCidEl("opBtnMaskDiv").show(), a.M139.UI.TipMessage.show(e.TIPS.DELETE_SCHEDULE_WAITING), $BMTips.cancelInvitedSchedule({ seqNos: e.currMsgId }, function (t) {
                a.M139.UI.TipMessage.show(e.TIPS.DELETE_SCHEDULE_SUCCESS, { delay: 3e3 }), e.getCidEl("opBtnMaskDiv").hide()
            }, function (t) {
                "FA_INVALID_SESSION" != t.code && a.M139.UI.TipMessage.show(e.TIPS.DELETE_SCHEDULE_ERROR, {
                    delay: 3e3,
                    className: "msgRed"
                }), e.getCidEl("opBtnMaskDiv").hide()
            })
        },
        editScheduleStatus: function (e) {
            var t = this;
            if (t.getCidEl("opBtnMaskDiv").show(), !t.isSubmiting) {
                t.isSubmiting = !0;
                var i = function (e) {
                    a.M139.UI.TipMessage.show(t.TIPS.OPERATE_SUCCESS, { delay: 3e3 }), t.currMsgEditType ? a.$App.trigger("refresh:calendar", { actionType: "leftnav" }) : a.$App.trigger("refresh:calendar", { actionType: "mainview" }), a.$App.trigger("refresh:calendar", { actionType: "msg" }), $BTips.hide(), t.isSubmiting = !1, t.getCidEl("opBtnMaskDiv").hide()
                }, s = function (e) {
                    "FA_INVALID_SESSION" != e.code && a.M139.UI.TipMessage.show(t.TIPS.OPERATE_ERROR, {
                        delay: 3e3,
                        className: "msgRed"
                    }), t.isSubmiting = !1, t.getCidEl("opBtnMaskDiv").hide()
                };
                switch (e) {
                    case "accept":
                        t.currMsgType != t.TYPE.METTING ? t.currMsgEditType ? $BMTips.updateShareLabelStatus({
                            seqNos: t.currMsgId,
                            actionType: 0
                        }, i, s) : $BMTips.updateInviteStatus({
                            seqNos: t.currMsgId,
                            actionType: 0
                        }, i, s) : $BMTips.updateMeetingStatus({
                            meetingId: t.currMsgId,
                            meetingType: t.currMsgEditType,
                            status: 1
                        }, i, s);
                        break;
                    case "refuse":
                        t.currMsgType != t.TYPE.METTING ? t.currMsgEditType ? $BMTips.updateShareLabelStatus({
                            seqNos: t.currMsgId,
                            actionType: 1
                        }, i, s) : $BMTips.updateInviteStatus({
                            seqNos: t.currMsgId,
                            actionType: 1
                        }, i, s) : $BMTips.updateMeetingStatus({
                            meetingId: t.currMsgId,
                            meetingType: t.currMsgEditType,
                            status: 2
                        }, i, s);
                        break;
                    default:
                        t.logger.error(t.className + "#function editScheduleStatus：参数有误！")
                }
            }
        },
        subscribeCalendar: function () {
            var e = this;
            if (console.log(" click “订阅”按钮！"), e.getCidEl("opBtnMaskDiv").show(), !e.isSubmiting) {
                e.isSubmiting = !0;
                var t = function (t) {
                    a.M139.UI.TipMessage.show(e.TIPS.OPERATE_SUCCESS, { delay: 3e3 }), a.$App.trigger("refresh:calendar", { actionType: "leftnav" }), a.$App.trigger("refresh:calendar", { actionType: "mainview" }), $BTips.hide(), e.isSubmiting = !1, e.getCidEl("opBtnMaskDiv").hide()
                }, i = function (t) {
                    "FA_INVALID_SESSION" != t.code && a.M139.UI.TipMessage.show(e.TIPS.OPERATE_ERROR, {
                        delay: 3e3,
                        className: "msgRed"
                    }), e.isSubmiting = !1, e.getCidEl("opBtnMaskDiv").hide()
                };
                $BMTips.subscribeCalendar({ labelId: e.currMsgId }, t, i)
            }
        },
        render: function () {
            var e = this;
            $BTips.isCalendarTip = !0, e.showTips(), e.setDomEvents()
        }
    }))
}(jQuery, _, M139, window._top || window.top),

//M139.UI.cordlamp
M139.core.namespace("M139.UI.cordlamp", Backbone.View.extend({
    autoClose: !0,
    contentId: "",
    readStatus: "",
    toDo: "",
    initialize: function () {
        var e = this;
        setTimeout(function () {
            e.render()
        }, 500)
    },
    render: function () {
        var e = this;
        this.getData(function (t) {
            try {
                M139.Timing.waitForReady('top.$App.getConfig("UserData").orderInfoList', function () {
                    function i() {
                        $("body").append("<div id='cordlampBox'></div>"), $("#cordlampBox").html(t), e.startJump($(".prize")[0], 12), e.bindEvent()
                    }

                    "CleanMailbox" == top.$App.isclearSkinUser() ? top.$App.getCommConfig({ configId: 610 }, function (e) {
                        var t = { configId: 610, configValue1: 0, configValue2: "" };
                        "S_OK" == e.code && (0 == e["var"].length && (e["var"][0] = t), 0 == e["var"][0].configValue1 ? $("#cordlampBox").remove() : i())
                    }) : i()
                })
            } catch (i) {
                $("#cordlampBox").remove()
            }
        })
    },
    getData: function (e) {
        function t(t) {
            try {
                if (t && t[a] && t[a][0]) {
                    if (i.contentId = String(t[a][0].contentId), i.readStatus = t[a][0].readStatus, i.splitExpand(t[a][0].expand2), t = t[a][0].content, "" == $(t).text()) return;
                    "没有内容" != t && e(t)
                }
            } catch (s) {
            }
        }

        var i = this, a = "web_100";
        top.mwUnifiedPositionContent ? t(mwUnifiedPositionContent["var"]) : top.$App.once("welcome_UnifiedPosition_load", t)
    },
    splitExpand: function (e) {
        var t = this, i = e.split("|");
        try {
            t.autoClose = 0 != i[0], t.toDo = i[1] || ""
        } catch (a) {
            console("灯绳运营未设置是否自动关闭")
        }
    },
    bindEvent: function () {
        var self = this, ad_contentId = self.contentId;
        self.unifiedLogRepot(1, ad_contentId), $(".prize").hover(function () {
            $(this).find(".prizeInfo").stop(!0, !0).fadeIn("500")
        }, function () {
            $(this).find(".prizeInfo").stop(!0, !0).fadeOut()
        }), $(".prize").bind("doSomeThing", function () {
            try {
                var something = $(".prize").attr("doSomeThing") || self.toDo, reg = new RegExp("((^http)|(^https)|(^ftp))://(\\w)+.(\\w)+");
                reg.test(something) ? (something.indexOf("$sid") >= 0 && (something = something.replace("$sid", top.$App.getSid())), something.indexOf("sid") >= 0 && (something = something.replace(/sid=[^&$]+/, "sid=" + top.$App.getSid())), window.open(something, "_blank")) : eval(something)
            } catch (e) {
            }
        }), $(".prize").click(function () {
            self.unifiedLogRepot(2, ad_contentId), $(this).siblings(".prize_line").stop(!0, !0).animate({ height: 91 }).animate({ height: 28 }), 0 == self.readStatus && self.updateReadState(), self.autoClose && $(".prizeBox").hide(), $(".prize").trigger("doSomeThing")
        })
    },
    updateReadState: function (e) {
        var t = this, i = "web_100";
        top.M139.RichMail.API.call("unified:updatePositionContent", {
            positionCodes: i,
            contentId: t.contentId
        }, function (t) {
            t.responseData.code && "S_OK" == t.responseData.code && e()
        })
    },
    startJump: function (e, t, i, a) {
        function s() {
            e && (e.style.position = "relative", o())
        }

        function o() {
            d || n()
        }

        function n() {
            var t = parseInt(e.style.top);
            if (d) {
                var i = t - p * d;
                if (i >= -c && 0 >= i) e.style.top = i + "px"; else if (-c > i) d = -1; else {
                    var a = c / 2;
                    if (1 > a) return void l();
                    c = a, d = 1
                }
            } else r();
            setTimeout(function () {
                n()
            }, 200 / (c + 3) + 3 * d)
        }

        function r() {
            i.apply(this), e.style.top = "0", d = 1
        }

        function l() {
            a.apply(this), c = t, d = 0, e.style.top = "0"
        }

        var c = t = t || 6, i = i || function () {
        }, a = a || function () {
        }, d = 0, p = 1;
        e && (s(), this.jump = n, this.active = o)
    },
    unifiedLogRepot: function (e, t) {
        var i = $(".prize"), a = i.attr("tagid") || "", s = i.attr("buyerid") || "";
        if ("" !== s) {
            var o = { positionCode: t, eventType: e, comeFrom: "2", ads: [{ tagId: a, buyerId: s }], version: "1.0" };
            top.M139.RichMail.API.call("unified:logreport", o, function (e) {
                e.responseData.code && "S_OK" == e.responseData.code && console.log("统一位置行为日志上报成功")
            })
        }
    }
})),


$(function () {
    try {
        new M139.UI.cordlamp
    } catch (e) {
    }
}),


//M139.UI.WGuide
M139.core.namespace("M139.UI.WGuide", Backbone.View.extend({
    template: ['<div class="norTips" id="wGuideBox">', '<a class="i_t_close DL_CloseBut CloseButton" style="top:11px;right:11px;" title="关闭" href="javascript:;"></a>', '<div class="assistant-guide">', '<div class="guide-head"></div>', '<div class="guide-list clearfix">', "<% if (isChinaMobileUser) { %>", "<ul>", '<li class="clearfix">', '<span class="class-name">邮箱短信提醒：</span>', '<div class="class-check">', '<span class="mr_15"><input type="checkbox" class="chk-m139check" checked="checked"><label id="chkOpen" style="background-image:url(/refs/global_v3_24.png)" for="chkUrgent" class="i-chooseMo i-chooseYet">&nbsp;&nbsp;&nbsp;&nbsp;</label>开启</span>', '<span class="mr_15"><input type="checkbox" class="chk-m139check" checked="checked"><label id="chkClose" style="background-image:url(/refs/global_v3_24.png)" for="chkUrgent" class="i-chooseMo">&nbsp;&nbsp;&nbsp;&nbsp;</label>关闭</span>', "</div>", '<p id="wgCloseExp" class="class-check-tips" style="display:none">温馨提示：开启短信提醒后，接收邮件到达提醒</p>', "</li>", "</ul>", "<% } %>", "</div>", '<div class="guide-maylike clearfix">', '<h3 class="headtop clearfix">猜您喜欢：</h3>', '<div class="innercon clearfix">', '<ul id="commend_List">', "</ul>", "</div>", "</div>", "</div>", "</div>"].join(""),
    initialize: function (e) {
        var t = this;
        t.render(), t.initView(), t.initEvents()
    },
    render: function () {
        var e, t = this;
        $User.isChinaMobileUser() ? (e = _.template(this.template)({ isChinaMobileUser: !0 }), this.smsData = !0) : (e = _.template(this.template)({ isChinaMobileUser: !1 }), this.smsData = !1), this.guideDialog = $Msg.showHTML(e, function () {
            M139.RichMail.API.call("user:getMailNotify", {}, function (e) {
                console.log(e);
                var i = e.responseData["var"][0];
                i.enable = t.smsData, i.syncDy = t.smsData, i.notifytype = 1, i.notifystyle = "34,33,32,31,4,5,2,1", t.setData(i)
            })
        }, function () {
        }, {
            hideTitleBar: !0,
            width: "500px",
            margin: "0 -215px 0 0",
            titleBarPath: ".boxIframeTitle",
            buttons: ["立即订阅", "关闭"],
            onClose: function () {
                t.guideDialog = null
            }
        }), t.$el = $("#wGuideBox"), t.$el.parents(".boxIframe").css("border", "none"), top.BH("wguide_139sub")
    },
    smsData: !0,
    initView: function () {
        var e = top.getDomain("subscribeUrl") + "getRecommends?sid=" + top.sid, t = '{"contentType":1,"size":2,"feeModel":0, "type":2}', i = this;
        top.M139.RichMail.API.call(e, t, function (e) {
            var t = e.responseData;
            if (t && t.body && t.body.list) {
                for (var a = t.body.list, s = 0; s < a.length; s++) {
                    var o = M139.Text.Utils.format(['<li class="clearfix">', '<div style="float:left"><input type="checkbox" id="id_{id}" columnId="{id}" checked="checked"></div>', '<div class="class-check-cont">', '<img style="float:left;width:45px" src="{src}">', '<div class="infos"><h3>{columnName}</h3><p>{user}位用户</p></div>', "</div>", "</li>"].join(""), {
                        user: a[s].subscribeCount,
                        columnName: a[s].columnName,
                        src: a[s].logoUrl,
                        id: a[s].columnId
                    });
                    i.$el.find("#commend_List").append(o)
                }
                i.$el.find("input[type=checkbox]").m139Check()
            }
        })
    },
    initEvents: function () {
        var e = this;
        e.initBtnEvent()
    },
    initBtnEvent: function () {
        var e = this;
        e.$el.find("#chkOpen").click(function () {
            $(this).is(".i-chooseYet") || (e.$el.find("#chkClose").removeClass("i-chooseYet"), $(this).addClass("i-chooseYet"), e.smsData = !0, e.$el.find("#wgCloseExp").hide())
        }), e.$el.find("#chkClose").click(function () {
            e.$el.find("#chkOpen").removeClass("i-chooseYet"), $(this).is(".i-chooseYet") || ($(this).addClass("i-chooseYet"), e.smsData = !1, e.$el.find("#wgCloseExp").show())
        })
    },
    setData: function (e) {
        var t = this, i = ['<div class="norTips">', '<dl class="norTipsContent">', '<dt class="norTipsTitle MB_MessageBox_Title"></dt>', '<dd class="norTipsLine MB_MessageBox_Content">', '<dl class="norTipsContent">', '<dd class="formLine">', '<span class="norTipsIco"><i class="i_ok"></i></span>', '<p class="ok" style="display: inline-block;margin-top: 15px;">订阅成功</p>', "<% if(enable){ %>", '<p class="mt_10">开启邮件到达提醒，栏目更新时您将收到短信通知</p>', "<% } %>", '<p class="fw_b mb_20 label">您可以在云邮局 &gt; 设置与退订中查看并管理已订阅的栏目</p>', "</dd>", "</dl>", "</dd>", "</dl>", "</div>"].join(""), a = _.template(i)({ enable: t.smsData });
        M139.RichMail.API.call("user:updateMailNotify", { mailnotify: [e] }, function (e) {
            if (e && e.responseData && "S_OK" == e.responseData.code) {
                $App.subscribe("{comeFrom:503, columnId:40131}");
                for (var i = t.$el.find("#commend_List input").length, s = 0; i > s; s++) {
                    var o = t.$el.find("#commend_List").find("input").eq(s);
                    "checked" == o.attr("checked") && $App.subscribe("{comeFrom:503, columnId:" + o.attr("columnid") + "}")
                }
                $App.trigger("userAttrChange", {
                    callback: function () {
                        top.$App.trigger("notifySettingChange")
                    }
                }), top.BH("wguide_139sub"), t.sucessDialog = top.$Msg.showHTML(a, function () {
                    t.sucessDialog = null
                }, {
                    dialogTitle: "订阅成功",
                    width: "500px",
                    titleBarPath: ".boxIframeTitle",
                    buttons: ["确定"],
                    onClose: function () {
                        t.sucessDialog = null
                    }
                })
            } else M139.UI.TipMessage.error("所有短信提醒" + (t.smsData ? "开启" : "关闭") + "失败", { delay: 1e3 })
        })
    }
})),

//M139.UI.fileClear
M139.core.namespace("M139.UI.fileClear", Backbone.View.extend({})),

//M139.UI.fileClear
function (e, t, i) {
    e.extend(i.UI.fileClear, {
        initialize: function (e) {
        }, getMailSize: function () {
            var e = this, t = top.$App.getConfig("mailCapacity");
            e.getAllMailCapacityInfo(t)
        }, queryMailCapacityInfo: function (e) {
            top.$RM.call("user:mailCapacityInfo", {}, function (t) {
                var i = t.responseData;
                "S_OK" == i.code ? e.success && e.success(i["var"]) : e.error && e.error(i)
            })
        }, getAllMailCapacityInfo: function (e) {
            var t = this;
            this.queryMailCapacityInfo({
                success: function (e) {
                    top.$App.registerConfig("mailCapacity", e);
                    var e = top.$App.getConfig("mailCapacity");
                    top.$User.isFreeUser() && e.totalSize > 5242880 && (e.totalSize = 2097152), e.totalSize <= 0 && (e.totalSize = 2097152);
                    var i = 1024 * e.totalSize, a = 1024 * e.messageSize, s = (top.$T.Utils.getFileSizeText(a), top.$T.Utils.getFileSizeText(i), (100 * a / i).toFixed(2) + "%");
                    t.showClearFileTips(parseFloat(s))
                }, error: function (t) {
                    e.error && e.error(t)
                }
            })
        }, showClearFileTips: function (e) {
            var t = ['<div class="norTips pt_0_i mt_10">', "<p>您的邮箱容量已经使用了95%以上了，为了保证后续正常收发邮件，建议您使用文件整理工具快速整理邮件!</p>", '<a href="javascript:;" class="blue" id="sartClear">开始使用</a>', "</div>"].join(""), t = ['<div class="norTips" style="padding:12px;">', '<dl class="norTipsContent">', '<dt class="norTipsLine">', '<p style="text-indent:2em;">您的邮箱容量已经使用了95%以上了，为了保证后续正常收发邮件，建议您使用文件整理工具快速整理邮件！<a class="blue tdul" href="">开始使用</a></p>', "</dt>", "</dl>", "</div>"].join("");
            try {
                if (e > 95 && 100 > e) {
                    var i = top.$User.getLastLoginDate(), a = $Date.format("yyyy-MM-dd", new Date), s = $Date.format("yyyy-MM-dd", new Date(i));
                    if (a == s) return !1;
                    $BTips.addTask({
                        width: 350, title: "文件整理工具提醒", content: t, timeout: 2e5, onclick: function (e) {
                            $(e.target).closest("#sartClear").length && (top.$App.show("clearFileTool"), top.BH("startClearfile"))
                        }
                    })
                }
            } catch (o) {
            }
        }
    })
}(jQuery, _, M139),

//M139.UI.DataflowLottery
M139.core.namespace("M139.UI.DataflowLottery", Backbone.View.extend({
    template: ['<div id="bottomBigBanner" style="position:fixed;left:0;bottom:0;right: 0;background: transparent;text-align: center;height:80px;z-index: 10000;">', "</div>"].join(""),
    initialize: function () {
        this.stopPopCon()
    },
    stopPopCon: function () {
        function e() {
            t.getData(function (e, i) {
                $("#bottomBigBanner").remove(),
                $("body").append(t.template),
                $("#bottomBigBanner").prepend(e),
                t.unifiedLogRepot(1, i),
                $($("#bottomBigBanner").find("a")[0]).on("click", function () {
                    t.unifiedLogRepot(2, i), $("#bottomBigBanner").remove()
                }),
                $("#bottomBigBanner_close").on("click", function () {
                    $("#bottomBigBanner").remove()
                })
            })
        }
        var t = this, i = $(window).height() || 0;
        return 560 > i ? !1 : void M139.Timing.waitForReady('top.$App.getConfig("UserData").orderInfoList',
            function () {
                "CleanMailbox" == top.$App.isclearSkinUser() ? top.$App.getCommConfig({ configId: 610 }, function (t) {
                    var i = { configId: 610, configValue1: 0, configValue2: "" };
                    "S_OK" == t.code && (0 == t["var"].length && (t["var"][0] = i), 0 == t["var"][0].configValue1 ? $("#bottomBigBanner").remove() : e())
                }) : e()
            })
    },
    getData: function (e, t) {
        top.M139.RichMail.API.call("unified:getUnifiedPositionContent", {
            comeFrom: 4,
            positionCodes: "web_111"
        }, function (i) {
            if (i.responseData && i.responseData.code && "S_OK" == i.responseData.code && i.responseData["var"]) {
                var a = i.responseData["var"];
                try {
                    var s = a.web_111[0].content, o = a.web_111[0].contentId;
                    s.length > 100 && e && e(s, o)
                } catch (n) {
                    t && t()
                }
            } else t && t()
        })
    },
    unifiedLogRepot: function (e, t) {
        var i = $("#bottomBigBanner").find("a"), a = i.attr("tagid") || "", s = i.attr("buyerid") || "";
        if ("" !== s) {
            var o = { positionCode: t, eventType: e, comeFrom: "2", ads: [{ tagId: a, buyerId: s }], version: "1.0" };
            top.M139.RichMail.API.call("unified:logreport", o, function (e) {
                e.responseData.code && "S_OK" == e.responseData.code && console.log("统一位置行为日志上报成功")
            })
        }
    },
    markAsRead: function (e) {
        try {
            top.M139.RichMail.API.call("unified:updatePositionContent", {
                positionCodes: "web_111",
                contentId: e
            }, function (e) {
            })
        } catch (t) {
        }
    }
})),

//初始化M139.UI.DataflowLottery
$(function () {
    try {
        setTimeout(function () {
            new M139.UI.DataflowLottery
        }, 4e3)
    } catch (e) {
    }
}),

//M2012.OperateTips.Model
function (e, t, i) {
    i.namespace("M2012.OperateTips.Model", Backbone.Model.extend({
        logger: new top.M139.Logger({ name: "OperateTips" }),
        getTipsData: function () {
            return SiteConfig.unifiedPositionStatic ? top.NewAdLink.web_061 : top.$App.getConfig("AdLink").tips
        },
        closeRequest: function (e, t, i) {
            function a(e) {
                return e && e.responseData && (e = e.responseData, "S_OK" === e.code) ? (t && t(e), !0) : (i && i(e), !1)
            }

            var s = this.getTipsData();
            if (s) {
                s = s[0];
                var o = "unified:updatePositionContent", n = {
                    positionCodes: "web_061",
                    contentId: s.contentId
                }, r = {
                    onrouter: function (e) {
                        e.addRouter("setting", [o])
                    }
                };
                $RM.call(o, n, a, r)
            }
        }
    }))
}(jQuery, _, M139),

//M2012.OperateTips.View
function (e, t, i, a) {
    var s = e, o = a.View.ViewBase;
    a.namespace("M2012.OperateTips.View", o.extend({
        initialize: function (e) {
            this.model = new M2012.OperateTips.Model, o.prototype.initialize.apply(this, arguments)
        },
        tipsConfig: { width: 250 },
        directionClass: {
            top: "tipsTopArrow",
            left: "tipsLeftArrow",
            right: "tipsRightArrow",
            bottom: "tipsBottomArrow"
        },
        template: {
            tips: ['<div id="caixuntips_{id}" class="tipsLayer" style="{style}">', '<div class="tipsLayerMain">', "{content}", "</div>", '<i class="i-tipsLayerArrow {directionClass}" style="{directionStyle}"></i>', '<a href="javascript:;" class="closeTipsLayerBtn yellow-tips-close" title="关闭"><i class="i-closeTipsLayer"></i></a>', "</div>"].join(""),
            icoContent: ['<i class="{ico}"></i>', "{content}"].join("")
        },
        getPositionObj: function (e) {
            var t = this, i = 0, a = 0, s = e.elem, o = t.tipsConfig.width, n = e.direction;
            switch (n) {
                case "top":
                    i = s.offset().top + s.height() + 5, a = t.isSlopOver(e) ? s.offset().left - o + 20 : s.offset().left + 20;
                    break;
                case "left":
                    i = s.offset().top - 5, a = s.offset().left + s.width() + 10;
                    break;
                case "bottom":
                    i = s.offset().top - 75, a = t.isSlopOver(e) ? s.offset().left - o : s.offset().left + 20;
                    break;
                case "right":
                    i = s.offset().top - 5, a = s.offset().left - o
            }
            return { top: +(i + e.adjustTop), left: +(a + e.adjustLeft) }
        },
        isSlopOver: function (e) {
            var t = this, i = s("#" + e.elementId, e.doc), a = t.tipsConfig.width, o = e.direction;
            if (i[0]) {
                var n = s("body", e.doc).width();
                return ("top" == o || "bottom" == o) && i.offset().left + a > n
            }
            return !1
        },
        getDirectionStyle: function (e) {
            var t = this, i = "";
            return t.isSlopOver(e) && ("top" != e.direction && "bottom" != e.direction || (i = "left:auto;right:10px;")), i
        },
        getPositionStyle: function (e) {
            var t = this, i = s("#" + e.elementId, e.doc);
            if (e.elementId.indexOf("name_") > -1) {
                var a = e.elementId.replace("name_", ""), o = s("#div_maillist");
                i = s('a[name="' + a + '"]:eq(0),div[name="' + a + '"]:eq(0)', e.doc), o.find(i) && o.scrollTop() > 80 && (i = [])
            }
            if ("compose" === e.elementId) try {
                var n = s.grep(s("iframe[id^=compose]"), function (e, t) {
                    return $App.getCurrentTab().name === e.id
                });
                i = n[0] && s("#" + e.elementId, n[0].contentWindow.document)
            } catch (r) {
            }
            if (i[0]) {
                var l = t.getPositionObj({
                    elem: i,
                    elementId: e.elementId,
                    direction: e.direction,
                    adjustLeft: e.adjustLeft,
                    adjustTop: e.adjustTop
                });
                return isNaN(l.left) || isNaN(l.top) ? "display:none" : l.left > s("body", e.doc).width() || l.top > s("body", e.doc).height() ? "display:none" : l.left < 30 || l.top < 30 ? "display:none" : $T.Utils.format("z-index:9000;left:{0}px;top:{1}px;", [l.left, l.top])
            }
            return "display:none"
        },
        render: function (e, t) {
            s("#caixuntips_" + e.positionId, t).remove();
            var i = this, a = i.template.tips, o = i.template.icoContent, n = e.content;
            "" != i.getImgIco(e) && (n = $T.Utils.format(o, { ico: i.getImgIco(e), content: n }));
            var r = s(n).attr("direction") || s(n).find("div[direction]").attr("direction"), l = s(n).attr("left") || s(n).find("div[left]").attr("left"), c = s(n).attr("top") || s(n).find("div[top]").attr("top");
            return r = r || "top", $T.Utils.format(a, {
                id: e.positionId,
                directionClass: i.directionClass[r],
                directionStyle: i.getDirectionStyle({ elementId: e.elementId, doc: t, direction: r }),
                content: n,
                style: i.getPositionStyle({
                    elementId: e.elementId,
                    doc: t,
                    direction: r,
                    adjustLeft: 0 | (l || 0),
                    adjustTop: 0 | (c || 0)
                })
            })
        },
        addBehavior: function (e, t) {
            var i;
            e && (i = "tips_" + [0, "remind", "setting", "guide"][e]), t && (i += t), top.BH(i)
        },
        closeTips: function (e) {
            function t() {
                n.remove();
                try {
                    i.model.closeRequest(e.tipsid)
                } catch (t) {
                    a.Logger.sendClientLog({ level: "ERROR", name: "removeTips Error", errorMsg: t.toString() })
                }
                var o = i.model.getTipsData();
                o && s.each(o, function (t, i) {
                    if (i) {
                        var a = i.positionId || i.id;
                        if (a === e.tipsid) return void o.splice(t, 1)
                    }
                })
            }

            var i = this, o = e.type, n = s("#caixuntips_" + e.tipsid, e.doc);
            n.find("a.yellow-tips-close").unbind("click").click(function () {
                t(), i.addBehavior(o, 2);
                var e = n.find("a[closeid]").attr("closeid");
                e && top.BH({ actionId: 8e3, thingId: e })
            }), n.find(".tipsLayerMainInner a").unbind("click").click(function () {
                t(), i.addBehavior(o, 1), i.defineTipsEvent(e.operate);
                var a = n.find("a[thingid]").attr("thingid");
                a && top.BH({ actionId: 8e3, thingId: a })
            })
        },
        defineTipsEvent: function (e) {
        },
        tipsResize: function (e) {
            var t = this, i = s("#caixuntips_" + e.tipsid, e.doc), o = i.find(".tipsLayerMain > div");
            i.find("div[direction]").length > 0 && (o = i.find("div[direction]"));
            var n = s("#sidebar", e.doc), r = s("#" + e.elementId, e.doc), l = a.Timing.setInterval("operatetips", function () {
                if (i[0]) {
                    var s = t.getPositionStyle({
                        elementId: e.elementId,
                        doc: e.doc,
                        direction: o.attr("direction") || "top",
                        adjustLeft: o.attr("left") ? parseInt(o.attr("left")) : 0,
                        adjustTop: o.attr("top") ? parseInt(o.attr("top")) : 0
                    });
                    if (!r.is(":visible")) return i.hide(), void a.Timing.clearInterval(l);
                    n.find("#" + e.elementId)[0] ? r.offset().top + 15 < n.offset().top ? i.hide() : r.offset().top + 15 > n.offset().top + n.height() ? i.hide() : i.attr("style", s) : i.attr("style", s)
                } else a.Timing.clearInterval(l)
            }, 1e3);
            t.closeTips({ tipsid: e.tipsid, doc: e.doc, type: e.type })
        },
        getImgIco: function (e) {
            var t = "", i = { 1: "i_t_ok", 2: "i_t_del", 3: "i_t_garbage", 4: "i_t_light", 5: "i_t_link", 6: "i_t_warn" };
            if (e && e.imageurl) {
                var a = e.imageurl;
                try {
                    var s = a.split("tips/")[1].split(".")[0];
                    i[s] && (t = i[s])
                } catch (o) {
                }
            }
            return t
        },
        showTips: function (e) {
            function t(e, t) {
                var o = s("#" + e.pageUrl)[0];
                if (o) {
                    var n = o.contentWindow.document;
                    clearInterval(a[e.positionId]), s("body", n).append(i.render(e, n)), t.doc = n, i.tipsResize(t)
                }
            }

            var i = this, a = {};
            s.each(e, function (e, o) {
                var n = o, r = {
                    tipsid: n.positionId,
                    elementId: n.elementId,
                    type: n.type,
                    operate: n.operate,
                    doc: document
                };
                "index" == n.pageUrl ? (s("body").append(i.render(n, document)), i.tipsResize(r)) : "welcome" == n.pageUrl ? t(n, r) : a[n.positionId] = setInterval(function () {
                    t(n, r)
                }, 3e3)
            })
        },
        initEvents: function () {
            var e = this, t = e.model.getTipsData();
            t && this.showTips(t), $App.on("tipstest", function (t) {
                e.showTips(t.tipsdata)
            })
        }
    }))
}(jQuery, Backbone, _, M139);

//生日提醒
var BirthRemind = {
    birdthMan: [],
    cardIdsxx: [10677, 10655, 10646, 10637, 10559, 10556, 158, 156, 154, 151, 149, 155],
    cardIds: [694, 693, 692, 691, 690, 694, 693, 692, 691, 690, 691, 690],
    logger: new top.M139.Logger({ name: "m2012.product.birthmail" }),
    addLink: function () {
        this.init(), this.fixBtn(), top.BH({ actionId: 104191, thingId: 1 })
    },
    init: function () {
        var e = top.$PUtils.getCurTabWin().document, t = $("#birthRemind2", e), i = null, a = null;
        t.find("ul").bind("click", function (e) {
            e = $(e.target), "IMG" == e.attr("tagName") && (i = e.parent().prev(), a = i.attr("checked"), i.attr("checked", a ? "" : "checked"))
        }), t.find("#moreFriend").bind("click", this.moreFriend), this.birthInfo = t.find("#birthInfo"), this.birthInfo.find("img").bind("click", function (e) {
            e = $(e.target), i = e.parent().parent().parent().find("input"), a = i.attr("checked"), i.attr("checked", !a)
        }), $("#sendCard", e).bind("click", this.sendCard).css("cursor", "pointer").removeAttr("href")
    },
    moreFriend: function () {
        var e = $("#birthInfo", top.$PUtils.getCurTabWin().document);
        e.find("tr").show(), $("#moreFriend", top.$PUtils.getCurTabWin().document).hide(), top.$(window.parent).trigger("resize"), top.BH({
            actionId: 104191,
            thingId: 1
        })
    },
    sendCard: function () {
        var e = top.$App.get("birth"), t = top.$PUtils.getCurTabWin().document;
        e.birdthMan = [], top.BH({ actionId: 101081, thingId: 1, moduleId: 19 });
        var i, a, s, o, n, r = $("#birthRemind2", t), l = null;
        r.find("ul input:checked").each(function (t, r) {
            l = $(r).parent().find("p"), a = l.find("span").text(), i = l.text().replace(a, ""), s = l.attr("mail"), n = l.attr("mobilephone"), o = e.fetchGNameByMobile(n), e.birdthMan.push({
                AddrName: i,
                BirDay: e.formateTime(a),
                email: s,
                MobilePhone: n,
                fullGroupName: o
            })
        });
        var c, d = r.find("#birthInfo");
        if (d.find("tr:visible input:checked").each(function (t, r) {
            c = $($(r).parent().parent().children()[3]), l = $(c.children()[0]), a = $(c.children()[1]).text(), i = l.text(), s = l.attr("mail"), n = l.attr("mobilephone"), o = "未分组" === l.attr("groupname") ? n : l.attr("groupname"), e.birdthMan.push({
            AddrName: i,
            BirDay: e.formateTime(a),
            email: s,
            MobilePhone: n,
            fullGroupName: o
        })
        }), e.birdthMan.length <= 0) return void top.FF.alert("请选择要过生日的好友!");
        var p = "&birthday=1&singleBirthDay=1&senddate=true&materialId=" + e.cardIds[parseInt(11 * Math.random() + 1)];
        setTimeout("top.Links.show('greetingcard','" + p + "')", 100)
    },
    formateTime: function (e) {
        var t = e.split("月");
        return "2011-" + t[0] + "-" + t[1].replace("日", "")
    },
    getUser: function (e) {
        for (var t = top.$App.get("birth").birdthMan, i = t.length, a = "@" + top.$App.getMailDomain(), s = 0; i > s; s++) if (t[s].MobilePhone == e.replace(a, "")) return t[s];
        return {}
    },
    sendTimeMail: function (e) {
        var t = new Date, i = t.getFullYear(), a = t.format("yyyy-MM-dd");
        a = top.$PUtils.dateFormat(a + " 09:00:00"), this.sucessMobile = { suc: [], fail: [] };
        var s = 0, o = e.to.replace(/;$/, "").split(";");
        if (0 == o.length) return void top.FF.alert("请选择即将过生日的好友");
        _this = this;
        for (var n, r, l, c, d, p, m = function (e) {
            s++, "S_OK" != e.code && (_this.sucessMobile.fail.push("error"), _this.sucessMobile.suc.pop()), s == o.length && _this.requestBirthHis(_this.sucessMobile.suc)
        }, u = 0, h = (top.$PUtils.userInfo.userName, e.subject), f = 0; f < o.length; f++) c = o[f], c && (d = this.getUser(o[f]), n = d.BirDay.split("-"), n[1] = top.$PUtils.fixTime2Str(n[1]), n[2] = top.$PUtils.fixTime2Str(n[2]), r = "" + i + "-" + n[1] + "-" + n[2] + " 09:00:00", l = top.$PUtils.dateFormat(r), u = top.$Date.getDaysPass(a, l), e.isDefiniteTime ? 0 > u ? (p = "迟到的祝福，" + h, l = null) : 0 == u ? (l = null, p = h) : u >= 0 && (p = h) : (p = h, l = null), this.saveMail({
            subject: p,
            content: e.content,
            time: l,
            toEmail: c,
            priority: e.priority,
            returnReceipt: e.returnReceipt,
            callback: m
        }))
    },
    saveMail: function (e) {
        var t = {
            account: top.UserData.DefaultSender,
            to: [e.toEmail],
            isHtml: !0,
            subject: e.subject,
            content: e.content,
            singleSend: !0,
            priority: 3,
            sendReceipt: e.sendReceipt,
            saveToSent: !0,
            showOneRcpt: !1,
            timeset: e.time,
            callback: e.callback
        };
        top.CM.sendList = [], top.CM.sendList.push({
            action: e.time ? "schedule" : "deliver",
            subject: e.subject,
            to: [e.toEmail]
        }), this.sucessMobile.suc.push(e.toEmail), top.CM.sendMail(t, "greetingCard")
    },
    requestBirthHis: function (e) {
        var t = top.$App.get("birth"), i = this.buildBirthHisParam(e), a = { op: "set", mobiles: i };
        top.M139.RichMail.API.call("card:birthdayRemind", a, function (e) {
            e.responseData && "S_OK" === e.responseData.code || t.logger.error("card:birthdayRemind", "[card:birthdayRemind]", e)
        })
    },
    buildBirthHisParam: function (e) {
        for (var t, i, a, s = top.$App.get("birth").birdthMan, o = [], n = (new Date).getFullYear(), r = e.length, l = (s.length, 0) ; r > l; l++) a = top.$App.get("birth").getUser(e[l]), t = a.BirDay.split("-"), i = n + "-" + t[1] + "-" + t[2], o.push(a.MobilePhone + "," + i + ";"), top.BH({
            actionId: 104191,
            thingId: 1
        });
        return o.join("").replace(/;$/, "")
    },
    fetchGNameByMobile: function (e) {
        var t = "", i = top.Contacts.getContactsByMobile(e), a = $.map(i, function (e) {
            return $.map($.grep([], function (t) {
                return t.SerialId == e.SerialId
            }), function (e) {
                var t = top.Contacts.getGroupById(e.GroupId);
                return t ? t.GroupName : void 0
            })
        });
        return a[0] && (t = a[0].getBytes() > 20 ? a[0].getLeftStr(20) + "..." : a[0]), t
    },
    fixBtn: function () {
        var e = top.$PUtils.getCurTabWin().document, t = e.getElementById("birth_content");
        if (t) {
            for (var i = $(t).find("div.f_li img"), a = i.length - 1, s = "", o = 0; a >= o; o++) s = $(i[o]).attr("src"), $(i[o]).attr("src", BirthRemind.getImageSrc(s));
            var n = t.innerHTML;
            n = n.replace(/(href)(="")/g, ""), n = n.replace("target=_blank", ""), n = n.replace(/birthck/g, "onclick=\"javascript:top.FF.alert('请查看升级版!');\""), t.innerHTML = n;
            var r = e.getElementById("birth_info");
            $(r).removeAttr("target"), top.Contacts.QueryUserInfo(function (e) {
                e && e.info && e.info.BirDay ? r.style.display = "none" : (r.style.display = "", r.href = "javascript:setTimeout(top.Links.show('baseData');")
            });
            var l = e.getElementById("sendWish");
            $(l).removeAttr("target"), $(l).attr("href", "javascript:javascript:top.FF.alert('请查看升级版!');")
        }
    }
};

//M2012.Remind.Model
!function (e, t, i) {
    i.namespace("M2012.Remind.Model", Backbone.Model.extend({
        callApi: i.RichMail.API.call, setTask: function (e) {
            var t = this.get("mid"), i = this.get("taskDate") || 0, a = {
                type: "taskFlag",
                value: 1,
                time: i,
                ids: [t]
            }, s = $.extend(a, e.requestData);
            this.callApi("mbox:setTaskMessages", s, function (t) {
                var i = t.responseData;
                if (i && "S_OK" == i.code) {
                    var a = i["var"];
                    a > 0 ? e.success && e.success() : e.error && e.error()
                } else e.error && e.error()
            })
        }, addRemind: function (e) {
            this.setRemind("calendar:addMailCalendar", e)
        }, editRemind: function (e) {
            this.setRemind("calendar:updateMailCalendar", e)
        }, setRemind: function (e, t) {
            var i = this, a = {
                comeFrom: 0,
                startTime: 1630,
                endTime: 1630,
                title: "邮件主题",
                dateFlag: "2013-04-19",
                endDateFlag: "2013-04-19",
                recMobile: $User.getShortUid(),
                dateDesc: "2013-04-19 下午 16:30",
                mid: i.get("mid")
            }, s = $.extend(a, t.requestData);
            this.callApi(e, s, function (e) {
                var i = e.responseData;
                !i || "S_OK" != i.code && 109 != i.errorCode ? t.error && t.error(i) : t.success && t.success()
            })
        }, getRemind: function (e) {
            var t = this, i = { comeFrom: 0, mid: t.get("mid") }, a = $.extend(i, e.requestData);
            this.callApi("calendar:getMailCalendar", a, function (t) {
                var i = t.responseData;
                if (!i || "S_OK" != i.code && 109 != i.errorCode) e.error && e.error(); else {
                    var a = { content: "" };
                    i["var"] && (a = i["var"]), e.success && e.success(a)
                }
            })
        }, getMemo: function () {
            var e = this, t = { opType: "get", mid: e.get("mid") };
            e.callApi("mbox:mailMemo", t, function (t) {
                var i = t.responseData;
                i && "S_OK" == i.code && e.set("mailMemo", i["var"].memo)
            })
        }, deleteRemind: function (e) {
            var t = this, i = { comeFrom: 0, mid: t.get("mid") }, a = $.extend(i, e.requestData);
            this.callApi("calendar:delMailCalendar", a, function (t) {
                var i = t.responseData;
                !i || "S_OK" != i.code && 109 != i.errorCode ? e.error && e.error() : e.success && e.success()
            })
        }, batchDelRemind: function (e) {
            var t = { comeFrom: 0, mids: e.midArr.join(","), actionType: e.actionType };
            top.M139.UI.TipMessage.show("正在加载...", { after: 2e3 }), this.callApi("calendar:cancelMailCalendars", t, function (t) {
                top.M139.UI.TipMessage.hide();
                var i = t.responseData;
                !i || "S_OK" != i.code && 109 != i.errorCode ? e.error && e.error() : e.success && e.success()
            })
        }
    }))
}(jQuery, _, M139),

//M2012.Remind.View
function (e, t, i) {
    var a = e, s = i.View.ViewBase;
    i.namespace("M2012.Remind.View", s.extend({
        el: "",
        template: {
            dropMenuNew: ['<div id="remindDropMenu" class="gtasks-new-box tips tipsNoshadow" style="width:318px;position:absolute;z-index:9999">', '<div class="tipsRight  diamond" style="right:-11px"></div>', '<div class="gtasks-boxiframebox">', '<div class="gtasks-boxIframebox-minwarp">', '<h3 class="grasks-boxIframebox-title" id="remind_time"><strong>处理此任务</strong></h3>', '<p class="grasks-boxIframebox-title-min" id="remind_sms" style="display:none"><strong>短信提醒时间：</strong><span name="smsremindtime"></span></p>', '<p class="grasks-boxIframebox-title-min" id="remind_content" style="display:none"><strong>短信提醒内容：</strong><span name="smscontent"></span></p>', "</div>", '<div class="grasks-boxIframebox-btnwarp"><a class="btn" href="javascript:" name="finish">标记完成</a></div>', "</div>", '<div class="boxIframeBtn">', '<span class="bibText"></span>', '<span class="bibBtn">', '<a class="btnNormal" href="javascript:void(0)" name="edit"><span>修改</span></a>&nbsp;', '<a class="btnNormal" href="javascript:void(0)" name="cancel"><span>取消任务</span></a>', "</span>", "</div>", "</div>"].join(""),
            item: ["<li>", '<a href="javascript:;" id="{id}" title="{text}">', '<span class="text">{text}</span>', "</a>", "</li>"].join(""),
            menuList: {
                add: ["addtask", "addremind"],
                update: ["finish", "addremind", "canceltask"],
                hasremind: ["finish", "updateremind", "cancelremind", "canceltask"],
                finish: ["addtaskagain", "addremindagain", "canceltask"]
            },
            otherMenuList: {
                add: ["addtask"],
                update: ["finish", "canceltask"],
                hasremind: ["finish", "canceltask"],
                finish: ["addtaskagain", "canceltask"]
            },
            popTips: ['<span id="taskPopTips" class="msg msgYellow" style="{1}">处理时间：<span class="c_ff6600">{0}</span></span>'].join(""),
            tips: {
                addtasksuccIfmessage: '操作成功，可<a href="javascript:top.$App.setTaskMessage()">添加免费短信提醒</a>处理邮件',
                addtasksucc: '操作成功，<a href="javascript:top.$App.searchTaskmail()">查看任务列表</a>',
                addremindsucc: "操作成功",
                updateremindsucc: "操作成功",
                updateremindsuccIfmessage: '操作成功，可<a href="javascript:top.$App.setTaskMessage()">添加免费短信提醒</a>处理邮件',
                addMessageSucc: "添加成功，将于对应的时间短信提醒",
                markfinishsucc: "操作成功",
                marking: "正在标记…",
                canceltasksucc: "操作成功",
                cancelremindsucc: "操作成功",
                fail: "网络异常，请稍后重试",
                evocationSuccess: "操作成功"
            }
        },
        initialize: function (e) {
            var t = this;
            return this.model = new M2012.Remind.Model, this.initData = e, this.initEvent(), $App.on("evocationRemind", function (e) {
                t.remindContent = e.content || "请输入提醒内容", t.popType = e.type, t.showEditor(e)
            }), s.prototype.initialize.apply(this, arguments)
        },
        showTips: function (e, t) {
            var s = this.template.tips[e], o = { delay: 3e3 };
            t = a.extend(o, t), i.UI.TipMessage.show(s, t)
        },
        showFailTips: function () {
            var e = this;
            i.UI.TipMessage.show(e.template.tips.fail, { colour: "msgRed", delay: 3e3 })
        },
        refreshTaskCount: function (e, t) {
            var i = appView.getView("folder");
            i.refreshTaskCount(e, t)
        },
        showEditor: function (e) {
            var t = this;
            this.dialog || (this.dialog = $Msg.open({
                url: top.getRootPath() + "/html/mailremind.html?sid=" + top.sid,
                dialogTitle: e.title,
                width: 486,
                height: $B.is.ie && $B.getVersion() < 8 ? 172 : 169,
                onclose: function () {
                    t.dialog = null
                }
            })), e.callback && e.callback()
        },
        changeTaskIcon: function (e, t) {
            if ($App.getCurrentTab().name.indexOf("readmail_") > -1) var i = a("#" + $App.getCurrentTab().name).find("a[name=mailtask]"), s = i; else {
                var i = a(this.el).find("a[name=mailtask]");
                if (!i.length) return;
                var s = i.find("span")
            }
            var o = s.attr("status"), n = {
                add: "i_tagfor_tt",
                update: "i_tx_nbb",
                finish: "i_tx_ng"
            }, r = { add: "i-Clock", update: "i-Clocked", finish: "i-Clock" };
            if (-1 == $App.getCurrentTab().name.indexOf("readmail_")) i.removeClass(n[o]).addClass(n[e]); else {
                var l = i.find("i");
                l.removeClass(r[o]).addClass(r[e])
            }
            s.attr("status", e).attr("taskdate", t)
        },
        updateTaskIcon: function (e, i) {
            var s = a(".newdayArea").find("tr[mid=" + this.model.get("mid") + "]").find("[name=list_starmail]"), o = {
                add: 1,
                hasremind: 1,
                trunToCal: 1
            };
            t.isNumber(e) || (e = o[e] || 0);
            var n = parseInt(s.attr("starflag"), 10), r = "i-seticon i-setstar", l = "i_star_y", c = "i_starM";
            e ? (s.attr("taskflag", "1"), $App.getMailboxView().model.isStarMode() || s.attr("class", r)) : n ? (s.attr("taskflag", "0"), s.attr("class", l)) : (s.attr("taskflag", "0"), s.attr("class", c)), s.attr("taskDate", i)
        },
        addTask: function (e) {
            var t = this;
            i.UI.TipMessage.hide(), t.model.setTask({
                requestData: { value: e.value }, success: function () {
                    e.value ? t.changeTaskIcon("update", t.model.get("taskDate")) : t.changeTaskIcon("add", t.model.get("taskDate")), e.callback && e.callback(), t.updateTaskIcon(e.value, t.model.get("taskDate")), $App.getMailboxView().model.isTaskMode() && $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView"), $App.clearTabCache("readmail_" + t.model.get("mid"))
                }, error: function () {
                    t.showFailTips()
                }
            })
        },
        cancelTask: function (e) {
            function t() {
                i.model.setTask({
                    requestData: { value: 0, time: 0 }, success: function () {
                        i.model.set({ taskDate: 0 }), i.changeTaskIcon("add", 0), e && e(), $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView"), $App.clearTabCache("readmail_" + i.model.get("mid"))
                    }, error: function () {
                        i.showFailTips()
                    }
                })
            }

            var i = this;
            i.model.get("taskDate");
            this.model.deleteRemind({
                requestData: { actionType: 0 }, success: function () {
                    t()
                }, error: function () {
                    i.showFailTips()
                }
            })
        },
        addRemind: function () {
            var e = this;
            this.model.set("recMySms", 0), this.model.set("recMyCanl", 0), e.showEditor({ title: "新建任务" })
        },
        updateRemind: function () {
            var e = this;
            e.model.getRemind({
                requestData: {}, success: function (t) {
                    var i = t.isSaveSms || 0, a = t.isSaveCalendar || 0;
                    e.model.set("recMySms", i), e.model.set("recMyCanl", a), e.remindContent = t.smsContent, e.showEditor({ title: "修改任务" })
                }, error: function () {
                    e.showFailTips()
                }
            })
        },
        cancelRemind: function () {
            var e = this;
            this.model.deleteRemind({
                success: function () {
                    e.model.setTask({
                        requestData: { value: 1, time: 0 }, success: function () {
                            e.model.set({ taskDate: 0 }), e.changeTaskIcon("update", 0), top.BH("cancel_remindtaskmail_ok"), e.showTips("cancelremindsucc"), $App.trigger("refreshSplitView"), $App.clearTabCache("readmail_" + e.model.get("mid"))
                        }, error: function () {
                            e.showFailTips()
                        }
                    })
                }, error: function () {
                    e.showFailTips()
                }
            })
        },
        markFinish: function (e) {
            e = e || {};
            var t = this, i = t.model.get("taskDate");
            if (i > 0) {
                var a = this.model.get("calendarData");
                a.title = a.content, a.enable = 0, t.model.deleteRemind({
                    requestData: { actionType: 0 },
                    success: function () {
                        t.model.set({ taskDate: 0 }), t.changeTaskIcon("add", 0), top.BH("markfinish_ok"), t.updateTaskIcon(0, t.model.get("taskDate"));
                        var i = $App.getMailboxView().model;
                        e.taskDate && 1e3 * e.taskDate < (new Date).getTime() && !i.get("isSearchMode") && 1 === i.get("fid") && ($App.showMailbox(1), setTimeout(function () {
                            t.showTips("markfinishsucc")
                        }, 1e3)), $App.getMailboxView().model.isTaskMode() && $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView"), $App.clearTabCache("readmail_" + t.model.get("mid")), t.refreshTaskCount(-1, -1), t.showTips("markfinishsucc"), $App.trigger("covMailRemindRender", {
                            taskFlag: 0,
                            taskDate: 0,
                            mid: t.model.get("mid")
                        }), $App.trigger("remindRender", {
                            taskFlag: 0,
                            taskDate: 0,
                            mid: t.model.get("mid")
                        }), top.$App.trigger("refresh:calendar", { actionType: "mainviewdata" }), e.cb && e.cb()
                    },
                    error: function () {
                        t.showFailTips()
                    }
                })
            }
        },
        showDropMenu: function () {
            var e = this, t = (this.el, this.template.dropMenuNew), s = (this.template.item, this.model.get("status")), o = t;
            return "add" == s ? (this.model.set("smsTime", null), void this.doCommand("add")) : (0 == a("#remindDropMenu").length && a("body").append(o), "finish" == s ? (a("#remind_time").html("已处理此任务"), a("#remindDropMenu [name=finish]").remove(), a("#remindDropMenu [name=sp_line]").remove(), a("#remindDropMenu [name=edit]").remove(), e.setDropMenuPosition(), void e.itemEvent()) : void this.model.getRemind({
                requestData: {},
                success: function (t) {
                    if (e.model.set("calendarData", t), e.model.set("smsTime", null), t) {
                        var s;
                        if (s = e.model.get("taskDate"), s = t.allDay ? t.dateFlag : s ? new Date(1e3 * s).format("yyyy-MM-dd hh:mm") : "", a("#remind_time").html((s ? s : "") + "&nbsp;处理此任务"), t.smsSendTime) {
                            var o = t.isSaveSms;
                            e.model.set("smsTime", t.smsSendTime), a("#remind_sms [name=smsremindtime]").text(t.smsSendTime), a("#remind_content").css("display", o ? "block" : "none"), a("#remind_content [name=smscontent]").html(i.Text.Html.encode(t.smsContent))
                        }
                    }
                    e.setDropMenuPosition(), e.itemEvent()
                },
                error: function () {
                    e.showFailTips()
                }
            }))
        },
        setDropMenuPosition: function () {
            var e = this.getIcoOffset(), t = e.top - 10, i = e.left - 342, s = a("#remindDropMenu"), o = s.height(), n = a("body").height();
            t + o > n && (t = t - o + 25, s.find(".diamond").css("top", o - 18)), s.css({ top: t, left: i }).show()
        },
        closeDropMenu: function () {
            a("#remindDropMenu").remove()
        },
        dropMenuEvent: function () {
            var e = this;
            this.el;
            a("#remindDropMenu").hover(function () {
                e.timer && clearTimeout(e.timer)
            }, function () {
                e.timer = setTimeout(function () {
                    e.closeDropMenu()
                }, 1e3)
            }), $D.bindAutoHide({
                action: "click",
                element: a("#remindDropMenu")[0],
                stopEvent: !0,
                callback: function () {
                    a(this.element).remove()
                }
            })
        },
        doCommand: function (e) {
            var t = this;
            switch (e) {
                case "add":
                    this.addRemind(function () {
                        top.BH("add_taskmail_ok"), t.refreshTaskCount(1, 1), $User.isChinaMobileUser() ? t.showTips("addtasksuccIfmessage", { delay: 1e4 }) : t.showTips("addtasksucc")
                    });
                    break;
                case "edit":
                    this.updateRemind(), top.$App.isReadSessionMail() ? top.BH("cMail_tab_changeTask") : top.BH("task_edit");
                    break;
                case "cancel":
                    top.$App.isReadSessionMail() && top.BH("cMail_tab_cancelTask"), this.cancelTask(function () {
                        t.showTips("canceltasksucc"), top.$App.trigger("calendarViewRefresh");
                        var e = t.model.get("status");
                        "finish" == e ? (top.BH("task_cancel_complete"), t.refreshTaskCount(0, -1)) : (top.BH("task_cancel"), t.refreshTaskCount(-1, -1)), $App.trigger("covMailRemindRender", {
                            taskFlag: 0,
                            taskDate: 0,
                            mid: t.model.get("mid")
                        }), $App.trigger("remindRender", { taskFlag: 0, taskDate: 0, mid: t.model.get("mid") })
                    });
                    break;
                case "finish":
                    this.markFinish(), top.$App.isReadSessionMail() ? BH("cMail_tab_finishTask") : BH("task_complete")
            }
        },
        itemEvent: function () {
            var e = this;
            this.el;
            a("#remindDropMenu a").unbind("click").click(function () {
                var t = a(this).attr("name");
                e.doCommand(t), e.closeDropMenu()
            })
        },
        getIcoOffset: function () {
            return this.el.find("a[name=mailtask]").offset()
        },
        getPopTipsHtml: function (e) {
            var t = e ? e : null;
            t = t ? new Date(t) : new Date, t = t.format("yyyy-MM-dd hh:mm");
            var i = this.template.popTips, a = this.getIcoOffset(), s = "z-index:999;position:absolute;left:{0}px;top:{1}px;";
            return s = $T.Utils.format(s, [a.left - 210, a.top]), $T.Utils.format(i, [t, s])
        },
        addEvent: function (e) {
            a("#taskPopTips").remove();
            var t = this, e = e || a("#div_maillist");
            e.find("a[name=mailtask]").off("click").on("click", function (e) {
                BH("readMail_clickRemindIcon"), top.$App.isReadSessionMail() && top.BH("cMail_tab_remind"), t.readyToShowMenu(e)
            }).mouseout(function (e) {
                t.cancelShowMenu(e)
            })
        },
        readyToShowMenu: function (e) {
            var t = this;
            if (t.readyShowMenu = !0, t.readyShowMenu) {
                var i, s, o;
                i = a(e.target).parents("a[mid]").attr("mid"), s = a(e.target).parents("a[mid]").attr("taskDate"), o = a(e.target).is(".i-Clocked") ? "1" : "0", i || (i = a(e.target).siblings("[mid]").attr("mid"), s = a(e.target).siblings("[mid]").attr("taskDate"), o = a(e.target).is(".on") ? "1" : "0"), t.showMenu(e, {
                    flag: { taskFlag: o },
                    mid: i,
                    taskDate: s,
                    dtop: 12,
                    dleft: 9,
                    from: "readMail"
                })
            }
        },
        showMenu: function (e, i) {
            var a = this;
            i = t.extend(i, { element: e.target }), a.popMenu || (a.popMenu = $App.getView("starOrRemindPopMenu"), a.popMenu.$el.hover(function () {
                a.readyShowMenu = !0
            }, function () {
                a.readyShowMenu = !1, setTimeout(function () {
                    a.readyShowMenu || a.popMenu && a.popMenu.hideMenuSmart()
                }, 300)
            })), a.popMenu.showMenu(i)
        },
        cancelShowMenu: function (e) {
            var t = this;
            t.readyShowMenu = !1, setTimeout(function () {
                t.readyShowMenu || t.popMenu && t.popMenu.hideMenuSmart()
            }, 300)
        },
        startEvent: function (e) {
            var t = this, i = e.find("span").length ? e.find("span") : e, a = i.parents("tr[mid]").attr("mid") || i.attr("mid"), s = i.attr("status"), o = i.attr("taskDate");
            "add" == s && (o = 0), "update" == s && o > 0 && (s = "hasremind");
            var n = e.parent();
            this.model.set({ mid: a, status: s, taskDate: o, listData: t.getMailData(i), mailMemo: "" });
            try {
                this.model.set("el", n)
            } catch (r) {
                console.log(r.toString())
            }
            this.el = n
        },
        getMailData: function (e) {
            var t = $App.getMailDataByMid(e.attr("mid"));
            return t || (t = { from: e.attr("from"), sendDate: e.attr("senddate"), subject: e.attr("subject") }), t
        },
        menuEvent: function () {
            BH("task_click"), this.showDropMenu(), this.dropMenuEvent()
        },
        getRenderData: function () {
            var e = {
                listData: this.model.get("listData"),
                status: this.model.get("status"),
                mid: this.model.get("mid"),
                fid: this.model.get("fid"),
                recMySms: this.model.get("recMySms"),
                recMyCanl: this.model.get("recMyCanl"),
                dealTime: 1e3 * this.model.get("taskDate"),
                smsTime: this.model.get("smsTime")
            };
            return this.remindContent && (e.content = this.remindContent, this.remindContent = null, e.type = this.popType, this.popType = null), e
        },
        saveRemind: function (e) {
            var a = this;
            if (!a.waiting) {
                a.waiting = !0, a.model.set("data", e), e.mid && this.model.set("mid", e.mid), e.status && this.model.set("status", e.status);
                var s = $Date.parse(e.time), o = new Date(s), n = o.format("yyyy-MM-dd"), r = o.setDate(o.getDate() + 1), l = parseInt(s.getTime() / 1e3), c = t.isUndefined(e.isAllDay) ? !!e.sms : e.isAllDay, d = c ? e.startAndEndTime : 0;
                r = new Date(r).format("yyyy-MM-dd"), a.model.set({ taskDate: l });
                var p = {
                    requestData: {
                        startTime: d,
                        endTime: d,
                        title: e.subject.length > 100 ? e.subject.substring(0, 100) : e.subject,
                        dateFlag: n,
                        endDateFlag: c ? n : r,
                        dateDesc: o.format("yyyy年MM月dd日 hh:mm"),
                        specialType: 6,
                        allDay: c ? 0 : 1,
                        validImg: e.validImg || ""
                    }, success: function () {
                        if ("evocationRemind" == e.type) a.showTips("evocationSuccess"), a.dialog && (a.dialog.close(), a.dialog = null); else {
                            a.changeTaskIcon("update", a.model.get("taskDate"));
                            var t = e.status;
                            "add" == t ? (top.BH("add1_remindtaskmail_ok"), a.refreshTaskCount(1, 1), $User.isChinaMobileUser() ? a.showTips("addtasksuccIfmessage", { delay: 1e4 }) : a.showTips("addtasksucc")) : "update" == t ? (top.BH("add2_remindtaskmail_ok"), a.showTips("addremindsucc")) : "trunToCal" == t ? $User.isChinaMobileUser() && !e.sms ? a.showTips("updateremindsuccIfmessage", { delay: 1e4 }) : a.showTips("updateremindsucc") : "hasremind" == t ? (top.BH("update_remindtaskmail_ok"), e.setSms ? a.showTips("addMessageSucc") : e.recMySms ? a.showTips("markfinishsucc") : $User.isChinaMobileUser() && !e.sms ? a.showTips("updateremindsuccIfmessage", { delay: 1e4 }) : a.showTips("updateremindsucc")) : "finish" == t && (top.BH("addagain_remindtaskmail_ok"), a.refreshTaskCount(1, 1), a.showTips("addremindsucc")), top.$App.trigger("refresh:calendar", { actionType: "mainviewdata" }), a.dialog && (a.dialog.close(), a.dialog = null), $App.trigger("covMailRemindRender", {
                                taskFlag: 1,
                                taskDate: l,
                                mid: a.model.get("mid")
                            }), $App.trigger("remindRender", {
                                taskFlag: 1,
                                taskDate: l,
                                mid: a.model.get("mid")
                            }), a.updateTaskIcon(e.status, a.model.get("taskDate")), $App.getMailboxView().model.isTaskMode() && $App.trigger("showMailbox", { comefrom: "commandCallback" }), $App.trigger("refreshSplitView"), $App.clearTabCache("readmail_" + a.model.get("mid"))
                        }
                        a.waiting = !1
                    }, error: function (e) {
                        e && 910 == e.errorCode ? $Msg.alert("您的操作太快，超出频率限制，请稍后再试") : $Msg.alert("日程提交失败，请稍后再试"), a.waiting = !1
                    }
                }, m = p.requestData;
                1 == e.sms ? (m.recMySms = 1, m.recMyEmail = 0, m.enable = 1) : 0 == e.sms ? (m.recMyEmail = 0, m.recMySms = 0, m.enable = 0) : (m.enable = e.enable, m.recMyEmail = e.recMyEmail, m.recMySms = e.recMySms), m.content = a.model.get("mailMemo");
                var u = this.model.get("status");
                i.UI.TipMessage.show(a.template.tips.marking), "hasremind" == u ? (delete p.requestData.specialType, a.model.editRemind(p)) : a.model.addRemind(p)
            }
        },
        updateMenu: function (e, t) {
            var i = $App.getMailboxView().model, a = $App.getView("currentMailMenu-" + e), s = i.getMailById(e);
            s && (s.flags.taskFlag = t), a && a.menuBtn && top.$RM.getMessageInfo([e], function (t) {
                if (t && "S_OK" == t.code) {
                    var s = {};
                    s.flags = t["var"][0].flags;
                    var o = $App.getCurrentFid(), n = i.getMarkMenuItems(!0, o, { mid: e, mail: s });
                    a.menuBtn.changeItems(n)
                }
            })
        },
        initEvent: function () {
            var e = this;
            top.$App.on("saveMailRemind", function (i) {
                e.model.set({ mid: i.mid }), e.model.getRemind({
                    success: function (a) {
                        t.extend(i, a), e.saveRemind(i), e.updateMenu(i.mid, 1)
                    }
                })
            }).on("cancelMailRemind", function (t) {
                e.dialog && (e.dialog.close(), e.dialog = null)
            }).on("remindPageLoaded", function () {
                setTimeout(function () {
                    top.$App.trigger("remindRender", e.getRenderData())
                }, 500)
            }).on("calendarUpdate", function (e) {
                top.$App.clearTabCache("welcome"), 6 == e.type && top.$App.trigger("reloadFolder")
            }).on("remindFinish", function (t) {
                i.UI.TipMessage.show(e.template.tips.marking), t.mid && (e.model.set({
                    mid: t.mid,
                    taskDate: t.taskDate
                }), e.model.getRemind({
                    success: function (i) {
                        e.model.set("calendarData", i), e.markFinish(t), e.updateMenu(t.mid, 0)
                    }
                }))
            }).on("setTask", function (t) {
                t.mid && (i.UI.TipMessage.show(e.template.tips.marking), e.model.set({
                    mid: t.mid,
                    taskDate: t.taskDate
                }), e.addTask({
                    value: t.value, callback: function () {
                        1 == t.value ? (e.refreshTaskCount(1, 1), e.showTips("addremindsucc")) : (e.markFinish(), e.refreshTaskCount(-1, -1), e.showTips("markfinishsucc")), e.updateMenu(t.mid, t.value), $App.trigger("covMailRemindRender", {
                            taskFlag: t.value,
                            taskDate: e.model.get("taskDate"),
                            mid: e.model.get("mid")
                        }), $App.trigger("remindRender", {
                            taskFlag: t.value,
                            taskDate: e.model.get("taskDate"),
                            mid: e.model.get("mid")
                        })
                    }
                }))
            })
        }
    }))
}(jQuery, _, M139),

//M139.UI.TipSubscribeCalendar
M139.core.namespace("M139.UI.TipSubscribeCalendar", Backbone.View.extend({
    initialize: function (e) {
        var t = this;
        top.$App.on("welcome_UnifiedPosition_load", function (e) {
            $App.getAd("web_210", function (e) {
                t.showTipSubscribeCalendar(e)
            })
        })
    },
    showTipSubscribeCalendar: function (e) {
        if (e && !$.isEmptyObject(e)) {
            var t = M139.JSON.tryEval(e.content);
            if (1 != e.readStatus) {
                $BTips.addTask({ width: 350, content: t.content, timeout: 2e4 });
                var i = { positionCodes: "web_210", contentId: e.contentId };
                top.M139.RichMail.API.call("unified:updatePositionContent", i), setTimeout(function () {
                    $("#subscribeButton").click(function () {
                        top.M139.RichMail.API.call("calendar:subscribeLabel", {
                            comeFrom: 0,
                            labelId: t.labelId,
                            color: "#e4e4fa"
                        }, function (e) {
                            "S_OK" == e.responseData.code ? (top.BH("subscribe_calendar"), top.M139.UI.TipMessage.show("订阅成功", { delay: 3e3 })) : top.M139.UI.TipMessage.show("订阅失败", { delay: 3e3 }), $BTips.hide()
                        }), event.stopPropagation()
                    }), $("#subscribeCalendarTips").click(function () {
                        top.$App && top.$App.show("calendar_square", { calId: t.labelId }), $BTips.hide()
                    }), $("#closeButton").click(function () {
                        $BTips.hide(), event.stopPropagation()
                    })
                }, 1e3)
            }
        }
    }
}));